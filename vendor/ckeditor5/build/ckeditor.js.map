{"version":3,"sources":["webpack://CKSource/webpack/universalModuleDefinition","webpack://CKSource/webpack/bootstrap","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/plugin.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/mix.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/view.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","webpack://CKSource/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/command.js","webpack://CKSource/./node_modules/lodash-es/isObject.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/collection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","webpack://CKSource/./node_modules/lodash-es/isObjectLike.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/uid.js","webpack://CKSource/./node_modules/lodash-es/_root.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","webpack://CKSource/./node_modules/lodash-es/isArray.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/view/annotationview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/annotations.js","webpack://CKSource/./node_modules/lodash-es/isEqual.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/env.js","webpack://CKSource/./node_modules/lodash-es/_getRawTag.js","webpack://CKSource/./node_modules/lodash-es/_objectToString.js","webpack://CKSource/./node_modules/lodash-es/_baseGetTag.js","webpack://CKSource/./node_modules/lodash-es/_Symbol.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/contextplugin.js","webpack://CKSource/./node_modules/lodash-es/_isMasked.js","webpack://CKSource/./node_modules/lodash-es/_coreJsData.js","webpack://CKSource/./node_modules/lodash-es/_baseIsNative.js","webpack://CKSource/./node_modules/lodash-es/_getValue.js","webpack://CKSource/./node_modules/lodash-es/_getNative.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/first.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","webpack://CKSource/./node_modules/lodash-es/_copyObject.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/diff.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/template.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","webpack://CKSource/./node_modules/lodash-es/eq.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","webpack://CKSource/./node_modules/lodash-es/_nativeKeysIn.js","webpack://CKSource/./node_modules/lodash-es/_baseKeysIn.js","webpack://CKSource/./node_modules/lodash-es/keysIn.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","webpack://CKSource/./node_modules/lodash-es/isBuffer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","webpack://CKSource/./node_modules/lodash-es/_DataView.js","webpack://CKSource/./node_modules/lodash-es/_Promise.js","webpack://CKSource/./node_modules/lodash-es/_Set.js","webpack://CKSource/./node_modules/lodash-es/_WeakMap.js","webpack://CKSource/./node_modules/lodash-es/_getTag.js","webpack://CKSource/./node_modules/lodash-es/_nodeUtil.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","webpack://CKSource/./node_modules/lodash-es/isPlainObject.js","webpack://CKSource/./node_modules/lodash-es/_toSource.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","webpack://CKSource/./node_modules/lodash-es/isArrayLike.js","webpack://CKSource/./node_modules/lodash-es/isSymbol.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/commentsrepository.js","webpack://CKSource/./node_modules/lodash-es/_listCacheClear.js","webpack://CKSource/./node_modules/lodash-es/_assocIndexOf.js","webpack://CKSource/./node_modules/lodash-es/_listCacheDelete.js","webpack://CKSource/./node_modules/lodash-es/_listCacheGet.js","webpack://CKSource/./node_modules/lodash-es/_listCacheHas.js","webpack://CKSource/./node_modules/lodash-es/_listCacheSet.js","webpack://CKSource/./node_modules/lodash-es/_ListCache.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","webpack://CKSource/./node_modules/lodash-es/_Map.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack://CKSource/./node_modules/lodash-es/_stackClear.js","webpack://CKSource/./node_modules/lodash-es/_stackDelete.js","webpack://CKSource/./node_modules/lodash-es/_stackGet.js","webpack://CKSource/./node_modules/lodash-es/_stackHas.js","webpack://CKSource/./node_modules/lodash-es/_stackSet.js","webpack://CKSource/./node_modules/lodash-es/_Stack.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/spy.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","webpack://CKSource/./node_modules/date-fns/parse/index.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","webpack://CKSource/./node_modules/lodash-es/_nativeCreate.js","webpack://CKSource/./node_modules/lodash-es/_hashClear.js","webpack://CKSource/./node_modules/lodash-es/_hashDelete.js","webpack://CKSource/./node_modules/lodash-es/_hashGet.js","webpack://CKSource/./node_modules/lodash-es/_hashHas.js","webpack://CKSource/./node_modules/lodash-es/_hashSet.js","webpack://CKSource/./node_modules/lodash-es/_Hash.js","webpack://CKSource/./node_modules/lodash-es/_mapCacheClear.js","webpack://CKSource/./node_modules/lodash-es/_isKeyable.js","webpack://CKSource/./node_modules/lodash-es/_getMapData.js","webpack://CKSource/./node_modules/lodash-es/_mapCacheDelete.js","webpack://CKSource/./node_modules/lodash-es/_mapCacheGet.js","webpack://CKSource/./node_modules/lodash-es/_mapCacheHas.js","webpack://CKSource/./node_modules/lodash-es/_mapCacheSet.js","webpack://CKSource/./node_modules/lodash-es/_MapCache.js","webpack://CKSource/./node_modules/lodash-es/_getPrototype.js","webpack://CKSource/./node_modules/lodash-es/isFunction.js","webpack://CKSource/./node_modules/lodash-es/_isPrototype.js","webpack://CKSource/./node_modules/lodash-es/_baseAssignValue.js","webpack://CKSource/./node_modules/lodash-es/_assignValue.js","webpack://CKSource/./node_modules/lodash-es/_baseUnary.js","webpack://CKSource/./node_modules/lodash-es/_isIndex.js","webpack://CKSource/./node_modules/lodash-es/_cloneArrayBuffer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","webpack://CKSource/./node_modules/lodash-es/_arrayEach.js","webpack://CKSource/./node_modules/lodash-es/_baseAssign.js","webpack://CKSource/./node_modules/lodash-es/_baseAssignIn.js","webpack://CKSource/./node_modules/lodash-es/_copySymbols.js","webpack://CKSource/./node_modules/lodash-es/_getSymbolsIn.js","webpack://CKSource/./node_modules/lodash-es/_copySymbolsIn.js","webpack://CKSource/./node_modules/lodash-es/_getAllKeysIn.js","webpack://CKSource/./node_modules/lodash-es/_initCloneArray.js","webpack://CKSource/./node_modules/lodash-es/_cloneDataView.js","webpack://CKSource/./node_modules/lodash-es/_cloneRegExp.js","webpack://CKSource/./node_modules/lodash-es/_cloneSymbol.js","webpack://CKSource/./node_modules/lodash-es/_initCloneByTag.js","webpack://CKSource/./node_modules/lodash-es/_baseIsMap.js","webpack://CKSource/./node_modules/lodash-es/isMap.js","webpack://CKSource/./node_modules/lodash-es/_baseIsSet.js","webpack://CKSource/./node_modules/lodash-es/isSet.js","webpack://CKSource/./node_modules/lodash-es/_baseClone.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/locale.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/context.js","webpack://CKSource/./node_modules/lodash-es/_nativeKeys.js","webpack://CKSource/./node_modules/lodash-es/_baseKeys.js","webpack://CKSource/./node_modules/lodash-es/keys.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paragraph/src/insertparagraphcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack://CKSource/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://CKSource/./node_modules/lodash-es/isTypedArray.js","webpack://CKSource/./node_modules/lodash-es/_arrayFilter.js","webpack://CKSource/./node_modules/lodash-es/_getSymbols.js","webpack://CKSource/./node_modules/lodash-es/_defineProperty.js","webpack://CKSource/./node_modules/lodash-es/_Uint8Array.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/utils/common-translations.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/version.js","webpack://CKSource/./node_modules/lodash-es/_getAllKeys.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/count.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","webpack://CKSource/./node_modules/lodash-es/_baseIsArguments.js","webpack://CKSource/./node_modules/lodash-es/isArguments.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/config.js","webpack://CKSource/./node_modules/lodash-es/_freeGlobal.js","webpack://CKSource/./node_modules/lodash-es/_overArg.js","webpack://CKSource/./node_modules/lodash-es/_copyArray.js","webpack://CKSource/./node_modules/lodash-es/_cloneBuffer.js","webpack://CKSource/./node_modules/lodash-es/stubArray.js","webpack://CKSource/./node_modules/lodash-es/_arrayPush.js","webpack://CKSource/./node_modules/lodash-es/isLength.js","webpack://CKSource/./node_modules/lodash-es/_cloneTypedArray.js","webpack://CKSource/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/utils/createmutationobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/theme/icons/check.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/theme/icons/cancel.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-collaboration-core/src/users/view/userview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/rawelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","webpack://CKSource/./node_modules/lodash-es/isEqualWith.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/inputobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversionhelpers.js","webpack://CKSource/./node_modules/lodash-es/cloneDeep.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcasthelpers.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/autoparagraphing.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcasthelpers.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operationfactory.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-enter/src/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-enter/src/enter.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-select-all/src/selectallcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-select-all/src/selectallediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-select-all/src/selectallui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-select-all/theme/icons/select-all.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-select-all/src/selectall.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/input.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/delete.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/typing.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-undo/src/undo.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","webpack://CKSource/./node_modules/lodash-es/_isKey.js","webpack://CKSource/./node_modules/lodash-es/memoize.js","webpack://CKSource/./node_modules/lodash-es/_memoizeCapped.js","webpack://CKSource/./node_modules/lodash-es/_stringToPath.js","webpack://CKSource/./node_modules/lodash-es/_castPath.js","webpack://CKSource/./node_modules/lodash-es/last.js","webpack://CKSource/./node_modules/lodash-es/_toKey.js","webpack://CKSource/./node_modules/lodash-es/_baseGet.js","webpack://CKSource/./node_modules/lodash-es/_baseSlice.js","webpack://CKSource/./node_modules/lodash-es/_parent.js","webpack://CKSource/./node_modules/lodash-es/_baseUnset.js","webpack://CKSource/./node_modules/lodash-es/unset.js","webpack://CKSource/./node_modules/lodash-es/get.js","webpack://CKSource/./node_modules/lodash-es/_assignMergeValue.js","webpack://CKSource/./node_modules/lodash-es/_createBaseFor.js","webpack://CKSource/./node_modules/lodash-es/_baseFor.js","webpack://CKSource/./node_modules/lodash-es/isArrayLikeObject.js","webpack://CKSource/./node_modules/lodash-es/_safeGet.js","webpack://CKSource/./node_modules/lodash-es/toPlainObject.js","webpack://CKSource/./node_modules/lodash-es/_baseMergeDeep.js","webpack://CKSource/./node_modules/lodash-es/_baseMerge.js","webpack://CKSource/./node_modules/lodash-es/merge.js","webpack://CKSource/./node_modules/lodash-es/_baseSet.js","webpack://CKSource/./node_modules/lodash-es/set.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/stylesmap.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/commenteditor/commenteditoruiview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/commenteditor/commenteditorui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/listcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/indentcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/converters.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/listediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/listui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/theme/icons/numberedlist.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/theme/icons/bulletedlist.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-list/src/list.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-autoformat/src/blockautoformatediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-autoformat/src/inlineautoformatediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-autoformat/src/autoformat.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/commenteditor/commenteditor.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/commentinputview.js","webpack://CKSource/./node_modules/lodash-es/_setCacheAdd.js","webpack://CKSource/./node_modules/lodash-es/_setCacheHas.js","webpack://CKSource/./node_modules/lodash-es/_SetCache.js","webpack://CKSource/./node_modules/lodash-es/_arraySome.js","webpack://CKSource/./node_modules/lodash-es/_cacheHas.js","webpack://CKSource/./node_modules/lodash-es/_equalArrays.js","webpack://CKSource/./node_modules/lodash-es/_mapToArray.js","webpack://CKSource/./node_modules/lodash-es/_setToArray.js","webpack://CKSource/./node_modules/lodash-es/_equalByTag.js","webpack://CKSource/./node_modules/lodash-es/_equalObjects.js","webpack://CKSource/./node_modules/lodash-es/_baseIsEqualDeep.js","webpack://CKSource/./node_modules/lodash-es/_baseIsEqual.js","webpack://CKSource/./node_modules/lodash-es/identity.js","webpack://CKSource/./node_modules/lodash-es/_apply.js","webpack://CKSource/./node_modules/lodash-es/_overRest.js","webpack://CKSource/./node_modules/lodash-es/constant.js","webpack://CKSource/./node_modules/lodash-es/_baseSetToString.js","webpack://CKSource/./node_modules/lodash-es/_shortOut.js","webpack://CKSource/./node_modules/lodash-es/_setToString.js","webpack://CKSource/./node_modules/lodash-es/_baseRest.js","webpack://CKSource/./node_modules/lodash-es/_isIterateeCall.js","webpack://CKSource/./node_modules/lodash-es/_createAssigner.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/pasteplaintext.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","webpack://CKSource/./node_modules/lodash-es/_arrayMap.js","webpack://CKSource/./node_modules/lodash-es/_baseToString.js","webpack://CKSource/./node_modules/lodash-es/toString.js","webpack://CKSource/./node_modules/lodash-es/isString.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/bodycollection.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/createelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/confirmview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/confirmmixin.js","webpack://CKSource/./node_modules/lodash-es/_baseTimes.js","webpack://CKSource/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://CKSource/./node_modules/lodash-es/_baseCreate.js","webpack://CKSource/./node_modules/lodash-es/_initCloneObject.js","webpack://CKSource/./node_modules/lodash-es/assignIn.js","webpack://CKSource/(webpack)/buildin/harmony-module.js","webpack://CKSource/./node_modules/date-fns/start_of_iso_week/index.js","webpack://CKSource/./node_modules/date-fns/difference_in_calendar_days/index.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-collaboration-core/src/users.js","webpack://CKSource/./node_modules/lodash-es/isElement.js","webpack://CKSource/(webpack)/buildin/global.js","webpack://CKSource/./node_modules/date-fns/is_date/index.js","webpack://CKSource/./node_modules/date-fns/get_iso_year/index.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css?e8ec","webpack://CKSource/./node_modules/lodash-es/stubFalse.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/commentthreadcontroller.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/utils/getdatetimeformatter.js","webpack://CKSource/./node_modules/date-fns/format/index.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/commentcontentview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/utils/trim-html.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/basecommentview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/commentview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/theme/icons/pencil.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/icons/remove-comment.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/commentthreadinputview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/collapsedcommentsview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/commentslistview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/basecommentthreadview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/ui/view/commentthreadview.js","webpack://CKSource/./node_modules/lodash-es/now.js","webpack://CKSource/./node_modules/lodash-es/toNumber.js","webpack://CKSource/./node_modules/lodash-es/debounce.js","webpack://CKSource/./node_modules/lodash-es/cloneDeepWith.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css?ed1e","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css?f805","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css?827c","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css?cb8d","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css?9589","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css?76f2","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css?8738","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css?fee2","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css?375d","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css?5e57","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css?2d12","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css?4f42","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css?b0a0","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css?174a","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css?f024","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/annotation.css?bcb3","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/annotation.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-collaboration-core/theme/usercolors.css?94c6","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-collaboration-core/theme/usercolors.css","webpack://CKSource/./node_modules/date-fns/get_day_of_year/index.js","webpack://CKSource/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://CKSource/./node_modules/date-fns/start_of_year/index.js","webpack://CKSource/./node_modules/date-fns/start_of_day/index.js","webpack://CKSource/./node_modules/date-fns/get_iso_week/index.js","webpack://CKSource/./node_modules/date-fns/start_of_week/index.js","webpack://CKSource/./node_modules/date-fns/start_of_iso_year/index.js","webpack://CKSource/./node_modules/date-fns/is_valid/index.js","webpack://CKSource/./node_modules/date-fns/locale/en/index.js","webpack://CKSource/./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","webpack://CKSource/./node_modules/date-fns/locale/en/build_format_locale/index.js","webpack://CKSource/./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-collaboration-core/theme/users.css?097f","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-collaboration-core/theme/users.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/comment.css?d8d2","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/comment.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/commentthread.css?aa6e","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/commentthread.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/commentinput.css?3224","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/commentinput.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/commentmarker.css?ba7a","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/commentmarker.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css?7c60","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css?6f91","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css?2560","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/annotation-inline.css?09f9","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/annotation-inline.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/sidebar.css?bcfe","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/sidebar.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/sidebar-narrow.css?836a","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/sidebar-narrow.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/splitbutton.css?f7ac","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/splitbutton.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/theme/highlight.css?7346","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/theme/highlight.css","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditorui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/resizeobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditor.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-word-count/src/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-word-count/src/wordcount.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/underline/underlineediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/underline/underlineui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/underline.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-basic-styles/src/underline.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/addcommentthreadcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/utils/getmarkerdomelement.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/integrations/commentsrestrictededitingmode.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/commentsediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/previous-arrow.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/next-arrow.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/inlineannotations.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/editorannotations.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments/commentsui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/icons/add-comment.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/commentsonly.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/view/sidebarview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/view/sidebaritemview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/sidebar.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/widesidebar.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/view/annotationcounterbuttonview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/theme/icons/add-comment-inverted.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/annotations/narrowsidebar.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-comments/src/comments.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/src/headingcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/src/headingediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/model.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/src/headingui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/src/utils.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-heading/src/heading.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-engine/src/view/upcastwriter.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/list.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/googledocsnormalizer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/removeboldwrapper.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/space.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/parse.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/image.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/mswordnormalizer.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/textwatcher.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/utils/getlasttextline.js","webpack://CKSource/./node_modules/lodash-es/escapeRegExp.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-typing/src/texttransformation.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/src/highlightcommand.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/src/highlightediting.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/splitbuttonview.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/src/highlightui.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-core/theme/icons/eraser.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/theme/icons/marker.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/theme/icons/pen.svg","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-highlight/src/highlight.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-watchdog/src/watchdog.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-watchdog/src/utils/getsubnodes.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-watchdog/src/utils/areconnectedthroughproperties.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-watchdog/src/editorwatchdog.js","webpack://CKSource/./node_modules/@ckeditor/ckeditor5-watchdog/src/contextwatchdog.js","webpack://CKSource/./src/ckeditor.js","webpack://CKSource/./node_modules/lodash-es/clone.js","webpack://CKSource/./node_modules/lodash-es/throttle.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CKEditorError","Error","errorName","context","data","super","JSON","stringify","getLinkToDocumentationMessage","this","type","err","is","error","message","stack","logWarning","console","warn","formatConsoleArguments","logError","documentationMessage","Range","start","end","_createAt","stickiness","isCollapsed","iterator","boundaries","ignoreElementEnd","isEqual","startParentPath","getParentPath","endParentPath","position","isAfter","isBefore","otherRange","loose","containsStart","containsPosition","containsEnd","item","pos","_createBefore","ranges","isIntersecting","push","commonRangeStart","commonRangeEnd","shouldJoin","isTouching","startPosition","endPosition","diffAt","getCommonPath","length","posParent","parent","path","howMany","maxOffset","offset","getShiftedBy","slice","options","treeWalker","nextPosition","operation","_getTransformedByInsertOperation","_getTransformedByMoveOperation","_getTransformedBySplitOperation","_getTransformedByMergeOperation","operations","result","getTransformedByOperation","splice","range","j","next","containsRange","getCommonAncestor","nodeAfterStart","nodeAfter","nodeBeforeEnd","nodeBefore","toJSON","constructor","spread","_getTransformedByInsertion","sourcePosition","targetPosition","_getTransformedByMove","insertionPosition","deletionPosition","insertPosition","newPos","moveRange","_createFromPositionAndShift","_getTransformedByDeletion","differenceSet","getDifference","difference","common","getIntersection","transformedCommon","_getCombined","deletePosition","newStart","newEnd","shift","element","offsetSize","clone","ref","sort","a","b","refIndex","indexOf","json","doc","fromJSON","Position","Array","getPath","newOffset","getChild","offsetToIndex","getTextNodeAtPosition","getNodeAfterPosition","getNodeBeforePosition","otherPosition","skip","getAncestors","includeSelf","parentName","findAncestor","cmp","Math","min","ancestorsA","ancestorsB","shifted","compareWith","left","right","leftParent","thisParentPath","posParentPath","movedRange","splitPosition","moveTargetPosition","graveyardPosition","transformed","source","target","combined","from","itemOrPosition","node","_createAfter","endOffset","startOffset","graveyard","getRoot","rootName","positionParent","textNode","Plugin","editor","set","_disableStack","Set","id","add","size","on","forceDisable","priority","isEnabled","delete","off","stopListening","evt","return","stop","mix","baseClass","mixins","forEach","mixin","getOwnPropertyNames","concat","getOwnPropertySymbols","sourceDescriptor","getOwnPropertyDescriptor","childCount","editable","thisPath","otherPath","offsetInText","index","View","locale","isRendered","_viewCollections","_unboundChildren","createCollection","collection","decorate","_bindTemplate","views","children","child","remove","definition","template","extend","render","registerChild","getViews","map","destroy","_revertData","revert","getLastMatchingPosition","enlargeTrimSkip","direction","isAtStart","isAtEnd","nextSibling","previousSibling","startElement","endElement","_createFromParentsAndOffsets","_listeningTo","_emitterId","EmitterMixin","event","callback","listenTo","wasFired","args","emitter","emitterInfo","eventCallbacks","emitters","_getEmitterId","_setEmitterId","emitterId","callbacks","eventName","events","getEvents","childEventName","newEventNodes","childEvents","substr","lastIndexOf","createEventNamespace","lists","getCallbacksListsForNamespace","callbackDefinition","added","removeCallback","pop","eventOrInfo","eventInfo","getCallbacksForEvent","_events","callbackArgs","apply","called","_delegations","destinations","passAllDestinations","fireDelegatedEvents","rethrowUnexpectedError","to","nameOrFunction","Map","clear","_getEmitterListenedTo","listeningEmitter","listenedToEmitterId","eventNode","callbacksLists","childCallbacksLists","fireArgs","delegatedInfo","fire","observablePropertiesSymbol","boundObservablesSymbol","boundPropertiesSymbol","ObservableMixin","keys","initObservable","properties","has","configurable","oldValue","newValue","undefined","bindProperties","isStringArray","boundProperties","propertyName","bindings","binding","bindTo","toMany","bindToMany","_observable","_bindProperties","_to","_bindings","unbindProperties","boundObservables","toObservable","toProperty","toProperties","toPropertyBindings","boundObservable","methodName","originalMethod","observable","parsedArgs","parsed","lastObservable","parseBindToArgs","bindingsKeys","numberOfBindings","updateBoundObservableProperty","chain","toPropertyName","bindingsToObservable","updateBoundObservables","updateBindToBound","observables","attribute","observableAndAttributePairs","getBindingTargets","arr","every","propertyValue","bindTemplate","setTemplate","tag","attributes","class","if","trim","text","ariaLabelUid","uid","tooltipView","_createTooltipView","labelView","_createLabelView","iconView","extendTemplate","keystrokeView","_createKeystrokeView","_getTooltipString","tabindex","isToggleable","String","mousedown","preventDefault","click","icon","withKeystroke","focus","style","tooltip","label","keystroke","Function","macGlyphsToModifiers","modifiersToMacGlyphs","keyCodes","arrowleft","arrowup","arrowright","arrowdown","backspace","enter","space","esc","tab","ctrl","cmd","alt","code","letter","fromCharCode","toLowerCase","generateKnownKeyCodes","getCode","keyCode","altKey","ctrlKey","shiftKey","parseKeystroke","splitKeystrokeText","reduce","sum","getEnvKeystrokeText","isMac","isArrowKeyCode","split","Element","attrs","_children","_insertChild","getNode","getNodeIndex","getNodeStartOffset","relativePath","deep","_clone","getAttributes","nodes","items","normalize","_remove","_insertNodes","_removeNodes","NBSP_FILLER","domDocument","createTextNode","BR_FILLER","fillerBr","createElement","dataset","ckeFiller","INLINE_FILLER_LENGTH","INLINE_FILLER","inlineFiller","startsWithFiller","domNode","isInlineFiller","domText","getDataWithoutFiller","injectQuirksHandling","view","document","jumpOverInlineFiller","domSelection","domTarget","ownerDocument","defaultView","getSelection","rangeCount","getRangeAt","collapsed","domParent","startContainer","domOffset","collapse","MoveOperation","baseVersion","newTargetPosition","getMovedRangeStart","sourceElement","targetElement","sourceOffset","targetOffset","Text","_textData","_fireChange","otherNode","_data","memo","isOldIE","Boolean","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","modulesToDom","list","idCountMap","identifiers","base","count","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","nonce","setAttribute","insert","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","styleSheet","cssText","cssNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","SplitOperation","getInsertionPosition","Number","POSITIVE_INFINITY","splitElement","newElement","sourceRange","rectProperties","Rect","isSourceRange","_source","writable","rangeRects","getDomRangeRects","copyRectProperties","getBoundingRect","getBoundingClientRect","innerWidth","innerHeight","top","bottom","width","height","x","y","anotherRect","rect","max","getArea","visibleRect","isBody","commonAncestorContainer","parentRect","intersectionRect","prop","intersectRect","scrollBarWidth","scrollBarHeight","documentElement","clientWidth","clientHeight","getComputedStyle","borderWidths","offsetWidth","offsetHeight","rects","clientRects","getClientRects","boundingRectData","NEGATIVE_INFINITY","rectangleCount","elementOrRange","body","Command","model","refresh","forceDisabled","clearForceDisabled","Collection","initialItemsOrOptions","hasInitialItems","_items","_itemMap","_idProperty","idProperty","_bindToExternalToInternalMap","WeakMap","_bindToInternalToExternalMap","_skippedIndexesFromExternal","_getItemIdBeforeAdding","addMany","itemId","currentItemIndex","removed","idOrIndex","itemOrId","subject","ctx","find","_bindToCollection","removedItems","externalCollection","as","Class","_setUpBindToBinding","using","callbackOrProperty","addItem","externalItem","isExternalBoundToThis","externalItemBound","finalIndex","skipped","getIndex","itemDoesNotExist","MergeOperation","mergedElement","_createIn","_createOn","isIterable","Operation","isDocumentOperation","batch","assign","__className","className","HEX_NUMBERS","fill","val","r1","random","r2","r3","r4","freeSelf","self","compareArrays","minLen","isText","isArray","_0x360d","_0x10b9bd","_0x360d9a","_0x10cf1b","_0x96762e","_0x9676","_0x116a4c","_0x1972c2","_0xd38c62","_0x7247ae","_0x5c022c","_0x5043b6","_0x3f91","_0x1cb143","_0x3f9182","_0x58a22b","_0x514995","_0x5149","static","_0x562d07","_0x422da2","_0x36d25f","_0x1a86df","_0x56dcf7","_0x41c318","_0xb0a208","_0x1d348a","_0x5c78f4","_0xed64be","_0x28825c","_0x49b1be","_0x30b4e0","_0x310c8b","_0x93d6d2","_0x3311ff","_0x1f7c6f","_0x2e85b2","_0x3f61c8","_0x4cf673","_0x1799e1","_0x590a04","_0x426990","_0x3a0f3b","_0x2b6c2c","_0x2562cc","_0x416b8f","_0x1a9538","_0x418fa5","_0x15b28d","_0x3e53da","k","_0x8c4c2a","_0xddf336","_0x4c208e","_0x18400f","_0xa09a75","_0x21d9b8","_0x15ab1c","_0x209937","_0x8dc2f3","other","isFlat","getItems","shallow","getAttribute","hasAttribute","_attrs","parseAttributes","_classes","classString","parseClasses","_styles","stylesProcessor","setTo","_customProperties","isEmpty","entries","inlineStyle","otherElement","getStyleNames","getAsString","getNormalized","patterns","matcher","match","classes","styles","childrenClone","getChildren","cloned","getFillerOffset","classesSet","classesString","classArray","InsertOperation","shouldReceiveAttributes","gyPosition","originalNodes","NoOperation","FocusTracker","_elements","_nextEventLoopTimeout","_focus","useCapture","_blur","focusedElement","clearTimeout","isFocused","setTimeout","TreeWalker","singleCharacters","_boundaryStartParent","_boundaryEndParent","_visitedParent","done","prevPosition","prevVisitedParent","_next","_previous","previousPosition","textNodeAtPosition","formatReturnValue","charactersCount","offsetInTextNode","TextProxy","substring","parentFirst","ancestors","getAttributeKeys","_insert","_normalizeNodes","_splitNodeAtPosition","_mergeNodesAtIndex","_removeChildren","_move","_setAttribute","_removeAttribute","normalized","prev","_haveSameAttributes","mergedNode","offsetDiff","firstPart","secondPart","nodeA","nodeB","iteratorA","iteratorB","attr","Selection","selectable","placeOrOffset","_ranges","_lastRangeBackward","_isFake","_fakeSelectionLabel","anchor","editableElement","first","last","firstRange","getFirstRange","lastRange","getLastRange","otherSelection","isFake","fakeSelectionLabel","thisRange","found","isBackward","numOfRangesA","getRanges","rangeA","getTrimmed","rangeB","getContainedElement","_setRanges","_setFakeOptions","fake","backward","newFocus","_addRange","newRanges","isLastBackward","_pushRange","storedRange","addedRange","intersectingRange","userAgent","navigator","env","isGecko","isSafari","isAndroid","isBlink","features","isRegExpUnicodePropertySupported","isSupported","search","RegExp","objectProto","nativeObjectToString","symToStringTag","isOwn","unmasked","KeystrokeHandler","_listener","keyEvtData","stopPropagation","ContextPlugin","maskSrcKey","exec","IE_PROTO","func","reIsHostCtor","funcProto","funcToString","reIsNative","replace","isObject","isFunction","test","iterable","iteratorItem","Matcher","pattern","_patterns","singleElement","isElementMatching","results","matchName","matchAttributes","getClassNames","hasClass","matchClasses","hasStyle","getStyle","matchStyles","MarkerOperation","oldRange","newRange","markers","affectsData","_markers","RenameOperation","oldName","newName","props","customizer","isNew","Node","getChildIndex","unshift","nodePath","Observer","disable","nodeType","matches","DomEmitterMixin","rest","proxy","_getProxyEmitter","ProxyEmitter","attach","detach","getNodeUID","_domNode","_domListeners","listenerOptions","capture","passive","usePassive","domListener","_createDomListener","addEventListener","removeListener","domEvt","removeEventListener","DomEventObserver","domElement","domEventType","domEvent","checkShouldIgnoreEventFromTarget","onDomEvent","eventType","additionalData","diff","aLength","bLength","fastDiff","_delete","tmp","delta","es","fp","snake","y1","y2","dir","Template","def","_isRendered","_renderNode","intoFragment","isApplying","revertData","_revertTemplateFromNode","isView","isTemplate","eventNameOrFunctionOrAttribute","TemplateToBinding","eventNameOrFunction","valueIfTrue","TemplateIfBinding","extendObjectValueArray","eventListeners","childIndex","childDef","isInvalid","_renderText","_renderElement","createElementNS","_renderAttributes","_renderElementChildren","_setUpListeners","textContent","hasTemplateBinding","_bindToObservable","schema","getTextUpdater","attrName","attrValue","domAttrValue","attrNs","valueToBind","shouldExtend","getAttributeUpdater","_renderStyleAttribute","arrayValueReducer","isFalsy","setAttributeNS","styleName","styleValue","getStyleUpdater","container","createDocumentFragment","isViewCollection","setParent","childRevertData","revertBindings","schemaItem","domEvtName","domSelector","activateDomEventListener","syncValueSchemaValue","templateBinding","activateAttributeListener","revertBinding","TemplateBinding","getValue","some","getValueSchemaValue","el","removeAttributeNS","normalizePlainTextDefinition","normalizeTextDefinition","listeners","arrayify","normalizeListeners","normalizeAttributes","cur","ext","toMap","objectToMap","getChildStartOffset","isProto","isArrayLike","NodeList","_nodes","totalOffset","nodeList","indexStart","_formatReturnValue","textLength","textProxy","freeExports","freeModule","Buffer","isBuffer","DocumentFragment","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","Ctor","ctorString","freeProcess","process","nodeUtil","types","require","isNode","Document","objectCtorString","proto","ViewCollection","initialItems","_renderViewIntoCollectionParent","_parentElement","elementOrDocFragment","dest","evtName","delegate","stopDelegating","_0x4038","_0x34e915","_0x40387a","_0x4286c7","_0x60191","_0x6019","noChannel","_0x240215","_0x13d797","_0xc8f901","_0xee727","_0x5c4d91","_0x35939f","_0x2d3c4e","_0x47f231","_0x3128a4","_0x35479f","_0x45d086","_0x30ee9a","_0x4c1a00","_0x4bf011","threadId","_0x8284a7","isFromAdapter","_0x1c199e","_0xc53ce6","_0x1c76dc","_0x50a601","_0x22b3ef","_0x372d24","_0x5c7332","x8eE","_0x25b9df","channelId","_0x538c8f","_0x1f7184","comments","_0x3d5e21","_0x5b1118","_0xf6bf30","toEventName","_0xfe80fc","_0x30725e","_0xd30a85","_0x2f4e2e","_0x532ed2","_0x267a4b","_0x542e54","_0x22b543","_0xe57f2c","_0x35fe28","_0x435820","_0xf0b4f8","Promise","_0x20daf4","_0x4c2269","_0x35bab2","skipNotAttached","_0x10d700","skipEmpty","_0x1ffc32","_0x58d7fa","_0x29e310","_0x622755","_0x32f63d","_0x35f683","_0x209de0","_0x181f4d","_0x1409bd","_0x2ffc09","_0x1858ea","_0x491fb9","_0x5094b3","_0xb1293c","_0x4ff9df","_0x72bd17","_0x52cfde","CommentThread","_0xe1c866","_0x458683","_0x2c2b9c","_0x9b1a95","_0x37a488","_0x314dab","_0x5b3df5","_0xbbe88b","_0x292624","_0x3b72ed","_0x4d6555","_0x1d14cf","_0xac6683","_0x52c812","_0x2775e9","_0x36b4fc","_0x453944","config","_0x1f8f7d","_0x3cfa5c","_0x3332d7","_0x74681f","_0x389798","_0x48d1f4","_0x3ea2ea","_0x3cbffd","_0x2d49ac","_0xab511d","_0x1b4383","_0x3234f6","_0x2f7909","_0x161b9c","_0x3372d0","_0x425f20","commentId","_0x2b92af","content","_0x5031d6","authorId","_0x59a5c1","createdAt","_0x4eafc3","_0x3b30e8","_0x412209","_0x6c5296","_0x5ea9e7","Comment","Date","_0x26ae4d","_0x2e7699","_0x2ddd78","_0x192282","_0x106daf","_0x446f24","_0x139cdd","_0x1c6c89","_0x4c6dbc","_0x401623","_0x142416","_0x5361ab","_0x67154c","_0x3ee001","_0x474df2","_0x1cacfd","_0xf51f33","_0xbc8b56","_0x5e5ea3","_0x54c999","_0x58d09d","_0x2decf7","_0x59f353","_0x25bada","_0x1c00cb","_0x892b22","_0x1a0957","_0x178ae8","_0x1a9886","_0x586612","_0x149b65","_0x4f8d90","_0x61db1","_0x2b0e76","_0x2d0a32","_0x1a5f02","_0x478363","_0x496767","_0x19ddb1","_0x5adfaa","_0x3edd82","_0x46aec7","_0x9df4b4","_0x11806a","_0x3a28b6","_0x40b908","_0x5867f1","MIN_WEIGHT","getContentLength","_0x5d7e34","_0x5874ac","_0x30057c","_0x2bef2d","_0x5656ae","_0x5edf5d","_0x447800","_0xa685a2","_0x5f5830","_0xda6538","_0x30dfc7","_0x3eb5a3","_0x7cc7a0","_0x14cc9a","_0x3450d1","_0x567409","_0x10287f","_0x483993","_0x303349","_0x12584e","_0x2878bd","_0x188d79","_0x311e9f","_0x38a52a","_0x42ab48","_0x44c8f6","_0x4e7312","_0x458aa0","_0x2678e5","_0xb58c87","_0x3e6fbe","_0x513b1f","_0x5b6569","_0x3d103d","parseInt","_0x7e3a30","_0x4a62ed","_0x3bdcdf","_0x307313","_0x4f76bf","eval","_0x3a2a25","_0x1fc800","_0x18d448","_0x9d4f5b","_0x478bca","_0x2cd8b1","_0x53a10c","_0x4c988d","_0x830f04","_0x41b360","_0xa7bbab","_0x72854e","_0x3e4a04","_0x5dd90d","_0x16527a","_0x1765e5","_0x8683af","_0x2d5f8e","_0x431e72","_0x1557ce","_0xa80869","_0x4faa99","_0x2c2665","_0x694c19","_0x56d35e","_0x3c1029","_0x3f1a0e","_0x2147d4","_0x27f147","_0x552455","_0x463648","_0x365e4a","Uint8Array","_0xd9d72e","_0x413038","_0x1d5d44","_0x148de4","_0x138ade","_0x231710","TypeError","_0x7e4b68","_0x219aed","_0x37388f","_0x7bb265","_0x5e4a34","_0x3d78f4","_0x3947bc","_0x324d0f","_0x5a16f8","_0x420fed","_0x4e120c","_0x42db37","_0x3832e3","_0x19b6c2","_0x3d30ef","_0x32b6b4","_0x30ab94","_0x9dda26","_0x19c7eb","_0xae6a7e","_0x4218bc","_0x8c20ab","_0x41512a","_0x1bf1ae","_0x7348f6","_0x2272fb","_0x35bd5a","_0x12e4a7","_0x5b5294","_0x1634f0","_0x552b3f","_0xc7cdb5","_0x5e0a77","_0x3051c4","_0x3eb698","_0x28c1d1","_0x499418","_0x4a1fa9","_0x5b8bad","_0x149bf9","_0x4b67a4","_0x394e85","_0x1c16c4","_0x331e40","_0x480613","_0x3666ed","_0x5a4b1e","_0x513c82","_0x147c9e","_0x1edae9","_0x4e277a","_0x3c5cea","_0x157a41","_0xec5d54","_0x59b330","_0x4797f3","_0x9f9764","_0x284430","_0x375a79","__data__","array","eq","ListCache","entry","DOCUMENT_NODE","BR_FILLER_REF","blockFillerMode","preElements","blockElements","_blockFiller","_domToViewMapping","_viewToDomMapping","_fakeSelectionMapping","viewDocumentSelection","viewElement","unbindDomElement","domFragment","viewFragment","viewNode","textData","_processDataFromViewText","mapViewToDom","bindDocumentFragments","bindElements","withChildren","viewChildrenToDom","fillerPositionOffset","childView","viewToDom","viewRange","domStart","viewPositionToDom","domEnd","domRange","createRange","setStart","setEnd","viewPosition","viewParent","findCorrespondingDomText","domBefore","domAfter","isBlockFiller","hostElement","getHostViewElement","_processDataFromDomText","isComment","mapDomToView","isDocumentFragment","viewName","keepOriginalCase","tagName","domChildrenToView","_appendChild","domChild","viewChild","domToView","viewSelection","fakeSelectionToView","isDomSelectionBackward","viewRanges","domRangeToView","viewStart","domPositionToView","viewEnd","endContainer","findCorrespondingViewText","viewBefore","domElementOrDocumentFragment","isElement","documentFragmentOrElement","viewText","viewEditable","domEditable","activeElement","scrollX","scrollY","global","scrollPositions","forEachDomNodeAncestor","scrollLeft","scrollTop","scrollTo","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","COMMENT_NODE","isEqualNode","hasBlockParent","isNbspBlockFiller","selection","anchorNode","anchorOffset","focusNode","focusOffset","_isDomSelectionPositionCorrect","includes","charAt","prevNode","_getTouchingViewTextNode","_nodeEndsWithSpace","nextNode","_hasDomParentOfType","_getTouchingInlineDomNode","shouldLeftTrim","_checkShouldLeftTrimDomText","shouldRightTrim","_checkShouldRightTrimDomText","getNext","topmostParent","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","acceptNode","FILTER_ACCEPT","FILTER_SKIP","currentNode","touchingNode","lca","boundaryParent","parents","priorities","normal","highest","high","low","lowest","ContainerElement","lastChild","RootAttributeOperation","pairs","LARGE_ARRAY_SIZE","Stack","spy","getTimezoneOffsetInMilliseconds","isDate","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","setUTCFullYear","getUTCDay","setUTCDate","getUTCDate","argument","dirtyOptions","getTime","additionalDigits","dateStrings","dateString","timeString","token","time","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","restDateString","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","parseTimezone","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","getDate","isRange","LiveRange","bindWithDocument","transform","_createFromRanges","boundariesChanged","contentChanged","doesOperationChangeRangeContent","toRange","Hash","MapCache","getPrototype","getPrototypeOf","objValue","reIsUint","arrayBuffer","byteLength","EditableElement","roots","_postFixers","postFixer","writer","wasFixed","DomEventData","domConverter","FocusCycler","actions","keystrokeHandler","cancel","focusables","isFocusable","_getFocusableItem","focusTracker","viewIndex","focused","previous","step","current","collectionLength","display","AttributeCommand","attributeKey","_getValueFromFirstAllowedNode","checkAttributeInSelection","forceValue","change","setSelectionAttribute","removeSelectionAttribute","getValidRanges","checkAttribute","iteratee","stubArray","input","dataView","isDeep","buffer","byteOffset","reFlags","regexp","lastIndex","symbolProto","symbolValueOf","valueOf","symbol","isObjectLike","nodeIsMap","isMap","nodeIsSet","isSet","cloneableTags","baseClone","bitmask","isFull","isArr","isFunc","stacked","subValue","keysFunc","keysIn","_translate","language","quantity","numberOfLanguages","CKEDITOR_TRANSLATIONS","messageId","string","dictionary","hasTranslation","plural","getPluralForm","pluralFormIndex","RTL_LANGUAGE_CODES","uiLanguage","contentLanguage","uiLanguageDirection","getLanguageDirection","contentLanguageDirection","values","_t","interpolateString","languageCode","defaultConfig","availablePlugins","builtinPlugins","plugins","languageConfig","ui","editors","_contextOwner","isContextPlugin","init","then","isContextOwner","names","initPlugins","block","getSelectedBlocks","checkCanBecomeParagraph","blocks","rename","checkChild","paragraph","allowedParent","findAllowedParent","insertContent","setSelection","commands","register","inheritAllFrom","conversion","elementToElement","for","paragraphLikeElements","converterPriority","BasicHtmlWriter","fragment","implementation","createHTMLDocument","innerHTML","_domParser","DOMParser","_domConverter","_htmlWriter","getHtml","_toDom","parseFromString","typedArrayTags","isLength","nodeIsTypedArray","isTypedArray","predicate","resIndex","propertyIsEnumerable","nativeGetSymbols","getSymbols","isWindow","stringifiedObject","getTranslation","_0x33e18e","_0x5cb9d8","windowOrGlobal","CKEDITOR_VERSION","_","documentPlaceholders","enablePlaceholder","isDirectHost","registerPostFixer","updateDocumentPlaceholders","disablePlaceholder","placeholders","hidePlaceholder","removeClass","wasViewModified","updatePlaceholder","getChildPlaceholderHostSubstitute","isAttached","isEmptyish","selectionAnchor","needsPlaceholder","addClass","showPlaceholder","isArguments","arguments","Config","configurations","defaultConfigurations","_config","cloneConfig","_setObjectToTarget","_setToTarget","_getFromSource","isDefine","parts","part","configuration","leaveDOMReferences","freeGlobal","arg","allocUnsafe","copy","typedArray","symbolsFunc","PluginCollection","contextPlugins","_context","_plugins","_availablePlugins","PluginConstructor","pluginName","_contextPlugins","pluginInstance","plugin","removePlugins","that","loading","loaded","pluginConstructors","mapToAvailableConstructors","removePluginConstructors","missingPlugins","pluginNameOrConstructor","getPluginConstructor","getMissingPluginNames","errorId","reject","loadPlugin","requires","RequiredPluginConstructorOrName","RequiredPluginConstructor","requiredBy","_add","instantiatePlugin","catch","loadedPlugins","method","promise","PluginConstructorOrName","promises","plugin1","plugin2","DocumentSelection","_selection","getFirstPosition","getLastPosition","getSelectedElement","isSimilar","setFocus","atomicChanges","changeIndexes","arr1","arr2","firstIndex","findFirstDifferenceIndex","lastIndexOld","lastIndexNew","oldArrayReversed","cutAndReverse","newArrayReversed","findChangeBoundaryIndexes","newLength","changeIndexesToAtomicChanges","newArray","changeIndexesToChanges","reverse","getBorderWidths","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","DataApiMixin","EditorUIView","attachToDom","detachFromDom","LabelView","IconView","viewBox","_updateXMLContent","_colorFillPaths","svg","fillColor","querySelectorAll","_0x2c79","_0x41c4c5","_0x2c7981","_0x2c1c3b","_0x3cfba8","_0x3cfb","_0x5520f1","_0x56b6fc","_0x4cced4","MutationObserver","_0x423803","_0xfc30a4","_0x459a47","smallPaddingElements","viewToPlainText","viewItem","childText","_0x4c8f","_0x2ee08a","_0x4c8fa8","_0x562e98","_0x2667ab","_0x2667","_0x197ee6","_0x5b22be","_0x397e61","rootNameSymbol","getCustomProperty","_setCustomProperty","_priority","_id","_clonesGroup","nonUiChildrenCount","DEFAULT_PRIORITY","toDomElement","injectUiElementHandling","domSelectionCollapsed","jumpedOverAnyUiElement","nextViewPosition","newDomPosition","jumpOverUiElement","_cloneGroups","_setTo","_setFocus","attributeElement","_document","renderFunction","uiElement","rawElement","_addClass","_removeClass","isPlainObject","_setStyle","_removeStyle","_removeCustomProperty","positionOrRange","_breakAttributes","_breakAttributesRange","move","positionOffset","_removeFromClonedElementsGroup","mergeAttributes","mergeTextNodes","newPosition","validateNodesToInsert","errorContext","validNodesToInsert","validNode","getParentContainer","_addToClonedElementsGroup","rangeOrItem","validateRangeContainer","breakStart","breakEnd","parentContainer","mergePosition","walker","getWalker","rangeToRemove","parentElement","ancestor","countBefore","_wrapPosition","_wrapRange","_unwrapChildren","groupName","wrapElement","wrapPositions","isAttribute","isUI","isRaw","_wrapAttributeElement","shouldABeOutsideB","newAttribute","_wrapChildren","offsetChange","unwrapElement","unwrapPositions","unwrapped","_unwrapAttributeElement","movePositionToTextNode","breakTextNode","fakePosition","createAttributeElement","wrapRange","wrap","wrapper","toWrap","canBeJoined","setStyle","toUnwrap","removeStyle","forceSplitText","rangeStart","rangeEnd","isContainerOrFragment","offsetAfter","clonedNode","nodesToMove","group","getIdentity","textToMove","t1","t2","nodeBeforeLength","insertAt","nodeToInsert","domDocuments","markedAttributes","markedChildren","markedTexts","_inlineFiller","_fakeSelectionContainer","inlineFillerPosition","_updateChildrenMappings","_isSelectionInInlineFiller","_removeInlineFiller","_getInlineFillerPosition","_needsInlineFillerAtSelection","_updateAttrs","_updateChildren","_updateText","fillerDomPosition","addInlineFiller","_updateSelection","_updateFocus","actualDomChildren","expectedDomChildren","_diffNodeLists","_findReplaceActions","counter","equal","action","insertIndex","deleteIndex","_updateElementMappings","firstPos","selectionPosition","domFillerNode","selectionParent","selectionOffset","isEditable","newDomText","actualText","expectedText","filler","insertData","deleteData","domAttrKeys","viewAttrKeys","nodesToUnbind","_markDescendantTextToSync","domChildList","fakeSelectionContainer","childList","filterOutFakeSelectionContainer","actualDom","expectedDom","newActions","actualSlice","expectedSlice","areSimilar","_removeDomSelection","_removeFakeSelection","domRoot","_updateFakeSelection","_updateDomSelection","createFakeSelectionContainer","bindFakeSelection","_fakeSelectionNeedsUpdate","removeAllRanges","selectNodeContents","addRange","_domSelectionNeedsUpdate","childAtOffset","fixGeckoSelectionAfterBr","isDomSelectionCorrect","oldViewSelection","domSelectionToView","contains","activeDomElement","domParentOrArray","nodeAfterFiller","fillerNode","node1","node2","actualDomChild","expectedDomChild","characterData","characterDataOldValue","subtree","renderer","_renderer","_domElements","_mutationObserver","_onMutations","takeRecords","observe","enable","disconnect","domMutations","mutatedTexts","mutatedElements","mutation","_isBogusBrMutation","oldText","newText","viewMutations","mutatedText","markToSync","viewChildren","newViewChildren","sameNodes","oldChildren","newChildren","viewSelectionAnchor","viewSelectionFocus","child1","child2","forceRender","addedNode","removedNodes","addedNodes","metaKey","_fireSelectionChangeDoneDebounced","debounce","_handleSelectionMove","newSelection","oldSelection","mutationObserver","getObserver","_documents","WeakSet","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","_handleSelectionChange","clearInterval","flush","newViewSelection","hasDomSelection","_renderTimeoutId","selectedEditable","isComposing","scrollViewportToShowTarget","viewportOffset","targetWindow","getWindow","currentWindow","currentFrame","firstAncestorToScroll","getParentElement","scrollAncestorsToShowRect","getRectRelativeToWindow","targetRect","scrollWindowToShowRect","frameElement","targetShiftedDownRect","moveBy","targetShiftedUpRect","viewportRect","excludeScrollbarsAndBorders","isAbove","isBelow","isLeftOf","isRightOf","getRect","parentWindow","firstRect","secondRect","relativeWindow","frame","frameRect","scrollAncestorsToShowTarget","domRoots","_initialDomRootAttributes","_observers","_ongoingChange","_postFixersInProgress","_renderingDisabled","_hasChangedSinceTheLastRendering","_writer","addObserver","_render","viewRoot","_name","initialDomRootAttributes","updateContenteditableAttribute","isReadOnly","observer","viewRangeToDom","isRenderingInProgress","callbackResult","_callPostFixers","flag","disableObservers","enableObservers","_modelToViewMapping","_viewToModelMapping","_viewToModelLengthCallbacks","_markerNameToElements","_elementToMarkerNames","_unboundMarkerNames","viewContainer","modelPosition","findPositionIn","viewBlock","findMappedViewAncestor","modelParent","modelOffset","_toModelOffset","modelElement","toModelElement","markerName","toViewElement","elements","nameToElements","elementToNames","markerNames","toModelPosition","modelRange","toViewPosition","mapper","isPhantom","boundElements","getElementsWithSameId","viewElementName","lengthCallback","viewOffset","getModelLength","len","expectedOffset","lastLength","_moveViewPositionToTextNode","_consumable","_textProxyRegistry","_normalizeConsumableType","_getSymbolForTextProxy","itemConsumables","startMap","endMap","_addSymbolForTextProxy","conversionApi","dispatcher","_reconversionEventsMapping","differ","getMarkersToRemove","convertMarkerRemove","changes","_mapChangesWithAutomaticReconversion","convertInsert","convertRemove","reconvertElement","convertAttribute","attributeOldValue","attributeNewValue","flushUnboundMarkerNames","markerRange","getRange","convertMarkerAdd","getMarkersToAdd","consumable","_createInsertConsumable","walkerValueToEventData","_convertInsertWithAttributes","_clearConversionApi","_createConsumableForRange","_testAndFire","elementRange","currentView","convertedViewElement","elementOrTextProxyToView","createRangeOn","unbindViewElement","markersAtSelection","getMarkersAtPosition","_createSelectionConsumable","marker","shouldMarkerChangeBeConverted","modelName","getEventName","itemsToReconvert","updated","getChanges","_isReconvertTriggerEvent","elementName","containsItem","anyNewRange","_removeAllRanges","directChange","_popRange","attributeKeys","visited","startBlock","getParentBlock","isTopBlockInRange","isUnvisitedTopBlock","endBlock","limitStartPosition","limitEndPosition","_checkRange","isUnvisitedBlock","isBlock","hasParentLimit","isLimit","parentBlock","findAncestorBlock","hasOwnRange","isGravityOverridden","containsEntireContent","_updateMarkers","_updateAttributes","_getStoredAttributes","overrideGravity","restoreGravity","startsWith","_model","_attributePriority","_selectionRestorePosition","_hasChangedRange","_overriddenGravityRegister","_fixGraveyardSelection","_validateSelectionRange","changeParent","enqueueChange","storedAttributes","clearAttributesStoredInElement","_getDefaultRange","optionsOrPlaceOrOffset","overrideUid","liveRange","_prepareRange","fromRange","changed","selectionRange","oldMarkers","clearAll","newAttributes","_getSurroundingAttributes","oldAttributes","_setAttributesTo","newKey","oldKey","realKey","getAttrsIfCharacter","isInline","getNearestSelectionRange","ConversionHelpers","dispatchers","_dispatchers","conversionHelper","CLONE_DEEP_FLAG","normalizeToElementConfig","elementCreator","consume","triggerBy","_mapReconversionTriggerEvent","childName","downcastElementToElement","modelValue","getFromAttributeCreator","oldViewElement","newViewElement","viewWriter","toViewRange","unwrap","downcastAttributeToElement","normalizeToAttributeConfig","attributeCreator","oldAttribute","downcastAttributeToAttribute","isOpening","viewStartElement","viewEndElement","bindElementToMarker","markerNameToElements","unbindElementFromMarkerName","clearClonedElementsGroup","downcastMarkerToElement","highlightDescriptor","descriptor","prepareDescriptor","createViewElementFromHighlightDescriptor","rangeAfterWrap","highlightElement","viewHighlightElement","removeHighlight","downcastMarkerToHighlight","viewCreator","viewMarkerData","handleMarkerBoundary","viewData","removeMarkerFromAttribute","attributeName","removeMarkerData","downcastMarkerToData","isStart","createUIElement","insertMarkerAsElement","insertMarkerAsAttribute","viewElementType","modelData","viewElementDefinition","createContainerElement","createViewElementFromDefinition","modelAttributeValue","autoParagraphEmptyRoots","getRootNames","insertElement","isParagraphable","nodeOrType","createContext","wrapInParagraph","createPositionAt","upcastElementToElement","normalizeModelAttributeConfig","converter","prepareToAttributeConverter","getViewElementNameFromConfig","upcastElementToAttribute","viewKey","normalizeViewAttributeKeyValueConfig","upcastAttributeToAttribute","oldModel","normalizeElementToMarkerConfig","upcastElementToMarker","converterStart","prepareToElementConverter","normalizeDataToMarkerConfig","converterEnd","basePriority","maxPriority","priorityFactor","addMarkerElements","markerViewNames","markerViewName","modelCursor","convertChildren","upcastAttributeToMarker","upcastDataToMarker","viewConfig","matcherResult","getModelElement","safeInsert","updateConversionResult","viewAttributeKeyToCopy","defaultModelValue","modelKey","configToTest","onlyViewNameIsDefined","modelAttribute","setAttributeOn","configForElements","downcastDispatcher","_disableRendering","convertChanges","convertSelection","toModelRange","modelSelection","createSelection","convertSelectionChange","createText","modelEnd","createRangeIn","brokenPosition","breakAttributes","_commands","commandName","command","execute","ViewConsumable","_consumables","consumables","elementConsumables","instance","consumablesFromElement","createFrom","_canConsumeName","_test","_consume","_revert","alsoName","getRelatedStyles","consumableName","toConsume","_sourceDefinitions","_attributeProperties","SchemaContext","getDefinition","itemName","_clearCache","_compiledDefinitions","_compile","getDefinitions","isSelectable","isContent","_checkContextMatch","allowAttributes","positionOrBaseElement","elementToMerge","checkMerge","retValue","getAttributeProperties","selectionOrRangeOrPosition","rangeCommonAncestor","getMinimalFlatRanges","convertToMinimalFlatRanges","_getValidRangesForRange","backwardWalker","forwardWalker","limitElement","forward","combineWalkers","removeDisallowedAttributeFromNode","positionsInRange","getPositions","compiledDefinitions","sourceRules","itemNames","compileBaseItemRule","compileAllowContentOf","compileAllowWhere","compileAllowAttributesOf","compileInheritPropertiesFrom","cleanUpAllowIn","cleanUpAllowAttributes","contextItemIndex","contextItem","getItem","allowIn","parentRule","mapContextItem","query","getNames","endsWith","sourceItemRules","itemRule","allowContentOf","allowWhere","allowAttributesOf","inheritTypesFrom","sourceItemRule","typeNames","copyTypes","copyProperty","inheritFrom","makeInheritAllWork","allowContentOfItemName","getAllowedChildren","allowedItem","allowWhereItemName","allowedIn","allowAttributeOfItem","inheritAttributes","inheritPropertiesOfItem","existingItems","itemToCheck","ctxItem","_splitParts","_cursorParents","_modelCursor","convertItem","_convertItem","_convertChildren","_safeInsert","_updateConversionResult","splitToAllowedParent","_splitToAllowedParent","getSplitParts","_getSplitParts","contextDefinition","append","createContextTree","store","documentFragment","_removeEmptyElements","modelItem","markerElements","markerElement","currentPosition","createPositionBefore","extractMarkersFromModelFragment","elementOrModelCursor","nextModelCursor","splitResult","createPositionAfter","savedCursorParent","treeWalkerValue","originalPart","splitPart","_registerSplitPair","cursorParent","anyRemoved","processor","upcastDispatcher","viewDocument","_viewWriter","_checkIfRootsExists","hasContent","ignoreWhitespaces","modelElementOrFragment","viewDocumentFragment","toView","toData","clearBindings","intersection","_getMarkersRelativeToElement","version","initialData","main","modelRoot","parse","newData","toModel","viewElementOrFragment","convert","rootNames","downcastDispatchers","upcastDispatchers","_helpers","_downcast","_createConversionHelpers","isDowncast","_upcast","alias","_getAllUpcastDefinitions","attributeToElement","elementToAttribute","attributeToAttribute","helpers","upcastAlso","_getUpcastDefinition","upcastAlsoItem","Batch","op","_assertWriterUsedCorrectly","isSameTree","addOperation","applyOperation","rangeRootPosition","usingOperation","updateMarker","addMarker","itemOrRange","setAttributeOnRange","setAttributeOnItem","removeAttributesFromItem","_addOperationForAffectedMarkers","flat","applyRemoveOperation","_merge","_mergeDetached","createPositionFromPath","merge","renameOperation","firstSplitElement","firstCopyElement","elementOrString","shiftedRange","applyMarkerOperation","_set","markerOrName","currentMarker","_refresh","hasUsingOperationDefined","affectsDataDefined","currentRange","updatedRange","managedUsingOperations","keyOrObjectOrIterable","_setSelectionAttribute","keyOrIterableOfKeys","_removeSelectionAttribute","_overrideGravity","_restoreGravity","storeKey","_getStoreAttributeKey","_currentWriter","isAffected","elementBefore","elementAfter","affectedInLeftElement","affectedInRightElement","affectedAfterLeftElement","affectedBeforeRightElement","valueBefore","valueAfter","lastSplitPosition","previousValue","rootA","rootB","markerCollection","_markerCollection","_changesInElement","_elementSnapshots","_changedMarkers","_changeCount","_cachedChanges","_cachedChangesWithGraveyard","_isInInsertedElement","_markRemove","_markInsert","getMarkersIntersectingRange","bufferMarkerChange","_markAttribute","sourceParentInserted","targetParentInserted","graveyardParent","mergedIntoElement","buffered","includeChangesInGraveyard","diffSet","snapshotChildren","elementChildren","_getChildrenSnapshot","_generateActionsFromChanges","_getInsertDiff","_getRemoveDiff","elementAttributes","snapshotAttributes","_getAttributesDiff","changeCount","prevDiff","thisDiff","isConsecutiveTextRemove","isConsecutiveTextAdd","isConsecutiveAttributeChange","_changesInGraveyardFilter","changeItem","_markChange","_removeAllNestedChanges","_makeSnapshot","_getChangesForElement","_handleChange","inc","nodesToHandle","old","incEnd","oldEnd","intersectionLength","howManyAfter","attributePart","diffs","snapshot","oldChildrenLength","oldChildrenHandled","repeat","posInGy","rangeInGy","History","_operations","_undoPairs","_undoneOperations","undoneOperation","undoingOperation","isInsideSurrogatePair","character","isLowSurrogateHalf","isInsideCombinedSymbol","history","_hasSelectionChangedFromTheLastChangeBlock","createRoot","bufferOperation","_hasDocumentChangedFromTheLastChangeBlock","hasDataChanges","reset","defaultRoot","_getDefaultRoot","validateTextNodePosition","rangeBoundary","oldMarker","hasChanged","_attachLiveRange","_managedUsingOperations","_affectsData","_destroyMarker","prefix","_detachLiveRange","_liveRange","oldPosition","toPosition","canMergeWith","_filterAttributesOf","_affectedStart","_affectedEnd","parentContext","_handleNode","isFirst","isLast","removeDisallowedAttributes","nodeToSelect","_handleObject","_checkAndSplitToAllowedPosition","_mergeSiblingsOf","_handleDisallowedNode","_tryAutoparagraphing","handleNodes","livePos","fromPosition","_setAffectedBoundaries","mergeLeft","_canMergeLeft","mergeRight","_canMergeRight","mergePosLeft","mergePosRight","livePosition","_getAllowedIn","tempPos","deleteContent","selRange","doNotResetEntireContent","getLimitElement","shouldEntireContentBeReplacedWithParagraph","insertParagraph","replaceEntireContentWithParagraph","ignoreMarkers","modifySelection","getLivePositionsForSelectedBlocks","leaveUnmerged","checkShouldMerge","startAncestor","endAncestor","positionA","positionB","getAncestorsJustBelowCommonAncestor","mergeBranchesRight","commonAncestor","parentToRemove","clearAttributes","setAttributes","fromEntries","mergeBranchesLeft","mergeBranches","collapseSelectionAt","doNotAutoparagraph","isTextAllowed","isParagraphAllowed","shouldAutoparagraph","leftPos","rightPos","rangeToCheck","isCrossingLimitElement","tryExtendingTo","isForward","unit","isAtWordBoundary","isAtNodeBoundary","boundaryChar","getCorrectWordBreakPosition","getCorrectPosition","getSearchRange","searchEnd","offsetToCheck","removeRangeContent","parentsToCheck","itemRange","parentToCheck","removeRange","injectSelectionPostFixer","correctedRange","tryFixingRange","nonIntersectingRanges","previousRange","merged","mergeIntersectingRanges","selectionPostFixer","originalPosition","nearestSelectionRange","fixedPosition","tryFixingCollapsedRange","isTextAllowedOnStart","isTextAllowedOnEnd","startLimitElement","endLimitElement","startIsOnBlock","endIsOnBlock","checkSelectionOnNonLimitElements","fixedStart","fixedEnd","isStartInLimit","isEndInLimit","bothInSameParent","expandStart","expandEnd","findOutermostLimitAncestor","tryFixingNonCollapsedRage","startingNode","isLimitNode","_pendingChanges","_validate","addChildCheck","childDefinition","_runPendingChanges","batchOrType","_execute","insertion","nodesToInsert","getSelectionRange","affectedRange","getAffectedRange","setSelectionFocus","frag","commonPath","commonParent","getNodeByPath","flatSubtreeRange","appendText","cloneElement","leftExcessRange","getSelectedContent","rangeOrElement","intersectingMarker","ret","currentBatch","callbackReturnValue","_handleChangeBlock","evtData","_addEditor","_getEditorConfig","once","state","editing","addAlias","keystrokes","extraPlugins","readyPromise","_removeEditor","getCopyOnEnterAttributes","allAttributes","copyOnEnter","isSelectionEmpty","attributesToCopy","splitBlock","isContainedWithinOneElement","enterBlock","splitPos","isSoft","scrollToTheSelection","insertBreak","softBreakAction","anchorPos","isInsideLimitElement","breakLineElement","createEmptyElement","scopeElement","isSelectAllScope","SELECT_ALL_KEYSTROKE","domEventData","componentFactory","ChangeBuffer","limit","isLocked","_changeCallback","_batch","_reset","_selectionChangeCallback","createBatch","ignoreLock","undoStepSize","_buffer","_batches","textInsertions","resultRange","lock","unlock","injectUnsafeKeystrokesHandling","latestCompositionSelection","inputCommand","handleUnsafeKeystroke","isSelectionUnchanged","keyData","safeKeycodes","isNonTypingKeystroke","deleteSelectionContent","isFlatSelection","getSingleTextNodeChange","output","lastOperation","pushLast","isContinuationOf","expected","diffToChanges","compareChildNodes","oldChild","newChild","mutations","containerChildrenMutated","_handleContainerChildrenMutations","_handleTextMutation","_handleTextNodeInsertion","mutationsCommonAncestor","getMutationsContainer","domMutationCommonAncestor","freshDomConverter","modelFromCurrentDom","currentModel","modelFromDomChildren","currentModelChildren","lastDomChild","lastCurrentChild","isLastDomChildSoftBreak","isLastCurrentChildSoftBreak","isSafeForTextMutation","diffResult","firstChangeAt","insertions","deletions","calculateChanges","modelSelectionRange","insertText","viewPos","modelPos","insertedText","lastChangeAt","handle","injectTypingMutationsHandling","_shouldEntireContentBeReplacedWithParagraph","sequence","_replaceEntireContentWithParagraph","limitElementFirstChild","fireViewDeleteEvent","originalEvent","hasWordModifier","inputType","selectionToRemove","deleteCommandParams","domSelectionAfterDeletion","transformations","setTransformation","OperationA","OperationB","transformationFunction","aGroup","noUpdateTransformation","getTransformation","transformSets","operationsA","operationsB","contextFactory","useRelations","forceWeakRemove","setOriginalOperations","originalOperations","nextTransformIndex","nextBaseVersionA","nextBaseVersionB","originalOperationsACount","originalOperationsBCount","opA","indexB","opB","newOpsA","getContext","newOpsB","updateRelation","newOpA","padWithNoOps","brokenOperationsACount","brokenOperationsBCount","updateBaseVersions","_history","_useRelations","_forceWeakRemove","_relations","takeFrom","originalOperation","_setRelation","affectedLeft","affectedRight","side","wasInLeftElement","wasStartBeforeMergedElement","wasEndBeforeMergedElement","wasInRightElement","aIsStrong","aWasUndone","_wasUndone","bWasUndone","abRelation","_getRelation","baRelation","originalOp","wasUndone","isUndoneOperation","origB","undoneB","getUndoneOperation","origA","relationsA","relation","_getComplementaryAttributeOperations","insertOperation","insertValue","_moveTargetIntoMovedRange","_makeMoveOperationsFromRanges","hasSameParentAs","moveOp","_breakRangeByMoveOperation","aNewRange","aToGraveyard","bToGraveyard","aIsWeak","removedRange","mergeInside","mergeSplittingElement","getReversed","aCompB","shouldSpread","rightRange","movesGraveyardElement","gyMoveSource","splitNodesMoveSource","gyMoveTarget","gyMove","splitNodesMoveTargetPath","splitNodesMoveTarget","splitNodesMove","renamePath","splitPath","extraRename","additionalSplit","rangeToMove","gyElementMoved","newParentPosition","newTargetPath","howManyRemoved","aInGraveyard","bInGraveyard","newPositionPath","_stack","_createdBatches","clearStack","docSelection","selectionRanges","transformedRangeGroups","getTransformedByOperations","allRanges","rangeGroup","isRangeContainedByAnyOtherRange","normalizeRanges","batchToUndo","undoingBatch","operationsToUndo","operationToUndo","nextBaseVersion","historyOperations","getOperations","reversedOperations","setOperationAsUndone","joinedRange","getJoined","batchIndex","findIndex","_undo","_restoreSelection","redoingBatch","_batchRegistry","_undoCommand","_redoCommand","isRedoBatch","isUndoBatch","addBatch","undoneBatch","localizedUndoIcon","undo","redo","localizedRedoIcon","_addButton","Icon","reIsDeepProp","reIsPlainProp","isSymbol","memoize","resolver","memoized","cache","Cache","rePropName","reEscapeChar","charCodeAt","number","quote","subString","defaultValue","fromRight","srcIndex","mergeFunc","srcValue","isCommon","isBuff","isTyped","baseMerge","nested","styleProcessor","_styleProcessor","parsedStyles","stylesString","quoteType","propertyNameStart","propertyValueStart","stylesMap","char","parseInlineStyles","toNormalizedForm","propertyDescriptor","getReducedForm","nameOrObject","valueOrObject","toPath","_cleanEmptyObjectsOnPath","_getStylesEntries","pathParts","parentPath","parentObject","_normalizers","_extractors","_reducers","appendStyleValue","normalizer","extractor","normalizedValue","reducer","callbackOrPath","shorthandName","styleNames","_mapStyleNames","stylesObject","nameOrPath","valueToSet","_0x1e0ac3","_0x213a8c","_0xbcd8cc","_0x440f47","_0x2ac0a0","_0xdcdadc","_0x2406","_0x539d15","_0x240659","_0x17f36d","_0x1cec11","_0x1cec","_0x24740a","_0x4e4e3b","_0xf1179a","_0x33a5ed","_0x35db5b","_getValue","_checkEnabled","checkCanBecomeListItem","turnOff","currentIndent","indent","newIndent","listIndent","lowestIndent","_fixType","listType","listItem","firstBlock","startingItem","indentDirection","_indentBy","itemsToChange","lastItem","generateLiInUl","getListItemFillerOffset","createViewListItemElement","viewList","injectViewList","injectedItem","injectedList","refItem","getSiblingListItem","sameIndent","smallerIndent","prevItem","breakContainer","mappedViewAncestor","nestedList","findNestedList","positionAfterUiElements","prevView","breakPosition","mergeViewLists","nextViewList","lastSubChild","modelChild","firstList","secondList","mergeContainers","itemIndent","createUIComponent","buttonView","hasOnlyLists","modelViewInsertion","modelViewChangeType","listName","modelViewMergeAfterChangeType","modelViewSplitOnInsert","removeStart","removeEnd","previousList","mergePos","modelViewMergeAfter","viewItemPrev","viewItemNext","viewModelConverter","getIndent","listItemModel","convertedChild","findNextListItem","viewToModelListItemChildrenConverter","cleanList","isList","cleanListItem","foundList","firstNode","modelToViewPosition","topmostViewList","modelIndentPasteFixer","indentChange","hoistNestedLists","nextIndent","modelRemoveStartPosition","viewRemoveStartPosition","viewRemovedItem","prevModelItem","foo","prevIndent","prevViewList","itemToListHead","applied","_addListToFix","innerItem","listHead","_fixListIndents","_fixListTypes","previousNode","maxIndent","fixBy","typesStack","modelChangePostFixer","registerViewToModelLength","getViewListItemLength","modelNode","modelLength","viewListPrev","modelViewChangeIndent","modelViewRemove","firstPosition","getCommandExecuter","outdent","registerChildCommand","blockAutoformatEditing","callbackOrCommand","blockToFormat","firstNodeRange","inlineAutoformatEditing","testRegexpOrCallback","formatCallback","regExp","testCallback","format","leftDel","rightDel","delStart","delEnd","rangeText","getTextAfterCode","testOutput","rangesToFormat","testOutputToRanges","rangesToRemove","arrays","_addListAutoformats","_addBasicStylesAutoformats","_addHeadingAutoformats","_addBlockQuoteAutoformats","_addCodeBlockAutoformats","boldCallback","getCallbackFunctionForInlineAutoformat","italicCallback","codeCallback","strikethroughCallback","modelElements","level","validRanges","_0x551a","_0x345874","_0x551a69","_0x1a25e9","_0x3e147f","_0x3e14","_0x4cdc07","_0x47b2e4","_0x30bd1a","_0x1fa41d","_0x480d65","_0x1b5761","_0x2ee8cc","_0x4423d3","_0x3ba593","_0x1ad749","_0x46fd44","_0x5a051e","_0x337d4f","_0x462881","alert","_0x1fa377","_0x96d57d","_0x5b2b2e","_0x12cb64","_0x166cad","_0x1dbc01","_0x119149","_0x593aa7","_0x2b18c2","_0x487287","_0x4318b0","_0x297ec3","_0x18f7d9","_0x2f08ac","_0x2d30cd","SetCache","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","objProps","objLength","skipCtor","objCtor","othCtor","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIsEqual","thisArg","nativeMax","otherArgs","nativeNow","now","lastCalled","stamp","remaining","assigner","sources","guard","DataTransfer","nativeDataTransfer","files","kind","getAsFile","getFiles","_native","getData","setData","handleInput","targetRanges","dropRange","dataTransfer","clipboardData","domDoc","clientX","clientY","caretRangeFromPoint","rangeParent","rangeOffset","getDropViewRange","shiftPressed","asPlainText","modelDocument","onCopyCut","_htmlDataProcessor","fullMatch","spaces","dataController","modelFragment","isPlainTextFragment","textAttributes","keyValuePair","isFormatting","setAttributeProperties","fontWeight","symbolToString","baseToString","_bodyCollectionContainer","namespace","xmlns","childElementCount","_components","originalName","_editableElementsMap","ckeditorInstance","editorUI","editingView","lang","_editableElement","_hasExternalElement","_editingView","_updateIsFocusedClasses","updateAfterRender","role","_0x5768ce","_0x2c4498","_0x4f5011","_0x3fe6ed","_0x5df786","_0x526d1d","_0x313b77","_0x2f1e03","_0x42b5ac","_0x42b5","_0x3bb60d","_0x3e8bd4","_0x3e8b","_0x47a58f","_0x562505","_0x2fb42b","inherited","isArg","isType","skipIndexes","objectCreate","assignIn","originalModule","webpackPolyfill","startOfWeek","dirtyDate","weekStartsOn","startOfDay","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","getTimezoneOffset","timestampRight","round","_0x6f4f33","_0x135cc2","_0x6be246","_0x4962fc","_0x437866","_0x43ad5e","_0x218ca8","_0x912ac0","_0x57367d","_0x234937","_0x43b3a4","_0x4a49a9","_0x27d065","_0x3ca6e1","_0x485285","_0x1810dc","g","startOfISOWeek","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","api","default","locals","PendingActions","_actions","hasAny","_0x31839f","_0x188a18","_0x188a","_0x478368","_0x5d43c1","_0x5d43","ot","_0x171656","_0x38b896","_0xdd6bdd","_0x4c1603","_0x358119","_0x13438b","_0x498f0d","_0x191c0c","_0x2c92a6","_0x278082","_0x27763c","_0x50257b","_0x435e27","_0x5e5b","_0x10db86","_0x5e5ba0","_0x18f478","_0x142441","_0x1424","H","_0x3be520","_0x5bd0c1","_0x5c6d1a","_0x30aa30","getDayOfYear","getISOWeek","getISOYear","isValid","enLocale","formatters","getMonth","addLeadingZeros","ceil","getDay","getHours","getMinutes","getSeconds","floor","getMilliseconds","formatTimezone","removeFormattingTokens","delimeter","sign","absOffset","abs","targetLength","dirtyFormatStr","formatStr","localeFormatters","formattingTokensRegExp","formatter","buildFormatFn","formatFn","_0x240efa","_0x127ad9","_0x127a","_0x186151","_0x2a6595","_0x2a65","_0x12e13c","_0xe452fd","_0x2f8c87","_0x153bea","_0x9166","_0x3d3004","_0x9166ad","_0x3afe46","_0x55a31f","_0x55a3","K","_0x58a0b2","_0x217ae8","_0x4bc00b","_0x4c4762","_0x9948e3","_0x35d4","_0x2ced10","_0x35d4d5","_0x3a77e5","_0x23aecf","_0x23ae","_0x52fd3f","_0x3d2c71","_0x4b09f9","_0x1b7790","_0x4fc806","_0x4bcf3c","_0x566756","_0x38fdef","suffix","_0x4011d3","_0x399b7a","_0x262c64","_0x581d38","_0x610cde","_0x586114","_0x33f3b6","_0x3c3cc0","_0x3e4b56","_0x37acac","_0x5b71a2","_0x3a7d40","_0xb21143","_0x51759d","_0x5e216f","_0x509fb7","_0x250794","_0x1486f2","_0xd7c792","_0x36fb27","_0x452b99","_0x270a12","_0x142e56","_0x44f988","_0x6ba498","_0x2cc1b7","_0x4248e6","_0x128b7b","_0x128b","_0x3cf43b","_0xb6646","_0xb664","_0x396be4","_0x1f0447","_0x23679b","_0x28f296","_0x506775","_0x5595d4","_0x27092c","_0x4f0683","_0x208f","_0x5e5b2d","_0x208ff8","_0x492740","_0x5d006c","_0x5d00","_0xd28a13","_0x1113d7","_0x327e88","_0x20add2","_0x4dc079","_0x29ae4c","_0x4796b9","_0x429a27","_0xf29d77","_0x258cf7","_0x1b7237","_0x229e20","_0x28dca0","_0x5c48e9","_0x14b19d","_0x2d0280","_0x3c4522","_0x1381cb","_0x505661","_0x340821","_0x578190","_0x145037","Dt","_0x3b8b60","_0x4bbc80","_0x2fd6aa","_0x3acf2c","_0x48ba03","_0xdc4c9a","_0x2c68b0","_0x53c427","_0x1e9ae7","_0xdbbd40","_0x261abf","_0xf0336b","_0x148a2c","_0x21d0b5","_0x24c320","_0x19d638","_0x14ca36","_0x12ef39","_0x539096","_0x4f8870","_0x16eae5","_0x5149a4","_0x24ca4e","_0x5b8749","_0x1659d9","_0x451913","_0x2610e5","_0x530b2d","_0x42f5b1","_0xa64b6b","_0x436862","_0x3cef63","_0x1e0f96","_0x3f7c38","_0x3c41e8","_0x3bc9a2","_0x21cfce","_0x430e14","_0x52f87c","_0x4ba74f","_0x376412","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","nativeMin","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","startOfYear","differenceInCalendarDays","baseTimezoneOffset","setSeconds","cleanDate","startOfISOYear","fourthOfJanuary","isNaN","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","distanceInWordsLocale","lessThanXSeconds","one","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","localize","addSuffix","comparison","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatterToken","rem100","ordinal","commonFormatterKeys","formatterKeys","formattingTokens","HTMLTextAreaElement","ElementReplacer","_replacedElements","_toolbarConfig","_elementReplacer","replacementElement","editingRoot","setEditableElement","attachDomRoot","_initPlaceholder","_initToolbar","restore","detachDomRoot","stickyPanel","limiterElement","viewportTopOffset","toolbar","fillFromConfig","origin","originKeystrokeHandler","originFocusTracker","beforeFocus","afterBlur","enableToolbarKeyboardFocus","placeholderText","_voiceLabelView","_createVoiceLabel","voiceLabel","toUnit","toPx","_contentPanelPlaceholder","isSticky","_panelRect","_contentPanel","_hasViewportTopOffset","_isStickyToTheLimiter","limiterBottomOffset","marginLeft","_checkIfShouldBeSticky","panelRect","limiterRect","_limiterRect","isActive","_marginLeft","_observerInstance","_createObserver","_element","_callback","_addElementCallback","_deleteElementCallback","_elementCallbacks","_getElementCallbacks","unobserve","ObserverConstructor","ResizeObserver","_previousRects","_periodicCheckTimeout","_checkElementRectsAndExecuteCallback","_startPeriodicCheck","_stopPeriodicCheck","periodicCheck","_hasRectChanged","contentRect","currentRect","previousRect","selectstart","focusLast","getOptimalPosition","positions","limiter","fitInViewport","positionedElementAncestor","offsetParent","getPositionedAncestor","elementRect","bestPositionRect","bestPositionName","bestPosition","elementRectArea","processedPositions","positionData","getPositionNameAndRect","positionName","positionRect","limiterIntersectArea","viewportIntersectArea","limiterViewportIntersectRect","getIntersectionArea","processedPosition","processPositionsToAreas","bestPositionData","getBestOfProcessedPositions","getBestPositionNameAndRect","getVisible","absoluteRectCoordinates","getAbsoluteRectCoordinates","ancestorPosition","ancestorBorderWidths","shiftRectCoordinatesDueToPositionedAncestor","moveTo","maxFitFactor","fitFactor","panelView","isOpen","panelPosition","_getOptimalPosition","_panelPositions","closeDropdown","southEast","southWest","northEast","northWest","defaultPanelPositions","buttonRect","arrowView","_createArrowView","_focusCycler","focusPrevious","focusNext","focusFirst","toggleSwitchView","_createToggleView","createDropdown","ButtonClass","dropdownView","activator","contextElements","composedPath","contextElement","clickOutsideHandler","closeDropdownOnBlur","closeDropdownOnExecute","focusDropdownContentsOnArrows","addDefaultBehavior","addToolbarToDropdown","buttons","toolbarView","itemsView","maxWidth","_behavior","shouldGroupWhenFull","StaticLayout","viewFocusables","viewItemsView","viewFocusTracker","viewLocale","ungroupedItems","groupedItems","groupedItemsDropdown","_createGroupedItemsDropdown","resizeObserver","cachedPadding","shouldUpdateGroupingOnNextResize","_updateFocusCycleableItems","changeData","removedItem","currentIndex","addedItem","_updateGrouping","_enableGroupingOnResize","_enableGroupingOnMaxWidthChange","initialGroupedItemsCount","wereItemsGrouped","_areItemsOverflowing","_groupLastItem","_ungroupFirstItem","lastChildRect","toolbarRect","computedStyle","paddingProperty","previousWidth","dropdown","shouldToolbarGroupWhenFull","sourceElementOrData","updateSourceElement","form","originalSubmit","onSubmit","submit","attachToForm","getInitialData","modelElementToPlainText","defineProperties","characters","_getCharacters","words","_getWords","_outputView","_wordsMatchRegExp","throttle","_refreshStats","onUpdate","wordCountContainer","displayWords","displayCharacters","_0x3e4d","_0x4a7c56","_0x3e4d56","_0x201143","_0x5ee6af","_0x5ee6","_0x450559","_0x155bf7","_0x38c3d0","_0x479795","_0x529470","_0x5d7b8e","_0x484a0b","_0x48b82f","_0x5e2a39","_0x48fbf5","_0x5e0398","_0x1f8763","_0x26ef77","_0x4b28d6","_0x5f143b","_0x36a9b3","_0xd25a0c","_0x2d0bab","_0x161c","_0x37bce1","_0x161c1f","_0x478b30","_0x1db1bc","_0x1db1","_0x13d9","_0x1d68b5","_0x13d90f","_0x18c681","_0x111cb4","_0x111c","_0x416075","_0x5f9a","_0x1c4551","_0x5f9a91","_0x5cbbaf","_0x2e4198","_0x2e41","_0x94440b","_0xf6ebd3","_0x4e6096","_0x2e0c2f","_0x457eab","_0x198e5c","_0x122105","q","_0x5c34b3","_0x11d5a7","_0x19b695","_0x56bfad","_0x46bed9","_0x88df5e","_0x4a9ef9","_0x36805f","_0x12f1f3","_0x4bb284","_0x11ef04","F","_0x4d91ed","_0x10bfb1","_0x302089","_0x2bf6ed","_0x251a1f","_0x5b90be","_0x53a6d4","_0x45dac3","_0x2f8ed6","_0x5722f5","_0x29a4d7","_0x4444c0","_0x217a0f","_0x364fbe","_0x43b484","_0x28836f","_0x138c5b","_0x589561","_0x613754","_0x203bc9","_0x38771a","_0x54eadf","_0x334237","_0x4fe7ee","_0x371923","_0xe76ccd","_0x6bb1a2","_0x166b44","_0x1fe0b6","_0x5a0afd","_0x31c08b","_0x40f9c0","_0x5f4abc","_0x32f6d6","_0x54992a","_0x3f0a68","_0xbb1e95","_0x22f3f7","z","_0x5955e2","_0xd38044","_0x5cbe4d","_0x4eb69f","_0x5f3ecb","_0x465dfe","_0xf044ea","_0xcc0b06","_0x4245ea","_0x31a2a5","_0x3d1804","_0x12e030","_0x3aa2e0","_0x1724fd","_0x5d8ef8","_0x423909","_0x5a28d6","_0x264089","_0x37e59d","_0x4dbf15","_0x408d16","_0x3ae212","_0x47c616","_0x3848ea","_0x8e2a1","_0x39dc81","_0x1892f9","_0x560d32","_0x4b7cfc","_0x376e00","_0x2a022e","_0x357ccf","_0x3ca30c","_0xdf4f6d","_0x1f3008","_0x4578f1","_0x13486a","_0xd836c0","_0x1b80db","_0xc491ef","_0x5aa97f","_0x4f0a7b","_0x1616b3","_0x3b0a82","defaultLimiterElement","isVisible","show","defaultPositions","positionOptions","southArrowNorth","southArrowNorthMiddleWest","southArrowNorthMiddleEast","southArrowNorthWest","southArrowNorthEast","northArrowSouth","northArrowSouthMiddleWest","northArrowSouthMiddleEast","northArrowSouthWest","northArrowSouthEast","optimalPosition","unpin","_pinWhenIsVisibleCallback","_startPinning","_stopPinning","hide","attachTo","getDomElement","scrollTarget","isWithinScrollTarget","isLimiterWithinScrollTarget","getNorthTop","balloonRect","arrowVerticalOffset","getSouthTop","arrowHorizontalOffset","northWestArrowSouthWest","northWestArrowSouthMiddleWest","northWestArrowSouth","northWestArrowSouthMiddleEast","northWestArrowSouthEast","northEastArrowSouthWest","northEastArrowSouthMiddleWest","northEastArrowSouth","northEastArrowSouthMiddleEast","northEastArrowSouthEast","southWestArrowNorthWest","southWestArrowNorthMiddleWest","southWestArrowNorth","southWestArrowNorthMiddleEast","southWestArrowNorthEast","southEastArrowNorthWest","southEastArrowNorthMiddleWest","southEastArrowNorth","southEastArrowNorthMiddleEast","southEastArrowNorthEast","positionLimiter","_viewToStack","_idToStack","_rotatorView","_createRotatorView","_fakePanelsView","_createFakePanelsView","hasView","stackId","_numberOfStacks","_visibleStack","singleViewMode","showStack","_showView","_singleViewMode","visibleView","_showNextStack","hideView","_getStackId","pin","_getBalloonPosition","updatePosition","visibleStack","stacks","nextIndex","isSingleViewMode","numberOfStacks","buttonNextView","buttonPrevView","_showPrevStack","balloonClassName","withArrow","showView","_createButtonView","balloonPanelView","_balloonPanelView","_addPanels","_removePanels","deregisterChild","numberOfPanels","_0x4a80","_0x871f46","_0x4a80f8","_0x40a98c","_0x571902","_0x5719","_0x9bab1d","_0x52c5e3","_0x54b96f","_0x14ca83","_0x220357","_0x4ba00e","_0x3bffb5","_0x1b6293","_0x4ab20e","_0x19e9b4","_0x1aa738","_0x1525ee","_0x325312","_0x394978","_0x2b497a","_0x348e57","_0x3ae1b6","_0x930977","_0x565040","_0x4f57c6","_0x161acf","_0x49ba0f","_0x10d489","_0x3ec8c2","_0xec5cda","_0x270d6c","_0x40e26e","_0x4fc3b4","_0x9192d5","_0x2c3b18","_0x1c423d","_0x3c75f6","_0x24371e","_0x4d3b98","_0x2cfffe","_0x27e8","_0x3735db","_0x27e8c6","_0x3d26fe","_0x39f3b3","_0x39f3","_0x2351ee","_0x2ba03c","_0x421f97","_0x22c1f4","_0x2a77ed","_0x106187","_0x397c44","_0x4d9dce","_0x5bc631","_0x1f6b6e","_0xebfd29","_0x36e418","_0x3f3c6f","_0x3faf16","_0x32d809","_0x1f1cb2","_0xc7ce0c","_0x4b266c","_0x3bae8a","_0x43439d","_0x5611be","_0xaa9176","_0x32da54","_0x29e30b","_0x49e4a5","_0x3e11de","_0xe04009","_0x2199e6","_0x56e95d","_0x3115b2","_0x418e9c","_0x2cfc2a","_0x328591","_0x18581f","_0x1ac646","_0x1f4727","_0x38789c","_0x27d246","_0x15f158","_0x170399","_0x272b79","_0x5c0106","_0x30bdab","_0x2d1586","_0x2cb861","_0x524ca8","_0x26d735","_0x2d55dc","_0x52b934","_0x2258e2","_0x451332","_0x32bf16","_0xa9d295","_0x4f479b","_0x35b9cd","_0x4074a4","_0x358885","_0x5dfcc1","_0x1604c4","_0x216159","_0x34c5fa","_0x179a81","_0x2f2e5b","_0x22add3","_0x3a831c","_0x3c3237","_0x36bed3","_0x2b723c","_0xd3b13e","_0x4994","_0x42ea8b","_0x49941e","_0x4c7ae2","_0x12e253","_0x12e2","_0x1acbca","_0xb7029e","_0x1914c5","_0x185a65","_0x10183d","_0x2f22d5","_0x35d0e6","_0x53a970","_0x2d5caa","_0x18cf1b","_0x1e3119","_0x18768f","_0x16f1","_0x474a0a","_0x16f1df","_0x470e47","_0x1520c7","_0x1520","tt","_0x4c70aa","_0x3e5aad","_0x3d2c5d","_0x4552","_0x210cae","_0x455204","_0x484429","_0x3e4b54","_0x3e4b","_0x1544ef","_0x103ee3","_0xfc1b7c","_0x155400","_0x3a615e","_0x3963da","_0x5ea4","_0x32efdf","_0x5ea448","_0x44a26f","_0x1497aa","_0x1497","_0x1f355f","_0x573576","_0x1b37dd","viewClass","_0x1a70db","spaceBetweenItems","_0x32b810","_0x3a8cfe","_0x386797","_0x1264bb","_0x49cb7a","_0x2b8d3d","_0x178033","_0x5d1a93","_0x37559c","_0x1bc584","_0x42e1f4","_0x4fcb2e","_0x1a519b","_0x23e991","_0x22c2df","_0x3d8400","_0x5de7f3","_0x4b049d","_0x5770e3","_0x131e75","_0x8055fe","_0x3692a2","_0x5c9ffc","_0x1230e8","_0x7fe914","_0x3b13ba","_0x1b6af9","_0x2e9b78","_0x688463","_0x2a1f7c","_0x117040","_0x3b7d3d","_0x10ad95","_0x4f39d7","_0xcde324","_0x6aa7f5","_0x355fdb","_0x100401","_0x13a487","_0x587fae","_0x14b6d4","_0x38fa79","_0x126506","_0x3b0541","O","_0x4b5cb8","_0x1607b9","_0x5c3d13","_0x3760d4","_0x3e16dc","_0x174e12","_0x3ac682","_0x271dad","_0x17090c","_0x57737f","_0x5891f3","_0x5194f2","_0xf1cf42","_0x41a96a","_0x1eceb1","_0x445dbe","_0x2450dc","_0x4f06e9","_0x1ad7a1","_0x3bea67","_0x56d005","_0x20ee","_0x5709d4","_0x20eedb","_0x3cbb63","_0x536e48","_0x536e","_0x2c3b12","_0x33f241","_0xf162ab","_0x45e9c9","_0xa5774a","_0x5d909e","_0x41f5b1","_0x999c","_0x115e7c","_0x999c63","_0x33877c","_0x4ac14a","_0x4ac1","_0x2ced71","_0x33578b","_0x24ab1a","_0x2db4bd","_0x4e41c4","_0x5612","_0x1a9bdc","_0x561202","_0x2ce9bb","_0xa88965","_0xa889","_0x2a1d0b","_0x15680c","_0x287216","_0x1bbb6f","_0x1a00d1","_0x1b2b8e","_0x2cadbd","_0x24d944","_0x2f29ba","_0x40f683","_0x2ff737","_0x27f827","_0xe5cfa2","_0x17c756","_0x1f50e1","_0x2ee39c","_0x24add0","_0x4fb324","_0x557cee","_0x313c86","_0x18afbb","_0xd57ada","_0xba9550","_0x103eaa","_0x34e0bc","_0xe14574","_0x208c22","_0x26d0b4","_0x563e75","_0x2c43ed","_0x549069","_0x57b59d","_0x42613e","_0x45d7e2","_0x1bb3e6","_0xbb0647","_0x1e976c","_0x417bf8","_0xaf3f","_0x837f82","_0x3e5454","_0x5c91bd","_0x593194","_0x4fc273","_0x430264","_0x5ebbe4","_0x476448","_0x4764","_0x521448","_0x3cb825","_0x3cb8","heading","checkCanBecomeHeading","title","option","_addDefaultH1Conversion","enterCommand","localizedTitles","Paragraph","getLocalizedOptions","defaultTitle","dropdownTooltip","titles","itemDefinitions","headingCommand","paragraphCommand","withText","commandValue","listView","listItemView","addListToDropdown","isOn","areEnabled","para","whichModel","removeChildren","oldElement","insertChild","transformListItemLikeElementsIntoLists","itemLikeElements","itemLikeElementsMatcher","itemData","getListItemData","order","findAllItemLikeElements","currentList","currentIndentation","itemLikeElement","isDifferentList","previousItem","currentItem","isNewListNeeded","previousItemLikeElement","indentationDifference","listStyle","listLikeItem","listStyleRegexp","listStyleTypeRegex","listStyleMatch","listStyleType","listStyleTypeMatch","detectListStyle","lastListItem","lastListItemChild","insertNewEmptyList","differentIndentation","listElement","parentList","levelChange","findParentListAtLevel","bulletMatcher","removeBulletElement","transformElementIntoListItem","idMatch","orderMatch","indentMatch","googleDocsMatch","htmlString","removeBoldWrapper","unwrapParagraphInListItem","normalizeSafariSpaceSpans","parseHtml","domParser","normalizedHtml","normalizeSpacing","cleanContentAfterBody","htmlDocument","innerTextLength","innerText","normalizeSpacerunSpans","bodyString","bodyView","documentToView","styleTags","getElementsByTagName","sheet","cssRules","extractStyles","replaceImagesSourceWithBase64","rtfData","upcastWriter","shapesIds","imageElementsMatcher","imgs","shapes","shape","img","removeAllImgElementsRepresentingShapes","shapeElementsMatcher","prevSiblingName","findAllShapesIds","removeAllShapeElements","images","findAllImageElementsWithLocalSource","imageElements","imagesHexSources","newSrc","hexString","hex","replaceImagesFileSourceWithInlineRepresentation","regexPictureHeader","regexPicture","image","imageType","extractImageDataFromRtf","msWordMatch1","msWordMatch2","normalizers","isTransformedWithPasteFromOffice","activeNormalizer","hasMatch","_startListening","_evaluateTextBeforeSelection","rangeBeforeSelection","getLastTextLine","testResult","eventData","reRegExpChar","reHasRegExpChar","TRANSFORMATIONS","copyright","registeredTrademark","trademark","oneHalf","oneThird","twoThirds","oneForth","threeQuarters","lessThanOrEqual","greaterThanOrEqual","notEqual","arrowLeft","arrowRight","horizontalEllipsis","enDash","emDash","quotesPrimary","buildQuotesRegExp","quotesSecondary","quotesPrimaryEnGb","quotesSecondaryEnGb","quotesPrimaryPl","quotesSecondaryPl","TRANSFORMATION_GROUPS","symbols","mathematical","typography","quotes","DEFAULT_TRANSFORMATIONS","include","_enableTransformationWatchers","normalizedTransformations","extra","isNotRemoved","transformation","definitions","definedTransformations","transformationOrGroup","expandGroupsAndRemoveDuplicates","normalizeFrom","normalizeTo","normalizeTransformations","watcher","normalizedTransformation","isInput","replaces","matchedRange","changeIndex","replaceWith","replacePosition","replaceRange","getTextAttributesAfterPosition","quoteCharacter","highlighter","isSameHighlight","highlightStart","highlightEnd","highlightRange","color","_buildDefinition","actionView","_createActionView","_addHighlighterButton","_addRemoveHighlightButton","_addDropdown","getIconForType","button","decorateButton","localized","localizedOptionTitles","startingHighlighter","optionsMap","retVal","splitButtonView","lastExecuted","getActiveOption","whichHighlighter","bindToolbarIconStyleToActiveColor","ariaLabel","Watchdog","crashes","_crashNumberLimit","crashNumberLimit","_now","_minimumNonErrorTimePeriod","minimumNonErrorTimePeriod","_boundErrorHandler","reason","_handleError","_listeners","_restart","creator","_creator","destructor","_destructor","_stopErrorHandling","cb","_shouldReactToError","filename","lineno","colno","causesRestart","_shouldRestart","_fire","_isErrorComingFromThisItem","getSubNodes","excludedProperties","subNodes","shouldNodeBeSkipped","typeOfNode","EventTarget","Event","areConnectedThroughProperties","target1","target2","excludedNodes","structure","subNodes1","subNodes2","Editor","watchdogConfig","_editor","_throttledSave","_save","saveInterval","elementOrData","_destroy","_elementOrData","updatedConfig","_startErrorHandling","_cloneEditorConfiguration","_lastDocumentVersion","_getData","_excludedProps","cloneDeepWith","ActionQueue","_promiseQueue","_onEmptyCallbacks","onEmptyCallback","nonErrorQueue","queueWithAction","Context","ContextWatchdog","_watchdogs","_watchdogConfig","_contextProps","_actionQueue","contextConfig","onEmpty","enqueue","_contextConfig","_create","_getWatchdog","_item","itemConfigurationOrItemConfigurations","itemConfigurations","watchdog","setCreator","_setExcludedProperties","setDestructor","res","rethrowRestartEventOnce","itemIdOrItemIds","itemIds"],"mappings":"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","file":"ckeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CKSource\"] = factory();\n\telse\n\t\troot[\"CKSource\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 252);\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/* globals console */\n\n/**\n * URL to the documentation with error codes.\n */\nexport const DOCUMENTATION_URL =\n\t'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\n\n/**\n * The CKEditor error class.\n *\n * You should throw `CKEditorError` when:\n *\n * * An unexpected situation occurred and the editor (most probably) will not work properly. Such exception will be handled\n * by the {@link module:watchdog/watchdog~Watchdog watchdog} (if it is integrated),\n * * If the editor is incorrectly integrated or the editor API is used in the wrong way. This way you will give\n * feedback to the developer as soon as possible. Keep in mind that for common integration issues which should not\n * stop editor initialization (like missing upload adapter, wrong name of a toolbar component) we use\n * {@link module:utils/ckeditorerror~logWarning `logWarning()`} and\n * {@link module:utils/ckeditorerror~logError `logError()`}\n * to improve developers experience and let them see the a working editor as soon as possible.\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tthrow new CKEditorError( 'plugin-load', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * @extends Error\n */\nexport default class CKEditorError extends Error {\n\t/**\n\t * Creates an instance of the CKEditorError class.\n\t *\n\t * @param {String} errorName The error id in an `error-name` format. A link to this error documentation page will be added\n\t * to the thrown error's `message`.\n\t * @param {Object|null} context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\n\t * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\n\t * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\n\t * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\n\t * to check if the object works as the context.\n\t * @param {Object} [data] Additional data describing the error. A stringified version of this object\n\t * will be appended to the error message, so the data are quickly visible in the console. The original\n\t * data object will also be later available under the {@link #data} property.\n\t */\n\tconstructor( errorName, context, data ) {\n\t\tconst message = `${ errorName }${ ( data ? ` ${ JSON.stringify( data ) }` : '' ) }${ getLinkToDocumentationMessage( errorName ) }`;\n\n\t\tsuper( message );\n\n\t\t/**\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = 'CKEditorError';\n\n\t\t/**\n\t\t * A context of the error by which the Watchdog is able to determine which editor crashed.\n\t\t *\n\t\t * @type {Object|null}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The additional error data passed to the constructor. Undefined if none was passed.\n\t\t *\n\t\t * @type {Object|undefined}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\t/**\n\t * Checks if the error is of the `CKEditorError` type.\n\t */\n\tis( type ) {\n\t\treturn type === 'CKEditorError';\n\t}\n\n\t/**\n\t * A utility that ensures that the thrown error is a {@link module:utils/ckeditorerror~CKEditorError} one.\n\t * It is useful when combined with the {@link module:watchdog/watchdog~Watchdog} feature, which can restart the editor in case\n\t * of a {@link module:utils/ckeditorerror~CKEditorError} error.\n\t *\n\t * @static\n\t * @param {Error} err The error to rethrow.\n\t * @param {Object} context An object connected through properties with the editor instance. This context will be used\n\t * by the watchdog to verify which editor should be restarted.\n\t */\n\tstatic rethrowUnexpectedError( err, context ) {\n\t\tif ( err.is && err.is( 'CKEditorError' ) ) {\n\t\t\tthrow err;\n\t\t}\n\n\t\t/**\n\t\t * An unexpected error occurred inside the CKEditor 5 codebase. This error will look like the original one\n\t\t * to make the debugging easier.\n\t\t *\n\t\t * This error is only useful when the editor is initialized using the {@link module:watchdog/watchdog~Watchdog} feature.\n\t\t * In case of such error (or any {@link module:utils/ckeditorerror~CKEditorError} error) the watchdog should restart the editor.\n\t\t *\n\t\t * @error unexpected-error\n\t\t */\n\t\tconst error = new CKEditorError( err.message, context );\n\n\t\t// Restore the original stack trace to make the error look like the original one.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/5595 for more details.\n\t\terror.stack = err.stack;\n\n\t\tthrow error;\n\t}\n}\n\n/**\n * Logs a warning to the console with a properly formatted message and adds a link to the documentation.\n * Use whenever you want to log a warning to the console.\n *\n *\t\t/**\n *\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n *\t\t * name does not exist, so it was omitted when rendering the toolbar.\n *\t\t *\n *\t\t * @error toolbarview-item-unavailable\n *\t\t * @param {String} name The name of the component.\n *\t\t * /\n *\t\tlogWarning( 'toolbarview-item-unavailable', { name } );\n *\n * See also {@link module:utils/ckeditorerror~CKEditorError} for an explanation when to throw an error and when to log\n * a warning or an error to the console.\n *\n * @param {String} errorName Error name to be logged.\n * @param {Object} [data] Additional data to be logged.\n * @returns {String}\n */\nexport function logWarning( errorName, data ) {\n\tconsole.warn( ...formatConsoleArguments( errorName, data ) );\n}\n\n/**\n * Logs an error to the console with properly formatted message and adds a link to the documentation.\n * Use whenever you want to log a error to the console.\n *\n *\t\t/**\n *\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n *\t\t * name does not exist, so it was omitted when rendering the toolbar.\n *\t\t *\n *\t\t * @error toolbarview-item-unavailable\n *\t\t * @param {String} name The name of the component.\n *\t\t * /\n *\t\t logError( 'toolbarview-item-unavailable', { name } );\n *\n * **Note**: In most cases logging a warning using {@link module:utils/ckeditorerror~logWarning} is enough.\n *\n * See also {@link module:utils/ckeditorerror~CKEditorError} for an explanation when to use each method.\n *\n * @param {String} errorName Error name to be logged.\n * @param {Object} [data] Additional data to be logged.\n * @returns {String}\n */\nexport function logError( errorName, data ) {\n\tconsole.error( ...formatConsoleArguments( errorName, data ) );\n}\n\nfunction getLinkToDocumentationMessage( errorName ) {\n\treturn `\\nRead more: ${ DOCUMENTATION_URL }#error-${ errorName }`;\n}\n\nfunction formatConsoleArguments( errorName, data ) {\n\tconst documentationMessage = getLinkToDocumentationMessage( errorName );\n\n\treturn data ? [ errorName, data, documentationMessage ] : [ errorName, documentationMessage ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\n/**\n * Represents a range in the model tree.\n *\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\n * positions.\n *\n * You can create range instances via its constructor or the `createRange*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.start = Position._createAt( start );\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.end = end ? Position._createAt( end ) : Position._createAt( start );\n\n\t\t// If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\n\t\t// In other case, make the boundaries stick to the \"inside\" of the range.\n\t\tthis.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\n\t\tthis.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/model/position~Position positions},\n\t * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n\t * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n\t *\n\t * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n\t * and `ignoreElementEnd` option set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is if {@link #start} and\n\t * {@link #end} positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link #start} position and\n\t * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\tconst startParentPath = this.start.getParentPath();\n\t\tconst endParentPath = this.end.getParentPath();\n\n\t\treturn compareArrays( startParentPath, endParentPath ) == 'same';\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n\t * in this range,`false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link ~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n\t */\n\tcontainsRange( otherRange, loose = false ) {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Checks whether given {@link module:engine/model/item~Item} is inside this range.\n\t *\n\t * @param {module:engine/model/item~Item} item Model item to check.\n\t */\n\tcontainsItem( item ) {\n\t\tconst pos = Position._createBefore( item );\n\n\t\treturn this.containsPosition( pos ) || this.start.isEqual( pos );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trange.is( 'range' ); // -> true\n\t *\t\trange.is( 'model:range' ); // -> true\n\t *\n\t *\t\trange.is( 'view:range' ); // -> false\n\t *\t\trange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'range' || type === 'model:range';\n\t}\n\n\t/**\n\t * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end );\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with given range.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n\t * Returned array contains zero, one or two {@link ~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( new Range( this.start, this.end ) );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n\t *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a range created by joining this {@link ~Range range} with the given {@link ~Range range}.\n\t * If ranges have no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 1 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2 ] )\n \t *\t\t);\n\t *\t\tlet transformed = range.getJoined( otherRange ); // null - ranges have no common part\n\t *\n\t *\t\totherRange = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 3 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 5 ] )\n\t *\t\t);\n\t *\t\ttransformed = range.getJoined( otherRange ); // range from [ 2, 7 ] to [ 5 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to be joined.\n\t * @param {Boolean} [loose=false] Whether the intersection check is loose or strict. If the check is strict (`false`),\n\t * ranges are tested for intersection or whether start/end positions are equal. If the check is loose (`true`),\n\t * compared range is also checked if it's {@link module:engine/model/position~Position#isTouching touching} current range.\n\t * @returns {module:engine/model/range~Range|null} A sum of given ranges or `null` if ranges have no common part.\n\t */\n\tgetJoined( otherRange, loose = false ) {\n\t\tlet shouldJoin = this.isIntersecting( otherRange );\n\n\t\tif ( !shouldJoin ) {\n\t\t\tif ( this.start.isBefore( otherRange.start ) ) {\n\t\t\t\tshouldJoin = loose ? this.end.isTouching( otherRange.start ) : this.end.isEqual( otherRange.start );\n\t\t\t} else {\n\t\t\t\tshouldJoin = loose ? otherRange.end.isTouching( this.start ) : otherRange.end.isEqual( this.start );\n\t\t\t}\n\t\t}\n\n\t\tif ( !shouldJoin ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet startPosition = this.start;\n\t\tlet endPosition = this.end;\n\n\t\tif ( otherRange.start.isBefore( startPosition ) ) {\n\t\t\tstartPosition = otherRange.start;\n\t\t}\n\n\t\tif ( otherRange.end.isAfter( endPosition ) ) {\n\t\t\tendPosition = otherRange.end;\n\t\t}\n\n\t\treturn new Range( startPosition, endPosition );\n\t}\n\n\t/**\n\t * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n\t *\n\t * See an example of a model structure (`[` and `]` are range boundaries):\n\t *\n\t *\t\troot                                                            root\n\t *\t\t |- element DIV                         DIV             P2              P3             DIV\n\t *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n\t *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n\t *\t\t |   |- element P1\n\t *\t\t |   |   |- \"lorem\"                                              ||\n\t *\t\t |- element P2                                                   ||\n\t *\t\t |   |- \"foo\"                                                    VV\n\t *\t\t |- element P3\n\t *\t\t |   |- \"bar\"                                                   root\n\t *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n\t *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n\t *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n\t *\t\t |   |- element P4\n\t *\t\t |   |   |- \"ipsum\"\n\t *\n\t * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n\t * We are looking for minimal set of flat ranges that contains the same nodes.\n\t *\n\t * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n\t *\n\t *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n\t *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n\t *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n\t *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n\t *\n\t * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n\t * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n\t * were omitted. Only their parts that were wholly in the range were returned.\n\t *\n\t * **Note:** this method is not returning flat ranges that contain no nodes.\n\t *\n\t * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n\t */\n\tgetMinimalFlatRanges() {\n\t\tconst ranges = [];\n\t\tconst diffAt = this.start.getCommonPath( this.end ).length;\n\n\t\tconst pos = Position._createAt( this.start );\n\t\tlet posParent = pos.parent;\n\n\t\t// Go up.\n\t\twhile ( pos.path.length > diffAt + 1 ) {\n\t\t\tconst howMany = posParent.maxOffset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.path = pos.path.slice( 0, -1 );\n\t\t\tpos.offset++;\n\t\t\tposParent = posParent.parent;\n\t\t}\n\n\t\t// Go down.\n\t\twhile ( pos.path.length <= this.end.path.length ) {\n\t\t\tconst offset = this.end.path[ pos.path.length - 1 ];\n\t\t\tconst howMany = offset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.offset = offset;\n\t\t\tpos.path.push( 0 );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * For example, to iterate over all items in the entire document root:\n\t *\n\t *\t\t// Create a range spanning over the entire root content:\n\t *\t\tconst range = editor.model.createRangeIn( editor.model.document.getRoot() );\n\t *\n\t *\t\t// Iterate over all items in this range:\n\t *\t\tfor ( const value of range.getWalker() ) {\n\t *\t\t\tconsole.log( value.item );\n\t *\t\t}\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @param {module:engine/model/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n\t * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by given `operation`.\n\t *\n\t * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\n\t * moved to a different part of document tree). For this reason, an array is returned by this method and it\n\t * may contain one or more `Range` instances.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByOperation( operation ) {\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert':\n\t\t\t\treturn this._getTransformedByInsertOperation( operation );\n\t\t\tcase 'move':\n\t\t\tcase 'remove':\n\t\t\tcase 'reinsert':\n\t\t\t\treturn this._getTransformedByMoveOperation( operation );\n\t\t\tcase 'split':\n\t\t\t\treturn [ this._getTransformedBySplitOperation( operation ) ];\n\t\t\tcase 'merge':\n\t\t\t\treturn [ this._getTransformedByMergeOperation( operation ) ];\n\t\t}\n\n\t\treturn [ new Range( this.start, this.end ) ];\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by multiple `operations`.\n\t *\n\t * @see ~Range#getTransformedByOperation\n\t * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByOperations( operations ) {\n\t\tconst ranges = [ new Range( this.start, this.end ) ];\n\n\t\tfor ( const operation of operations ) {\n\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\t\tconst result = ranges[ i ].getTransformedByOperation( operation );\n\n\t\t\t\tranges.splice( i, 1, ...result );\n\t\t\t\ti += result.length - 1;\n\t\t\t}\n\t\t}\n\n\t\t// It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n\t\t// \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n\t\t// because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n\t\t// are inside other ranges and we simply remove them.\n\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\tconst range = ranges[ i ];\n\n\t\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t\tconst next = ranges[ j ];\n\n\t\t\t\tif ( range.containsRange( next ) || next.containsRange( range ) || range.isEqual( next ) ) {\n\t\t\t\t\tranges.splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of the range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor() {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element Element} contained by the range.\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\n\t * at the same time.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetContainedElement() {\n\t\tif ( this.isCollapsed ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nodeAfterStart = this.start.nodeAfter;\n\t\tconst nodeBeforeEnd = this.end.nodeBefore;\n\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\n\t\t\treturn nodeAfterStart;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts `Range` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\tstart: this.start.toJSON(),\n\t\t\tend: this.end.toJSON()\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new range that is equal to current range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by insert operation.\n\t *\n\t * One or more ranges may be returned as a result of this transformation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByInsertOperation( operation, spread = false ) {\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany, spread );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by move operation.\n\t *\n\t * One or more ranges may be returned as a result of this transformation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByMoveOperation( operation, spread = false ) {\n\t\tconst sourcePosition = operation.sourcePosition;\n\t\tconst howMany = operation.howMany;\n\t\tconst targetPosition = operation.targetPosition;\n\n\t\treturn this._getTransformedByMove( sourcePosition, targetPosition, howMany, spread );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by split operation.\n\t *\n\t * Always one range is returned. The transformation is done in a way to not break the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getTransformedBySplitOperation( operation ) {\n\t\tconst start = this.start._getTransformedBySplitOperation( operation );\n\t\tlet end = this.end._getTransformedBySplitOperation( operation );\n\n\t\tif ( this.end.isEqual( operation.insertionPosition ) ) {\n\t\t\tend = this.end.getShiftedBy( 1 );\n\t\t}\n\n\t\t// Below may happen when range contains graveyard element used by split operation.\n\t\tif ( start.root != end.root ) {\n\t\t\t// End position was next to the moved graveyard element and was moved with it.\n\t\t\t// Fix it by using old `end` which has proper `root`.\n\t\t\tend = this.end.getShiftedBy( -1 );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by merge operation.\n\t *\n\t * Always one range is returned. The transformation is done in a way to not break the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getTransformedByMergeOperation( operation ) {\n\t\t// Special case when the marker is set on \"the closing tag\" of an element. Marker can be set like that during\n\t\t// transformations, especially when a content of a few block elements were removed. For example:\n\t\t//\n\t\t// {} is the transformed range, [] is the removed range.\n\t\t// <p>F[o{o</p><p>B}ar</p><p>Xy]z</p>\n\t\t//\n\t\t// <p>Fo{o</p><p>B}ar</p><p>z</p>\n\t\t// <p>F{</p><p>B}ar</p><p>z</p>\n\t\t// <p>F{</p>}<p>z</p>\n\t\t// <p>F{}z</p>\n\t\t//\n\t\tif ( this.start.isEqual( operation.targetPosition ) && this.end.isEqual( operation.deletionPosition ) ) {\n\t\t\treturn new Range( this.start );\n\t\t}\n\n\t\tlet start = this.start._getTransformedByMergeOperation( operation );\n\t\tlet end = this.end._getTransformedByMergeOperation( operation );\n\n\t\tif ( start.root != end.root ) {\n\t\t\t// This happens when the end position was next to the merged (deleted) element.\n\t\t\t// Then, the end position was moved to the graveyard root. In this case we need to fix\n\t\t\t// the range cause its boundaries would be in different roots.\n\t\t\tend = this.end.getShiftedBy( -1 );\n\t\t}\n\n\t\tif ( start.isAfter( end ) ) {\n\t\t\t// This happens in three following cases:\n\t\t\t//\n\t\t\t// Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\n\t\t\t//         This means that start can be moved before the end of the range.\n\t\t\t//\n\t\t\t// Before: <p>a{a</p><p>b}b</p><p>cc</p>\n\t\t\t// Merge:  <p>b}b</p><p>cca{a</p>\n\t\t\t// Fix:    <p>{b}b</p><p>ccaa</p>\n\t\t\t//\n\t\t\t// Case 2: Range start is before merged node but not directly.\n\t\t\t//         Result should include all nodes that were in the original range.\n\t\t\t//\n\t\t\t// Before: <p>aa</p>{<p>cc</p><p>b}b</p>\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\n\t\t\t// Fix:    <p>aa{bb</p><p>cc</p>}\n\t\t\t//\n\t\t\t//         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\n\t\t\t//\n\t\t\t// Case 3: Range start is directly before merged node.\n\t\t\t//         Resulting range should include only nodes from the merged element:\n\t\t\t//\n\t\t\t// Before: <p>aa</p>{<p>b}b</p><p>cc</p>\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\n\t\t\t// Fix:    <p>aa{b}b</p><p>cc</p>\n\t\t\t//\n\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\n\t\t\t\t// Case 1.\n\t\t\t\tstart = Position._createAt( end );\n\t\t\t\tstart.offset = 0;\n\t\t\t} else {\n\t\t\t\tif ( !operation.deletionPosition.isEqual( start ) ) {\n\t\t\t\t\t// Case 2.\n\t\t\t\t\tend = operation.deletionPosition;\n\t\t\t\t}\n\n\t\t\t\t// In both case 2 and 3 start is at the end of the merge-to element.\n\t\t\t\tstart = operation.targetPosition;\n\t\t\t}\n\n\t\t\treturn new Range( start, end );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n\t * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\n\t *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\n\t *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\n\t *\t\t// transformed array has one range, which is equal to original range\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n\t * was inside the range. Defaults to `false`.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany, spread = false ) {\n\t\tif ( spread && this.containsPosition( insertPosition ) ) {\n\t\t\t// Range has to be spread. The first part is from original start to the spread point.\n\t\t\t// The other part is from spread point to the original end, but transformed by\n\t\t\t// insertion to reflect insertion changes.\n\n\t\t\treturn [\n\t\t\t\tnew Range( this.start, insertPosition ),\n\t\t\t\tnew Range(\n\t\t\t\t\tinsertPosition.getShiftedBy( howMany ),\n\t\t\t\t\tthis.end._getTransformedByInsertion( insertPosition, howMany )\n\t\t\t\t)\n\t\t\t];\n\t\t} else {\n\t\t\tconst range = new Range( this.start, this.end );\n\n\t\t\trange.start = range.start._getTransformedByInsertion( insertPosition, howMany );\n\t\t\trange.end = range.end._getTransformedByInsertion( insertPosition, howMany );\n\n\t\t\treturn [ range ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n\t * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n\t * @param {Number} howMany How many nodes are moved.\n\t * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany, spread = false ) {\n\t\t// Special case for transforming a collapsed range. Just transform it like a position.\n\t\tif ( this.isCollapsed ) {\n\t\t\tconst newPos = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\n\t\t\treturn [ new Range( newPos ) ];\n\t\t}\n\n\t\t// Special case for transformation when a part of the range is moved towards the range.\n\t\t//\n\t\t// Examples:\n\t\t//\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\n\t\t// <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\n\t\t//\n\t\t// Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\n\t\t//\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\n\t\t//\n\t\t// This special case is applied only if the range is to be kept together (not spread).\n\t\tconst moveRange = Range._createFromPositionAndShift( sourcePosition, howMany );\n\t\tconst insertPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( this.containsPosition( targetPosition ) && !spread ) {\n\t\t\tif ( moveRange.containsPosition( this.start ) || moveRange.containsPosition( this.end ) ) {\n\t\t\t\tconst start = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\t\t\t\tconst end = this.end._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\n\t\t\t\treturn [ new Range( start, end ) ];\n\t\t\t}\n\t\t}\n\n\t\t// Default algorithm.\n\t\tlet result;\n\n\t\tconst differenceSet = this.getDifference( moveRange );\n\t\tlet difference = null;\n\n\t\tconst common = this.getIntersection( moveRange );\n\n\t\tif ( differenceSet.length == 1 ) {\n\t\t\t// `moveRange` and this range may intersect but may be separate.\n\t\t\tdifference = new Range(\n\t\t\t\tdifferenceSet[ 0 ].start._getTransformedByDeletion( sourcePosition, howMany ),\n\t\t\t\tdifferenceSet[ 0 ].end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} else if ( differenceSet.length == 2 ) {\n\t\t\t// `moveRange` is inside this range.\n\t\t\tdifference = new Range(\n\t\t\t\tthis.start,\n\t\t\t\tthis.end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} // else, `moveRange` contains this range.\n\n\t\tif ( difference ) {\n\t\t\tresult = difference._getTransformedByInsertion( insertPosition, howMany, common !== null || spread );\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\n\t\tif ( common ) {\n\t\t\tconst transformedCommon = new Range(\n\t\t\t\tcommon.start._getCombined( moveRange.start, insertPosition ),\n\t\t\t\tcommon.end._getCombined( moveRange.start, insertPosition )\n\t\t\t);\n\n\t\t\tif ( result.length == 2 ) {\n\t\t\t\tresult.splice( 1, 0, transformedCommon );\n\t\t\t} else {\n\t\t\t\tresult.push( transformedCommon );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\n\t *\n\t * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\n\t *\n\t * If the deleted range contains transformed range, `null` will be returned.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/range~Range|null} Result of the transformation.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tlet newStart = this.start._getTransformedByDeletion( deletePosition, howMany );\n\t\tlet newEnd = this.end._getTransformedByDeletion( deletePosition, howMany );\n\n\t\tif ( newStart == null && newEnd == null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( newStart == null ) {\n\t\t\tnewStart = deletePosition;\n\t\t}\n\n\t\tif ( newEnd == null ) {\n\t\t\tnewEnd = deletePosition;\n\t\t}\n\n\t\treturn new Range( newStart, newEnd );\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createIn( element ) {\n\t\treturn new this( Position._createAt( element, 0 ), Position._createAt( element, element.maxOffset ) );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createOn( item ) {\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), item.offsetSize );\n\t}\n\n\t/**\n\t * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n\t * Passed ranges must not have common parts.\n\t *\n\t * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n\t * the reference range, they get combined into one range.\n\t *\n\t *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n\t *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n\t *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n\t *\t                                           [  ]  // The result of the function if the last range was a reference range.\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n\t * @returns {module:engine/model/range~Range} Combined range.\n\t */\n\tstatic _createFromRanges( ranges ) {\n\t\tif ( ranges.length === 0 ) {\n\t\t\t/**\n\t\t\t * At least one range has to be passed to\n\t\t\t * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\n\t\t\t *\n\t\t\t * @error range-create-from-ranges-empty-array\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'range-create-from-ranges-empty-array',\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if ( ranges.length == 1 ) {\n\t\t\treturn ranges[ 0 ].clone();\n\t\t}\n\n\t\t// 1. Set the first range in `ranges` array as a reference range.\n\t\t// If we are going to return just a one range, one of the ranges need to be the reference one.\n\t\t// Other ranges will be stuck to that range, if possible.\n\t\tconst ref = ranges[ 0 ];\n\n\t\t// 2. Sort all the ranges so it's easier to process them.\n\t\tranges.sort( ( a, b ) => {\n\t\t\treturn a.start.isAfter( b.start ) ? 1 : -1;\n\t\t} );\n\n\t\t// 3. Check at which index the reference range is now.\n\t\tconst refIndex = ranges.indexOf( ref );\n\n\t\t// 4. At this moment we don't need the original range.\n\t\t// We are going to modify the result and we need to return a new instance of Range.\n\t\t// We have to create a copy of the reference range.\n\t\tconst result = new this( ref.start, ref.end );\n\n\t\t// 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tif ( refIndex > 0 ) {\n\t\t\tfor ( let i = refIndex - 1; true; i++ ) {\n\t\t\t\tif ( ranges[ i ].end.isEqual( result.start ) ) {\n\t\t\t\t\tresult.start = Position._createAt( ranges[ i ].start );\n\t\t\t\t} else {\n\t\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tfor ( let i = refIndex + 1; i < ranges.length; i++ ) {\n\t\t\tif ( ranges[ i ].start.isEqual( result.end ) ) {\n\t\t\t\tresult.end = Position._createAt( ranges[ i ].end );\n\t\t\t} else {\n\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Range`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n\t * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\treturn new this( Position.fromJSON( json.start, doc ), Position.fromJSON( json.end, doc ) );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.start.path.join( ', ' ) } ] - [ ${ this.end.path.join( ', ' ) } ]`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/position\n */\n\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Represents a position in the model tree.\n *\n * A position is represented by its {@link module:engine/model/position~Position#root} and\n * a {@link module:engine/model/position~Position#path} in that root.\n *\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n *\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\n *\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\n * This requirement is important for operational transformation algorithms.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in the {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after the document has changed.\n *\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t */\n\tconstructor( root, path, stickiness = 'toNone' ) {\n\t\tif ( !root.is( 'element' ) && !root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * Position root is invalid.\n\t\t\t *\n\t\t\t * Positions can only be anchored in elements or document fragments.\n\t\t\t *\n\t\t\t * @error model-position-root-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-root-invalid',\n\t\t\t\troot\n\t\t\t);\n\t\t}\n\n\t\tif ( !( path instanceof Array ) || path.length === 0 ) {\n\t\t\t/**\n\t\t\t * Position path must be an array with at least one item.\n\t\t\t *\n\t\t\t * @error model-position-path-incorrect-format\n\t\t\t * @param path\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-path-incorrect-format',\n\t\t\t\troot,\n\t\t\t\t{ path }\n\t\t\t);\n\t\t}\n\n\t\t// Normalize the root and path when element (not root) is passed.\n\t\tif ( root.is( 'rootElement' ) ) {\n\t\t\tpath = path.slice();\n\t\t} else {\n\t\t\tpath = [ ...root.getPath(), ...path ];\n\t\t\troot = root.root;\n\t\t}\n\n\t\t/**\n\t\t * Root of the position path.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/position~Position#root\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Position of the node in the tree. **Path contains offsets, not indexes.**\n\t\t *\n\t\t * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n\t\t * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n\t\t * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n\t\t * down to the position offset in it's parent.\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n\t\t *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n\t\t *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n\t\t *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n\t\t *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n\t\t *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n\t\t *\n\t\t * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n\t\t * greater than `1` you can place position offset between their start and end:\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P\n\t\t *\t\t  |- UL\n\t\t *\t\t     |- LI\n\t\t *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n\t\t *\t\t     |- LI\n\t\t *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Number>} module:engine/model/position~Position#path\n\t\t */\n\t\tthis.path = path;\n\n\t\t/**\n\t\t * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\n\t\t *\n\t\t * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\n\t\t */\n\t\tthis.stickiness = stickiness;\n\t}\n\n\t/**\n\t * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n\t * to the last item in position {@link module:engine/model/position~Position#path path}.\n\t *\n\t * @type {Number}\n\t */\n\tget offset() {\n\t\treturn this.path[ this.path.length - 1 ];\n\t}\n\n\tset offset( newOffset ) {\n\t\tthis.path[ this.path.length - 1 ] = newOffset;\n\t}\n\n\t/**\n\t * Parent element of this position.\n\t *\n\t * Keep in mind that `parent` value is calculated when the property is accessed.\n\t * If {@link module:engine/model/position~Position#path position path}\n\t * leads to a non-existing element, `parent` property will throw error.\n\t *\n\t * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget parent() {\n\t\tlet parent = this.root;\n\n\t\tfor ( let i = 0; i < this.path.length - 1; i++ ) {\n\t\t\tparent = parent.getChild( parent.offsetToIndex( this.path[ i ] ) );\n\n\t\t\tif ( !parent ) {\n\t\t\t\t/**\n\t\t\t\t * The position's path is incorrect. This means that a position does not point to\n\t\t\t\t * a correct place in the tree and hence, some of its methods and getters cannot work correctly.\n\t\t\t\t *\n\t\t\t\t * **Note**: Unlike DOM and view positions, in the model, the\n\t\t\t\t * {@link module:engine/model/position~Position#parent position's parent} is always an element or a document fragment.\n\t\t\t\t * The last offset in the {@link module:engine/model/position~Position#path position's path} is the point in this element\n\t\t\t\t * where this position points.\n\t\t\t\t *\n\t\t\t\t * Read more about model positions and offsets in\n\t\t\t\t * the {@glink framework/guides/architecture/editing-engine#indexes-and-offsets Editing engine architecture guide}.\n\t\t\t\t *\n\t\t\t\t * @error model-position-path-incorrect\n\t\t\t\t * @param {module:engine/model/position~Position} position The incorrect position.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'model-position-path-incorrect', this, { position: this } );\n\t\t\t}\n\t\t}\n\n\t\tif ( parent.is( '$text' ) ) {\n\t\t\tthrow new CKEditorError( 'model-position-path-incorrect', this, { position: this } );\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n\t * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n\t * in text node, position index is equal to the index of that text node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget index() {\n\t\treturn this.parent.offsetToIndex( this.offset );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n\t * position is not in a text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/text~Text|null}\n\t */\n\tget textNode() {\n\t\treturn getTextNodeAtPosition( this, this.parent );\n\t}\n\n\t/**\n\t * Node directly after this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\t// Cache the parent and reuse for performance reasons. See #6579 and #6582.\n\t\tconst parent = this.parent;\n\n\t\treturn getNodeAfterPosition( this, parent, getTextNodeAtPosition( this, parent ) );\n\t}\n\n\t/**\n\t * Node directly before this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nodeBefore() {\n\t\t// Cache the parent and reuse for performance reasons. See #6579 and #6582.\n\t\tconst parent = this.parent;\n\n\t\treturn getNodeBeforePosition( this, parent, getTextNodeAtPosition( this, parent ) );\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\treturn this.offset == this.parent.maxOffset;\n\t}\n\n\t/**\n\t * Checks whether this position is before or after given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/model/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root != otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tconst result = compareArrays( this.path, otherPosition.path );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'same':\n\t\t\t\treturn 'same';\n\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn this.path[ result ] < otherPosition.path[ result ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n\t * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n\t * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => false );\n\t * \t\t// Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n\t * but without the last item.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @returns {Array.<Number>} Path to the parent.\n\t */\n\tgetParentPath() {\n\t\treturn this.path.slice( 0, -1 );\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and its ancestors.\n\t *\n\t * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tconst parent = this.parent;\n\n\t\tif ( parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ parent ];\n\t\t} else {\n\t\t\treturn parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the parent element of the given name. Returns null if the position is not inside the desired parent.\n\t *\n\t * @param {String} parentName The name of the parent element to find.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tfindAncestor( parentName ) {\n\t\tconst parent = this.parent;\n\n\t\tif ( parent.is( 'element' ) ) {\n\t\t\treturn parent.findAncestor( parentName, { includeSelf: true } );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n\t * of these two paths must be identical.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {Array.<Number>} The common path.\n\t */\n\tgetCommonPath( position ) {\n\t\tif ( this.root != position.root ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// We find on which tree-level start and end have the lowest common ancestor\n\t\tconst cmp = compareArrays( this.path, position.path );\n\t\t// If comparison returned string it means that arrays are same.\n\t\tconst diffAt = ( typeof cmp == 'string' ) ? Math.min( this.path.length, position.path.length ) : cmp;\n\n\t\treturn this.path.slice( 0, diffAt );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( position ) {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n\t * is shifted by `shift` value (can be a negative value).\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {Number} shift Offset shift. Can be a negative value.\n\t * @returns {module:engine/model/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = this.clone();\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Checks whether this position is after given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @see module:engine/model/position~Position#isBefore\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before given position.\n\t *\n\t * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n\t * be `true` if positions are in different roots and you might not expect this. You should probably use\n\t * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n\t * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n\t *\n\t *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do A.\n\t *\t\t} else {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * or, if you have only one if-branch:\n\t *\n\t *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * rather than:\n\t *\n\t *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t} else {\n\t *\t\t\t// do A.\n\t *\t\t}\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is equal to given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'same';\n\t}\n\n\t/**\n\t * Checks whether this position is touching given position. Positions touch when there are no text nodes\n\t * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n\t * they are very similar or even indistinguishable.\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions touch.\n\t */\n\tisTouching( otherPosition ) {\n\t\tlet left = null;\n\t\tlet right = null;\n\t\tconst compare = this.compareWith( otherPosition );\n\n\t\tswitch ( compare ) {\n\t\t\tcase 'same':\n\t\t\t\treturn true;\n\n\t\t\tcase 'before':\n\t\t\t\tleft = Position._createAt( this );\n\t\t\t\tright = Position._createAt( otherPosition );\n\t\t\t\tbreak;\n\n\t\t\tcase 'after':\n\t\t\t\tleft = Position._createAt( otherPosition );\n\t\t\t\tright = Position._createAt( this );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\n\t\t// Cached for optimization purposes.\n\t\tlet leftParent = left.parent;\n\n\t\twhile ( left.path.length + right.path.length ) {\n\t\t\tif ( left.isEqual( right ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( left.path.length > right.path.length ) {\n\t\t\t\tif ( left.offset !== leftParent.maxOffset ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tleft.path = left.path.slice( 0, -1 );\n\t\t\t\tleftParent = leftParent.parent;\n\t\t\t\tleft.offset++;\n\t\t\t} else {\n\t\t\t\tif ( right.offset !== 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tright.path = right.path.slice( 0, -1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tposition.is( 'position' ); // -> true\n\t *\t\tposition.is( 'model:position' ); // -> true\n\t *\n\t *\t\tposition.is( 'view:position' ); // -> false\n\t *\t\tposition.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'position' || type === 'model:position';\n\t}\n\n\t/**\n\t * Checks if two positions are in the same parent.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} position Position to compare with.\n\t * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\n\t */\n\thasSameParentAs( position ) {\n\t\tif ( this.root !== position.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisParentPath = this.getParentPath();\n\t\tconst posParentPath = position.getParentPath();\n\n\t\treturn compareArrays( thisParentPath, posParentPath ) == 'same';\n\t}\n\n\t/**\n\t * Returns a copy of this position that is transformed by given `operation`.\n\t *\n\t * The new position's parameters are updated accordingly to the effect of the `operation`.\n\t *\n\t * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\n\t * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\tgetTransformedByOperation( operation ) {\n\t\tlet result;\n\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert':\n\t\t\t\tresult = this._getTransformedByInsertOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'move':\n\t\t\tcase 'remove':\n\t\t\tcase 'reinsert':\n\t\t\t\tresult = this._getTransformedByMoveOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'split':\n\t\t\t\tresult = this._getTransformedBySplitOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'merge':\n\t\t\t\tresult = this._getTransformedByMergeOperation( operation );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = Position._createAt( this );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by an insert operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByInsertOperation( operation ) {\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany );\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by a move operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByMoveOperation( operation ) {\n\t\treturn this._getTransformedByMove( operation.sourcePosition, operation.targetPosition, operation.howMany );\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by a split operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedBySplitOperation( operation ) {\n\t\tconst movedRange = operation.movedRange;\n\n\t\tconst isContained = movedRange.containsPosition( this ) ||\n\t\t\t( movedRange.start.isEqual( this ) && this.stickiness == 'toNext' );\n\n\t\tif ( isContained ) {\n\t\t\treturn this._getCombined( operation.splitPosition, operation.moveTargetPosition );\n\t\t} else {\n\t\t\tif ( operation.graveyardPosition ) {\n\t\t\t\treturn this._getTransformedByMove( operation.graveyardPosition, operation.insertionPosition, 1 );\n\t\t\t} else {\n\t\t\t\treturn this._getTransformedByInsertion( operation.insertionPosition, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by merge operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByMergeOperation( operation ) {\n\t\tconst movedRange = operation.movedRange;\n\t\tconst isContained = movedRange.containsPosition( this ) || movedRange.start.isEqual( this );\n\n\t\tlet pos;\n\n\t\tif ( isContained ) {\n\t\t\tpos = this._getCombined( operation.sourcePosition, operation.targetPosition );\n\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\n\t\t\t\t// Above happens during OT when the merged element is moved before the merged-to element.\n\t\t\t\tpos = pos._getTransformedByDeletion( operation.deletionPosition, 1 );\n\t\t\t}\n\t\t} else if ( this.isEqual( operation.deletionPosition ) ) {\n\t\t\tpos = Position._createAt( operation.deletionPosition );\n\t\t} else {\n\t\t\tpos = this._getTransformedByMove( operation.deletionPosition, operation.graveyardPosition, 1 );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n\t * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tconst transformed = Position._createAt( this );\n\n\t\t// This position can't be affected if deletion was in a different root.\n\t\tif ( this.root != deletePosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are removed from the node that is pointed by this position...\n\t\t\tif ( deletePosition.offset < this.offset ) {\n\t\t\t\t// And are removed from before an offset of that position...\n\t\t\t\tif ( deletePosition.offset + howMany > this.offset ) {\n\t\t\t\t\t// Position is in removed range, it's no longer in the tree.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Decrement the offset accordingly.\n\t\t\t\t\ttransformed.offset -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are removed from a node that is on a path to this position...\n\t\t\tconst i = deletePosition.path.length - 1;\n\n\t\t\tif ( deletePosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are removed from before next node of that path...\n\t\t\t\tif ( deletePosition.offset + howMany > this.path[ i ] ) {\n\t\t\t\t\t// If the next node of that path is removed return null\n\t\t\t\t\t// because the node containing this position got removed.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, decrement index on that path.\n\t\t\t\t\ttransformed.path[ i ] -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany ) {\n\t\tconst transformed = Position._createAt( this );\n\n\t\t// This position can't be affected if insertion was in a different root.\n\t\tif ( this.root != insertPosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are inserted in the node that is pointed by this position...\n\t\t\tif ( insertPosition.offset < this.offset || ( insertPosition.offset == this.offset && this.stickiness != 'toPrevious' ) ) {\n\t\t\t\t// And are inserted before an offset of that position...\n\t\t\t\t// \"Push\" this positions offset.\n\t\t\t\ttransformed.offset += howMany;\n\t\t\t}\n\t\t} else if ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are inserted in a node that is on a path to this position...\n\t\t\tconst i = insertPosition.path.length - 1;\n\n\t\t\tif ( insertPosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are inserted before next node of that path...\n\t\t\t\t// \"Push\" the index on that path.\n\t\t\t\ttransformed.path[ i ] += howMany;\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n\t * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n\t * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany ) {\n\t\t// Update target position, as it could be affected by nodes removal.\n\t\ttargetPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( sourcePosition.isEqual( targetPosition ) ) {\n\t\t\t// If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\n\t\t\treturn Position._createAt( this );\n\t\t}\n\n\t\t// Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\t\tconst transformed = this._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tconst isMoved = transformed === null ||\n\t\t\t( sourcePosition.isEqual( this ) && this.stickiness == 'toNext' ) ||\n\t\t\t( sourcePosition.getShiftedBy( howMany ).isEqual( this ) && this.stickiness == 'toPrevious' );\n\n\t\tif ( isMoved ) {\n\t\t\t// This position is inside moved range (or sticks to it).\n\t\t\t// In this case, we calculate a combination of this position, move source position and target position.\n\t\t\treturn this._getCombined( sourcePosition, targetPosition );\n\t\t} else {\n\t\t\t// This position is not inside a removed range.\n\t\t\t//\n\t\t\t// In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n\t\t\treturn transformed._getTransformedByInsertion( targetPosition, howMany );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new position that is a combination of this position and given positions.\n\t *\n\t * The combined position is a copy of this position transformed by moving a range starting at `source` position\n\t * to the `target` position. It is expected that this position is inside the moved range.\n\t *\n\t * Example:\n\t *\n\t *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\n\t *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\n\t *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\n\t *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n\t *\n\t * Explanation:\n\t *\n\t * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n\t * was inside moved nodes and now should point to the new place. The moved nodes will be after\n\t * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n\t * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n\t * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n\t * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} source Beginning of the moved range.\n\t * @param {module:engine/model/position~Position} target Position where the range is moved.\n\t * @returns {module:engine/model/position~Position} Combined position.\n\t */\n\t_getCombined( source, target ) {\n\t\tconst i = source.path.length - 1;\n\n\t\t// The first part of a path to combined position is a path to the place where nodes were moved.\n\t\tconst combined = Position._createAt( target );\n\t\tcombined.stickiness = this.stickiness;\n\n\t\t// Then we have to update the rest of the path.\n\n\t\t// Fix the offset because this position might be after `from` position and we have to reflect that.\n\t\tcombined.offset = combined.offset + this.path[ i ] - source.offset;\n\n\t\t// Then, add the rest of the path.\n\t\t// If this position is at the same level as `from` position nothing will get added.\n\t\tcombined.path = [ ...combined.path, ...this.path.slice( i + 1 ) ];\n\n\t\treturn combined;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\troot: this.root.toJSON(),\n\t\t\tpath: Array.from( this.path ),\n\t\t\tstickiness: this.stickiness\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new position that is equal to current position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.root, this.path, this.stickiness );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n\t *\n\t * This method is a shortcut to other factory methods such as:\n\t *\n\t * * {@link module:engine/model/position~Position._createBefore},\n\t * * {@link module:engine/model/position~Position._createAfter}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when the\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness. Used only when the\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @protected\n\t */\n\tstatic _createAt( itemOrPosition, offset, stickiness = 'toNone' ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new Position( itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.maxOffset;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node, stickiness );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node, stickiness );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a model item.\n\t\t\t\t *\n\t\t\t\t * @error model-createpositionat-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'model-createpositionat-offset-required', [ this, itemOrPosition ] );\n\t\t\t}\n\n\t\t\tif ( !node.is( 'element' ) && !node.is( 'documentFragment' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Position parent have to be a model element or model document fragment.\n\t\t\t\t *\n\t\t\t\t * @error model-position-parent-incorrect\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-position-parent-incorrect',\n\t\t\t\t\t[ this, itemOrPosition ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst path = node.getPath();\n\n\t\t\tpath.push( offset );\n\n\t\t\treturn new this( node.root, path, stickiness );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * @returns {module:engine/model/position~Position}\n\t * @protected\n\t */\n\tstatic _createAfter( item, stickiness ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root element.\n\t\t\t *\n\t\t\t * @error model-position-after-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-after-root',\n\t\t\t\t[ this, item ],\n\t\t\t\t{ root: item }\n\t\t\t);\n\t\t}\n\n\t\treturn this._createAt( item.parent, item.endOffset, stickiness );\n\t}\n\n\t/**\n\t * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * @returns {module:engine/model/position~Position}\n\t * @protected\n\t */\n\tstatic _createBefore( item, stickiness ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position before a root element.\n\t\t\t *\n\t\t\t * @error model-position-before-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-before-root',\n\t\t\t\titem,\n\t\t\t\t{ root: item }\n\t\t\t);\n\t\t}\n\n\t\treturn this._createAt( item.parent, item.startOffset, stickiness );\n\t}\n\n\t/**\n\t * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Position`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be position owner.\n\t * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\tif ( json.root === '$graveyard' ) {\n\t\t\tconst pos = new Position( doc.graveyard, json.path );\n\t\t\tpos.stickiness = json.stickiness;\n\n\t\t\treturn pos;\n\t\t}\n\n\t\tif ( !doc.getRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create position for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error model-position-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-fromjson-no-root',\n\t\t\t\tdoc,\n\t\t\t\t{ rootName: json.root }\n\t\t\t);\n\t\t}\n\n\t\treturn new Position( doc.getRoot( json.root ), json.path, json.stickiness );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.path.join( ', ' ) } ]`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n/**\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\n *\n * Examples:\n *\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\n *\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\n *\n *\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\n *\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n/**\n * Returns a text node at the given position.\n *\n * This is a helper function optimized to reuse the position parent instance for performance reasons.\n *\n * Normally, you should use {@link module:engine/model/position~Position#textNode `Position#textNode`}.\n * If you start hitting performance issues with {@link module:engine/model/position~Position#parent `Position#parent`}\n * check if your algorithm does not access it multiple times (which can happen directly or indirectly via other position properties).\n *\n * See https://github.com/ckeditor/ckeditor5/issues/6579.\n *\n * See also:\n *\n * * {@link module:engine/model/position~getNodeAfterPosition}\n * * {@link module:engine/model/position~getNodeBeforePosition}\n *\n * @param {module:engine/model/position~Position} position\n * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} positionParent The parent of the\n * given position.\n * @returns {module:engine/model/text~Text|null}\n */\nexport function getTextNodeAtPosition( position, positionParent ) {\n\tconst node = positionParent.getChild( positionParent.offsetToIndex( position.offset ) );\n\n\tif ( node && node.is( '$text' ) && node.startOffset < position.offset ) {\n\t\treturn node;\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns the node after the given position.\n *\n * This is a helper function optimized to reuse the position parent instance and the calculation of the text node at the\n * specific position for performance reasons.\n *\n * Normally, you should use {@link module:engine/model/position~Position#nodeAfter `Position#nodeAfter`}.\n * If you start hitting performance issues with {@link module:engine/model/position~Position#parent `Position#parent`} and/or\n * {@link module:engine/model/position~Position#textNode `Position#textNode`}\n * check if your algorithm does not access those properties multiple times\n * (which can happen directly or indirectly via other position properties).\n *\n * See https://github.com/ckeditor/ckeditor5/issues/6579 and https://github.com/ckeditor/ckeditor5/issues/6582.\n *\n * See also:\n *\n * * {@link module:engine/model/position~getTextNodeAtPosition}\n * * {@link module:engine/model/position~getNodeBeforePosition}\n *\n * @param {module:engine/model/position~Position} position\n * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} positionParent The parent of the\n * given position.\n * @param {module:engine/model/text~Text|null} textNode Text node at the given position.\n * @returns {module:engine/model/node~Node|null}\n */\nexport function getNodeAfterPosition( position, positionParent, textNode ) {\n\tif ( textNode !== null ) {\n\t\treturn null;\n\t}\n\n\treturn positionParent.getChild( positionParent.offsetToIndex( position.offset ) );\n}\n\n/**\n * Returns the node before the given position.\n *\n * Refer to {@link module:engine/model/position~getNodeBeforePosition} for documentation on when to use this util method.\n *\n * See also:\n *\n * * {@link module:engine/model/position~getTextNodeAtPosition}\n * * {@link module:engine/model/position~getNodeAfterPosition}\n *\n * @param {module:engine/model/position~Position} position\n * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} positionParent The parent of the\n * given position.\n * @param {module:engine/model/text~Text|null} textNode Text node at the given position.\n * @returns {module:engine/model/node~Node|null}\n */\nexport function getNodeBeforePosition( position, positionParent, textNode ) {\n\tif ( textNode !== null ) {\n\t\treturn null;\n\t}\n\n\treturn positionParent.getChild( positionParent.offsetToIndex( position.offset ) - 1 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\n\t\t * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\n\t\t * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\n\t\t * interface.\n\t\t *\n\t\t * Because of above, to make plugins more universal, it is recommended to split features into:\n\t\t *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\n\t\t *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\n\t\t *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Flag indicating whether a plugin is enabled or disabled.\n\t\t * A disabled plugin will not transform text.\n\t\t *\n\t\t * Plugin can be simply disabled like that:\n\t\t *\n\t\t *\t\t// Disable the plugin so that no toolbars are visible.\n\t\t *\t\teditor.plugins.get( 'TextTransformation' ).isEnabled = false;\n\t\t *\n\t\t * You can also use {@link #forceDisabled} method.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\n\t\t *\n\t\t * @type {Set.<String>}\n\t\t * @private\n\t\t */\n\t\tthis._disableStack = new Set();\n\t}\n\n\t/**\n\t * Disables the plugin.\n\t *\n\t * Plugin may be disabled by multiple features or algorithms (at once). When disabling a plugin, unique id should be passed\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the plugin.\n\t * The plugin becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n\t *\n\t * Disabling and enabling a plugin:\n\t *\n\t *\t\tplugin.isEnabled; // -> true\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> false\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * Plugin disabled by multiple features:\n\t *\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.forceDisabled( 'OtherFeature' );\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> false\n\t *\t\tplugin.clearForceDisabled( 'OtherFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * Multiple disabling with the same identifier is redundant:\n\t *\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * **Note:** some plugins or algorithms may have more complex logic when it comes to enabling or disabling certain plugins,\n\t * so the plugin might be still disabled after {@link #clearForceDisabled} was used.\n\t *\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the plugin.\n\t */\n\tforceDisabled( id ) {\n\t\tthis._disableStack.add( id );\n\n\t\tif ( this._disableStack.size == 1 ) {\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n\t *\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n\t */\n\tclearForceDisabled( id ) {\n\t\tthis._disableStack.delete( id );\n\n\t\tif ( this._disableStack.size == 0 ) {\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\n\t\t\tthis.isEnabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get isContextPlugin() {\n\t\treturn false;\n\t}\n}\n\nmix( Plugin, ObservableMixin );\n\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form a plugin can be a simple function that accepts {@link module:core/editor/editor~Editor the editor}\n * as a parameter:\n *\n *\t\t// A simple plugin that enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor.data, 'ready', () => {\n *\t\t\t\t\t// Do something when the data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * The plugin can also implement methods (e.g. {@link module:core/plugin~PluginInterface#init `init()`} or\n * {@link module:core/plugin~PluginInterface#destroy `destroy()`}) which, when present, will be used to properly\n * initialize and destroy the plugin.\n *\n * **Note:** When defined as a plain function, the plugin acts as a constructor and will be\n * called in parallel with other plugins' {@link module:core/plugin~PluginInterface#constructor constructors}.\n * This means the code of that plugin will be executed **before** {@link module:core/plugin~PluginInterface#init `init()`} and\n * {@link module:core/plugin~PluginInterface#afterInit `afterInit()`} methods of other plugins and, for instance,\n * you cannot use it to extend other plugins' {@glink framework/guides/architecture/editing-engine#schema schema}\n * rules as they are defined later on during the `init()` stage.\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of the plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * An optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep the plugin class definition tight, it is recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * Naming a plugin is necessary to enable removing it through the\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of the plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as the constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of the plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n/**\n * A flag which defines if a plugin is allowed or not allowed to be used directly by a {@link module:core/context~Context}.\n *\n * @static\n * @readonly\n * @member {Boolean} module:core/plugin~PluginInterface.isContextPlugin\n */\n\n/**\n * An array of loaded plugins.\n *\n * @typedef {Array.<module:core/plugin~PluginInterface>} module:core/plugin~LoadedPlugins\n */\n\n// Helper function that forces plugin to be disabled.\nfunction forceDisable( evt ) {\n\tevt.return = false;\n\tevt.stop();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix( baseClass, ...mixins ) {\n\tmixins.forEach( mixin => {\n\t\tObject.getOwnPropertyNames( mixin ).concat( Object.getOwnPropertySymbols( mixin ) )\n\t\t\t.forEach( key => {\n\t\t\t\tif ( key in baseClass.prototype ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key );\n\t\t\t\tsourceDescriptor.enumerable = false;\n\n\t\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\n\t\t\t} );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/position\n */\n\nimport TreeWalker from './treewalker';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n\t * @param {Number} offset Position offset.\n\t */\n\tconstructor( parent, offset ) {\n\t\t/**\n\t\t * Position parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t * module:engine/view/position~Position#parent\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * Position offset.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/position~Position#offset\n\t\t */\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t * Node directly after the position. Equals `null` when there is no node after position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\tif ( this.parent.is( '$text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset ) || null;\n\t}\n\n\t/**\n\t * Node directly before the position. Equals `null` when there is no node before position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeBefore() {\n\t\tif ( this.parent.is( '$text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset - 1 ) || null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\tconst endOffset = this.parent.is( '$text' ) ? this.parent.data.length : this.parent.childCount;\n\n\t\treturn this.offset === endOffset;\n\t}\n\n\t/**\n\t * Position's root, that is the root of the position's parent element.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.parent.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n\t * position is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tlet editable = this.parent;\n\n\t\twhile ( !( editable instanceof EditableElement ) ) {\n\t\t\tif ( editable.parent ) {\n\t\t\t\teditable = editable.parent;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn editable;\n\t}\n\n\t/**\n\t * Returns a new instance of Position with offset incremented by `shift` value.\n\t *\n\t * @param {Number} shift How position offset should get changed. Accepts negative values.\n\t * @returns {module:engine/view/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = Position._createAt( this );\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n\t * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n\t *\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions.\n\t *\n\t * @param {module:engine/view/position~Position} position\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( position ) {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tposition.is( 'position' ); // -> true\n\t *\t\tposition.is( 'view:position' ); // -> true\n\t *\n\t *\t\tposition.is( 'model:position' ); // -> false\n\t *\t\tposition.is( 'element' ); // -> false\n\t *\t\tposition.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'position' || type === 'view:position';\n\t}\n\n\t/**\n\t * Checks whether this position equals given position.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn ( this.parent == otherPosition.parent && this.offset == otherPosition.offset );\n\t}\n\n\t/**\n\t * Checks whether this position is located before given position. When method returns `false` it does not mean that\n\t * this position is after give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isAfter\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is located after given position. When method returns `false` it does not mean that\n\t * this position is before give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isBefore\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before, after or in same position that other position. Two positions may be also\n\t * different when they are located in separate roots.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/view/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root !== otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tif ( this.isEqual( otherPosition ) ) {\n\t\t\treturn 'same';\n\t\t}\n\n\t\t// Get path from root to position's parent element.\n\t\tconst thisPath = this.parent.is( 'node' ) ? this.parent.getPath() : [];\n\t\tconst otherPath = otherPosition.parent.is( 'node' ) ? otherPosition.parent.getPath() : [];\n\n\t\t// Add the positions' offsets to the parents offsets.\n\t\tthisPath.push( this.offset );\n\t\totherPath.push( otherPosition.offset );\n\n\t\t// Compare both path arrays to find common ancestor.\n\t\tconst result = compareArrays( thisPath, otherPath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < otherPath[ result ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\tclone() {\n\t\treturn new Position( this.parent, this.offset );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link module:engine/view/position~Position._createBefore},\n\t * * {@link module:engine/view/position~Position._createAfter}.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tstatic _createAt( itemOrPosition, offset ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new this( itemOrPosition.parent, itemOrPosition.offset );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.is( '$text' ) ? node.data.length : node.childCount;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a view item.\n\t\t\t\t *\n\t\t\t\t * @error view-createpositionat-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-createpositionat-offset-required', node );\n\t\t\t}\n\n\t\t\treturn new Position( node, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic _createAfter( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( '$textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText + item.data.length );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root.\n\t\t\t *\n\t\t\t * @error view-position-after-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-after-root', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index + 1 );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic _createBefore( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( '$textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You cannot make a position before a root.\n\t\t\t *\n\t\t\t * @error view-position-before-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-before-root', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index );\n\t}\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/view\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\nimport '../theme/globals/globals.css';\n\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tconst bind = this.bindTemplate;\n *\n *\t\t\t\t// Views define their interface (state) using observable attributes.\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\n *\n *\t\t\t\tthis.setTemplate( {\n *\t\t\t\t\ttag: 'p',\n *\n *\t\t\t\t\t// The element of the view can be defined with its children.\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: [\n *\t\t\t\t\t\t\t'foo',\n *\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n *\t\t\t\t\t\t]\n *\t\t\t\t\t},\n *\t\t\t\t\ton: {\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.render();\n *\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n *\t\tdocument.body.appendChild( view.element );\n *\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n *\t\tview.elementClass = 'baz';\n *\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\n *\t\tview.on( 'clicked', () => {\n *\t\t\tconsole.log( 'The view has been clicked!' );\n *\t\t} );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\t/**\n\t * Creates an instance of the {@link module:ui/view~View} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t */\n\tconstructor( locale ) {\n\t\t/**\n\t\t * An HTML element of the view. `null` until {@link #render rendered}\n\t\t * from the {@link #template}.\n\t\t *\n\t\t *\t\tclass SampleView extends View {\n\t\t *\t\t\tconstructor() {\n\t\t *\t\t\t\tsuper();\n\t\t *\n\t\t *\t\t\t\t// A template instance the #element will be created from.\n\t\t *\t\t\t\tthis.setTemplate( {\n\t\t *\t\t\t\t\ttag: 'p'\n\t\t *\n\t\t *\t\t\t\t\t// ...\n\t\t *\t\t\t\t} );\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t *\t\tconst view = new SampleView();\n\t\t *\n\t\t *\t\t// Renders the #template.\n\t\t *\t\tview.render();\n\t\t *\n\t\t *\t\t// Append the HTML element of the view to <body>.\n\t\t *\t\tdocument.body.appendChild( view.element );\n\t\t *\n\t\t * **Note**: The element of the view can also be assigned directly:\n\t\t *\n\t\t *\t\tview.element = document.querySelector( '#my-container' );\n\t\t *\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis.element = null;\n\n\t\t/**\n\t\t * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRendered\n\t\t */\n\t\tthis.isRendered = false;\n\n\t\t/**\n\t\t * A set of tools to localize the user interface.\n\t\t *\n\t\t * Also see {@link module:core/editor/editor~Editor#locale}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n\t\t * be available.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method\n\t\t */\n\t\tthis.t = locale && locale.t;\n\n\t\t/**\n\t\t * Collections registered with {@link #createCollection}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:ui/viewcollection~ViewCollection>}\n\t\t */\n\t\tthis._viewCollections = new Collection();\n\n\t\t/**\n\t\t * A collection of view instances, which have been added directly\n\t\t * into the {@link module:ui/template~Template#children}.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._unboundChildren = this.createCollection();\n\n\t\t// Pass parent locale to its children.\n\t\tthis._viewCollections.on( 'add', ( evt, collection ) => {\n\t\t\tcollection.locale = locale;\n\t\t} );\n\n\t\t/**\n\t\t * Template of this view. It provides the {@link #element} representing\n\t\t * the view in DOM, which is {@link #render rendered}.\n\t\t *\n\t\t * @member {module:ui/template~Template} #template\n\t\t */\n\n\t\t/**\n\t\t * Cached {@link module:ui/template~BindChain bind chain} object created by the\n\t\t * {@link #template}. See {@link #bindTemplate}.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_bindTemplate\n\t\t */\n\n\t\tthis.decorate( 'render' );\n\t}\n\n\t/**\n\t * Shorthand for {@link module:ui/template~Template.bind}, a binding\n\t * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n\t *\n\t * It provides {@link module:ui/template~BindChain#to `to()`} and\n\t * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n\t * observable attributes and attach DOM listeners.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tconst bind = this.bindTemplate;\n\t *\n\t *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n\t *\t\t\t\t// the state of the view in DOM.\n\t *\t\t\t\tthis.set( {\n\t *\t\t\t\t\telementClass: 'foo',\n\t *\t\t\t\t \tisEnabled: true\n\t *\t\t\t\t } );\n\t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\n\t *\t\t\t\t\t\t// and isEnabled view attributes.\n\t *\t\t\t\t\t\tclass: [\n\t *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n\t *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n\t *\t\t\t\t\t\t]\n\t *\t\t\t\t\t},\n\t *\n\t *\t\t\t\t\ton: {\n\t *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n\t *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n\t *\t\t\t\t\t}\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @method #bindTemplate\n\t */\n\tget bindTemplate() {\n\t\tif ( this._bindTemplate ) {\n\t\t\treturn this._bindTemplate;\n\t\t}\n\n\t\treturn ( this._bindTemplate = Template.bind( this, this ) );\n\t}\n\n\t/**\n\t * Creates a new collection of views, which can be used as\n\t * {@link module:ui/template~Template#children} of this view.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tconst child = new ChildView( locale );\n\t *\t\t\t\tthis.items = this.createCollection( [ child ] );\n \t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\t// `items` collection will render here.\n\t *\t\t\t\t\tchildren: this.items\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\t\tview.render();\n\t *\n\t *\t\t// It will append <p><child#element></p> to the <body>.\n\t *\t\tdocument.body.appendChild( view.element );\n\t *\n\t * @param {Iterable.<module:ui/view~View>} [views] Initial views of the collection.\n\t * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n\t */\n\tcreateCollection( views ) {\n\t\tconst collection = new ViewCollection( views );\n\n\t\tthis._viewCollections.add( collection );\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Registers a new child view under the view instance. Once registered, a child\n\t * view is managed by its parent, including {@link #render rendering}\n\t * and {@link #destroy destruction}.\n\t *\n\t * To revert this, use {@link #deregisterChild}.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.setTemplate( { tag: 'p' } );\n\t *\n\t *\t\t\t\t// Register the children.\n\t *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\n\t *\t\t\t}\n\t *\n\t *\t\t\trender() {\n\t *\t\t\t\tsuper.render();\n\t *\n\t *\t\t\t\tthis.element.appendChild( this.childA.element );\n\t *\t\t\t\tthis.element.appendChild( this.childB.element );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\n\t *\t\tview.render();\n\t *\n\t *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\n\t *\t\tdocument.body.appendChild( view.element );\n\t *\n\t * **Note**: There's no need to add child views if they're already referenced in the\n\t * {@link #template}:\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n \t *\t\t\t\t\t// These children will be added automatically. There's no\n \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\n\t *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\n\t *\t\t\t// ...\n\t *\t\t}\n\t *\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n\t */\n\tregisterChild( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.add( child );\n\t\t}\n\t}\n\n\t/**\n\t * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n\t * Once removed, the child is no longer managed by its parent, e.g. it can safely\n\t * become a child of another parent view.\n\t *\n\t * @see #registerChild\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\n\t */\n\tderegisterChild( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.remove( child );\n\t\t}\n\t}\n\n\t/**\n\t * Sets the {@link #template} of the view with with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t *\t\tview.setTemplate( definition );\n\t *\n\t * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\n\t */\n\tsetTemplate( definition ) {\n\t\tthis.template = new Template( definition );\n\t}\n\n\t/**\n\t * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n\t * with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t *\t\tTemplate.extend( view.template, definition );\n\t *\n\t * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} definition Definition which\n\t * extends the {@link #template}.\n\t */\n\textendTemplate( definition ) {\n\t\tTemplate.extend( this.template, definition );\n\t}\n\n\t/**\n\t * Recursively renders the view.\n\t *\n\t * Once the view is rendered:\n\t * * the {@link #element} becomes an HTML element out of {@link #template},\n\t * * the {@link #isRendered} flag is set `true`.\n\t *\n\t * **Note**: The children of the view:\n\t * * defined directly in the {@link #template}\n\t * * residing in collections created by the {@link #createCollection} method,\n\t * * and added by {@link #registerChild}\n\t * are also rendered in the process.\n\t *\n\t * In general, `render()` method is the right place to keep the code which refers to the\n\t * {@link #element} and should be executed at the very beginning of the view's life cycle.\n\t *\n\t * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n\t * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n\t * such references should be done in `render()`.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor() {\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\t// ...\n\t *\t\t\t\t} );\n\t *\t\t\t},\n\t *\n\t *\t\t\trender() {\n\t *\t\t\t\t// View#element becomes available.\n\t *\t\t\t\tsuper.render();\n\t *\n\t *\t\t\t\t// The \"scroll\" listener depends on #element.\n\t *\t\t\t\tthis.listenTo( window, 'scroll', () => {\n\t *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\n\t *\t\t\t\t\tif ( window.scrollY > 0 ) {\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 100;\n\t *\t\t\t\t\t} else {\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 0;\n\t *\t\t\t\t\t}\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView();\n\t *\n\t *\t\t// Let's customize the view before it gets rendered.\n\t *\t\tview.extendTemplate( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: [\n\t *\t\t\t\t\t'additional-class'\n\t *\t\t\t\t]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Late rendering allows customization of the view.\n\t *\t\tview.render();\n\t */\n\trender() {\n\t\tif ( this.isRendered ) {\n\t\t\t/**\n\t\t\t * This View has already been rendered.\n\t\t\t *\n\t\t\t * @error ui-view-render-already-rendered\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-view-render-already-rendered', this );\n\t\t}\n\n\t\t// Render #element of the view.\n\t\tif ( this.template ) {\n\t\t\tthis.element = this.template.render();\n\n\t\t\t// Auto–register view children from #template.\n\t\t\tthis.registerChild( this.template.getViews() );\n\t\t}\n\n\t\tthis.isRendered = true;\n\t}\n\n\t/**\n\t * Recursively destroys the view instance and child views added by {@link #registerChild} and\n\t * residing in collections created by the {@link #createCollection}.\n\t *\n\t * Destruction disables all event listeners:\n\t * * created on the view, e.g. `view.on( 'event', () => {} )`,\n\t * * defined in the {@link #template} for DOM events.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis._viewCollections.map( c => c.destroy() );\n\n\t\t// Template isn't obligatory for views.\n\t\tif ( this.template && this.template._revertData ) {\n\t\t\tthis.template.revert( this.element );\n\t\t}\n\t}\n\n\t/**\n\t * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\n\t * this event with the default priority.\n\t *\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event render\n\t */\n}\n\nmix( View, DomEmitterMixin );\nmix( View, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\n\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.start = start.clone();\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.end = end ? end.clone() : start.clone();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/view/position~Position positions},\n\t * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n\t * `ignoreElementEnd` option\n\t * set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is it start and end positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n\t * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\treturn this.start.parent === this.end.parent;\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n\t *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Enlarged range.\n\t */\n\tgetEnlarged() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\t// Fix positions, in case if they are in Text node.\n\t\tif ( start.parent.is( '$text' ) && start.isAtStart ) {\n\t\t\tstart = Position._createBefore( start.parent );\n\t\t}\n\n\t\tif ( end.parent.is( '$text' ) && end.isAtEnd ) {\n\t\t\tend = Position._createAfter( end.parent );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n\t *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Shrink range.\n\t */\n\tgetTrimmed() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\tif ( start.isAfter( this.end ) || start.isEqual( this.end ) ) {\n\t\t\treturn new Range( start, start );\n\t\t}\n\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tconst nodeAfterStart = start.nodeAfter;\n\t\tconst nodeBeforeEnd = end.nodeBefore;\n\n\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\t\tif ( nodeAfterStart && nodeAfterStart.is( '$text' ) ) {\n\t\t\tstart = new Position( nodeAfterStart, 0 );\n\t\t}\n\n\t\tif ( nodeBeforeEnd && nodeBeforeEnd.is( '$text' ) ) {\n\t\t\tend = new Position( nodeBeforeEnd, nodeBeforeEnd.data.length );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Two ranges are equal if their start and end positions are equal.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this == otherRange || ( this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end ) );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n\t *\n\t * @param {module:engine/view/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n\t * `false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n\t * otherwise.\n\t */\n\tcontainsRange( otherRange, loose = false ) {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n\t * {@link module:engine/view/range~Range range}.\n\t * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n\t *\t\t\tview.createPositionAt( foo, 1 ),\n\t *\t\t\tview.createPositionAt( bar, 2 )\n\t *\t\t);\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( this.clone() );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n\t *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @param {module:engine/view/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t * @returns {module:engine/view/treewalker~TreeWalker}\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor() {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/view/element~Element Element} contained by the range.\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\n\t * at the same time.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetContainedElement() {\n\t\tif ( this.isCollapsed ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet nodeAfterStart = this.start.nodeAfter;\n\t\tlet nodeBeforeEnd = this.end.nodeBefore;\n\n\t\t// Handle the situation when the range position is at the beginning / at the end of a text node.\n\t\t// In such situation `.nodeAfter` and `.nodeBefore` are `null` but the range still might be spanning\n\t\t// over one element.\n\t\t//\n\t\t// <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\n\t\t//\n\t\t// These are basically the same range, only the difference is if the range position is at\n\t\t// at the end/at the beginning of a text node or just before/just after the text node.\n\t\t//\n\t\tif ( this.start.parent.is( '$text' ) && this.start.isAtEnd && this.start.parent.nextSibling ) {\n\t\t\tnodeAfterStart = this.start.parent.nextSibling;\n\t\t}\n\n\t\tif ( this.end.parent.is( '$text' ) && this.end.isAtStart && this.end.parent.previousSibling ) {\n\t\t\tnodeBeforeEnd = this.end.parent.previousSibling;\n\t\t}\n\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\n\t\t\treturn nodeAfterStart;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Clones this range.\n\t *\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tclone() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n\t * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\trange.is( 'range' ); // -> true\n\t *\t\trange.is( 'view:range' ); // -> true\n\t *\n\t *\t\trange.is( 'model:range' ); // -> false\n\t *\t\trange.is( 'element' ); // -> false\n\t *\t\trange.is( 'selection' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'range' || type === 'view:range';\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with the given range.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} True if ranges intersect.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Creates a range from the given parents and offsets.\n\t *\n\t * @protected\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n\t * parent element.\n\t * @param {Number} startOffset Start position offset.\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n\t * parent element.\n\t * @param {Number} endOffset End position offset.\n\t * @returns {module:engine/view/range~Range} Created range.\n\t */\n\tstatic _createFromParentsAndOffsets( startElement, startOffset, endElement, endOffset ) {\n\t\treturn new this(\n\t\t\tnew Position( startElement, startOffset ),\n\t\t\tnew Position( endElement, endOffset )\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/view/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createIn( element ) {\n\t\treturn this._createFromParentsAndOffsets( element, 0, element, element.childCount );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createOn( item ) {\n\t\tconst size = item.is( '$textProxy' ) ? item.offsetSize : 1;\n\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), size );\n\t}\n}\n\n// Function used by getEnlarged and getTrimmed methods.\nfunction enlargeTrimSkip( value ) {\n\tif ( value.item.is( 'attributeElement' ) || value.item.is( 'uiElement' ) ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/emittermixin\n */\n\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities';\n\n// To check if component is loaded more than once.\nimport './version';\nimport CKEditorError from './ckeditorerror';\n\nconst _listeningTo = Symbol( 'listeningTo' );\nconst _emitterId = Symbol( 'emitterId' );\n\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\nconst EmitterMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\ton( event, callback, options = {} ) {\n\t\tthis.listenTo( this, event, callback, options );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tonce( event, callback, options ) {\n\t\tlet wasFired = false;\n\n\t\tconst onceCallback = function( event, ...args ) {\n\t\t\t// Ensure the callback is called only once even if the callback itself leads to re-firing the event\n\t\t\t// (which would call the callback again).\n\t\t\tif ( !wasFired ) {\n\t\t\t\twasFired = true;\n\n\t\t\t\t// Go off() at the first call.\n\t\t\t\tevent.off();\n\n\t\t\t\t// Go with the original callback.\n\t\t\t\tcallback.call( this, event, ...args );\n\t\t\t}\n\t\t};\n\n\t\t// Make a similar on() call, simply replacing the callback.\n\t\tthis.listenTo( this, event, onceCallback, options );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\toff( event, callback ) {\n\t\tthis.stopListening( this, event, callback );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tlistenTo( emitter, event, callback, options = {} ) {\n\t\tlet emitterInfo, eventCallbacks;\n\n\t\t// _listeningTo contains a list of emitters that this object is listening to.\n\t\t// This list has the following format:\n\t\t//\n\t\t// _listeningTo: {\n\t\t//     emitterId: {\n\t\t//         emitter: emitter,\n\t\t//         callbacks: {\n\t\t//             event1: [ callback1, callback2, ... ]\n\t\t//             ....\n\t\t//         }\n\t\t//     },\n\t\t//     ...\n\t\t// }\n\n\t\tif ( !this[ _listeningTo ] ) {\n\t\t\tthis[ _listeningTo ] = {};\n\t\t}\n\n\t\tconst emitters = this[ _listeningTo ];\n\n\t\tif ( !_getEmitterId( emitter ) ) {\n\t\t\t_setEmitterId( emitter );\n\t\t}\n\n\t\tconst emitterId = _getEmitterId( emitter );\n\n\t\tif ( !( emitterInfo = emitters[ emitterId ] ) ) {\n\t\t\temitterInfo = emitters[ emitterId ] = {\n\t\t\t\temitter,\n\t\t\t\tcallbacks: {}\n\t\t\t};\n\t\t}\n\n\t\tif ( !( eventCallbacks = emitterInfo.callbacks[ event ] ) ) {\n\t\t\teventCallbacks = emitterInfo.callbacks[ event ] = [];\n\t\t}\n\n\t\teventCallbacks.push( callback );\n\n\t\t// Finally register the callback to the event.\n\t\tcreateEventNamespace( emitter, event );\n\t\tconst lists = getCallbacksListsForNamespace( emitter, event );\n\t\tconst priority = priorities.get( options.priority );\n\n\t\tconst callbackDefinition = {\n\t\t\tcallback,\n\t\t\tpriority\n\t\t};\n\n\t\t// Add the callback to all callbacks list.\n\t\tfor ( const callbacks of lists ) {\n\t\t\t// Add the callback to the list in the right priority position.\n\t\t\tlet added = false;\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tif ( callbacks[ i ].priority < priority ) {\n\t\t\t\t\tcallbacks.splice( i, 0, callbackDefinition );\n\t\t\t\t\tadded = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add at the end, if right place was not found.\n\t\t\tif ( !added ) {\n\t\t\t\tcallbacks.push( callbackDefinition );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\tconst emitters = this[ _listeningTo ];\n\t\tlet emitterId = emitter && _getEmitterId( emitter );\n\t\tconst emitterInfo = emitters && emitterId && emitters[ emitterId ];\n\t\tconst eventCallbacks = emitterInfo && event && emitterInfo.callbacks[ event ];\n\n\t\t// Stop if nothing has been listened.\n\t\tif ( !emitters || ( emitter && !emitterInfo ) || ( event && !eventCallbacks ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// All params provided. off() that single callback.\n\t\tif ( callback ) {\n\t\t\tremoveCallback( emitter, event, callback );\n\t\t}\n\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\n\t\telse if ( eventCallbacks ) {\n\t\t\twhile ( ( callback = eventCallbacks.pop() ) ) {\n\t\t\t\tremoveCallback( emitter, event, callback );\n\t\t\t}\n\n\t\t\tdelete emitterInfo.callbacks[ event ];\n\t\t}\n\t\t// Only `emitter` provided. off() all events for that emitter.\n\t\telse if ( emitterInfo ) {\n\t\t\tfor ( event in emitterInfo.callbacks ) {\n\t\t\t\tthis.stopListening( emitter, event );\n\t\t\t}\n\t\t\tdelete emitters[ emitterId ];\n\t\t}\n\t\t// No params provided. off() all emitters.\n\t\telse {\n\t\t\tfor ( emitterId in emitters ) {\n\t\t\t\tthis.stopListening( emitters[ emitterId ].emitter );\n\t\t\t}\n\t\t\tdelete this[ _listeningTo ];\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfire( eventOrInfo, ...args ) {\n\t\ttry {\n\t\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\n\t\t\tconst event = eventInfo.name;\n\t\t\tlet callbacks = getCallbacksForEvent( this, event );\n\n\t\t\t// Record that the event passed this emitter on its path.\n\t\t\teventInfo.path.push( this );\n\n\t\t\t// Handle event listener callbacks first.\n\t\t\tif ( callbacks ) {\n\t\t\t\t// Arguments passed to each callback.\n\t\t\t\tconst callbackArgs = [ eventInfo, ...args ];\n\n\t\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n\t\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n\t\t\t\t// failed if callbacks were added to the queue before currently processed callback.\n\t\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n\t\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\t\t\t\tcallbacks = Array.from( callbacks );\n\n\t\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\t\tcallbacks[ i ].callback.apply( this, callbackArgs );\n\n\t\t\t\t\t// Remove the callback from future requests if off() has been called.\n\t\t\t\t\tif ( eventInfo.off.called ) {\n\t\t\t\t\t\t// Remove the called mark for the next calls.\n\t\t\t\t\t\tdelete eventInfo.off.called;\n\n\t\t\t\t\t\tremoveCallback( this, event, callbacks[ i ].callback );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not execute next callbacks if stop() was called.\n\t\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delegate event to other emitters if needed.\n\t\t\tif ( this._delegations ) {\n\t\t\t\tconst destinations = this._delegations.get( event );\n\t\t\t\tconst passAllDestinations = this._delegations.get( '*' );\n\n\t\t\t\tif ( destinations ) {\n\t\t\t\t\tfireDelegatedEvents( destinations, eventInfo, args );\n\t\t\t\t}\n\n\t\t\t\tif ( passAllDestinations ) {\n\t\t\t\t\tfireDelegatedEvents( passAllDestinations, eventInfo, args );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn eventInfo.return;\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdelegate( ...events ) {\n\t\treturn {\n\t\t\tto: ( emitter, nameOrFunction ) => {\n\t\t\t\tif ( !this._delegations ) {\n\t\t\t\t\tthis._delegations = new Map();\n\t\t\t\t}\n\n\t\t\t\t// Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n\t\t\t\t// build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n\t\t\t\tevents.forEach( eventName => {\n\t\t\t\t\tconst destinations = this._delegations.get( eventName );\n\n\t\t\t\t\tif ( !destinations ) {\n\t\t\t\t\t\tthis._delegations.set( eventName, new Map( [ [ emitter, nameOrFunction ] ] ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestinations.set( emitter, nameOrFunction );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstopDelegating( event, emitter ) {\n\t\tif ( !this._delegations ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !event ) {\n\t\t\tthis._delegations.clear();\n\t\t} else if ( !emitter ) {\n\t\t\tthis._delegations.delete( event );\n\t\t} else {\n\t\t\tconst destinations = this._delegations.get( event );\n\n\t\t\tif ( destinations ) {\n\t\t\t\tdestinations.delete( emitter );\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default EmitterMixin;\n\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * @interface Emitter\n */\n\n/**\n * Registers a callback function to be executed when an event is fired.\n *\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n * listen on itself).\n *\n * @method #on\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n * calling {@link #on} followed by {@link #off} in the callback.\n *\n * @method #once\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops executing the callback on the given event.\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n *\n * @method #off\n * @param {String} event The name of the event.\n * @param {Function} callback The function to stop being called.\n */\n\n/**\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n *\n * Events can be grouped in namespaces using `:`.\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n *\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n *\n *\t\t// genericCallback is fired.\n *\t\tmyEmitter.fire( 'myGroup' );\n *\t\t// both genericCallback and specificCallback are fired.\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n *\t\tmyEmitter.fire( 'myGroup:foo' );\n *\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n *\n * @method #listenTo\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops listening for events. It can be used at different levels:\n *\n * * To stop listening to a specific callback.\n * * To stop listening to a specific event.\n * * To stop listening to all events fired by a specific object.\n * * To stop listening to all events fired by all objects.\n *\n * @method #stopListening\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n * for all events from `emitter`.\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n * `event`.\n */\n\n/**\n * Fires an event, executing all callbacks registered for it.\n *\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n * followed by the optional `args` provided in the `fire()` method call.\n *\n * @method #fire\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n * is the first param of every callback).\n */\n\n/**\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n *\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n *\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventX', data );\n *\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventY', data );\n *\n * @method #delegate\n * @param {...String} events Event names that will be delegated to another emitter.\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n */\n\n/**\n * Stops delegating events. It can be used at different levels:\n *\n * * To stop delegating all events.\n * * To stop delegating a specific event to all emitters.\n * * To stop delegating a specific event to a specific emitter.\n *\n * @method #stopDelegating\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n * If omitted, stops delegation of `event` to all emitters.\n */\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} listeningEmitter An emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~Emitter|null}\n */\nexport function _getEmitterListenedTo( listeningEmitter, listenedToEmitterId ) {\n\tif ( listeningEmitter[ _listeningTo ] && listeningEmitter[ _listeningTo ][ listenedToEmitterId ] ) {\n\t\treturn listeningEmitter[ _listeningTo ][ listenedToEmitterId ].emitter;\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\nexport function _setEmitterId( emitter, id ) {\n\tif ( !emitter[ _emitterId ] ) {\n\t\temitter[ _emitterId ] = id || uid();\n\t}\n}\n\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter which id will be returned.\n */\nexport function _getEmitterId( emitter ) {\n\treturn emitter[ _emitterId ];\n}\n\n// Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\nfunction getEvents( source ) {\n\tif ( !source._events ) {\n\t\tObject.defineProperty( source, '_events', {\n\t\t\tvalue: {}\n\t\t} );\n\t}\n\n\treturn source._events;\n}\n\n// Creates event node for generic-specific events relation architecture.\nfunction makeEventNode() {\n\treturn {\n\t\tcallbacks: [],\n\t\tchildEvents: []\n\t};\n}\n\n// Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\nfunction createEventNamespace( source, eventName ) {\n\tconst events = getEvents( source );\n\n\t// First, check if the event we want to add to the structure already exists.\n\tif ( events[ eventName ] ) {\n\t\t// If it exists, we don't have to do anything.\n\t\treturn;\n\t}\n\n\t// In other case, we have to create the structure for the event.\n\t// Note, that we might need to create intermediate events too.\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n\t// we need to also register foo:bar.\n\n\t// Currently processed event name.\n\tlet name = eventName;\n\t// Name of the event that is a child event for currently processed event.\n\tlet childEventName = null;\n\n\t// Array containing all newly created specific events.\n\tconst newEventNodes = [];\n\n\t// While loop can't check for ':' index because we have to handle generic events too.\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\n\twhile ( name !== '' ) {\n\t\tif ( events[ name ] ) {\n\t\t\t// If the currently processed event name is already registered, we can be sure\n\t\t\t// that it already has all the structure created, so we can break the loop here\n\t\t\t// as no more events need to be registered.\n\t\t\tbreak;\n\t\t}\n\n\t\t// If this event is not yet registered, create a new object for it.\n\t\tevents[ name ] = makeEventNode();\n\t\t// Add it to the array with newly created events.\n\t\tnewEventNodes.push( events[ name ] );\n\n\t\t// Add previously processed event name as a child of this event.\n\t\tif ( childEventName ) {\n\t\t\tevents[ name ].childEvents.push( childEventName );\n\t\t}\n\n\t\tchildEventName = name;\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\t\tname = name.substr( 0, name.lastIndexOf( ':' ) );\n\t}\n\n\tif ( name !== '' ) {\n\t\t// If name is not empty, we found an already registered event that was a parent of the\n\t\t// event we wanted to register.\n\n\t\t// Copy that event's callbacks to newly registered events.\n\t\tfor ( const node of newEventNodes ) {\n\t\t\tnode.callbacks = events[ name ].callbacks.slice();\n\t\t}\n\n\t\t// Add last newly created event to the already registered event.\n\t\tevents[ name ].childEvents.push( childEventName );\n\t}\n}\n\n// Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\nfunction getCallbacksListsForNamespace( source, eventName ) {\n\tconst eventNode = getEvents( source )[ eventName ];\n\n\tif ( !eventNode ) {\n\t\treturn [];\n\t}\n\n\tlet callbacksLists = [ eventNode.callbacks ];\n\n\tfor ( let i = 0; i < eventNode.childEvents.length; i++ ) {\n\t\tconst childCallbacksLists = getCallbacksListsForNamespace( source, eventNode.childEvents[ i ] );\n\n\t\tcallbacksLists = callbacksLists.concat( childCallbacksLists );\n\t}\n\n\treturn callbacksLists;\n}\n\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\nfunction getCallbacksForEvent( source, eventName ) {\n\tlet event;\n\n\tif ( !source._events || !( event = source._events[ eventName ] ) || !event.callbacks.length ) {\n\t\t// There are no callbacks registered for specified eventName.\n\t\t// But this could be a specific-type event that is in a namespace.\n\t\tif ( eventName.indexOf( ':' ) > -1 ) {\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\n\t\t\treturn getCallbacksForEvent( source, eventName.substr( 0, eventName.lastIndexOf( ':' ) ) );\n\t\t} else {\n\t\t\t// If this is a top-level generic event, return null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn event.callbacks;\n}\n\n// Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing\n// `[ {@link module:utils/emittermixin~Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\nfunction fireDelegatedEvents( destinations, eventInfo, fireArgs ) {\n\tfor ( let [ emitter, name ] of destinations ) {\n\t\tif ( !name ) {\n\t\t\tname = eventInfo.name;\n\t\t} else if ( typeof name == 'function' ) {\n\t\t\tname = name( eventInfo.name );\n\t\t}\n\n\t\tconst delegatedInfo = new EventInfo( eventInfo.source, name );\n\n\t\tdelegatedInfo.path = [ ...eventInfo.path ];\n\n\t\temitter.fire( delegatedInfo, ...fireArgs );\n\t}\n}\n\n// Removes callback from emitter for given event.\n//\n// @param {module:utils/emittermixin~Emitter} emitter\n// @param {String} event\n// @param {Function} callback\nfunction removeCallback( emitter, event, callback ) {\n\tconst lists = getCallbacksListsForNamespace( emitter, event );\n\n\tfor ( const callbacks of lists ) {\n\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\tif ( callbacks[ i ].callback == callback ) {\n\t\t\t\t// Remove the callback from the list (fixing the next index).\n\t\t\t\tcallbacks.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/observablemixin\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { extend, isObject } from 'lodash-es';\n\nconst observablePropertiesSymbol = Symbol( 'observableProperties' );\nconst boundObservablesSymbol = Symbol( 'boundObservables' );\nconst boundPropertiesSymbol = Symbol( 'boundProperties' );\n\n/**\n * A mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\nconst ObservableMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tset( name, value ) {\n\t\t// If the first parameter is an Object, iterate over its properties.\n\t\tif ( isObject( name ) ) {\n\t\t\tObject.keys( name ).forEach( property => {\n\t\t\t\tthis.set( property, name[ property ] );\n\t\t\t}, this );\n\n\t\t\treturn;\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst properties = this[ observablePropertiesSymbol ];\n\n\t\tif ( ( name in this ) && !properties.has( name ) ) {\n\t\t\t/**\n\t\t\t * Cannot override an existing property.\n\t\t\t *\n\t\t\t * This error is thrown when trying to {@link ~Observable#set set} a property with\n\t\t\t * a name of an already existing property. For example:\n\t\t\t *\n\t\t\t *\t\tlet observable = new Model();\n\t\t\t *\t\tobservable.property = 1;\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n\t\t\t *\n\t\t\t *\t\tobservable.set( 'property', 1 );\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n\t\t\t *\n\t\t\t * @error observable-set-cannot-override\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-set-cannot-override', this );\n\t\t}\n\n\t\tObject.defineProperty( this, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget() {\n\t\t\t\treturn properties.get( name );\n\t\t\t},\n\n\t\t\tset( value ) {\n\t\t\t\tconst oldValue = properties.get( name );\n\n\t\t\t\t// Fire `set` event before the new value will be set to make it possible\n\t\t\t\t// to override observable property without affecting `change` event.\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\t\t\t\tlet newValue = this.fire( 'set:' + name, name, value, oldValue );\n\n\t\t\t\tif ( newValue === undefined ) {\n\t\t\t\t\tnewValue = value;\n\t\t\t\t}\n\n\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n\t\t\t\t// Note: When properties map has no such own property, then its value is undefined.\n\t\t\t\tif ( oldValue !== newValue || !properties.has( name ) ) {\n\t\t\t\t\tproperties.set( name, newValue );\n\t\t\t\t\tthis.fire( 'change:' + name, name, newValue, oldValue );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis[ name ] = value;\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbind( ...bindProperties ) {\n\t\tif ( !bindProperties.length || !isStringArray( bindProperties ) ) {\n\t\t\t/**\n\t\t\t * All properties must be strings.\n\t\t\t *\n\t\t\t * @error observable-bind-wrong-properties\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-wrong-properties', this );\n\t\t}\n\n\t\tif ( ( new Set( bindProperties ) ).size !== bindProperties.length ) {\n\t\t\t/**\n\t\t\t * Properties must be unique.\n\t\t\t *\n\t\t\t * @error observable-bind-duplicate-properties\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-duplicate-properties', this );\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\n\t\tbindProperties.forEach( propertyName => {\n\t\t\tif ( boundProperties.has( propertyName ) ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot bind the same property more than once.\n\t\t\t\t *\n\t\t\t\t * @error observable-bind-rebind\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-bind-rebind', this );\n\t\t\t}\n\t\t} );\n\n\t\tconst bindings = new Map();\n\n\t\t// @typedef {Object} Binding\n\t\t// @property {Array} property Property which is bound.\n\t\t// @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n\t\t// @property {Array} callback A function which processes `to` components.\n\t\tbindProperties.forEach( a => {\n\t\t\tconst binding = { property: a, to: [] };\n\n\t\t\tboundProperties.set( a, binding );\n\t\t\tbindings.set( a, binding );\n\t\t} );\n\n\t\t// @typedef {Object} BindChain\n\t\t// @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n\t\t// @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n\t\t// @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n\t\t// @property {Array} _bindProperties Array of `_observable` properties to be bound.\n\t\t// @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n\t\t// @property {Map} _bindings Stores bindings to be kept in\n\t\t// {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n\t\t// initiated in this binding chain.\n\t\treturn {\n\t\t\tto: bindTo,\n\t\t\ttoMany: bindToMany,\n\n\t\t\t_observable: this,\n\t\t\t_bindProperties: bindProperties,\n\t\t\t_to: [],\n\t\t\t_bindings: bindings\n\t\t};\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tunbind( ...unbindProperties ) {\n\t\t// Nothing to do here if not inited yet.\n\t\tif ( !( this[ observablePropertiesSymbol ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\t\tconst boundObservables = this[ boundObservablesSymbol ];\n\n\t\tif ( unbindProperties.length ) {\n\t\t\tif ( !isStringArray( unbindProperties ) ) {\n\t\t\t\t/**\n\t\t\t\t * Properties must be strings.\n\t\t\t\t *\n\t\t\t\t * @error observable-unbind-wrong-properties\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-unbind-wrong-properties', this );\n\t\t\t}\n\n\t\t\tunbindProperties.forEach( propertyName => {\n\t\t\t\tconst binding = boundProperties.get( propertyName );\n\n\t\t\t\t// Nothing to do if the binding is not defined\n\t\t\t\tif ( !binding ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet toObservable, toProperty, toProperties, toPropertyBindings;\n\n\t\t\t\tbinding.to.forEach( to => {\n\t\t\t\t\t// TODO: ES6 destructuring.\n\t\t\t\t\ttoObservable = to[ 0 ];\n\t\t\t\t\ttoProperty = to[ 1 ];\n\t\t\t\t\ttoProperties = boundObservables.get( toObservable );\n\t\t\t\t\ttoPropertyBindings = toProperties[ toProperty ];\n\n\t\t\t\t\ttoPropertyBindings.delete( binding );\n\n\t\t\t\t\tif ( !toPropertyBindings.size ) {\n\t\t\t\t\t\tdelete toProperties[ toProperty ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !Object.keys( toProperties ).length ) {\n\t\t\t\t\t\tboundObservables.delete( toObservable );\n\t\t\t\t\t\tthis.stopListening( toObservable, 'change' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tboundProperties.delete( propertyName );\n\t\t\t} );\n\t\t} else {\n\t\t\tboundObservables.forEach( ( bindings, boundObservable ) => {\n\t\t\t\tthis.stopListening( boundObservable, 'change' );\n\t\t\t} );\n\n\t\t\tboundObservables.clear();\n\t\t\tboundProperties.clear();\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdecorate( methodName ) {\n\t\tconst originalMethod = this[ methodName ];\n\n\t\tif ( !originalMethod ) {\n\t\t\t/**\n\t\t\t * Cannot decorate an undefined method.\n\t\t\t *\n\t\t\t * @error observablemixin-cannot-decorate-undefined\n\t\t\t * @param {Object} object The object which method should be decorated.\n\t\t\t * @param {String} methodName Name of the method which does not exist.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'observablemixin-cannot-decorate-undefined',\n\t\t\t\tthis,\n\t\t\t\t{ object: this, methodName }\n\t\t\t);\n\t\t}\n\n\t\tthis.on( methodName, ( evt, args ) => {\n\t\t\tevt.return = originalMethod.apply( this, args );\n\t\t} );\n\n\t\tthis[ methodName ] = function( ...args ) {\n\t\t\treturn this.fire( methodName, args );\n\t\t};\n\t}\n};\n\nextend( ObservableMixin, EmitterMixin );\n\nexport default ObservableMixin;\n\n// Init symbol properties needed for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\nfunction initObservable( observable ) {\n\t// Do nothing if already inited.\n\tif ( observable[ observablePropertiesSymbol ] ) {\n\t\treturn;\n\t}\n\n\t// The internal hash containing the observable's state.\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, observablePropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Map containing bindings to external observables. It shares the binding objects\n\t// (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n\t// it is used to observe external observables to update own properties accordingly.\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\tz: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t},\n\t//\t\t\t\tC: {\n\t//\t\t\t\t\tw: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundObservablesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Object that stores which properties of this observable are bound and how. It shares\n\t// the binding objects (`{ observable: A, property: 'a', to: ... }`) with\n\t// {@link module:utils/observablemixin~ObservableMixin#_boundObservables}. This data structure is\n\t// a reverse of {@link module:utils/observablemixin~ObservableMixin#_boundObservables} and it is helpful for\n\t// {@link module:utils/observablemixin~ObservableMixin#unbind}.\n\t//\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundPropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n}\n\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\nfunction bindTo( ...args ) {\n\tconst parsedArgs = parseBindToArgs( ...args );\n\tconst bindingsKeys = Array.from( this._bindings.keys() );\n\tconst numberOfBindings = bindingsKeys.length;\n\n\t// Eliminate A.bind( 'x' ).to( B, C )\n\tif ( !parsedArgs.callback && parsedArgs.to.length > 1 ) {\n\t\t/**\n\t\t * Binding multiple observables only possible with callback.\n\t\t *\n\t\t * @error observable-bind-to-no-callback\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-no-callback', this );\n\t}\n\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\tif ( numberOfBindings > 1 && parsedArgs.callback ) {\n\t\t/**\n\t\t * Cannot bind multiple properties and use a callback in one binding.\n\t\t *\n\t\t * @error observable-bind-to-extra-callback\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'observable-bind-to-extra-callback',\n\t\t\tthis\n\t\t);\n\t}\n\n\tparsedArgs.to.forEach( to => {\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n\t\tif ( to.properties.length && to.properties.length !== numberOfBindings ) {\n\t\t\t/**\n\t\t\t * The number of properties must match.\n\t\t\t *\n\t\t\t * @error observable-bind-to-properties-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-to-properties-length', this );\n\t\t}\n\n\t\t// When no to.properties specified, observing source properties instead i.e.\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\t\tif ( !to.properties.length ) {\n\t\t\tto.properties = this._bindProperties;\n\t\t}\n\t} );\n\n\tthis._to = parsedArgs.to;\n\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\tif ( parsedArgs.callback ) {\n\t\tthis._bindings.get( bindingsKeys[ 0 ] ).callback = parsedArgs.callback;\n\t}\n\n\tattachBindToListeners( this._observable, this._to );\n\n\t// Update observable._boundProperties and observable._boundObservables.\n\tupdateBindToBound( this );\n\n\t// Set initial values of bound properties.\n\tthis._bindProperties.forEach( propertyName => {\n\t\tupdateBoundObservableProperty( this._observable, propertyName );\n\t} );\n}\n\n// Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\nfunction bindToMany( observables, attribute, callback ) {\n\tif ( this._bindings.size > 1 ) {\n\t\t/**\n\t\t * Binding one attribute to many observables only possible with one attribute.\n\t\t *\n\t\t * @error observable-bind-to-many-not-one-binding\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-many-not-one-binding', this );\n\t}\n\n\tthis.to(\n\t\t// Bind to #attribute of each observable...\n\t\t...getBindingTargets( observables, attribute ),\n\t\t// ...using given callback to parse attribute values.\n\t\tcallback\n\t);\n}\n\n// Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\nfunction getBindingTargets( observables, attribute ) {\n\tconst observableAndAttributePairs = observables.map( observable => [ observable, attribute ] );\n\n\t// Merge pairs to one-dimension array of observables and attributes.\n\treturn Array.prototype.concat.apply( [], observableAndAttributePairs );\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\nfunction parseBindToArgs( ...args ) {\n\t// Eliminate A.bind( 'x' ).to()\n\tif ( !args.length ) {\n\t\t/**\n\t\t * Invalid argument syntax in `to()`.\n\t\t *\n\t\t * @error observable-bind-to-parse-error\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-parse-error', null );\n\t}\n\n\tconst parsed = { to: [] };\n\tlet lastObservable;\n\n\tif ( typeof args[ args.length - 1 ] == 'function' ) {\n\t\tparsed.callback = args.pop();\n\t}\n\n\targs.forEach( a => {\n\t\tif ( typeof a == 'string' ) {\n\t\t\tlastObservable.properties.push( a );\n\t\t} else if ( typeof a == 'object' ) {\n\t\t\tlastObservable = { observable: a, properties: [] };\n\t\t\tparsed.to.push( lastObservable );\n\t\t} else {\n\t\t\tthrow new CKEditorError( 'observable-bind-to-parse-error', null );\n\t\t}\n\t} );\n\n\treturn parsed;\n}\n\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\nfunction updateBoundObservables( observable, binding, toObservable, toPropertyName ) {\n\tconst boundObservables = observable[ boundObservablesSymbol ];\n\tconst bindingsToObservable = boundObservables.get( toObservable );\n\tconst bindings = bindingsToObservable || {};\n\n\tif ( !bindings[ toPropertyName ] ) {\n\t\tbindings[ toPropertyName ] = new Set();\n\t}\n\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\n\tbindings[ toPropertyName ].add( binding );\n\n\tif ( !bindingsToObservable ) {\n\t\tboundObservables.set( toObservable, bindings );\n\t}\n}\n\n// Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\nfunction updateBindToBound( chain ) {\n\tlet toProperty;\n\n\tchain._bindings.forEach( ( binding, propertyName ) => {\n\t\t// Note: For a binding without a callback, this will run only once\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n\t\t// TODO: ES6 destructuring.\n\t\tchain._to.forEach( to => {\n\t\t\ttoProperty = to.properties[ binding.callback ? 0 : chain._bindProperties.indexOf( propertyName ) ];\n\n\t\t\tbinding.to.push( [ to.observable, toProperty ] );\n\t\t\tupdateBoundObservables( chain._observable, binding, to.observable, toProperty );\n\t\t} );\n\t} );\n}\n\n// Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\nfunction updateBoundObservableProperty( observable, propertyName ) {\n\tconst boundProperties = observable[ boundPropertiesSymbol ];\n\tconst binding = boundProperties.get( propertyName );\n\tlet propertyValue;\n\n\t// When a binding with callback is created like\n\t//\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n\t//\n\t// collect B.b and C.c, then pass them to callback to set A.a.\n\tif ( binding.callback ) {\n\t\tpropertyValue = binding.callback.apply( observable, binding.to.map( to => to[ 0 ][ to[ 1 ] ] ) );\n\t} else {\n\t\tpropertyValue = binding.to[ 0 ];\n\t\tpropertyValue = propertyValue[ 0 ][ propertyValue[ 1 ] ];\n\t}\n\n\tif ( Object.prototype.hasOwnProperty.call( observable, propertyName ) ) {\n\t\tobservable[ propertyName ] = propertyValue;\n\t} else {\n\t\tobservable.set( propertyName, propertyValue );\n\t}\n}\n\n// Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\nfunction attachBindToListeners( observable, toBindings ) {\n\ttoBindings.forEach( to => {\n\t\tconst boundObservables = observable[ boundObservablesSymbol ];\n\t\tlet bindings;\n\n\t\t// If there's already a chain between the observables (`observable` listens to\n\t\t// `to.observable`), there's no need to create another `change` event listener.\n\t\tif ( !boundObservables.get( to.observable ) ) {\n\t\t\tobservable.listenTo( to.observable, 'change', ( evt, propertyName ) => {\n\t\t\t\tbindings = boundObservables.get( to.observable )[ propertyName ];\n\n\t\t\t\t// Note: to.observable will fire for any property change, react\n\t\t\t\t// to changes of properties which are bound only.\n\t\t\t\tif ( bindings ) {\n\t\t\t\t\tbindings.forEach( binding => {\n\t\t\t\t\t\tupdateBoundObservableProperty( observable, binding.property );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n}\n\n/**\n * An interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\n\n/**\n * Fired when a property changed value.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n *\n * @event change:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n *\n * You can control the final value of the property by using\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n *\n *\t\t\t// Let's override the value.\n *\t\t\tevt.return = 3;\n *\t\t} );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n *\t\t                     // -> 'Current property value is 1'\n *\t\t                     // -> 'Value has changed from 1 to 3'\n *\n * **Note:** The event is fired even when the new value is the same as the old value.\n *\n * @event set:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Creates and sets the value of an observable property of this object. Such a property becomes a part\n * of the state and is observable.\n *\n * It accepts also a single object literal containing key/value pairs with properties to be set.\n *\n * This method throws the `observable-set-cannot-override` error if the observable instance already\n * has a property with the given property name. This prevents from mistakenly overriding existing\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n *\n * @method #set\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n */\n\n/**\n * Binds {@link #set observable properties} to other objects implementing the\n * {@link module:utils/observablemixin~Observable} interface.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n * covering the topic of property bindings with some additional examples.\n *\n * Consider two objects: a `button` and an associated `command` (both `Observable`).\n *\n * A simple property binding could be as follows:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n *\n * or even shorter:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\n * which works in the following way:\n *\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n *\n * **Note**: To release the binding, use {@link module:utils/observablemixin~Observable#unbind}.\n *\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n *\n * It is possible to bind more than one property at a time to shorten the code:\n *\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n *\n * which corresponds to:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\t\tbutton.bind( 'value' ).to( command );\n *\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n *\n * Using a custom callback allows processing the value before passing it to the target property:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'value', value => value === 'heading1' );\n *\n * It is also possible to bind to the same property in an array of observables.\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n * must be enabled for the button to become enabled, use the following code:\n *\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n *\n * @method #bind\n * @param {...String} bindProperties Observable properties that will be bound to other observable(s).\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n */\n\n/**\n * Removes the binding created with {@link #bind}.\n *\n *\t\t// Removes the binding for the 'a' property.\n *\t\tA.unbind( 'a' );\n *\n *\t\t// Removes bindings for all properties.\n *\t\tA.unbind();\n *\n * @method #unbind\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n * be released if no properties are provided.\n */\n\n/**\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n * (named after the method) and the original action will be plugged as a listener to that event.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n * covering the topic of decorating methods with some additional examples.\n *\n * Decorating the method does not change its behavior (it only adds an event),\n * but it allows to modify it later on by listening to the method's event.\n *\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n *\n *\t\tclass Foo {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.decorate( 'method' );\n *\t\t\t}\n *\n *\t\t\tmethod() {\n *\t\t\t\tconsole.log( 'called!' );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst foo = new Foo();\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method(); // Nothing is logged.\n *\n *\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n * has been used to execute this particular callback before the one which calls the original method\n * (which uses the \"normal\" priority).\n *\n * It is also possible to change the returned value:\n *\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.return = 'Foo!';\n *\t\t} );\n *\n *\t\tfoo.method(); // -> 'Foo'\n *\n * Finally, it is possible to access and modify the arguments the method is called with:\n *\n *\t\tmethod( a, b ) {\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tfoo.on( 'method', ( evt, args ) => {\n *\t\t\targs[ 0 ] = 3;\n *\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n *\n * @method #decorate\n * @param {String} methodName Name of the method to decorate.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/tooltip/tooltip.css';\n\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\nexport default class TooltipView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the tooltip visible to the user.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text', '' );\n\n\t\t/**\n\t\t * The position of the tooltip (south, south-west, or north).\n\t\t *\n\t\t *\t\t+-----------+\n\t\t *\t\t|   north   |\n\t\t *\t\t+-----------+\n\t\t *\t\t      V\n\t\t *\t\t  [element]\n\t\t *\n\t\t *\t\t  [element]\n\t\t *\t\t      ^\n\t\t *\t\t+-----------+\n\t\t *\t\t|   south   |\n\t\t *\t\t+-----------+\n\t\t *\n\t\t *\t\t         [element]\n\t\t *\t\t             ^\n\t\t *\t\t+--------------+\n\t\t *\t\t|  south west  |\n\t\t *\t\t+--------------+\n\t\t *\n\t\t * @observable\n\t\t * @default 's'\n\t\t * @member {'s'|'sw'|'n'} #position\n\t\t */\n\t\tthis.set( 'position', 's' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-tooltip',\n\t\t\t\t\tbind.to( 'position', position => 'ck-tooltip_' + position ),\n\t\t\t\t\tbind.if( 'text', 'ck-hidden', value => !value.trim() )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-tooltip__text'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport TooltipView from '../tooltip/tooltipview';\n\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\nimport '../../theme/components/button/button.css';\n\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\nexport default class ButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst ariaLabelUid = uid();\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'class' );\n\t\tthis.set( 'labelStyle' );\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\t\tthis.set( 'withKeystroke', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n\t\t */\n\t\tthis.tooltipView = this._createTooltipView();\n\n\t\t/**\n\t\t * Label of the button view. It is configurable using the {@link #label label attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( ariaLabelUid );\n\n\t\t/**\n\t\t * The icon view of the button. Will be added to {@link #children} when the\n\t\t * {@link #icon icon attribute} is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView} #iconView\n\t\t */\n\t\tthis.iconView = new IconView();\n\n\t\tthis.iconView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-button__icon'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\n\t\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n\t\t * is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view/view~View} #keystrokeView\n\t\t */\n\t\tthis.keystrokeView = this._createKeystrokeView();\n\n\t\t/**\n\t\t * Tooltip of the button bound to the template.\n\t\t *\n\t\t * @see #tooltip\n\t\t * @see #_getTooltipString\n\t\t * @private\n\t\t * @observable\n\t\t * @member {Boolean} #_tooltipString\n\t\t */\n\t\tthis.bind( '_tooltipString' ).to(\n\t\t\tthis, 'tooltip',\n\t\t\tthis, 'label',\n\t\t\tthis, 'keystroke',\n\t\t\tthis._getTooltipString.bind( this )\n\t\t);\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' ),\n\t\t\t\t\tbind.if( 'withKeystroke', 'ck-button_with-keystroke' )\n\t\t\t\t],\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\n\t\t\t\ttabindex: bind.to( 'tabindex' ),\n\t\t\t\t'aria-labelledby': `ck-editor__aria-label_${ ariaLabelUid }`,\n\t\t\t\t'aria-disabled': bind.if( 'isEnabled', true, value => !value ),\n\t\t\t\t'aria-pressed': bind.to( 'isOn', value => this.isToggleable ? String( value ) : false )\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( evt => {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.iconView.bind( 'content' ).to( this, 'icon' );\n\t\t\tthis.children.add( this.iconView );\n\t\t}\n\n\t\tthis.children.add( this.tooltipView );\n\t\tthis.children.add( this.labelView );\n\n\t\tif ( this.withKeystroke ) {\n\t\t\tthis.children.add( this.keystrokeView );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the {@link #element} of the button.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/tooltip/tooltipview~TooltipView}\n\t */\n\t_createTooltipView() {\n\t\tconst tooltipView = new TooltipView();\n\n\t\ttooltipView.bind( 'text' ).to( this, '_tooltipString' );\n\t\ttooltipView.bind( 'position' ).to( this, 'tooltipPosition' );\n\n\t\treturn tooltipView;\n\t}\n\n\t/**\n\t * Creates a label view instance and binds it with button attributes.\n\t *\n\t * @private\n\t * @param {String} ariaLabelUid The aria label UID.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createLabelView( ariaLabelUid ) {\n\t\tconst labelView = new View();\n\t\tconst bind = this.bindTemplate;\n\n\t\tlabelView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__label'\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'labelStyle' ),\n\t\t\t\tid: `ck-editor__aria-label_${ ariaLabelUid }`\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'label' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\n\t * and binds it with button attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createKeystrokeView() {\n\t\tconst keystrokeView = new View();\n\n\t\tkeystrokeView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__keystroke'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'keystroke', text => getEnvKeystrokeText( text ) )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn keystrokeView;\n\t}\n\n\t/**\n\t * Gets the text for the {@link #tooltipView} from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @private\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param {Boolean|String|Function} tooltip Button tooltip.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Button keystroke.\n\t * @returns {String}\n\t */\n\t_getTooltipString( tooltip, label, keystroke ) {\n\t\tif ( tooltip ) {\n\t\t\tif ( typeof tooltip == 'string' ) {\n\t\t\t\treturn tooltip;\n\t\t\t} else {\n\t\t\t\tif ( keystroke ) {\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\n\t\t\t\t}\n\n\t\t\t\tif ( tooltip instanceof Function ) {\n\t\t\t\t\treturn tooltip( label, keystroke );\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\n\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\n\nconst macGlyphsToModifiers = {\n\t'⌘': 'ctrl',\n\t'⇧': 'shift',\n\t'⌥': 'alt'\n};\n\nconst modifiersToMacGlyphs = {\n\t'ctrl': '⌘',\n\t'shift': '⇧',\n\t'alt': '⌥'\n};\n\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\nexport const keyCodes = generateKnownKeyCodes();\n\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\nexport function getCode( key ) {\n\tlet keyCode;\n\n\tif ( typeof key == 'string' ) {\n\t\tkeyCode = keyCodes[ key.toLowerCase() ];\n\n\t\tif ( !keyCode ) {\n\t\t\t/**\n\t\t\t * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n\t\t\t *\n\t\t\t * @error keyboard-unknown-key\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'keyboard-unknown-key', null, { key } );\n\t\t}\n\t} else {\n\t\tkeyCode = key.keyCode +\n\t\t\t( key.altKey ? keyCodes.alt : 0 ) +\n\t\t\t( key.ctrlKey ? keyCodes.ctrl : 0 ) +\n\t\t\t( key.shiftKey ? keyCodes.shift : 0 );\n\t}\n\n\treturn keyCode;\n}\n\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard~getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\nexport function parseKeystroke( keystroke ) {\n\tif ( typeof keystroke == 'string' ) {\n\t\tkeystroke = splitKeystrokeText( keystroke );\n\t}\n\n\treturn keystroke\n\t\t.map( key => ( typeof key == 'string' ) ? getCode( key ) : key )\n\t\t.reduce( ( key, sum ) => sum + key, 0 );\n}\n\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\nexport function getEnvKeystrokeText( keystroke ) {\n\tif ( !env.isMac ) {\n\t\treturn keystroke;\n\t}\n\n\treturn splitKeystrokeText( keystroke )\n\t\t// Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\n\t\t.map( key => modifiersToMacGlyphs[ key.toLowerCase() ] || key )\n\n\t\t// Decide whether to put \"+\" between keys in the keystroke or not.\n\t\t.reduce( ( value, key ) => {\n\t\t\tif ( value.slice( -1 ) in macGlyphsToModifiers ) {\n\t\t\t\treturn value + key;\n\t\t\t} else {\n\t\t\t\treturn value + '+' + key;\n\t\t\t}\n\t\t} );\n}\n\n/**\n * Returns `true` if the provided key code represents one of the arrow keys.\n *\n * @param {Number} keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @returns {Boolean}\n */\nexport function isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n/**\n * Returns the direction in which the {@link module:engine/model/documentselection~DocumentSelection selection}\n * will move when a provided arrow key code is pressed considering the language direction of the editor content.\n *\n * For instance, in right–to–left (RTL) content languages, pressing the left arrow means moving selection right (forward)\n * in the model structure. Similarly, pressing the right arrow moves the selection left (backward).\n *\n * @param {Number} keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @param {'ltr'|'rtl'} contentLanguageDirection The content language direction, corresponding to\n * {@link module:utils/locale~Locale#contentLanguageDirection}.\n * @returns {'left'|'up'|'right'|'down'} Localized arrow direction.\n */\nexport function getLocalizedArrowKeyCodeDirection( keyCode, contentLanguageDirection ) {\n\tconst isLtrContent = contentLanguageDirection === 'ltr';\n\n\tswitch ( keyCode ) {\n\t\tcase keyCodes.arrowleft:\n\t\t\treturn isLtrContent ? 'left' : 'right';\n\n\t\tcase keyCodes.arrowright:\n\t\t\treturn isLtrContent ? 'right' : 'left';\n\n\t\tcase keyCodes.arrowup:\n\t\t\treturn 'up';\n\n\t\tcase keyCodes.arrowdown:\n\t\t\treturn 'down';\n\t}\n}\n\n/**\n * Determines if the provided key code moves the {@link module:engine/model/documentselection~DocumentSelection selection}\n * forward or backward considering the language direction of the editor content.\n *\n * For instance, in right–to–left (RTL) languages, pressing the left arrow means moving forward\n * in the model structure. Similarly, pressing the right arrow moves the selection backward.\n *\n * @param {Number} keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @param {'ltr'|'rtl'} contentLanguageDirection The content language direction, corresponding to\n * {@link module:utils/locale~Locale#contentLanguageDirection}.\n * @returns {Boolean}\n */\nexport function isForwardArrowKeyCode( keyCode, contentLanguageDirection ) {\n\tconst localizedKeyCodeDirection = getLocalizedArrowKeyCodeDirection( keyCode, contentLanguageDirection );\n\n\treturn localizedKeyCodeDirection === 'down' || localizedKeyCodeDirection === 'right';\n}\n\nfunction generateKnownKeyCodes() {\n\tconst keyCodes = {\n\t\tarrowleft: 37,\n\t\tarrowup: 38,\n\t\tarrowright: 39,\n\t\tarrowdown: 40,\n\t\tbackspace: 8,\n\t\tdelete: 46,\n\t\tenter: 13,\n\t\tspace: 32,\n\t\tesc: 27,\n\t\ttab: 9,\n\n\t\t// The idea about these numbers is that they do not collide with any real key codes, so we can use them\n\t\t// like bit masks.\n\t\tctrl: 0x110000,\n\t\t// Has the same code as ctrl, because their behaviour should be unified across the editor.\n\t\t// See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n\t\tcmd: 0x110000,\n\t\tshift: 0x220000,\n\t\talt: 0x440000\n\t};\n\n\t// a-z\n\tfor ( let code = 65; code <= 90; code++ ) {\n\t\tconst letter = String.fromCharCode( code );\n\n\t\tkeyCodes[ letter.toLowerCase() ] = code;\n\t}\n\n\t// 0-9\n\tfor ( let code = 48; code <= 57; code++ ) {\n\t\tkeyCodes[ code - 48 ] = code;\n\t}\n\n\t// F1-F12\n\tfor ( let code = 112; code <= 123; code++ ) {\n\t\tkeyCodes[ 'f' + ( code - 111 ) ] = code;\n\t}\n\n\treturn keyCodes;\n}\n\nfunction splitKeystrokeText( keystroke ) {\n\treturn keystroke.split( /\\s*\\+\\s*/ );\n}\n\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/element\n */\n\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n// @if CK_DEBUG_ENGINE // const { stringifyMap, convertMapToStringifiedObject, convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n *\n * @extends module:engine/model/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a model element.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\n\t *\n\t * @protected\n\t * @param {String} name Element's name.\n\t * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * One or more nodes to be inserted as children of created element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Element name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/model/element~Element#name\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * List of children nodes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Number of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\telement.is( 'element' ); // -> true\n\t *\t\telement.is( 'node' ); // -> true\n\t *\t\telement.is( 'model:element' ); // -> true\n\t *\t\telement.is( 'model:node' ); // -> true\n\t *\n\t *\t\telement.is( 'view:element' ); // -> false\n\t *\t\telement.is( 'documentSelection' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/model/element~Element#name name}:\n\t *\n\t *\t\telement.is( 'element', 'image' ); // -> true if this is an <image> element\n\t *\t\telement.is( 'element', 'image' ); // -> same as above\n\t *\t\ttext.is( 'element', 'image' ); -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'element' || type === 'model:element' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'node' || type === 'model:node';\n\t\t}\n\n\t\treturn name === this.name && ( type === 'element' || type === 'model:element' );\n\t}\n\n\t/**\n\t * Gets the child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this element's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's index in this element.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst divElement = new Element( [ textNode, pElement ] );\n\t *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number}\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Returns the parent element of the given name. Returns null if the element is not inside the desired parent.\n\t *\n\t * @param {String} parentName The name of the parent element to find.\n\t * @param {Object} [options] Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included while searching.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tfindAncestor( parentName, options = { includeSelf: false } ) {\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( parent.name === parentName ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n\t *\n\t * @returns {Object} `Element` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.name = this.name;\n\n\t\tif ( this._children.length > 0 ) {\n\t\t\tjson.children = [];\n\n\t\t\tfor ( const node of this._children ) {\n\t\t\t\tjson.children.push( node.toJSON() );\n\t\t\t}\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n\t * If clone is deep, the original element's children are also cloned. If not, then empty element is returned.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any child.\n\t */\n\t_clone( deep = false ) {\n\t\tconst children = deep ? Array.from( this._children ).map( node => node._clone( true ) ) : null;\n\n\t\treturn new Element( this.name, this.getAttributes(), children );\n\t}\n\n\t/**\n\t * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\n\t *\n\t * @see module:engine/model/writer~Writer#append\n\t * @protected\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\n\t */\n\t_appendChild( nodes ) {\n\t\tthis._insertChild( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this element.\n\t *\n\t * @see module:engine/model/writer~Writer#insert\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_insertChild( index, items ) {\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children._insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index and sets\n\t * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @see module:engine/model/writer~Writer#remove\n\t * @protected\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children._removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `Element` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `Element`.\n\t * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tlet children = null;\n\n\t\tif ( json.children ) {\n\t\t\tchildren = [];\n\n\t\t\tfor ( const child of json.children ) {\n\t\t\t\tif ( child.name ) {\n\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Element( json.name, json.attributes, children );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `<${ this.rootName || this.name }>`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelElement: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelElement: ${ this }, ${ this.childCount } children,\n\t// @if CK_DEBUG_ENGINE //\t\tattrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logAll() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( '--------------------' );\n\t// @if CK_DEBUG_ENGINE //\n\t// @if CK_DEBUG_ENGINE // \tthis.logExtended();\n\t// @if CK_DEBUG_ENGINE //\tconsole.log( 'List of children:' );\n\t// @if CK_DEBUG_ENGINE //\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE // \t\tchild.log();\n\t// @if CK_DEBUG_ENGINE // \t}\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE // \tstring += '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE // \tstring += `<${ this.rootName || this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n';\n\n\t// @if CK_DEBUG_ENGINE // \t\tif ( child.is( '$text' ) ) {\n\t// @if CK_DEBUG_ENGINE // \t\t\tconst textAttrs = convertMapToTags( child._attrs );\n\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += '\\t'.repeat( level + 1 );\n\n\t// @if CK_DEBUG_ENGINE // \t\t\tif ( textAttrs !== '' ) {\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\n\t// @if CK_DEBUG_ENGINE // \t\t\t} else {\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += child.data;\n\t// @if CK_DEBUG_ENGINE // \t\t\t}\n\t// @if CK_DEBUG_ENGINE // \t\t} else {\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE // \t\t}\n\t// @if CK_DEBUG_ENGINE // \t}\n\n\t// @if CK_DEBUG_ENGINE // \tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE // \t}\n\n\t// @if CK_DEBUG_ENGINE // \tstring += `</${ this.rootName || this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE // \treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\n\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\nexport const NBSP_FILLER = domDocument => domDocument.createTextNode( '\\u00A0' );\n\n/**\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\nexport const BR_FILLER = domDocument => {\n\tconst fillerBr = domDocument.createElement( 'br' );\n\tfillerBr.dataset.ckeFiller = true;\n\n\treturn fillerBr;\n};\n\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\nexport const INLINE_FILLER_LENGTH = 7;\n\n/**\n * Inline filler which is a sequence of the zero width spaces.\n *\n * @type {String}\n */\nexport const INLINE_FILLER = ( () => {\n\tlet inlineFiller = '';\n\n\tfor ( let i = 0; i < INLINE_FILLER_LENGTH; i++ ) {\n\t\tinlineFiller += '\\u200b';\n\t}\n\n\treturn inlineFiller;\n} )(); // Usu IIF so the INLINE_FILLER appears as a constant in the docs.\n\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function startsWithFiller( domNode ) {\n\treturn isText( domNode ) && ( domNode.data.substr( 0, INLINE_FILLER_LENGTH ) === INLINE_FILLER );\n}\n\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function isInlineFiller( domText ) {\n\treturn domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller( domText );\n}\n\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\nexport function getDataWithoutFiller( domText ) {\n\tif ( startsWithFiller( domText ) ) {\n\t\treturn domText.data.slice( INLINE_FILLER_LENGTH );\n\t} else {\n\t\treturn domText.data;\n\t}\n}\n\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\nexport function injectQuirksHandling( view ) {\n\tview.document.on( 'keydown', jumpOverInlineFiller );\n}\n\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\nfunction jumpOverInlineFiller( evt, data ) {\n\tif ( data.keyCode == keyCodes.arrowleft ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\tif ( domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed ) {\n\t\t\tconst domParent = domSelection.getRangeAt( 0 ).startContainer;\n\t\t\tconst domOffset = domSelection.getRangeAt( 0 ).startOffset;\n\n\t\t\tif ( startsWithFiller( domParent ) && domOffset <= INLINE_FILLER_LENGTH ) {\n\t\t\t\tdomSelection.collapse( domParent, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MoveOperation extends Operation {\n\t/**\n\t * Creates a move operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\t\tthis.sourcePosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which moved nodes will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\tthis.targetPosition.stickiness = 'toNone';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.targetPosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'remove';\n\t\t} else if ( this.sourcePosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'reinsert';\n\t\t}\n\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * Returns the start position of the moved range after it got moved. This may be different than\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n\t *\n\t *\t\t vv              vv\n\t *\t\tabcdefg ===> adefbcg\n\t *\t\t     ^          ^\n\t *\t\t     targetPos\tmovedRangeStart\n\t *\t\t     offset 6\toffset 4\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetMovedRangeStart() {\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\n\n\t\treturn new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\t\tconst sourceOffset = this.sourcePosition.offset;\n\t\tconst targetOffset = this.targetPosition.offset;\n\n\t\t// Validate whether move operation has correct parameters.\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\tif ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * The nodes which should be moved do not exist.\n\t\t\t *\n\t\t\t * @error move-operation-nodes-do-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-nodes-do-not-exist', this\n\t\t\t);\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\n\t\t\t/**\n\t\t\t * Trying to move a range of nodes into the middle of that range.\n\t\t\t *\n\t\t\t * @error move-operation-range-into-itself\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-range-into-itself', this\n\t\t\t);\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\n\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\n\t\t\t\t\t *\n\t\t\t\t\t * @error move-operation-node-into-itself\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'move-operation-node-into-itself', this\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_move( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\t\tjson.targetPosition = this.targetPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MoveOperation';\n\t}\n\n\t/**\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `MoveOperation( ${ this.baseVersion } ): ${ range } -> ${ this.targetPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/text\n */\n\nimport Node from './node';\n\n/**\n * Tree view text node.\n *\n * The constructor of this class should not be used directly. To create a new text node instance\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a tree view text node.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this text node belongs.\n\t * @param {String} data The text's data.\n\t */\n\tconstructor( document, data ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * The text content.\n\t\t *\n\t\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t\t *\n\t\t * @protected\n\t\t * @member {String} module:engine/view/text~Text#_textData\n\t\t */\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttext.is( '$text' ); // -> true\n\t *\t\ttext.is( 'node' ); // -> true\n\t *\t\ttext.is( 'view:$text' ); // -> true\n\t *\t\ttext.is( 'view:node' ); // -> true\n\t *\n\t *\t\ttext.is( 'model:$text' ); // -> false\n\t *\t\ttext.is( 'element' ); // -> false\n\t *\t\ttext.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * **Note:** Until version 20.0.0 this method wasn't accepting `'$text'` type. The legacy `'text'` type is still\n\t * accepted for backward compatibility.\n\t *\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === '$text' || type === 'view:$text' ||\n\t\t\t// This are legacy values kept for backward compatibility.\n\t\t\ttype === 'text' || type === 'view:text' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'node' || type === 'view:node';\n\t}\n\n\t/**\n\t * The text content.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tget data() {\n\t\treturn this._textData;\n\t}\n\n\t/**\n\t * The `_data` property is controlled by a getter and a setter.\n\t *\n\t * The getter is required when using the addition assignment operator on protected property:\n\t *\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst bar = downcastWriter.createText( 'bar' );\n\t *\n\t *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n\t *\t\tconsole.log( foo.data ); // prints: 'foobar'\n\t *\n\t * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n\t *\n\t * The setter sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t *\n\t * @protected\n\t * @type {String}\n\t */\n\tget _data() {\n\t\treturn this.data;\n\t}\n\n\tset _data( data ) {\n\t\tthis._fireChange( 'text', this );\n\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks if this text node is similar to other text node.\n\t * Both nodes should have the same data to be considered as similar.\n\t *\n\t * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherNode ) {\n\t\tif ( !( otherNode instanceof Text ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === otherNode || this.data === otherNode.data;\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n\t */\n\t_clone() {\n\t\treturn new Text( this.document, this.data );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/text\n */\n\nimport Node from './node';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\n\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n *\n * @extends module:engine/model/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a text node.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createText} method instead.\n\t *\n\t * @protected\n\t * @param {String} data Node's text.\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( data, attrs ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Text data contained in this text node.\n\t\t *\n\t\t * @protected\n\t\t * @type {String}\n\t\t */\n\t\tthis._data = data || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Returns a text data contained in the node.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\ttext.is( '$text' ); // -> true\n\t *\t\ttext.is( 'node' ); // -> true\n\t *\t\ttext.is( 'model:$text' ); // -> true\n\t *\t\ttext.is( 'model:node' ); // -> true\n\t *\n\t *\t\ttext.is( 'view:$text' ); // -> false\n\t *\t\ttext.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * **Note:** Until version 20.0.0 this method wasn't accepting `'$text'` type. The legacy `'text'` type is still\n\t * accepted for backward compatibility.\n\t *\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === '$text' || type === 'model:$text' ||\n\t\t\t// This are legacy values kept for backward compatibility.\n\t\t\ttype === 'text' || type === 'model:text' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'node' || type === 'model:node';\n\t}\n\n\t/**\n\t * Converts `Text` instance to plain object and returns it.\n\t *\n\t * @returns {Object} `Text` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.data = this.data;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\t_clone() {\n\t\treturn new Text( this.data, this.getAttributes() );\n\t}\n\n\t/**\n\t * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Text`.\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new Text( json.data, json.attributes );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelText: ${ this }, attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/splitoperation\n */\n\nimport Operation from './operation';\nimport MergeOperation from './mergeoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _insert, _move } from './utils';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to split {@link module:engine/model/element~Element an element} at given\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\n * both containing a part of the element's original content.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class SplitOperation extends Operation {\n\t/**\n\t * Creates a split operation.\n\t *\n\t * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\n\t * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\n\t * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\n\t * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( splitPosition, howMany, graveyardPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position at which an element should be split.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\n\t\t */\n\t\tthis.splitPosition = splitPosition.clone();\n\t\t// Keep position sticking to the next node. This way any new content added at the place where the element is split\n\t\t// will be left in the original element.\n\t\tthis.splitPosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Total offset size of elements that are in the split element after `position`.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which the clone of split element (or element from graveyard) will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\n\t\t */\n\t\tthis.insertionPosition = SplitOperation.getInsertionPosition( splitPosition );\n\t\tthis.insertionPosition.stickiness = 'toNone';\n\n\t\t/**\n\t\t * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\n\t\t * If it is not set, a copy of the the `position` parent will be used.\n\t\t *\n\t\t * The default behavior is to clone the split element. Element from graveyard is used during undo.\n\t\t *\n\t\t * @member {module:engine/model/position~Position|null} #graveyardPosition\n\t\t */\n\t\tthis.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\tthis.graveyardPosition.stickiness = 'toNext';\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'split';\n\t}\n\n\t/**\n\t * Position inside the new clone of a split element.\n\t *\n\t * This is a position where nodes that are after the split position will be moved to.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget moveTargetPosition() {\n\t\tconst path = this.insertionPosition.path.slice();\n\t\tpath.push( 0 );\n\n\t\treturn new Position( this.insertionPosition.root, path );\n\t}\n\n\t/**\n\t * Artificial range that contains all the nodes from the split element that will be moved to the new element.\n\t * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range}\n\t */\n\tget movedRange() {\n\t\tconst end = this.splitPosition.getShiftedBy( Number.POSITIVE_INFINITY );\n\n\t\treturn new Range( this.splitPosition, end );\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\tconst split = new this.constructor( this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion );\n\t\tsplit.insertionPosition = this.insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n\t */\n\tgetReversed() {\n\t\tconst graveyard = this.splitPosition.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\n\n\t\treturn new MergeOperation( this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst element = this.splitPosition.parent;\n\t\tconst offset = this.splitPosition.offset;\n\n\t\t// Validate whether split operation has correct parameters.\n\t\tif ( !element || element.maxOffset < offset ) {\n\t\t\t/**\n\t\t\t * Split position is invalid.\n\t\t\t *\n\t\t\t * @error split-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-position-invalid', this );\n\t\t} else if ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Cannot split root element.\n\t\t\t *\n\t\t\t * @error split-operation-split-in-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-split-in-root', this );\n\t\t} else if ( this.howMany != element.maxOffset - this.splitPosition.offset ) {\n\t\t\t/**\n\t\t\t * Split operation specifies wrong number of nodes to move.\n\t\t\t *\n\t\t\t * @error split-operation-how-many-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-how-many-invalid', this );\n\t\t} else if ( this.graveyardPosition && !this.graveyardPosition.nodeAfter ) {\n\t\t\t/**\n\t\t\t * Graveyard position invalid.\n\t\t\t *\n\t\t\t * @error split-operation-graveyard-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-graveyard-position-invalid', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst splitElement = this.splitPosition.parent;\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\t_move( Range._createFromPositionAndShift( this.graveyardPosition, 1 ), this.insertionPosition );\n\t\t} else {\n\t\t\tconst newElement = splitElement._clone();\n\n\t\t\t_insert( this.insertionPosition, newElement );\n\t\t}\n\n\t\tconst sourceRange = new Range(\n\t\t\tPosition._createAt( splitElement, this.splitPosition.offset ),\n\t\t\tPosition._createAt( splitElement, splitElement.maxOffset )\n\t\t);\n\n\t\t_move( sourceRange, this.moveTargetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.splitPosition = this.splitPosition.toJSON();\n\t\tjson.insertionPosition = this.insertionPosition.toJSON();\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\tjson.graveyardPosition = this.graveyardPosition.toJSON();\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'SplitOperation';\n\t}\n\n\t/**\n\t * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\n\t * position is after the split element.\n\t *\n\t * @param {module:engine/model/position~Position} splitPosition\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic getInsertionPosition( splitPosition ) {\n\t\tconst path = splitPosition.path.slice( 0, -1 );\n\t\tpath[ path.length - 1 ]++;\n\n\t\treturn new Position( splitPosition.root, path );\n\t}\n\n\t/**\n\t * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst splitPosition = Position.fromJSON( json.splitPosition, document );\n\t\tconst insertionPosition = Position.fromJSON( json.insertionPosition, document );\n\t\tconst graveyardPosition = json.graveyardPosition ? Position.fromJSON( json.graveyardPosition, document ) : null;\n\n\t\tconst split = new this( splitPosition, json.howMany, graveyardPosition, json.baseVersion );\n\t\tsplit.insertionPosition = insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `SplitOperation( ${ this.baseVersion } ): ${ this.splitPosition } ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`( ${ this.howMany } ) -> ${ this.insertionPosition }` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.graveyardPosition ? ' with ' + this.graveyardPosition : '' }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/rect\n */\n\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\n\nconst rectProperties = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\nexport default class Rect {\n\t/**\n\t * Creates an instance of rect.\n\t *\n\t *\t\t// Rect of an HTMLElement.\n\t *\t\tconst rectA = new Rect( document.body );\n\t *\n\t *\t\t// Rect of a DOM Range.\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n\t *\n\t *\t\t// Rect of a window (web browser viewport).\n\t *\t\tconst rectC = new Rect( window );\n\t *\n\t *\t\t// Rect out of an object.\n\t *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n\t *\n\t *\t\t// Rect out of another Rect instance.\n\t *\t\tconst rectE = new Rect( rectD );\n\t *\n\t *\t\t// Rect out of a ClientRect.\n\t *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n\t *\n\t * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n\t * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n\t * to get the inner part of the rect.\n\t *\n\t * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n\t */\n\tconstructor( source ) {\n\t\tconst isSourceRange = isRange( source );\n\n\t\t/**\n\t\t * The object this rect is for.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n\t\t */\n\t\tObject.defineProperty( this, '_source', {\n\t\t\t// If the source is a Rect instance, copy it's #_source.\n\t\t\tvalue: source._source || source,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t} );\n\n\t\tif ( isElement( source ) || isSourceRange ) {\n\t\t\t// The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\n\t\t\t// of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\n\t\t\t// will fail to obtain the geometry and the rect instance makes little sense to the features using it.\n\t\t\t// To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\n\t\t\t// @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\n\t\t\t// @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\n\t\t\t// @if CK_DEBUG // \tconsole.warn(\n\t\t\t// @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\n\t\t\t// @if CK_DEBUG // \t\t{ source } );\n\t\t\t// @if CK_DEBUG // }\n\n\t\t\tif ( isSourceRange ) {\n\t\t\t\tconst rangeRects = Rect.getDomRangeRects( source );\n\t\t\t\tcopyRectProperties( this, Rect.getBoundingRect( rangeRects ) );\n\t\t\t} else {\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t\t}\n\t\t} else if ( isWindow( source ) ) {\n\t\t\tconst { innerWidth, innerHeight } = source;\n\n\t\t\tcopyRectProperties( this, {\n\t\t\t\ttop: 0,\n\t\t\t\tright: innerWidth,\n\t\t\t\tbottom: innerHeight,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: innerWidth,\n\t\t\t\theight: innerHeight\n\t\t\t} );\n\t\t} else {\n\t\t\tcopyRectProperties( this, source );\n\t\t}\n\n\t\t/**\n\t\t * The \"top\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #top\n\t\t */\n\n\t\t/**\n\t\t * The \"right\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #right\n\t\t */\n\n\t\t/**\n\t\t * The \"bottom\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #bottom\n\t\t */\n\n\t\t/**\n\t\t * The \"left\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #left\n\t\t */\n\n\t\t/**\n\t\t * The \"width\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #width\n\t\t */\n\n\t\t/**\n\t\t * The \"height\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #height\n\t\t */\n\t}\n\n\t/**\n\t * Returns a clone of the rect.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\n\t */\n\tclone() {\n\t\treturn new Rect( this );\n\t}\n\n\t/**\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n\t *\n\t * @param {Number} x Desired horizontal location.\n\t * @param {Number} y Desired vertical location.\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveTo( x, y ) {\n\t\tthis.top = y;\n\t\tthis.right = x + this.width;\n\t\tthis.bottom = y + this.height;\n\t\tthis.left = x;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the rect in–place by a dedicated offset.\n\t *\n\t * @param {Number} x A horizontal offset.\n\t * @param {Number} y A vertical offset\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveBy( x, y ) {\n\t\tthis.top += y;\n\t\tthis.right += x;\n\t\tthis.left += x;\n\t\tthis.bottom += y;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new rect a a result of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {module:utils/dom/rect~Rect}\n\t */\n\tgetIntersection( anotherRect ) {\n\t\tconst rect = {\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\n\t\t\tright: Math.min( this.right, anotherRect.right ),\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\n\t\t\tleft: Math.max( this.left, anotherRect.left )\n\t\t};\n\n\t\trect.width = rect.right - rect.left;\n\t\trect.height = rect.bottom - rect.top;\n\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new Rect( rect );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect [description]\n\t * @returns {Number} Area of intersection.\n\t */\n\tgetIntersectionArea( anotherRect ) {\n\t\tconst rect = this.getIntersection( anotherRect );\n\n\t\tif ( rect ) {\n\t\t\treturn rect.getArea();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of the rect.\n\t *\n\t * @returns {Number}\n\t */\n\tgetArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\t/**\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n\t * other than `\"visible\"`.\n\t *\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\n\t * the ancestors, `null` is returned.\n\t *\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n\t */\n\tgetVisible() {\n\t\tconst source = this._source;\n\t\tlet visibleRect = this.clone();\n\n\t\t// There's no ancestor to crop <body> with the overflow.\n\t\tif ( !isBody( source ) ) {\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\twhile ( parent && !isBody( parent ) ) {\n\t\t\t\tconst parentRect = new Rect( parent );\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\n\n\t\t\t\tif ( intersectionRect ) {\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleRect;\n\t}\n\n\t/**\n\t * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n\t * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n\t * instances.\n\t *\n\t * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n\t * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n\t */\n\tisEqual( anotherRect ) {\n\t\tfor ( const prop of rectProperties ) {\n\t\t\tif ( this[ prop ] !== anotherRect[ prop ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether a rect fully contains another rect instance.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {Boolean} `true` if contains, `false` otherwise.\n\t */\n\tcontains( anotherRect ) {\n\t\tconst intersectRect = this.getIntersection( anotherRect );\n\n\t\treturn !!( intersectRect && intersectRect.isEqual( anotherRect ) );\n\t}\n\n\t/**\n\t * Excludes scrollbars and CSS borders from the rect.\n\t *\n\t * * Borders are removed when {@link #_source} is an HTML element.\n\t * * Scrollbars are excluded from HTML elements and the `window`.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n\t */\n\texcludeScrollbarsAndBorders() {\n\t\tconst source = this._source;\n\t\tlet scrollBarWidth, scrollBarHeight, direction;\n\n\t\tif ( isWindow( source ) ) {\n\t\t\tscrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n\t\t\tscrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n\t\t\tdirection = source.getComputedStyle( source.document.documentElement ).direction;\n\t\t} else {\n\t\t\tconst borderWidths = getBorderWidths( this._source );\n\n\t\t\tscrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\n\t\t\tscrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\n\t\t\tdirection = source.ownerDocument.defaultView.getComputedStyle( source ).direction;\n\n\t\t\tthis.left += borderWidths.left;\n\t\t\tthis.top += borderWidths.top;\n\t\t\tthis.right -= borderWidths.right;\n\t\t\tthis.bottom -= borderWidths.bottom;\n\t\t\tthis.width = this.right - this.left;\n\t\t\tthis.height = this.bottom - this.top;\n\t\t}\n\n\t\tthis.width -= scrollBarWidth;\n\n\t\tif ( direction === 'ltr' ) {\n\t\t\tthis.right -= scrollBarWidth;\n\t\t} else {\n\t\t\tthis.left += scrollBarWidth;\n\t\t}\n\n\t\tthis.height -= scrollBarHeight;\n\t\tthis.bottom -= scrollBarHeight;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of rects of the given native DOM Range.\n\t *\n\t * @param {Range} range A native DOM range.\n\t * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n\t */\n\tstatic getDomRangeRects( range ) {\n\t\tconst rects = [];\n\t\t// Safari does not iterate over ClientRectList using for...of loop.\n\t\tconst clientRects = Array.from( range.getClientRects() );\n\n\t\tif ( clientRects.length ) {\n\t\t\tfor ( const rect of clientRects ) {\n\t\t\t\trects.push( new Rect( rect ) );\n\t\t\t}\n\t\t}\n\t\t// If there's no client rects for the Range, use parent container's bounding rect\n\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\n\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/317\n\t\telse {\n\t\t\tlet startContainer = range.startContainer;\n\n\t\t\tif ( isText( startContainer ) ) {\n\t\t\t\tstartContainer = startContainer.parentNode;\n\t\t\t}\n\n\t\t\tconst rect = new Rect( startContainer.getBoundingClientRect() );\n\t\t\trect.right = rect.left;\n\t\t\trect.width = 0;\n\n\t\t\trects.push( rect );\n\t\t}\n\n\t\treturn rects;\n\t}\n\n\t/**\n\t * Returns a bounding rectangle that contains all the given `rects`.\n\t *\n\t * @param {Iterable.<module:utils/dom/rect~Rect>} rects A list of rectangles that should be contained in the result rectangle.\n\t * @returns {module:utils/dom/rect~Rect|null} Bounding rectangle or `null` if no `rects` were given.\n\t */\n\tstatic getBoundingRect( rects ) {\n\t\tconst boundingRectData = {\n\t\t\tleft: Number.POSITIVE_INFINITY,\n\t\t\ttop: Number.POSITIVE_INFINITY,\n\t\t\tright: Number.NEGATIVE_INFINITY,\n\t\t\tbottom: Number.NEGATIVE_INFINITY\n\t\t};\n\t\tlet rectangleCount = 0;\n\n\t\tfor ( const rect of rects ) {\n\t\t\trectangleCount++;\n\n\t\t\tboundingRectData.left = Math.min( boundingRectData.left, rect.left );\n\t\t\tboundingRectData.top = Math.min( boundingRectData.top, rect.top );\n\t\t\tboundingRectData.right = Math.max( boundingRectData.right, rect.right );\n\t\t\tboundingRectData.bottom = Math.max( boundingRectData.bottom, rect.bottom );\n\t\t}\n\n\t\tif ( rectangleCount == 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboundingRectData.width = boundingRectData.right - boundingRectData.left;\n\t\tboundingRectData.height = boundingRectData.bottom - boundingRectData.top;\n\n\t\treturn new Rect( boundingRectData );\n\t}\n}\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\nfunction copyRectProperties( rect, source ) {\n\tfor ( const p of rectProperties ) {\n\t\trect[ p ] = source[ p ];\n\t}\n}\n\n// Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\nfunction isBody( elementOrRange ) {\n\tif ( !isElement( elementOrRange ) ) {\n\t\treturn false;\n\t}\n\n\treturn elementOrRange === elementOrRange.ownerDocument.body;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/command\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Command {\n\t/**\n\t * Creates a new `Command` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor on which this command will be used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The value of the command. A concrete command class should define what it represents for it.\n\t\t *\n\t\t * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\n\t\t * And the value of the `'link'` command may be an object with links details.\n\t\t *\n\t\t * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\n\t\t *\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member #value\n\t\t */\n\t\tthis.set( 'value', undefined );\n\n\t\t/**\n\t\t * Flag indicating whether a command is enabled or disabled.\n\t\t * A disabled command will do nothing when executed.\n\t\t *\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n\t\t *\n\t\t * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\n\t\t * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\n\t\t * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\n\t\t *\n\t\t *\t\tfunction disableCommand( cmd ) {\n\t\t *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t *\n\t\t *\t\t\tcmd.isEnabled = false;\n\t\t *\n\t\t *\t\t\t// Make it possible to enable the command again.\n\t\t *\t\t\treturn () => {\n\t\t *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\n\t\t *\t\t\t\tcmd.refresh();\n\t\t *\t\t\t};\n\t\t *\n\t\t *\t\t\tfunction forceDisable( evt ) {\n\t\t *\t\t\t\tevt.return = false;\n\t\t *\t\t\t\tevt.stop();\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t *\t\t// Usage:\n\t\t *\n\t\t *\t\t// Disabling the command.\n\t\t *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\n\t\t *\n\t\t *\t\t// Enabling the command again.\n\t\t *\t\tenableBold();\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', false );\n\n\t\t/**\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\n\t\t *\n\t\t * @type {Set.<String>}\n\t\t * @private\n\t\t */\n\t\tthis._disableStack = new Set();\n\n\t\tthis.decorate( 'execute' );\n\n\t\t// By default every command is refreshed when changes are applied to the model.\n\t\tthis.listenTo( this.editor.model.document, 'change', () => {\n\t\t\tthis.refresh();\n\t\t} );\n\n\t\tthis.on( 'execute', evt => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// By default commands are disabled when the editor is in read-only mode.\n\t\tthis.listenTo( editor, 'change:isReadOnly', ( evt, name, value ) => {\n\t\t\tif ( value ) {\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\n\t\t\t} else {\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\n\t * in this method.\n\t *\n\t * This method is automatically called when\n\t * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\n\t */\n\trefresh() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the command.\n\t *\n\t * Command may be disabled by multiple features or algorithms (at once). When disabling a command, unique id should be passed\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the command.\n\t * The command becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n\t *\n\t * Disabling and enabling a command:\n\t *\n\t *\t\tcommand.isEnabled; // -> true\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> false\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * Command disabled by multiple features:\n\t *\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.forceDisabled( 'OtherFeature' );\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> false\n\t *\t\tcommand.clearForceDisabled( 'OtherFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * Multiple disabling with the same identifier is redundant:\n\t *\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * **Note:** some commands or algorithms may have more complex logic when it comes to enabling or disabling certain commands,\n\t * so the command might be still disabled after {@link #clearForceDisabled} was used.\n\t *\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the command.\n\t */\n\tforceDisabled( id ) {\n\t\tthis._disableStack.add( id );\n\n\t\tif ( this._disableStack.size == 1 ) {\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n\t *\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n\t */\n\tclearForceDisabled( id ) {\n\t\tthis._disableStack.delete( id );\n\n\t\tif ( this._disableStack.size == 0 ) {\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\n\t * to the command.\n\t *\n\t * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n\t * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n\t *\n\t * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\n\t *\n\t * This method may return a value, which would be forwarded all the way down to the\n\t * {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n\t *\n\t * @fires execute\n\t */\n\texecute() {}\n\n\t/**\n\t * Destroys the command.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n\t * possible to change/cancel the behavior of the command by listening to this event.\n\t *\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n\t * by a high priority listener in order to prevent command execution.\n\t *\n\t * @event execute\n\t */\n}\n\nmix( Command, ObservableMixin );\n\n// Helper function that forces command to be disabled.\nfunction forceDisable( evt ) {\n\tevt.return = false;\n\tevt.stop();\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default { window, document };\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/collection\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport isIterable from './isiterable';\nimport mix from './mix';\n\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Collection {\n\t/**\n\t * Creates a new Collection instance.\n\t *\n\t * You can provide an iterable of initial items the collection will be created with:\n\t *\n\t *\t\tconst collection = new Collection( [ { id: 'John' }, { id: 'Mike' } ] );\n\t *\n\t *\t\tconsole.log( collection.get( 0 ) ); // -> { id: 'John' }\n\t *\t\tconsole.log( collection.get( 1 ) ); // -> { id: 'Mike' }\n\t *\t\tconsole.log( collection.get( 'Mike' ) ); // -> { id: 'Mike' }\n\t *\n\t * Or you can first create a collection and then add new items using the {@link #add} method:\n\t *\n\t *\t\tconst collection = new Collection();\n\t *\n\t *\t\tcollection.add( { id: 'John' } );\n\t *\t\tconsole.log( collection.get( 0 ) ); // -> { id: 'John' }\n\t *\n\t * Whatever option you choose, you can always pass a configuration object as the last argument\n\t * of the constructor:\n\t *\n\t *\t\tconst emptyCollection = new Collection( { idProperty: 'name' } );\n\t *\t\temptyCollection.add( { name: 'John' } );\n\t *\t\tconsole.log( collection.get( 'John' ) ); // -> { name: 'John' }\n\t *\n\t *\t\tconst nonEmptyCollection = new Collection( [ { name: 'John' } ], { idProperty: 'name' } );\n\t *\t\tnonEmptyCollection.add( { name: 'George' } );\n\t *\t\tconsole.log( collection.get( 'George' ) ); // -> { name: 'George' }\n\t *\t\tconsole.log( collection.get( 'John' ) ); // -> { name: 'John' }\n\t *\n\t * @param {Iterable.<Object>|Object} initialItemsOrOptions The initial items of the collection or\n\t * the options object.\n\t * @param {Object} [options={}] The options object, when the first argument is an array of initial items.\n\t * @param {String} [options.idProperty='id'] The name of the property which is used to identify an item.\n\t * Items that do not have such a property will be assigned one when added to the collection.\n\t */\n\tconstructor( initialItemsOrOptions = {}, options = {} ) {\n\t\tconst hasInitialItems = isIterable( initialItemsOrOptions );\n\n\t\tif ( !hasInitialItems ) {\n\t\t\toptions = initialItemsOrOptions;\n\t\t}\n\n\t\t/**\n\t\t * The internal list of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Object[]}\n\t\t */\n\t\tthis._items = [];\n\n\t\t/**\n\t\t * The internal map of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._itemMap = new Map();\n\n\t\t/**\n\t\t * The name of the property which is considered to identify an item.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._idProperty = options.idProperty || 'id';\n\n\t\t/**\n\t\t * A helper mapping external items of a bound collection ({@link #bindTo})\n\t\t * and actual items of this collection. It provides information\n\t\t * necessary to properly remove items bound to another collection.\n\t\t *\n\t\t * See {@link #_bindToInternalToExternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\n\n\t\t/**\n\t\t * A helper mapping items of this collection to external items of a bound collection\n\t\t * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n\t\t * to avoid loops in two–way bindings.\n\t\t *\n\t\t * See {@link #_bindToExternalToInternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\n\n\t\t/**\n\t\t * Stores indexes of skipped items from bound external collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Array}\n\t\t */\n\t\tthis._skippedIndexesFromExternal = [];\n\n\t\t// Set the initial content of the collection (if provided in the constructor).\n\t\tif ( hasInitialItems ) {\n\t\t\tfor ( const item of initialItemsOrOptions ) {\n\t\t\t\tthis._items.push( item );\n\t\t\t\tthis._itemMap.set( this._getItemIdBeforeAdding( item ), item );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * A collection instance this collection is bound to as a result\n\t\t * of calling {@link #bindTo} method.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/collection~Collection} #_bindToCollection\n\t\t */\n\t}\n\n\t/**\n\t * The number of items available in the collection.\n\t *\n\t * @member {Number} #length\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * Returns the first item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The first item or `null` if collection is empty.\n\t */\n\tget first() {\n\t\treturn this._items[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the last item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The last item or `null` if collection is empty.\n\t */\n\tget last() {\n\t\treturn this._items[ this.length - 1 ] || null;\n\t}\n\n\t/**\n\t * Adds an item into the collection.\n\t *\n\t * If the item does not have an id, then it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {Object} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` not specified.\n\t * @fires add\n\t * @fires change\n\t */\n\tadd( item, index ) {\n\t\treturn this.addMany( [ item ], index );\n\t}\n\n\t/**\n\t * Adds multiple items into the collection.\n\t *\n\t * Any item not containing an id will get an automatically generated one.\n\t *\n\t * @chainable\n\t * @param {Iterable.<Object>} item\n\t * @param {Number} [index] The position of the insertion. Items will be appended if no `index` is specified.\n\t * @fires add\n\t * @fires change\n\t */\n\taddMany( items, index ) {\n\t\tif ( index === undefined ) {\n\t\t\tindex = this._items.length;\n\t\t} else if ( index > this._items.length || index < 0 ) {\n\t\t\t/**\n\t\t\t * The `index` passed to {@link module:utils/collection~Collection#addMany `Collection#addMany()`}\n\t\t\t * is invalid. It must be a number between 0 and the collection's length.\n\t\t\t *\n\t\t\t * @error collection-add-item-invalid-index\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-add-item-invalid-index', this );\n\t\t}\n\n\t\tfor ( let offset = 0; offset < items.length; offset++ ) {\n\t\t\tconst item = items[ offset ];\n\t\t\tconst itemId = this._getItemIdBeforeAdding( item );\n\t\t\tconst currentItemIndex = index + offset;\n\n\t\t\tthis._items.splice( currentItemIndex, 0, item );\n\t\t\tthis._itemMap.set( itemId, item );\n\n\t\t\tthis.fire( 'add', item, currentItemIndex );\n\t\t}\n\n\t\tthis.fire( 'change', {\n\t\t\tadded: items,\n\t\t\tremoved: [],\n\t\t\tindex\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets an item by its ID or index.\n\t *\n\t * @param {String|Number} idOrIndex The item ID or index in the collection.\n\t * @returns {Object|null} The requested item or `null` if such item does not exist.\n\t */\n\tget( idOrIndex ) {\n\t\tlet item;\n\n\t\tif ( typeof idOrIndex == 'string' ) {\n\t\t\titem = this._itemMap.get( idOrIndex );\n\t\t} else if ( typeof idOrIndex == 'number' ) {\n\t\t\titem = this._items[ idOrIndex ];\n\t\t} else {\n\t\t\t/**\n\t\t\t * An index or ID must be given.\n\t\t\t *\n\t\t\t * @error collection-get-invalid-arg\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-get-invalid-arg', this );\n\t\t}\n\n\t\treturn item || null;\n\t}\n\n\t/**\n\t * Returns a Boolean indicating whether the collection contains an item.\n\t *\n\t * @param {Object|String} itemOrId The item or its ID in the collection.\n\t * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\n\t */\n\thas( itemOrId ) {\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\treturn this._itemMap.has( itemOrId );\n\t\t} else { // Object\n\t\t\tconst idProperty = this._idProperty;\n\t\t\tconst id = itemOrId[ idProperty ];\n\n\t\t\treturn this._itemMap.has( id );\n\t\t}\n\t}\n\n\t/**\n\t * Gets an index of an item in the collection.\n\t * When an item is not defined in the collection, the index will equal -1.\n\t *\n\t * @param {Object|String} itemOrId The item or its ID in the collection.\n\t * @returns {Number} The index of a given item.\n\t */\n\tgetIndex( itemOrId ) {\n\t\tlet item;\n\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\titem = this._itemMap.get( itemOrId );\n\t\t} else {\n\t\t\titem = itemOrId;\n\t\t}\n\n\t\treturn this._items.indexOf( item );\n\t}\n\n\t/**\n\t * Removes an item from the collection.\n\t *\n\t * @param {Object|Number|String} subject The item to remove, its ID or index in the collection.\n\t * @returns {Object} The removed item.\n\t * @fires remove\n\t * @fires change\n\t */\n\tremove( subject ) {\n\t\tconst [ item, index ] = this._remove( subject );\n\n\t\tthis.fire( 'change', {\n\t\t\tadded: [],\n\t\t\tremoved: [ item ],\n\t\t\tindex\n\t\t} );\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Array} The result of mapping.\n\t */\n\tmap( callback, ctx ) {\n\t\treturn this._items.map( callback, ctx );\n\t}\n\n\t/**\n\t * Finds the first item in the collection for which the `callback` returns a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object} The item for which `callback` returned a true value.\n\t */\n\tfind( callback, ctx ) {\n\t\treturn this._items.find( callback, ctx );\n\t}\n\n\t/**\n\t * Returns an array with items for which the `callback` returned a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object[]} The array with matching items.\n\t */\n\tfilter( callback, ctx ) {\n\t\treturn this._items.filter( callback, ctx );\n\t}\n\n\t/**\n\t * Removes all items from the collection and destroys the binding created using\n\t * {@link #bindTo}.\n\t *\n\t * @fires remove\n\t * @fires change\n\t */\n\tclear() {\n\t\tif ( this._bindToCollection ) {\n\t\t\tthis.stopListening( this._bindToCollection );\n\t\t\tthis._bindToCollection = null;\n\t\t}\n\n\t\tconst removedItems = Array.from( this._items );\n\n\t\twhile ( this.length ) {\n\t\t\tthis._remove( 0 );\n\t\t}\n\n\t\tthis.fire( 'change', {\n\t\t\tadded: [],\n\t\t\tremoved: removedItems,\n\t\t\tindex: 0\n\t\t} );\n\t}\n\n\t/**\n\t * Binds and synchronizes the collection with another one.\n\t *\n\t * The binding can be a simple factory:\n\t *\n\t *\t\tclass FactoryClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).as( FactoryClass );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n\t *\n\t *\t\tsource.remove( 0 );\n\t *\t\tconsole.log( target.length ); // 1\n\t *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n\t *\n\t * or the factory driven by a custom callback:\n\t *\n\t *\t\tclass FooClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tclass BarClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( ( item ) => {\n\t *\t\t\tif ( item.label == 'foo' ) {\n\t *\t\t\t\treturn new FooClass( item );\n\t *\t\t\t} else {\n\t *\t\t\t\treturn new BarClass( item );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n\t *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n\t *\n\t * or the factory out of property name:\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( 'label' );\n\t *\n\t *\t\tsource.add( { label: { value: 'foo' } } );\n\t *\t\tsource.add( { label: { value: 'bar' } } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n\t *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n\t *\n\t * It's possible to skip specified items by returning falsy value:\n\t *\n\t *\t\tconst source = new Collection();\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( item => {\n\t *\t\t\tif ( item.hidden ) {\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn item;\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { hidden: true } );\n\t *\t\tsource.add( { hidden: false } );\n\t *\n\t *\t\tconsole.log( source.length ); // 2\n\t *\t\tconsole.log( target.length ); // 1\n\t *\n\t * **Note**: {@link #clear} can be used to break the binding.\n\t *\n\t * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n\t * @returns {Object}\n\t * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\n\t */\n\tbindTo( externalCollection ) {\n\t\tif ( this._bindToCollection ) {\n\t\t\t/**\n\t\t\t * The collection cannot be bound more than once.\n\t\t\t *\n\t\t\t * @error collection-bind-to-rebind\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-bind-to-rebind', this );\n\t\t}\n\n\t\tthis._bindToCollection = externalCollection;\n\n\t\treturn {\n\t\t\tas: Class => {\n\t\t\t\tthis._setUpBindToBinding( item => new Class( item ) );\n\t\t\t},\n\n\t\t\tusing: callbackOrProperty => {\n\t\t\t\tif ( typeof callbackOrProperty == 'function' ) {\n\t\t\t\t\tthis._setUpBindToBinding( item => callbackOrProperty( item ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis._setUpBindToBinding( item => item[ callbackOrProperty ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Finalizes and activates a binding initiated by {#bindTo}.\n\t *\n\t * @protected\n\t * @param {Function} factory A function which produces collection items.\n\t */\n\t_setUpBindToBinding( factory ) {\n\t\tconst externalCollection = this._bindToCollection;\n\n\t\t// Adds the item to the collection once a change has been done to the external collection.\n\t\t//\n\t\t// @private\n\t\tconst addItem = ( evt, externalItem, index ) => {\n\t\t\tconst isExternalBoundToThis = externalCollection._bindToCollection == this;\n\t\t\tconst externalItemBound = externalCollection._bindToInternalToExternalMap.get( externalItem );\n\n\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\n\t\t\t// and the particular external collection item is already bound, don't add it here.\n\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\n\t\t\t// cause a loop.\n\t\t\tif ( isExternalBoundToThis && externalItemBound ) {\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, externalItemBound );\n\t\t\t\tthis._bindToInternalToExternalMap.set( externalItemBound, externalItem );\n\t\t\t} else {\n\t\t\t\tconst item = factory( externalItem );\n\n\t\t\t\t// When there is no item we need to remember skipped index first and then we can skip this item.\n\t\t\t\tif ( !item ) {\n\t\t\t\t\tthis._skippedIndexesFromExternal.push( index );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Lets try to put item at the same index as index in external collection\n\t\t\t\t// but when there are a skipped items in one or both collections we need to recalculate this index.\n\t\t\t\tlet finalIndex = index;\n\n\t\t\t\t// When we try to insert item after some skipped items from external collection we need\n\t\t\t\t// to include this skipped items and decrease index.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n\t\t\t\t// internal -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We can't just add 'D' to internal at the same index as index in external because\n\t\t\t\t// this will produce empty indexes what is invalid:\n\t\t\t\t// internal -> [ 'A', empty, empty, 'D' ]\n\t\t\t\t//\n\t\t\t\t// So we need to include skipped items and decrease index\n\t\t\t\t// internal -> [ 'A', 'D' ]\n\t\t\t\tfor ( const skipped of this._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\t\tfinalIndex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration that external collection could skip some items from\n\t\t\t\t// internal collection.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n\t\t\t\t// external -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We need to include skipped items and place new item after them:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\t\t\t\tfor ( const skipped of externalCollection._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( finalIndex >= skipped ) {\n\t\t\t\t\t\tfinalIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, item );\n\t\t\t\tthis._bindToInternalToExternalMap.set( item, externalItem );\n\t\t\t\tthis.add( item, finalIndex );\n\n\t\t\t\t// After adding new element to internal collection we need update indexes\n\t\t\t\t// of skipped items in external collection.\n\t\t\t\tfor ( let i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++ ) {\n\t\t\t\t\tif ( finalIndex <= externalCollection._skippedIndexesFromExternal[ i ] ) {\n\t\t\t\t\t\texternalCollection._skippedIndexesFromExternal[ i ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Load the initial content of the collection.\n\t\tfor ( const externalItem of externalCollection ) {\n\t\t\taddItem( null, externalItem, externalCollection.getIndex( externalItem ) );\n\t\t}\n\n\t\t// Synchronize the with collection as new items are added.\n\t\tthis.listenTo( externalCollection, 'add', addItem );\n\n\t\t// Synchronize the with collection as new items are removed.\n\t\tthis.listenTo( externalCollection, 'remove', ( evt, externalItem, index ) => {\n\t\t\tconst item = this._bindToExternalToInternalMap.get( externalItem );\n\n\t\t\tif ( item ) {\n\t\t\t\tthis.remove( item );\n\t\t\t}\n\n\t\t\t// After removing element from external collection we need update/remove indexes\n\t\t\t// of skipped items in internal collection.\n\t\t\tthis._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce( ( result, skipped ) => {\n\t\t\t\tif ( index < skipped ) {\n\t\t\t\t\tresult.push( skipped - 1 );\n\t\t\t\t}\n\n\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\tresult.push( skipped );\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [] );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an unique id property for a given `item`.\n\t *\n\t * The method will generate new id and assign it to the `item` if it doesn't have any.\n\t *\n\t * @private\n\t * @param {Object} item Item to be added.\n\t * @returns {String}\n\t */\n\t_getItemIdBeforeAdding( item ) {\n\t\tconst idProperty = this._idProperty;\n\t\tlet itemId;\n\n\t\tif ( ( idProperty in item ) ) {\n\t\t\titemId = item[ idProperty ];\n\n\t\t\tif ( typeof itemId != 'string' ) {\n\t\t\t\t/**\n\t\t\t\t * This item's ID should be a string.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-invalid-id\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-invalid-id', this );\n\t\t\t}\n\n\t\t\tif ( this.get( itemId ) ) {\n\t\t\t\t/**\n\t\t\t\t * This item already exists in the collection.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-item-already-exists\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-item-already-exists', this );\n\t\t\t}\n\t\t} else {\n\t\t\titem[ idProperty ] = itemId = uid();\n\t\t}\n\n\t\treturn itemId;\n\t}\n\n\t/**\n\t * Core {@link #remove} method implementation shared in other functions.\n\t *\n\t * In contrast this method **does not** fire the {@link #event:change} event.\n\t *\n\t * @private\n\t * @param {Object} subject The item to remove, its id or index in the collection.\n\t * @returns {Array} Returns an array with the removed item and its index.\n\t * @fires remove\n\t */\n\t_remove( subject ) {\n\t\tlet index, id, item;\n\t\tlet itemDoesNotExist = false;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( typeof subject == 'string' ) {\n\t\t\tid = subject;\n\t\t\titem = this._itemMap.get( id );\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tindex = this._items.indexOf( item );\n\t\t\t}\n\t\t} else if ( typeof subject == 'number' ) {\n\t\t\tindex = subject;\n\t\t\titem = this._items[ index ];\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tid = item[ idProperty ];\n\t\t\t}\n\t\t} else {\n\t\t\titem = subject;\n\t\t\tid = item[ idProperty ];\n\t\t\tindex = this._items.indexOf( item );\n\t\t\titemDoesNotExist = ( index == -1 || !this._itemMap.get( id ) );\n\t\t}\n\n\t\tif ( itemDoesNotExist ) {\n\t\t\t/**\n\t\t\t * Item not found.\n\t\t\t *\n\t\t\t * @error collection-remove-404\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-remove-404', this );\n\t\t}\n\n\t\tthis._items.splice( index, 1 );\n\t\tthis._itemMap.delete( id );\n\n\t\tconst externalItem = this._bindToInternalToExternalMap.get( item );\n\t\tthis._bindToInternalToExternalMap.delete( item );\n\t\tthis._bindToExternalToInternalMap.delete( externalItem );\n\n\t\tthis.fire( 'remove', item, index );\n\n\t\treturn [ item, index ];\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an item is added to the collection.\n\t *\n\t * @event add\n\t * @param {Object} item The added item.\n\t */\n\n\t/**\n\t * Fired when the collection was changed due to adding or removing items.\n\t *\n\t * @event change\n\t * @param {Iterable.<Object>} added A list of added items.\n\t * @param {Iterable.<Object>} removed A list of removed items.\n\t * @param {Number} index An index where the addition or removal occurred.\n\t */\n\n\t/**\n\t * Fired when an item is removed from the collection.\n\t *\n\t * @event remove\n\t * @param {Object} item The removed item.\n\t * @param {Number} index Index from which item was removed.\n\t */\n}\n\nmix( Collection, EmitterMixin );\n\n/**\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\n * providing functions that specify the type of the binding.\n *\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\n *\n * @interface module:utils/collection~CollectionBindToChain\n */\n\n/**\n * Creates a callback or a property binding.\n *\n * @method #using\n * @param {Function|String} callbackOrProperty  When the function is passed, it should return\n * the collection items. When the string is provided, the property value is used to create the bound collection items.\n */\n\n/**\n * Creates the class factory binding in which items of the source collection are passed to\n * the constructor of the specified class.\n *\n * @method #as\n * @param {Function} Class The class constructor used to create instances in the factory.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/mergeoperation\n */\n\nimport Operation from './operation';\nimport SplitOperation from './splitoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _move } from './utils';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to merge two {@link module:engine/model/element~Element elements}.\n *\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\n *\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MergeOperation extends Operation {\n\t/**\n\t * Creates a merge operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\n\t * element after that position will be moved to {@link ~#targetPosition}.\n\t * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\n\t * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\n\t * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// This is, and should always remain, the first position in its parent.\n\t\tthis.sourcePosition.stickiness = 'toPrevious';\n\n\t\t/**\n\t\t * Summary offset size of nodes which will be moved from the merged element to the new parent.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position which the nodes from the merged elements will be moved to.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\t// Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\n\t\t// this is, and should always remain, the last position in its parent.\n\t\tthis.targetPosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Position in graveyard to which the merged element will be moved.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\n\t\t */\n\t\tthis.graveyardPosition = graveyardPosition.clone();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'merge';\n\t}\n\n\t/**\n\t * Position before the merged element (which will be deleted).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget deletionPosition() {\n\t\treturn new Position( this.sourcePosition.root, this.sourcePosition.path.slice( 0, -1 ) );\n\t}\n\n\t/**\n\t * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\n\t * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range}\n\t */\n\tget movedRange() {\n\t\tconst end = this.sourcePosition.getShiftedBy( Number.POSITIVE_INFINITY );\n\n\t\treturn new Range( this.sourcePosition, end );\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n\t */\n\tgetReversed() {\n\t\t// Positions in this method are transformed by this merge operation because the split operation bases on\n\t\t// the context after this merge operation happened (because split operation reverses it).\n\t\t// So we need to acknowledge that the merge operation happened and those positions changed a little.\n\t\tconst targetPosition = this.targetPosition._getTransformedByMergeOperation( this );\n\n\t\tconst path = this.sourcePosition.path.slice( 0, -1 );\n\t\tconst insertionPosition = new Position( this.sourcePosition.root, path )._getTransformedByMergeOperation( this );\n\n\t\tconst split = new SplitOperation( targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1 );\n\t\tsplit.insertionPosition = insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\n\t\t// Validate whether merge operation has correct parameters.\n\t\tif ( !sourceElement.parent ) {\n\t\t\t/**\n\t\t\t * Merge source position is invalid. The element to be merged must have a parent node.\n\t\t\t *\n\t\t\t * @error merge-operation-source-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-source-position-invalid', this );\n\t\t} else if ( !targetElement.parent ) {\n\t\t\t/**\n\t\t\t * Merge target position is invalid. The element to be merged must have a parent node.\n\t\t\t *\n\t\t\t * @error merge-operation-target-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-target-position-invalid', this );\n\t\t} else if ( this.howMany != sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * Merge operation specifies wrong number of nodes to move.\n\t\t\t *\n\t\t\t * @error merge-operation-how-many-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-how-many-invalid', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst mergedElement = this.sourcePosition.parent;\n\t\tconst sourceRange = Range._createIn( mergedElement );\n\n\t\t_move( sourceRange, this.targetPosition );\n\t\t_move( Range._createOn( mergedElement ), this.graveyardPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = json.sourcePosition.toJSON();\n\t\tjson.targetPosition = json.targetPosition.toJSON();\n\t\tjson.graveyardPosition = json.graveyardPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MergeOperation';\n\t}\n\n\t/**\n\t * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\t\tconst graveyardPosition = Position.fromJSON( json.graveyardPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `MergeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.sourcePosition } -> ${ this.targetPosition }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` ( ${ this.howMany } ), ${ this.graveyardPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable( value ) {\n\treturn !!( value && value[ Symbol.iterator ] );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nexport default class Operation {\n\t/**\n\t * Base operation constructor.\n\t *\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( baseVersion ) {\n\t\t/**\n\t\t * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n\t\t * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\n\t\t * {@link module:engine/model/document~Document#version document version} the\n\t\t * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @member {Number}\n\t\t */\n\t\tthis.baseVersion = baseVersion;\n\n\t\t/**\n\t\t * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isDocumentOperation\n\t\t */\n\t\tthis.isDocumentOperation = this.baseVersion !== null;\n\n\t\t/**\n\t\t * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\n\t\t * added to any batch yet.\n\t\t *\n\t\t * @member {module:engine/model/batch~Batch|null} #batch\n\t\t */\n\t\tthis.batch = null;\n\n\t\t/**\n\t\t * Operation type.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #type\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns an operation that has the same parameters as this operation.\n\t\t *\n\t\t * @method #clone\n\t\t * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns a reverse operation. Reverse operation when executed right after\n\t\t * the original operation will bring back tree model state to the point before the original\n\t\t * operation execution. In other words, it reverses changes done by the original operation.\n\t\t *\n\t\t * Keep in mind that tree model state may change since executing the original operation,\n\t\t * so reverse operation will be \"outdated\". In that case you will need to transform it by\n\t\t * all operations that were executed after the original operation.\n\t\t *\n\t\t * @method #getReversed\n\t\t * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n\t\t */\n\n\t\t/**\n\t\t * Executes the operation - modifications described by the operation properties will be applied to the model tree.\n\t\t *\n\t\t * @protected\n\t\t * @method #_execute\n\t\t */\n\t}\n\n\t/**\n\t * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\n\t * an error if operation is not valid.\n\t *\n\t * @protected\n\t * @method #_validate\n\t */\n\t_validate() {\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @method #toJSON\n\t * @returns {Object} Clone of this object with the operation property replaced with string.\n\t */\n\ttoJSON() {\n\t\t// This method creates only a shallow copy, all nested objects should be defined separately.\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\n\t\tconst json = Object.assign( {}, this );\n\n\t\tjson.__className = this.constructor.className;\n\n\t\t// Remove reference to the parent `Batch` to avoid circular dependencies.\n\t\tdelete json.batch;\n\n\t\t// Only document operations are shared with other clients so it is not necessary to keep this information.\n\t\tdelete json.isDocumentOperation;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Name of the operation class used for serialization.\n\t *\n\t * @type {String}\n\t */\n\tstatic get className() {\n\t\treturn 'Operation';\n\t}\n\n\t/**\n\t * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new this( json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.toString() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/uid\n */\n\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\nconst HEX_NUMBERS = new Array( 256 ).fill()\n\t.map( ( val, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\n\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns {String} An unique id string.\n */\nexport default function uid() {\n\t// Let's create some positive random 32bit integers first.\n\t//\n\t// 1. Math.random() is a float between 0 and 1.\n\t// 2. 0x100000000 is 2^32 = 4294967296.\n\t// 3. >>> 0 enforces integer (in JS all numbers are floating point).\n\t//\n\t// For instance:\n\t//\t\tMath.random() * 0x100000000 = 3366450031.853859\n\t// but\n\t//\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n\tconst r1 = Math.random() * 0x100000000 >>> 0;\n\tconst r2 = Math.random() * 0x100000000 >>> 0;\n\tconst r3 = Math.random() * 0x100000000 >>> 0;\n\tconst r4 = Math.random() * 0x100000000 >>> 0;\n\n\t// Make sure that id does not start with number.\n\treturn 'e' +\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\n}\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays( a, b ) {\n\tconst minLen = Math.min( a.length, b.length );\n\n\tfor ( let i = 0; i < minLen; i++ ) {\n\t\tif ( a[ i ] != b[ i ] ) {\n\t\t\t// The arrays are different.\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t// Both arrays were same at all points.\n\tif ( a.length == b.length ) {\n\t\t// If their length is also same, they are the same.\n\t\treturn 'same';\n\t} else if ( a.length < b.length ) {\n\t\t// Compared array is shorter so it is a prefix of the other array.\n\t\treturn 'prefix';\n\t} else {\n\t\t// Compared array is longer so it is an extension of the other array.\n\t\treturn 'extension';\n\t}\n}\n\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText( obj ) {\n\treturn Object.prototype.toString.call( obj ) == '[object Text]';\n}\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x360d=['keystrokes','clientHeight','content','focusTracker','targetRect','add','listenTo','type','render','clear','attach','ck-annotation-wrapper','Esc','isActive','focus','length','element','customView','div','ck-rounded-corners','_mutationObserver','height','first','_updateHeight','bindTemplate','destroy','set'];(function(_0x10b9bd,_0x360d9a){const _0x96762e=function(_0x10cf1b){while(--_0x10cf1b){_0x10b9bd['push'](_0x10b9bd['shift']());}};_0x96762e(++_0x360d9a);}(_0x360d,0xaa));const _0x9676=function(_0x10b9bd,_0x360d9a){_0x10b9bd=_0x10b9bd-0x0;let _0x96762e=_0x360d[_0x10b9bd];return _0x96762e;};import _0x48be0a from'@ckeditor/ckeditor5-ui/src/view';import _0x4225cf from'@ckeditor/ckeditor5-utils/src/focustracker';import _0x3aee47 from'@ckeditor/ckeditor5-utils/src/keystrokehandler';import _0xe804d from'@ckeditor/ckeditor5-utils/src/uid';import _0x1d8f42 from'../../utils/createmutationobserver';export default class a extends _0x48be0a{constructor(_0x116a4c,_0x1972c2){super(_0x116a4c),this['id']=_0xe804d(),this[_0x9676('0x16')]=new _0x4225cf(),this['keystrokes']=new _0x3aee47(),this[_0x9676('0x13')]['set'](_0x9676('0x4'),(_0xd38c62,_0x7247ae)=>this['fire'](_0x9676('0x4'),_0x7247ae)),this[_0x9676('0x12')](_0x9676('0x17'),{'top':0x0,'right':0x0,'bottom':0x0,'left':0x0}),this[_0x9676('0x12')](_0x9676('0xd'),0x0),this[_0x9676('0x12')](_0x9676('0x5'),!0x1),this[_0x9676('0x12')]('isDirty',!0x1),this[_0x9676('0x12')](_0x9676('0x7'),0x0),this[_0x9676('0x12')](_0x9676('0x1a'),''),this['_mutationObserver']=_0x1d8f42(()=>this['_updateHeight']()),this[_0x9676('0x15')]=this['createCollection'](),this[_0x9676('0x15')][_0x9676('0x18')](_0x1972c2);const _0x5c022c=this[_0x9676('0x10')];this['setTemplate']({'tag':_0x9676('0xa'),'attributes':{'class':['ck',_0x9676('0x3'),_0x9676('0xb'),_0x5c022c['if'](_0x9676('0x5'),'ck-annotation-wrapper--active')],'tabindex':-0x1},'children':this['content']});}get[_0x9676('0x9')](){return this['content'][_0x9676('0xe')];}[_0x9676('0x0')](){super[_0x9676('0x0')](),this[_0x9676('0x16')]['add'](this[_0x9676('0x8')]),this['keystrokes'][_0x9676('0x19')](this[_0x9676('0x8')]),this[_0x9676('0xc')][_0x9676('0x2')](this['element']);}[_0x9676('0x11')](){this[_0x9676('0x15')][_0x9676('0x1')](),this['keystrokes']['destroy'](),this[_0x9676('0x16')][_0x9676('0x11')](),this[_0x9676('0xc')]['detach'](),super[_0x9676('0x11')]();}[_0x9676('0x6')](){this[_0x9676('0x8')][_0x9676('0x6')]();}[_0x9676('0xf')](){const _0x5043b6=this['element'][_0x9676('0x14')];_0x5043b6&&(this[_0x9676('0xd')]=_0x5043b6);}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x3f91=['register','targetRect','_sortAnnotations','change:isFocused','_updateAnnotationsTargetRect','annotations-register-already-registered','uiType','annotations-invalid-target','function','map','customView','from','_throttledOrderUpdate','destroy','locale','max','add','has','get','Annotations','focusTracker','_getOrderInContent','sort','set','element','getTarget','activeView','refresh','detach','left','pluginName','top','remove','_customViewToTarget','_customViewToAnnotationView','attach','delete','context','annotations-duplicated-item','getAnnotationView','_uis','items','resize','getIndex','init','cancel','render','_updateAnnotationTargetRect','isActive'];(function(_0x1cb143,_0x3f9182){const _0x514995=function(_0x58a22b){while(--_0x58a22b){_0x1cb143['push'](_0x1cb143['shift']());}};_0x514995(++_0x3f9182);}(_0x3f91,0xdc));const _0x5149=function(_0x1cb143,_0x3f9182){_0x1cb143=_0x1cb143-0x0;let _0x514995=_0x3f91[_0x1cb143];return _0x514995;};import _0x3313a9 from'@ckeditor/ckeditor5-core/src/contextplugin';import _0x462dc9 from'../annotations/view/annotationview';import _0x1b731a from'@ckeditor/ckeditor5-utils/src/collection';import _0x54a10b from'@ckeditor/ckeditor5-utils/src/focustracker';import _0x3316df from'@ckeditor/ckeditor5-utils/src/dom/rect';import _0x286f97 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';import{throttle as _0x1a082f,isElement as _0x31097f}from'lodash-es';import'../../theme/annotation.css';export default class g extends _0x3313a9{static get[_0x5149('0x6')](){return _0x5149('0x2c');}constructor(_0x562d07){super(_0x562d07),this[_0x5149('0x11')]=new _0x1b731a(),this['set']('selectedViews',[]),this[_0x5149('0x30')](_0x5149('0x2'),null),this['on']('change:activeView',(_0x422da2,_0x36d25f,_0x1a86df,_0x56dcf7)=>{const _0x41c318=this[_0x5149('0xa')][_0x5149('0x2b')](_0x56dcf7);_0x56dcf7&&_0x41c318&&(_0x41c318[_0x5149('0x18')]=!0x1),_0x1a86df&&(this[_0x5149('0xa')][_0x5149('0x2b')](_0x1a86df)[_0x5149('0x18')]=!0x0);}),this['focusTracker']=new _0x54a10b(),this[_0x5149('0x2d')]['on'](_0x5149('0x1c'),(_0xb0a208,_0x1d348a,_0x5c78f4)=>{_0x5c78f4||(this[_0x5149('0x2')]=null);}),this['uiType']='',this[_0x5149('0x10')]=new Map(),this[_0x5149('0xa')]=new Map(),this[_0x5149('0x9')]=new Map(),this['_throttledOrderUpdate']=_0x1a082f(()=>{this[_0x5149('0x1d')](),this[_0x5149('0x1b')]();},0x190,{'leading':!0x1});}[_0x5149('0x14')](){window['addEventListener'](_0x5149('0x12'),this[_0x5149('0x25')]);}[_0x5149('0x19')](_0xed64be,_0x28825c){if(this[_0x5149('0x10')]['has'](_0xed64be))throw new _0x286f97(_0x5149('0x1e'));if('function'!=typeof _0x28825c[_0x5149('0xb')]||_0x5149('0x21')!=typeof _0x28825c[_0x5149('0x4')])throw new _0x286f97('annotations-register-invalid-interface');this[_0x5149('0x10')][_0x5149('0x30')](_0xed64be,_0x28825c);}['switchTo'](_0x49b1be){if(!this['_uis'][_0x5149('0x2a')](_0x49b1be))throw new _0x286f97('annotations-switchto-missing-ui',this);this['uiType']!==_0x49b1be&&(this[_0x5149('0x1f')]&&this['_uis'][_0x5149('0x2b')](this[_0x5149('0x1f')])['detach'](),this[_0x5149('0x1f')]=_0x49b1be,this[_0x5149('0x10')][_0x5149('0x2b')](this[_0x5149('0x1f')])[_0x5149('0xb')]());}['add'](_0x30b4e0,_0x310c8b){if(this[_0x5149('0xa')]['has'](_0x30b4e0))throw new _0x286f97(_0x5149('0xe'),this);const _0x93d6d2=new _0x462dc9(this[_0x5149('0xd')][_0x5149('0x27')],_0x30b4e0);_0x93d6d2[_0x5149('0x16')](),this[_0x5149('0x2d')][_0x5149('0x29')](_0x93d6d2[_0x5149('0x0')]),_0x93d6d2[_0x5149('0x2d')]['on']('change:isFocused',(_0x3311ff,_0x1f7c6f,_0x2e85b2)=>{_0x2e85b2&&(this[_0x5149('0x2')]=_0x30b4e0);}),this[_0x5149('0x9')][_0x5149('0x30')](_0x30b4e0,_0x310c8b),this['_updateAnnotationTargetRect'](_0x93d6d2);const _0x3f61c8=this[_0x5149('0x2e')](_0x93d6d2[_0x5149('0x1a')]);return this[_0x5149('0x11')][_0x5149('0x29')](_0x93d6d2,_0x3f61c8),this[_0x5149('0xa')][_0x5149('0x30')](_0x30b4e0,_0x93d6d2),_0x93d6d2;}[_0x5149('0x8')](_0x4cf673){if(!this[_0x5149('0xa')]['has'](_0x4cf673))return;const _0x1799e1=this[_0x5149('0xa')][_0x5149('0x2b')](_0x4cf673);this[_0x5149('0x2d')][_0x5149('0x8')](_0x1799e1[_0x5149('0x0')]),this[_0x5149('0x2')]===_0x4cf673&&(this[_0x5149('0x2')]=null),this[_0x5149('0x11')][_0x5149('0x8')](_0x1799e1),_0x1799e1['destroy'](),this[_0x5149('0x9')][_0x5149('0xc')](_0x4cf673),this[_0x5149('0xa')][_0x5149('0xc')](_0x4cf673);}[_0x5149('0x1')](_0x590a04){const _0x426990=this[_0x5149('0x9')][_0x5149('0x2b')](_0x590a04)||null;return _0x5149('0x21')==typeof _0x426990?_0x426990():_0x426990;}[_0x5149('0xf')](_0x3a0f3b){return this[_0x5149('0xa')][_0x5149('0x2b')](_0x3a0f3b);}[_0x5149('0x3')](){this['fire']('refresh'),this['_throttledOrderUpdate']();}[_0x5149('0x26')](){super[_0x5149('0x26')](),window['removeEventListener']('resize',this[_0x5149('0x25')]),this['_throttledOrderUpdate'][_0x5149('0x15')](),this[_0x5149('0x11')][_0x5149('0x22')](_0x2b6c2c=>_0x2b6c2c[_0x5149('0x26')]());}[_0x5149('0x1d')](){for(const _0x2562cc of this[_0x5149('0x11')])this[_0x5149('0x17')](_0x2562cc);}['_updateAnnotationTargetRect'](_0x416b8f){const _0x1a9538=this['getTarget'](_0x416b8f[_0x5149('0x23')]);if(null!==_0x1a9538){if(!(_0x1a9538 instanceof _0x3316df||_0x31097f(_0x1a9538)))throw new _0x286f97(_0x5149('0x20'));_0x416b8f[_0x5149('0x1a')]=new _0x3316df(_0x1a9538);}}[_0x5149('0x1b')](){const _0x418fa5=Array[_0x5149('0x24')](this[_0x5149('0x11')])[_0x5149('0x2f')]((_0x15b28d,_0x3e53da)=>k(_0x15b28d['targetRect'],_0x3e53da[_0x5149('0x1a')]));for(let _0x8c4c2a=_0x418fa5['length']-0x1;_0x8c4c2a>0x0;_0x8c4c2a--){const _0xddf336=_0x418fa5[_0x8c4c2a];_0x8c4c2a!==this[_0x5149('0x11')][_0x5149('0x13')](_0xddf336)&&(this[_0x5149('0x11')][_0x5149('0x8')](_0xddf336),this['items']['add'](_0xddf336,_0x8c4c2a));}}['_getOrderInContent'](_0x4c208e){let _0x18400f=0x0;for(const _0xa09a75 of this[_0x5149('0x11')]){const _0x21d9b8=this['getTarget'](_0xa09a75['customView']);if(_0x21d9b8){if(k(_0x4c208e,new _0x3316df(_0x21d9b8))<0x0)return _0x18400f;_0x18400f++;}}return Math[_0x5149('0x28')](0x0,_0x18400f);}}function k(_0x15ab1c,_0x209937){const _0x8dc2f3=_0x15ab1c['top']-_0x209937[_0x5149('0x7')];return 0x0==_0x8dc2f3?_0x15ab1c[_0x5149('0x5')]-_0x209937['left']:_0x8dc2f3;}","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { _setAttribute } from './utils';\nimport { isEqual } from 'lodash-es';\n\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class AttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes.\n\t *\n\t * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n\t * have an attribute with the same key as the added attribute.\n\t *\n\t * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n\t * must have an attribute with that key added.\n\t *\n\t * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n\t * operation's ranges must already have an attribute with given key and `oldValue` as value\n\t *\n\t * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n\t * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( range, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Range on which operation should be applied.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.range = range.clone();\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null`, if attribute was not set before.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue === undefined ? null : oldValue;\n\n\t\t/**\n\t\t * New value of the attribute with given key or `null`, if operation should remove attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue === undefined ? null : newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeAttribute';\n\t\t} else {\n\t\t\treturn 'changeAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new AttributeOperation( this.range, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new AttributeOperation( this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.range = this.range.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( !this.range.isFlat ) {\n\t\t\t/**\n\t\t\t * The range to change is not flat.\n\t\t\t *\n\t\t\t * @error attribute-operation-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'attribute-operation-range-not-flat', this );\n\t\t}\n\n\t\tfor ( const item of this.range.getItems( { shallow: true } ) ) {\n\t\t\tif ( this.oldValue !== null && !isEqual( item.getAttribute( this.key ), this.oldValue ) ) {\n\t\t\t\t/**\n\t\t\t\t * Changed node has different attribute value than operation's old attribute value.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-wrong-old-value\n\t\t\t\t * @param {module:engine/model/item~Item} item\n\t\t\t\t * @param {String} key\n\t\t\t\t * @param {*} value\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-wrong-old-value',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ item, key: this.key, value: this.oldValue }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( this.oldValue === null && this.newValue !== null && item.hasAttribute( this.key ) ) {\n\t\t\t\t/**\n\t\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-attribute-exists\n\t\t\t\t * @param {module:engine/model/node~Node} node\n\t\t\t\t * @param {String} key\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-attribute-exists',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ node: item, key: this.key }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// If value to set is same as old value, don't do anything.\n\t\tif ( !isEqual( this.oldValue, this.newValue ) ) {\n\t\t\t// Execution.\n\t\t\t_setAttribute( this.range, this.key, this.newValue );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'AttributeOperation';\n\t}\n\n\t/**\n\t * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new AttributeOperation( Range.fromJSON( json.range, document ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `AttributeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.range }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/element\n */\n\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Matcher from './matcher';\nimport StylesMap from './stylesmap';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a view element.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tnew Element( viewDocument, 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tnew Element( viewDocument, 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tnew Element( viewDocument, 'div', mapOfAttributes ); // map\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * Name of the element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Map of attributes, where attributes names are keys and attributes values are values.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} #_attrs\n\t\t */\n\t\tthis._attrs = parseAttributes( attrs );\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\n\t\t/**\n\t\t * Set of classes associated with element instance.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._classes = new Set();\n\n\t\tif ( this._attrs.has( 'class' ) ) {\n\t\t\t// Remove class attribute and handle it by class set.\n\t\t\tconst classString = this._attrs.get( 'class' );\n\t\t\tparseClasses( this._classes, classString );\n\t\t\tthis._attrs.delete( 'class' );\n\t\t}\n\n\t\t/**\n\t\t * Normalized styles.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/stylesmap~StylesMap} module:engine/view/element~Element#_styles\n\t\t */\n\t\tthis._styles = new StylesMap( this.document.stylesProcessor );\n\n\t\tif ( this._attrs.has( 'style' ) ) {\n\t\t\t// Remove style attribute and handle it by styles map.\n\t\t\tthis._styles.setTo( this._attrs.get( 'style' ) );\n\n\t\t\tthis._attrs.delete( 'style' );\n\t\t}\n\n\t\t/**\n\t\t * Map of custom properties.\n\t\t * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map}\n\t\t */\n\t\tthis._customProperties = new Map();\n\t}\n\n\t/**\n\t * Number of element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._children.length === 0;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\telement.is( 'element' ); // -> true\n\t *\t\telement.is( 'node' ); // -> true\n\t *\t\telement.is( 'view:element' ); // -> true\n\t *\t\telement.is( 'view:node' ); // -> true\n\t *\n\t *\t\telement.is( 'model:element' ); // -> false\n\t *\t\telement.is( 'documentSelection' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/view/element~Element#name name}:\n\t *\n\t *\t\telement.is( 'element', 'img' ); // -> true if this is an <img> element\n\t *\t\ttext.is( 'element', 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'element' || type === 'view:element' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && ( type === 'element' || type === 'view:element' );\n\t\t}\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n\t *\n\t * @returns {Iterable.<String>} Keys for attributes.\n\t */\n\t* getAttributeKeys() {\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield 'class';\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield 'style';\n\t\t}\n\n\t\tyield* this._attrs.keys();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this element's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getAttributes() {\n\t\tyield* this._attrs.entries();\n\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield [ 'class', this.getAttribute( 'class' ) ];\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield [ 'style', this.getAttribute( 'style' ) ];\n\t\t}\n\t}\n\n\t/**\n\t * Gets attribute by key. If attribute is not present - returns undefined.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {String|undefined} Attribute value.\n\t */\n\tgetAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\treturn [ ...this._classes ].join( ' ' );\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\tconst inlineStyle = this._styles.toString();\n\n\t\t\treturn inlineStyle == '' ? undefined : inlineStyle;\n\t\t}\n\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n\t */\n\thasAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\treturn this._classes.size > 0;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\treturn !this._styles.isEmpty;\n\t\t}\n\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n\t * can contain different set of children nodes.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\tif ( !( otherElement instanceof Element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If exactly the same Element is provided - return true immediately.\n\t\tif ( this === otherElement ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check element name.\n\t\tif ( this.name != otherElement.name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check number of attributes, classes and styles.\n\t\tif ( this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size ||\n\t\t\tthis._styles.size !== otherElement._styles.size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes are the same.\n\t\tfor ( const [ key, value ] of this._attrs ) {\n\t\t\tif ( !otherElement._attrs.has( key ) || otherElement._attrs.get( key ) !== value ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if classes are the same.\n\t\tfor ( const className of this._classes ) {\n\t\t\tif ( !otherElement._classes.has( className ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles are the same.\n\t\tfor ( const property of this._styles.getStyleNames() ) {\n\t\t\tif (\n\t\t\t\t!otherElement._styles.has( property ) ||\n\t\t\t\totherElement._styles.getAsString( property ) !== this._styles.getAsString( property )\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns true if class is present.\n\t * If more then one class is provided - returns true only when all classes are present.\n\t *\n\t *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n\t *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n\t *\n\t * @param {...String} className\n\t */\n\thasClass( ...className ) {\n\t\tfor ( const name of className ) {\n\t\t\tif ( !this._classes.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns iterator that contains all class names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetClassNames() {\n\t\treturn this._classes.keys();\n\t}\n\n\t/**\n\t * Returns style value for the given property mae.\n\t * If the style does not exist `undefined` is returned.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getAsString `StylesMap#getAsString()`} for details.\n\t *\n\t * For an element with style set to `'margin:1px'`:\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst element = view.change( writer => {\n\t *\t\t\tconst element = writer.createElement();\n\t *\t\t\twriter.setStyle( 'margin', '1px' );\n\t *\t\t\twriter.setStyle( 'margin-bottom', '3em' );\n\t *\n\t *\t\t\treturn element;\n\t *\t\t} );\n\t *\n\t *\t\telement.getStyle( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * @param {String} property\n\t * @returns {String|undefined}\n\t */\n\tgetStyle( property ) {\n\t\treturn this._styles.getAsString( property );\n\t}\n\n\t/**\n\t * Returns a normalized style object or single style value.\n\t *\n\t * For an element with style set to: margin:1px 2px 3em;\n\t *\n\t *\t\telement.getNormalizedStyle( 'margin' ) );\n\t *\n\t * will return:\n\t *\n\t *\t\t{\n\t *\t\t\ttop: '1px',\n\t *\t\t\tright: '2px',\n\t *\t\t\tbottom: '3em',\n\t *\t\t\tleft: '2px'    // a normalized value from margin shorthand\n\t *\t\t}\n\t *\n\t * and reading for single style value:\n\t *\n\t *\t\tstyles.getNormalizedStyle( 'margin-left' );\n\t *\n\t * Will return a `2px` string.\n\t *\n\t * **Note**: This method will return normalized values only if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getNormalized `StylesMap#getNormalized()`} for details.\n\t *\n\t *\n\t * @param {String} property Name of CSS property\n\t * @returns {Object|String|undefined}\n\t */\n\tgetNormalizedStyle( property ) {\n\t\treturn this._styles.getNormalized( property );\n\t}\n\n\t/**\n\t * Returns iterator that contains all style names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetStyleNames() {\n\t\treturn this._styles.getStyleNames();\n\t}\n\n\t/**\n\t * Returns true if style keys are present.\n\t * If more then one style property is provided - returns true only when all properties are present.\n\t *\n\t *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n\t *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n\t *\n\t * @param {...String} property\n\t */\n\thasStyle( ...property ) {\n\t\tfor ( const name of property ) {\n\t\t\tif ( !this._styles.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns ancestor element that match specified pattern.\n\t * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n\t *\n\t * @see module:engine/view/matcher~Matcher\n\t * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n\t * See {@link module:engine/view/matcher~Matcher}.\n\t * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n\t */\n\tfindAncestor( ...patterns ) {\n\t\tconst matcher = new Matcher( ...patterns );\n\t\tlet parent = this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( matcher.match( parent ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the custom property value for the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @returns {*}\n\t */\n\tgetCustomProperty( key ) {\n\t\treturn this._customProperties.get( key );\n\t}\n\n\t/**\n\t * Returns an iterator which iterates over this element's custom properties.\n\t * Iterator provides `[ key, value ]` pairs for each stored property.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getCustomProperties() {\n\t\tyield* this._customProperties.entries();\n\t}\n\n\t/**\n\t * Returns identity string based on element's name, styles, classes and other attributes.\n\t * Two elements that {@link #isSimilar are similar} will have same identity string.\n\t * It has the following format:\n\t *\n\t *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n \t *\n\t * For example:\n\t *\n\t *\t\tconst element = writer.createContainerElement( 'foo', {\n\t *\t\t\tbanana: '10',\n\t *\t\t\tapple: '20',\n\t *\t\t\tstyle: 'color: red; border-color: white;',\n\t *\t\t\tclass: 'baz'\n\t *\t\t} );\n\t *\n\t *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n\t *\t\telement.getIdentity();\n\t *\n\t * **Note**: Classes, styles and other attributes are sorted alphabetically.\n\t *\n\t * @returns {String}\n\t */\n\tgetIdentity() {\n\t\tconst classes = Array.from( this._classes ).sort().join( ',' );\n\t\tconst styles = this._styles.toString();\n\t\tconst attributes = Array.from( this._attrs ).map( i => `${ i[ 0 ] }=\"${ i[ 1 ] }\"` ).sort().join( ' ' );\n\n\t\treturn this.name +\n\t\t\t( classes == '' ? '' : ` class=\"${ classes }\"` ) +\n\t\t\t( !styles ? '' : ` style=\"${ styles }\"` ) +\n\t\t\t( attributes == '' ? '' : ` ${ attributes }` );\n\t}\n\n\t/**\n\t * Clones provided element.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\t_clone( deep = false ) {\n\t\tconst childrenClone = [];\n\n\t\tif ( deep ) {\n\t\t\tfor ( const child of this.getChildren() ) {\n\t\t\t\tchildrenClone.push( child._clone( deep ) );\n\t\t\t}\n\t\t}\n\n\t\t// ContainerElement and AttributeElement should be also cloned properly.\n\t\tconst cloned = new this.constructor( this.document, this.name, this._attrs, childrenClone );\n\n\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n\t\t// parse once again in constructor.\n\t\tcloned._classes = new Set( this._classes );\n\t\tcloned._styles.set( this._styles.getNormalized() );\n\n\t\t// Clone custom properties.\n\t\tcloned._customProperties = new Map( this._customProperties );\n\n\t\t// Clone filler offset method.\n\t\t// We can't define this method in a prototype because it's behavior which\n\t\t// is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\t\tcloned.getFillerOffset = this.getFillerOffset;\n\n\t\treturn cloned;\n\t}\n\n\t/**\n\t * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\t_appendChild( items ) {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\t_insertChild( index, items ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( this.document, items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t\tnode.document = this.document;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#remove\n\t * @protected\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Adds or overwrite attribute with a specified key and value.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_setAttribute( key, value ) {\n\t\tvalue = String( value );\n\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( key == 'class' ) {\n\t\t\tparseClasses( this._classes, value );\n\t\t} else if ( key == 'style' ) {\n\t\t\tthis._styles.setTo( value );\n\t\t} else {\n\t\t\tthis._attrs.set( key, value );\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} Returns true if an attribute existed and has been removed.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeAttribute( key ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\t// Remove class attribute.\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\tthis._classes.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove style attribute.\n\t\tif ( key == 'style' ) {\n\t\t\tif ( !this._styles.isEmpty ) {\n\t\t\t\tthis._styles.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove other attributes.\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Adds specified class.\n\t *\n\t *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n\t *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_addClass( className ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\n\t\tclassName.forEach( name => this._classes.add( name ) );\n\t}\n\n\t/**\n\t * Removes specified class.\n\t *\n\t *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n\t *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeClass( className ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\n\t\tclassName.forEach( name => this._classes.delete( name ) );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\telement._setStyle( 'color', 'red' );\n\t *\t\telement._setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n\t * @protected\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_setStyle( property, value ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tthis._styles.set( property, value );\n\t}\n\n\t/**\n\t * Removes specified style.\n\t *\n\t *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n\t *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n\t * @protected\n\t * @param {Array.<String>|String} property\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeStyle( property ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tproperty = Array.isArray( property ) ? property : [ property ];\n\t\tproperty.forEach( name => this._styles.remove( name ) );\n\t}\n\n\t/**\n\t * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t */\n\t_setCustomProperty( key, value ) {\n\t\tthis._customProperties.set( key, value );\n\t}\n\n\t/**\n\t * Removes the custom property stored under the given key.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\t_removeCustomProperty( key ) {\n\t\treturn this._customProperties.delete( key );\n\t}\n\n\t/**\n\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t *\n\t * @abstract\n\t * @method module:engine/view/element~Element#getFillerOffset\n\t */\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\t'.repeat( level ) + `<${ this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( '$text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( level + 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += `</${ this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Iterable`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Iterable} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\nfunction parseAttributes( attrs ) {\n\tattrs = toMap( attrs );\n\n\tfor ( const [ key, value ] of attrs ) {\n\t\tif ( value === null ) {\n\t\t\tattrs.delete( key );\n\t\t} else if ( typeof value != 'string' ) {\n\t\t\tattrs.set( key, String( value ) );\n\t\t}\n\t}\n\n\treturn attrs;\n}\n\n// Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\nfunction parseClasses( classesSet, classesString ) {\n\tconst classArray = classesString.split( /\\s+/ );\n\tclassesSet.clear();\n\tclassArray.forEach( name => classesSet.add( name ) );\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( document, nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( document, nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( document, node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( document, node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport MoveOperation from './moveoperation';\nimport { _insert, _normalizeNodes } from './utils';\nimport Text from '../text';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class InsertOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of insertion.\n\t * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( position, nodes, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position of insertion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n\t\t */\n\t\tthis.position = position.clone();\n\t\tthis.position.stickiness = 'toNone';\n\n\t\t/**\n\t\t * List of nodes to insert.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n\t\t */\n\t\tthis.nodes = new NodeList( _normalizeNodes( nodes ) );\n\n\t\t/**\n\t\t * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\n\t\t * during operational transformation. This happens when the operation insertion position is inside of a range\n\t\t * where attributes have changed.\n\t\t *\n\t\t * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\n\t\t */\n\t\tthis.shouldReceiveAttributes = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'insert';\n\t}\n\n\t/**\n\t * Total offset size of inserted nodes.\n\t *\n\t * @returns {Number}\n\t */\n\tget howMany() {\n\t\treturn this.nodes.maxOffset;\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\tconst nodes = new NodeList( [ ...this.nodes ].map( node => node._clone( true ) ) );\n\t\tconst insert = new InsertOperation( this.position, nodes, this.baseVersion );\n\n\t\tinsert.shouldReceiveAttributes = this.shouldReceiveAttributes;\n\n\t\treturn insert;\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst graveyard = this.position.root.document.graveyard;\n\t\tconst gyPosition = new Position( graveyard, [ 0 ] );\n\n\t\treturn new MoveOperation( this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst targetElement = this.position.parent;\n\n\t\tif ( !targetElement || targetElement.maxOffset < this.position.offset ) {\n\t\t\t/**\n\t\t\t * Insertion position is invalid.\n\t\t\t *\n\t\t\t * @error insert-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'insert-operation-position-invalid',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// What happens here is that we want original nodes be passed to writer because we want original nodes\n\t\t// to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n\t\t// to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n\t\t// get children. It is important that InsertOperation has the copy of original nodes in intact state.\n\t\tconst originalNodes = this.nodes;\n\t\tthis.nodes = new NodeList( [ ...originalNodes ].map( node => node._clone( true ) ) );\n\n\t\t_insert( this.position, originalNodes );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.position = this.position.toJSON();\n\t\tjson.nodes = this.nodes.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'InsertOperation';\n\t}\n\n\t/**\n\t * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json.nodes ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\tconst insert = new InsertOperation( Position.fromJSON( json.position, document ), children, json.baseVersion );\n\t\tinsert.shouldReceiveAttributes = json.shouldReceiveAttributes;\n\n\t\treturn insert;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst nodeString = this.nodes.length > 1 ? `[ ${ this.nodes.length } ]` : this.nodes.getNode( 0 );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `InsertOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ this.position }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\n\nimport Operation from './operation';\n\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class NoOperation extends Operation {\n\tget type() {\n\t\treturn 'noop';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new NoOperation( this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/nooperation~NoOperation}\n\t */\n\tgetReversed() {\n\t\treturn new NoOperation( this.baseVersion + 1 );\n\t}\n\n\t_execute() {\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'NoOperation';\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `NoOperation( ${ this.baseVersion } )`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * Check out the {@glink framework/guides/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\" guide} to learn more.\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class FocusTracker {\n\tconstructor() {\n\t\t/**\n\t\t * True when one of the registered elements is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The currently focused element.\n\t\t *\n\t\t * While {@link #isFocused `isFocused`} remains `true`, the focus can\n\t\t * move between different UI elements. This property tracks those\n\t\t * elements and tells which one is currently focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement|null} #focusedElement\n\t\t */\n\t\tthis.set( 'focusedElement', null );\n\n\t\t/**\n\t\t * List of registered elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<HTMLElement>}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Event loop timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n\t * Starts tracking the specified element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tadd( element ) {\n\t\tif ( this._elements.has( element ) ) {\n\t\t\t/**\n\t\t\t * This element is already tracked by {@link module:utils/focustracker~FocusTracker}.\n\t\t\t *\n\t\t\t * @error focustracker-add-element-already-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'focustracker-add-element-already-exist', this );\n\t\t}\n\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\n\t\tthis._elements.add( element );\n\t}\n\n\t/**\n\t * Stops tracking the specified element and stops listening on this element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tremove( element ) {\n\t\tif ( element === this.focusedElement ) {\n\t\t\tthis._blur( element );\n\t\t}\n\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthis.stopListening( element );\n\t\t\tthis._elements.delete( element );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the focus tracker by:\n\t * - Disabling all event listeners attached to tracked elements.\n\t * - Removing all tracked elements that were previously added.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Stores currently focused element and set {#isFocused} as `true`.\n\t *\n\t * @private\n\t * @param {HTMLElement} element Element which has been focused.\n\t */\n\t_focus( element ) {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis.focusedElement = element;\n\t\tthis.isFocused = true;\n\t}\n\n\t/**\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n\t *\n\t * @private\n\t * @fires blur\n\t */\n\t_blur() {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\n\t\t\tthis.focusedElement = null;\n\t\t\tthis.isFocused = false;\n\t\t}, 0 );\n\t}\n\n\t/**\n\t * @event focus\n\t */\n\n\t/**\n\t * @event blur\n\t */\n}\n\nmix( FocusTracker, DomEmitterMixin );\nmix( FocusTracker, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/treewalker\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport {\n\tdefault as Position,\n\tgetTextNodeAtPosition,\n\tgetNodeAfterPosition,\n\tgetNodeBeforePosition\n} from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} [options={}] Object with configuration.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n\t * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n\t * {@link module:engine/model/textproxy~TextProxy} (`false`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position of a `TreeWalker` have been defined.\n\t\t\t *\n\t\t\t * @error model-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-tree-walker-no-start-position',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tconst direction = options.direction || 'forward';\n\n\t\tif ( direction != 'forward' && direction != 'backward' ) {\n\t\t\t/**\n\t\t\t * Only `backward` and `forward` direction allowed.\n\t\t\t *\n\t\t\t * @error model-tree-walker-unknown-direction\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-tree-walker-unknown-direction', options, { direction } );\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. This is always static position, even if the initial position was a\n\t\t * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n\t\t * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n\t\t * is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = options.startPosition.clone();\n\t\t} else {\n\t\t\tthis.position = Position._createAt( this.boundaries[ this.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t// Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\n\t\tthis.position.stickiness = 'toNone';\n\n\t\t/**\n\t\t * Flag indicating whether all consecutive characters with the same attributes should be\n\t\t * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n\t\t * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n\t\t * be returned once, while if the option is `false` they might be returned twice:\n\t\t * for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\n\t\t/**\n\t\t * Parent of the most recently visited node. Cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/treewalker~TreeWalker#_visitedParent\n\t\t */\n\t\tthis._visitedParent = this.position.parent;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n\t * \t\twalker.skip( () => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition, prevVisitedParent;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\t\t\tprevVisitedParent = this._visitedParent;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t\tthis._visitedParent = prevVisitedParent;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = this.position.clone();\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.maxOffset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just after the current position.\n\t\t// Use a highly optimized version instead of checking the text node first and then getting the node after. See #6582.\n\t\tconst positionParent = position.parent;\n\t\tconst textNodeAtPosition = getTextNodeAtPosition( position, positionParent );\n\t\tconst node = textNodeAtPosition ? textNodeAtPosition : getNodeAfterPosition( position, positionParent, textNodeAtPosition );\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\t// Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n\t\t\t\tposition.path.push( 0 );\n\t\t\t\tthis._visitedParent = node;\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.endOffset;\n\n\t\t\t\tif ( this._boundaryEndParent == parent && this.boundaries.end.offset < offset ) {\n\t\t\t\t\toffset = this.boundaries.end.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = offset - position.offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode, charactersCount );\n\n\t\t\tposition.offset += charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tposition.offset++;\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = this.position.clone();\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before the current position.\n\t\t// Use a highly optimized version instead of checking the text node first and then getting the node before. See #6582.\n\t\tconst positionParent = position.parent;\n\t\tconst textNodeAtPosition = getTextNodeAtPosition( position, positionParent );\n\t\tconst node = textNodeAtPosition ? textNodeAtPosition : getNodeBeforePosition( position, positionParent, textNodeAtPosition );\n\n\t\tif ( node instanceof Element ) {\n\t\t\tposition.offset--;\n\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition.path.push( node.maxOffset );\n\t\t\t\tthis.position = position;\n\t\t\t\tthis._visitedParent = node;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.startOffset;\n\n\t\t\t\tif ( this._boundaryStartParent == parent && this.boundaries.start.offset > offset ) {\n\t\t\t\t\toffset = this.boundaries.start.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = position.offset - offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode - charactersCount, charactersCount );\n\n\t\t\tposition.offset -= charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\treturn formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n}\n\nfunction formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\treturn {\n\t\tdone: false,\n\t\tvalue: {\n\t\t\ttype,\n\t\t\titem,\n\t\t\tpreviousPosition,\n\t\t\tnextPosition,\n\t\t\tlength\n\t\t}\n\t};\n}\n\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/model/treewalker~TreeWalkerDirection\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\n\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~Writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n\t * starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Text node which part is represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/text~Text}\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given `offsetInText` value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-offsetintext', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given `length` value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-length', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset at which this text proxy starts in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#startOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget startOffset() {\n\t\treturn this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n\t}\n\n\t/**\n\t * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n\t *\n\t * @see module:engine/model/node~Node#offsetSize\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Offset at which this text proxy ends in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#endOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget endOffset() {\n\t\treturn this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.offsetSize !== this.textNode.offsetSize;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\ttextProxy.is( '$textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'model:$textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'view:$textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * **Note:** Until version 20.0.0 this method wasn't accepting `'$textProxy'` type. The legacy `'textProxt'` type is still\n\t * accepted for backward compatibility.\n\t *\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === '$textProxy' || type === 'model:$textProxy' ||\n\t\t\t// This are legacy values kept for backward compatibility.\n\t\t\ttype === 'textProxy' || type === 'model:textProxy';\n\t}\n\n\t/**\n\t * Gets path to this text proxy.\n\t *\n\t * @see module:engine/model/node~Node#getPath\n\t * @returns {Array.<Number>}\n\t */\n\tgetPath() {\n\t\tconst path = this.textNode.getPath();\n\n\t\tif ( path.length > 0 ) {\n\t\t\tpath[ path.length - 1 ] += this.offsetInText;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Checks if this text proxy has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this.textNode.hasAttribute( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this.textNode.getAttribute( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n\t * items. First one is attribute key and second is attribute value.\n\t *\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this.textNode.getAttributes();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this.textNode.getAttributeKeys();\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelTextProxy: ${ this }, ` +\n\t// @if CK_DEBUG_ENGINE // \t\t`attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/utils\n */\n\nimport Node from '../node';\nimport Text from '../text';\nimport TextProxy from '../textproxy';\nimport Range from '../range';\nimport DocumentFragment from '../documentfragment';\nimport NodeList from '../nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * @protected\n * @namespace utils\n */\n\n/**\n * Inserts given nodes at given position.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\nexport function _insert( position, nodes ) {\n\tnodes = _normalizeNodes( nodes );\n\n\t// We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\tconst offset = nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\tconst parent = position.parent;\n\n\t// Insertion might be in a text node, we should split it if that's the case.\n\t_splitNodeAtPosition( position );\n\tconst index = position.index;\n\n\t// Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n\t// using basic `Element` API.\n\tparent._insertChild( index, nodes );\n\n\t// Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\t_mergeNodesAtIndex( parent, index + nodes.length );\n\t_mergeNodesAtIndex( parent, index );\n\n\treturn new Range( position, position.getShiftedBy( offset ) );\n}\n\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\nexport function _remove( range ) {\n\tif ( !range.isFlat ) {\n\t\t/**\n\t\t * Trying to remove a range which starts and ends in different element.\n\t\t *\n\t\t * @error operation-utils-remove-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'operation-utils-remove-range-not-flat',\n\t\t\tthis\n\t\t);\n\t}\n\n\tconst parent = range.start.parent;\n\n\t// Range may be inside text nodes, we have to split them if that's the case.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Remove the text nodes using basic `Element` API.\n\tconst removed = parent._removeChildren( range.start.index, range.end.index - range.start.index );\n\n\t// Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n\t// touching at the position equal to the removed range beginning. We check merging possibility there.\n\t_mergeNodesAtIndex( parent, range.start.index );\n\n\treturn removed;\n}\n\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.move\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\nexport function _move( sourceRange, targetPosition ) {\n\tif ( !sourceRange.isFlat ) {\n\t\t/**\n\t\t * Trying to move a range which starts and ends in different element.\n\t\t *\n\t\t * @error operation-utils-move-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'operation-utils-move-range-not-flat',\n\t\t\tthis\n\t\t);\n\t}\n\n\tconst nodes = _remove( sourceRange );\n\n\t// We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n\t// that change might have an impact on `targetPosition`.\n\ttargetPosition = targetPosition._getTransformedByDeletion( sourceRange.start, sourceRange.end.offset - sourceRange.start.offset );\n\n\treturn _insert( targetPosition, nodes );\n}\n\n/**\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._setAttribute\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\nexport function _setAttribute( range, key, value ) {\n\t// Range might start or end in text nodes, so we have to split them.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Iterate over all items in the range.\n\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t// Iterator will return `TextProxy` instances but we know that those text proxies will\n\t\t// always represent full text nodes (this is guaranteed thanks to splitting we did before).\n\t\t// So, we can operate on those text proxies' text nodes.\n\t\tconst node = item.is( '$textProxy' ) ? item.textNode : item;\n\n\t\tif ( value !== null ) {\n\t\t\tnode._setAttribute( key, value );\n\t\t} else {\n\t\t\tnode._removeAttribute( key );\n\t\t}\n\n\t\t// After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\t\t_mergeNodesAtIndex( node.parent, node.index );\n\t}\n\n\t// Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\t_mergeNodesAtIndex( range.end.parent, range.end.index );\n}\n\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.normalizeNodes\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\nexport function _normalizeNodes( nodes ) {\n\tconst normalized = [];\n\n\tif ( !( nodes instanceof Array ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Convert instances of classes other than Node.\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tif ( typeof nodes[ i ] == 'string' ) {\n\t\t\tnormalized.push( new Text( nodes[ i ] ) );\n\t\t} else if ( nodes[ i ] instanceof TextProxy ) {\n\t\t\tnormalized.push( new Text( nodes[ i ].data, nodes[ i ].getAttributes() ) );\n\t\t} else if ( nodes[ i ] instanceof DocumentFragment || nodes[ i ] instanceof NodeList ) {\n\t\t\tfor ( const child of nodes[ i ] ) {\n\t\t\t\tnormalized.push( child );\n\t\t\t}\n\t\t} else if ( nodes[ i ] instanceof Node ) {\n\t\t\tnormalized.push( nodes[ i ] );\n\t\t}\n\t\t// Skip unrecognized type.\n\t}\n\n\t// Merge text nodes.\n\tfor ( let i = 1; i < normalized.length; i++ ) {\n\t\tconst node = normalized[ i ];\n\t\tconst prev = normalized[ i - 1 ];\n\n\t\tif ( node instanceof Text && prev instanceof Text && _haveSameAttributes( node, prev ) ) {\n\t\t\t// Doing this instead changing `prev.data` because `data` is readonly.\n\t\t\tnormalized.splice( i - 1, 2, new Text( prev.data + node.data, prev.getAttributes() ) );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn normalized;\n}\n\n// Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n// merges them into one node if they have same attributes.\n//\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n//\n// @private\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n// @param {Number} index Index between nodes to merge.\nfunction _mergeNodesAtIndex( element, index ) {\n\tconst nodeBefore = element.getChild( index - 1 );\n\tconst nodeAfter = element.getChild( index );\n\n\t// Check if both of those nodes are text objects with same attributes.\n\tif ( nodeBefore && nodeAfter && nodeBefore.is( '$text' ) && nodeAfter.is( '$text' ) && _haveSameAttributes( nodeBefore, nodeAfter ) ) {\n\t\t// Append text of text node after index to the before one.\n\t\tconst mergedNode = new Text( nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes() );\n\n\t\t// Remove separate text nodes.\n\t\telement._removeChildren( index - 1, 2 );\n\n\t\t// Insert merged text node.\n\t\telement._insertChild( index - 1, mergedNode );\n\t}\n}\n\n// Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n// containing a part of original text node.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position at which node should be split.\nfunction _splitNodeAtPosition( position ) {\n\tconst textNode = position.textNode;\n\tconst element = position.parent;\n\n\tif ( textNode ) {\n\t\tconst offsetDiff = position.offset - textNode.startOffset;\n\t\tconst index = textNode.index;\n\n\t\telement._removeChildren( index, 1 );\n\n\t\tconst firstPart = new Text( textNode.data.substr( 0, offsetDiff ), textNode.getAttributes() );\n\t\tconst secondPart = new Text( textNode.data.substr( offsetDiff ), textNode.getAttributes() );\n\n\t\telement._insertChild( index, [ firstPart, secondPart ] );\n\t}\n}\n\n// Checks whether two given nodes have same attributes.\n//\n// @private\n// @param {module:engine/model/node~Node} nodeA Node to check.\n// @param {module:engine/model/node~Node} nodeB Node to check.\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\nfunction _haveSameAttributes( nodeA, nodeB ) {\n\tconst iteratorA = nodeA.getAttributes();\n\tconst iteratorB = nodeB.getAttributes();\n\n\tfor ( const attr of iteratorA ) {\n\t\tif ( attr[ 1 ] !== nodeB.getAttribute( attr[ 0 ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\titeratorB.next();\n\t}\n\n\treturn iteratorB.next().done;\n}\n\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/selection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Node from './node';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport DocumentSelection from './documentselection';\n\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\nexport default class Selection {\n\t/**\n\t * Creates new selection instance.\n\t *\n\t * **Note**: The selection constructor is available as a factory method:\n\t *\n\t * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n\t * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( selectable = null, placeOrOffset, options ) {\n\t\t/**\n\t\t * Stores all ranges that are selected.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Specifies whether selection instance is fake.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isFake = false;\n\n\t\t/**\n\t\t * Fake selection's label.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._fakeSelectionLabel = '';\n\n\t\tthis.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #setTo\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #setTo\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst anchor = this._lastRangeBackward ? range.end : range.start;\n\n\t\treturn anchor.clone();\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst focus = this._lastRangeBackward ? range.start : range.end;\n\n\t\treturn focus.clone();\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.rangeCount === 1 && this._ranges[ 0 ].isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tif ( this.anchor ) {\n\t\t\treturn this.anchor.editableElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield range.clone();\n\t\t}\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? first.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? last.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst firstRange = this.getFirstRange();\n\n\t\treturn firstRange ? firstRange.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.isFake != otherSelection.isFake ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tisSimilar( otherSelection ) {\n\t\tif ( this.isBackward != otherSelection.isBackward ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst numOfRangesA = count( this.getRanges() );\n\t\tconst numOfRangesB = count( otherSelection.getRanges() );\n\n\t\t// If selections have different number of ranges, they cannot be similar.\n\t\tif ( numOfRangesA != numOfRangesB ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If both selections have no ranges, they are similar.\n\t\tif ( numOfRangesA == 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check if each range in one selection has a similar range in other selection.\n\t\tfor ( let rangeA of this.getRanges() ) {\n\t\t\trangeA = rangeA.getTrimmed();\n\n\t\t\tlet found = false;\n\n\t\t\tfor ( let rangeB of otherSelection.getRanges() ) {\n\t\t\t\trangeB = rangeB.getTrimmed();\n\n\t\t\t\tif ( rangeA.start.isEqual( rangeB.start ) && rangeA.end.isEqual( rangeB.end ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// There were no ranges that weren't matched. Selections are similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getFirstRange().getContainedElement();\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t \t// Sets selection to contents of DocumentSelection.\n\t *\t\tselection.setTo( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tselection.setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tsetTo( selectable, placeOrOffset, options ) {\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t\tthis._setFakeOptions( { fake: selectable.isFake, label: selectable.fakeSelectionLabel } );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], placeOrOffset && placeOrOffset.backward );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset === undefined ) {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-setto-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-selection-setto-required-second-parameter', this );\n\t\t\t} else if ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\t// Array.from() is used to prevent setting ranges to the old iterable\n\t\t\tthis._setRanges( selectable, placeOrOffset && placeOrOffset.backward );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set selection to given place.\n\t\t\t *\n\t\t\t * @error view-selection-setto-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setto-not-selectable', this );\n\t\t}\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error view-selection-setfocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setfocus-no-ranges', this );\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tthis._ranges.pop();\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._addRange( new Range( newFocus, anchor ), true );\n\t\t} else {\n\t\t\tthis._addRange( new Range( anchor, newFocus ) );\n\t\t}\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'view:selection' ); // -> true\n\t *\n\t *\t\tselection.is( 'model:selection' ); // -> false\n\t *\t\tselection.is( 'element' ); // -> false\n\t *\t\tselection.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' || type === 'view:selection';\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n\t * Accepts a flag describing in which way the selection is made.\n\t *\n\t * @private\n\t * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\t_setRanges( newRanges, isLastBackward = false ) {\n\t\t// New ranges should be copied to prevent removing them by setting them to `[]` first.\n\t\t// Only applies to situations when selection is set to the same selection or same selection's ranges.\n\t\tnewRanges = Array.from( newRanges );\n\n\t\tthis._ranges = [];\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._addRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\t}\n\n\t/**\n\t * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n\t * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n\t * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n\t * properly handled by screen readers).\n\t *\n\t * @private\n\t * @param {Object} [options] Options.\n\t * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n\t * @param {String} [options.label=''] Fake selection label.\n\t */\n\t_setFakeOptions( options = {} ) {\n\t\tthis._isFake = !!options.fake;\n\t\tthis._fakeSelectionLabel = options.fake ? options.label || '' : '';\n\t}\n\n\t/**\n\t * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n\t * selection instance and you can safely operate on it.\n\t *\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\n\t * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n\t * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n\t * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in Selection instance.\n\t *\n\t * @private\n\t * @fires change\n\t * @param {module:engine/view/range~Range} range\n\t * @param {Boolean} [isBackward]\n\t */\n\t_addRange( range, isBackward = false ) {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n\t\t\t *\n\t\t\t * @error view-selection-add-range-not-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-selection-add-range-not-range',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._pushRange( range );\n\t\tthis._lastRangeBackward = !!isBackward;\n\t}\n\n\t/**\n\t * Adds range to selection - creates copy of given range so it can be safely used and modified.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in selection instance.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t */\n\t_pushRange( range ) {\n\t\tfor ( const storedRange of this._ranges ) {\n\t\t\tif ( range.isIntersecting( storedRange ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-range-intersects\n\t\t\t\t * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-range-intersects',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ addedRange: range, intersectingRange: storedRange }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/view/selection~Selection#setTo}\n *\n * @typedef {\n *    module:engine/view/selection~Selection|\n *    module:engine/view/documentselection~DocumentSelection|\n *    module:engine/view/position~Position|\n *    Iterable.<module:engine/view/range~Range>|\n *    module:engine/view/range~Range|\n *    module:engine/view/item~Item|\n *    null\n * } module:engine/view/selection~Selectable\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\nconst userAgent = navigator.userAgent.toLowerCase();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n\t/**\n\t * Indicates that the application is running on Macintosh.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisMac: isMac( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Firefox (Gecko).\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisGecko: isGecko( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Safari.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisSafari: isSafari( userAgent ),\n\n\t/**\n\t * Indicates that the application is running on Android mobile device.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisAndroid: isAndroid( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in a browser using the Blink engine.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisBlink: isBlink( userAgent ),\n\n\t/**\n\t * Environment features information.\n\t *\n\t * @memberOf module:utils/env~env\n\t * @namespace\n\t */\n\tfeatures: {\n\t\t/**\n\t\t * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\n\t\t * More information about unicode properties might be found\n\t\t * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tisRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n\t}\n};\n\nexport default env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac( userAgent ) {\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko( userAgent ) {\n\treturn !!userAgent.match( /gecko\\/\\d+/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari( userAgent ) {\n\treturn userAgent.indexOf( ' applewebkit/' ) > -1 && userAgent.indexOf( 'chrome' ) === -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid( userAgent ) {\n\treturn userAgent.indexOf( 'android' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Blink engine.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Blink engine or not.\n */\nexport function isBlink( userAgent ) {\n\t// The Edge browser before switching to the Blink engine used to report itself as Chrome (and \"Edge/\")\n\t// but after switching to the Blink it replaced \"Edge/\" with \"Edg/\".\n\treturn userAgent.indexOf( 'chrome/' ) > -1 && userAgent.indexOf( 'edge/' ) < 0;\n}\n\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n *\n * @returns {Boolean}\n */\nexport function isRegExpUnicodePropertySupported() {\n\tlet isSupported = false;\n\n\t// Feature detection for Unicode properties. Added in ES2018. Currently Firefox does not support it.\n\t// See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n\n\ttry {\n\t\t// Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n\t\tisSupported = 'ć'.search( new RegExp( '[\\\\p{L}]', 'u' ) ) === 0;\n\t} catch ( error ) {\n\t\t// Firefox throws a SyntaxError when the group is unsupported.\n\t}\n\n\treturn isSupported;\n}\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/keystrokehandler\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\nexport default class KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Listener used to listen to events for easier keystroke handler destruction.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/dom/emittermixin~Emitter}\n\t\t */\n\t\tthis._listener = Object.create( DomEmitterMixin );\n\t}\n\n\t/**\n\t * Starts listening for `keydown` events from a given emitter.\n\t *\n\t * @param {module:utils/emittermixin~Emitter} emitter\n\t */\n\tlistenTo( emitter ) {\n\t\t// The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n\t\t// keystroke so the listeners can be attached to them with different priorities.\n\t\t//\n\t\t// E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n\t\t// as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n\t\t// method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n\t\t// only with other listeners of this particular event, thus making it possible to prioritize\n\t\t// the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n\t\t// the KeystrokeHandler re–uses it to do its job.\n\t\tthis._listener.listenTo( emitter, 'keydown', ( evt, keyEvtData ) => {\n\t\t\tthis._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function} callback A function called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tconst keyCode = parseKeystroke( keystroke );\n\t\tconst priority = options.priority;\n\n\t\t// Execute the passed callback on KeystrokeHandler#_keydown.\n\t\t// TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\t\tthis._listener.listenTo( this._listener, '_keydown:' + keyCode, ( evt, keyEvtData ) => {\n\t\t\tcallback( keyEvtData, () => {\n\t\t\t\t// Stop the event in the DOM: no listener in the web page\n\t\t\t\t// will be triggered by this event.\n\t\t\t\tkeyEvtData.preventDefault();\n\t\t\t\tkeyEvtData.stopPropagation();\n\n\t\t\t\t// Stop the event in the KeystrokeHandler: no more callbacks\n\t\t\t\t// will be executed for this keystroke.\n\t\t\t\tevt.stop();\n\t\t\t} );\n\n\t\t\t// Mark this keystroke as handled by the callback. See: #press.\n\t\t\tevt.return = true;\n\t\t}, { priority } );\n\t}\n\n\t/**\n\t * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n\t *\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n\t * @returns {Boolean} Whether the keystroke was handled.\n\t */\n\tpress( keyEvtData ) {\n\t\treturn !!this._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t}\n\n\t/**\n\t * Destroys the keystroke handler.\n\t */\n\tdestroy() {\n\t\tthis._listener.stopListening();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/contextplugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for {@link module:core/context~Context} plugin classes.\n *\n * A context plugin can either be initialized for an {@link module:core/editor/editor~Editor editor} or for\n * a {@link module:core/context~Context context}. In other words, it can either\n * work within one editor instance or with one or more editor instances that use a single context.\n * It is the context plugin's role to implement handling for both modes.\n *\n * There are a few rules for interaction between the editor plugins and context plugins:\n *\n * * A context plugin can require another context plugin.\n * * An {@link module:core/plugin~Plugin editor plugin} can require a context plugin.\n * * A context plugin MUST NOT require an {@link module:core/plugin~Plugin editor plugin}.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ContextPlugin {\n\t/**\n\t * Creates a new plugin instance.\n\t *\n\t * @param {module:core/context~Context|module:core/editor/editor~Editor} context\n\t */\n\tconstructor( context ) {\n\t\t/**\n\t\t * The context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:core/context~Context|module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.context = context;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get isContextPlugin() {\n\t\treturn true;\n\t}\n}\n\nmix( ContextPlugin, ObservableMixin );\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first( iterable ) {\n\tconst iteratorItem = iterable.next();\n\n\tif ( iteratorItem.done ) {\n\t\treturn null;\n\t}\n\n\treturn iteratorItem.value;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nexport default class Matcher {\n\t/**\n\t * Creates new instance of Matcher.\n\t *\n\t * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n\t * more information.\n\t */\n\tconstructor( ...pattern ) {\n\t\t/**\n\t\t * @private\n\t\t * @type {Array<String|RegExp|Object>}\n\t\t */\n\t\tthis._patterns = [];\n\n\t\tthis.add( ...pattern );\n\t}\n\n\t/**\n\t * Adds pattern or patterns to matcher instance.\n\t *\n\t *\t\t// String.\n\t *\t\tmatcher.add( 'div' );\n\t *\n\t *\t\t// Regular expression.\n\t *\t\tmatcher.add( /^\\w/ );\n\t *\n\t *\t\t// Single class.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclasses: 'foobar'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n\t *\n\t * Multiple patterns can be added in one call:\n\t *\n\t * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n\t *\n\t * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n\t * is provided it will be used to match element's name. Pattern can be also provided in a form\n\t * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n\t * Function's return value will be stored under `match` key of the object returned from\n\t * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n\t * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n\t * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n\t * represents attribute name. Value under that key can be either:\n\t * * `true` - then attribute is just required (can be empty),\n\t * * a string - then attribute has to be equal, or\n\t * * a regular expression - then attribute has to match the expression.\n\t * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n\t * provided in a form of string or regular expression.\n\t * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n\t * represents style name. Value under that key can be either a string or a regular expression and it will be used\n\t * to match style value.\n\t */\n\tadd( ...pattern ) {\n\t\tfor ( let item of pattern ) {\n\t\t\t// String or RegExp pattern is used as element's name.\n\t\t\tif ( typeof item == 'string' || item instanceof RegExp ) {\n\t\t\t\titem = { name: item };\n\t\t\t}\n\n\t\t\t// Single class name/RegExp can be provided.\n\t\t\tif ( item.classes && ( typeof item.classes == 'string' || item.classes instanceof RegExp ) ) {\n\t\t\t\titem.classes = [ item.classes ];\n\t\t\t}\n\n\t\t\tthis._patterns.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns match information about first found\n\t * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n\t *\n\t * Example of returned object:\n\t *\n\t *\t\t{\n\t *\t\t\telement: <instance of found element>,\n\t *\t\t\tpattern: <pattern used to match found element>,\n\t *\t\t\tmatch: {\n\t *\t\t\t\tname: true,\n\t *\t\t\t\tattributes: [ 'title', 'href' ],\n\t *\t\t\t\tclasses: [ 'foo' ],\n\t *\t\t\t\tstyles: [ 'color', 'position' ]\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#matchAll\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Object|null} result\n\t * @returns {module:engine/view/element~Element} result.element Matched view element.\n\t * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n\t * @returns {Object} result.match Object representing matched element parts.\n\t * @returns {Boolean} [result.match.name] True if name of the element was matched.\n\t * @returns {Array} [result.match.attributes] Array with matched attribute names.\n\t * @returns {Array} [result.match.classes] Array with matched class names.\n\t * @returns {Array} [result.match.styles] Array with matched style names.\n\t */\n\tmatch( ...element ) {\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns array of match information with all found\n\t * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#match\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n\t * see {@link module:engine/view/matcher~Matcher#match match method} description.\n\t */\n\tmatchAll( ...element ) {\n\t\tconst results = [];\n\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tresults.push( {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results.length > 0 ? results : null;\n\t}\n\n\t/**\n\t * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n\t * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n\t *\n\t * @returns {String|null} Element name trying to match.\n\t */\n\tgetElementName() {\n\t\tif ( this._patterns.length !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst pattern = this._patterns[ 0 ];\n\t\tconst name = pattern.name;\n\n\t\treturn ( typeof pattern != 'function' && name && !( name instanceof RegExp ) ) ? name : null;\n\t}\n}\n\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\nfunction isElementMatching( element, pattern ) {\n\t// If pattern is provided as function - return result of that function;\n\tif ( typeof pattern == 'function' ) {\n\t\treturn pattern( element );\n\t}\n\n\tconst match = {};\n\t// Check element's name.\n\tif ( pattern.name ) {\n\t\tmatch.name = matchName( pattern.name, element.name );\n\n\t\tif ( !match.name ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's attributes.\n\tif ( pattern.attributes ) {\n\t\tmatch.attributes = matchAttributes( pattern.attributes, element );\n\n\t\tif ( !match.attributes ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's classes.\n\tif ( pattern.classes ) {\n\t\tmatch.classes = matchClasses( pattern.classes, element );\n\n\t\tif ( !match.classes ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check element's styles.\n\tif ( pattern.styles ) {\n\t\tmatch.styles = matchStyles( pattern.styles, element );\n\n\t\tif ( !match.styles ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\nfunction matchName( pattern, name ) {\n\t// If pattern is provided as RegExp - test against this regexp.\n\tif ( pattern instanceof RegExp ) {\n\t\treturn pattern.test( name );\n\t}\n\n\treturn pattern === name;\n}\n\n// Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchAttributes( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasAttribute( name ) ) {\n\t\t\tconst attribute = element.getAttribute( name );\n\n\t\t\tif ( pattern === true ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else if ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( attribute ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( attribute === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\nfunction matchClasses( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const pattern of patterns ) {\n\t\tif ( pattern instanceof RegExp ) {\n\t\t\tconst classes = element.getClassNames();\n\n\t\t\tfor ( const name of classes ) {\n\t\t\t\tif ( pattern.test( name ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( match.length === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if ( element.hasClass( pattern ) ) {\n\t\t\tmatch.push( pattern );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\nfunction matchStyles( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasStyle( name ) ) {\n\t\t\tconst style = element.getStyle( name );\n\n\t\t\tif ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( style ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( style === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n *\n *\t\t// Match view element's name.\n *\t\tconst pattern = { name: /^p/ };\n *\n *\t\t// Match view element which has matching attributes.\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has given class.\n *\t\tconst pattern = {\n *\t\t\tclasses: 'foobar'\n *\t\t};\n *\n *\t\t// Match view element class using regular expression.\n *\t\tconst pattern = {\n *\t\t\tclasses: /foo.../\n *\t\t};\n *\n *\t\t// Multiple classes to match.\n *\t\tconst pattern = {\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\n *\t\t};\n *\n *\t\t// Match view element which has given styles.\n *\t\tconst pattern = {\n *\t\t\tstyles: {\n *\t\t\t\tposition: 'absolute',\n *\t\t\t\tcolor: /^\\w*blue$/\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Pattern with multiple properties.\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\n\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MarkerOperation extends Operation {\n\t/**\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n\t * @param {module:engine/model/range~Range} newRange Marker range after the change.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n\t * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( name, oldRange, newRange, markers, affectsData, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Marker name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Marker range before the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.oldRange = oldRange ? oldRange.clone() : null;\n\n\t\t/**\n\t\t * Marker range after the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.newRange = newRange ? newRange.clone() : null;\n\n\t\t/**\n\t\t * Specifies whether the marker operation affects the data produced by the data pipeline\n\t\t * (is persisted in the editor's data).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.affectsData = affectsData;\n\n\t\t/**\n\t\t * Marker collection on which change should be executed.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markers = markers;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'marker';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new MarkerOperation( this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tgetReversed() {\n\t\treturn new MarkerOperation( this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst type = this.newRange ? '_set' : '_remove';\n\n\t\tthis._markers[ type ]( this.name, this.newRange, true, this.affectsData );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tif ( this.oldRange ) {\n\t\t\tjson.oldRange = this.oldRange.toJSON();\n\t\t}\n\n\t\tif ( this.newRange ) {\n\t\t\tjson.newRange = this.newRange.toJSON();\n\t\t}\n\n\t\tdelete json._markers;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MarkerOperation';\n\t}\n\n\t/**\n\t * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new MarkerOperation(\n\t\t\tjson.name,\n\t\t\tjson.oldRange ? Range.fromJSON( json.oldRange, document ) : null,\n\t\t\tjson.newRange ? Range.fromJSON( json.newRange, document ) : null,\n\t\t\tdocument.model.markers,\n\t\t\tjson.affectsData,\n\t\t\tjson.baseVersion\n\t\t);\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `MarkerOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.name }\": ${ this.oldRange } -> ${ this.newRange }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\n\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RenameOperation extends Operation {\n\t/**\n\t * Creates an operation that changes element's name.\n\t *\n\t * @param {module:engine/model/position~Position} position Position before an element to change.\n\t * @param {String} oldName Current name of the element.\n\t * @param {String} newName New name for the element.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( position, oldName, newName, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before an element to change.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n\t\t */\n\t\tthis.position = position;\n\t\t// This position sticks to the next node because it is a position before the node that we want to change.\n\t\tthis.position.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Current name of the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n\t\t */\n\t\tthis.oldName = oldName;\n\n\t\t/**\n\t\t * New name for the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n\t\t */\n\t\tthis.newName = newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'rename';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new RenameOperation( this.position.clone(), this.oldName, this.newName, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RenameOperation( this.position.clone(), this.newName, this.oldName, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst element = this.position.nodeAfter;\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Given position is invalid or node after it is not instance of Element.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-position',\n\t\t\t\tthis\n\t\t\t);\n\t\t} else if ( element.name !== this.oldName ) {\n\t\t\t/**\n\t\t\t * Element to change has different name than operation's old name.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-name',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst element = this.position.nodeAfter;\n\n\t\telement.name = this.newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.position = this.position.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'RenameOperation';\n\t}\n\n\t/**\n\t * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new RenameOperation( Position.fromJSON( json.position, document ), json.oldName, json.newName, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `RenameOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.position }: \"${ this.oldName }\" -> \"${ this.newName }\"`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/node\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Abstract view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/downcastwriter~DowncastWriter} or {@link module:engine/view/upcastwriter~UpcastWriter}\n * to create new instances of view nodes.\n *\n * @abstract\n */\nexport default class Node {\n\t/**\n\t * Creates a tree view node.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this node belongs.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * The document instance to which this node belongs.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Index of the node in the parent element or null if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that view tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// No parent or child doesn't exist in parent's children.\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) == -1 ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node. It means that the document tree is corrupted.\n\t\t\t *\n\t\t\t * @error view-node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-node-not-found-in-parent', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Node's next sibling, or `null` if it is the last child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling, or `null` if it is the first child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * Top-most ancestor of the node. If the node has no parent it is the root itself.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\n\t *\n\t * @returns {Boolean}\n\t */\n\tisAttached() {\n\t\treturn this.root.is( 'rootElement' );\n\t}\n\n\t/**\n\t * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n\t *\n\t *\t\tconst abc = downcastWriter.createText( 'abc' );\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n\t *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.index );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/view/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( node, options = {} ) {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisBefore( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisAfter( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Removes node from parent.\n\t *\n\t * @protected\n\t */\n\t_remove() {\n\t\tthis.parent._removeChildren( this.index );\n\t}\n\n\t/**\n\t * @protected\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._fireChange( type, node );\n\t\t}\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} Clone of this object with the parent property removed.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tdelete json.parent;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t * This method is useful when processing view objects that are of unknown type. For example, a function\n\t * may return a {@link module:engine/view/documentfragment~DocumentFragment} or a {@link module:engine/view/node~Node}\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n\t *\n\t * Since this method is also available on a range of model objects, you can prefix the type of the object with\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\n\t *\n\t *\t\tviewElement.is( 'view:element' ); // -> true\n\t *\t\tviewElement.is( 'model:element' ); // -> false\n\t *\n\t * By using this method it is also possible to check a name of an element:\n\t *\n\t *\t\timgElement.is( 'element', 'img' ); // -> true\n\t *\t\timgElement.is( 'view:element', 'img' ); // -> same as above, but more precise\n\t *\n\t * The list of view objects which implement the `is()` method:\n\t *\n\t * * {@link module:engine/view/attributeelement~AttributeElement#is `AttributeElement#is()`}\n\t * * {@link module:engine/view/containerelement~ContainerElement#is `ContainerElement#is()`}\n\t * * {@link module:engine/view/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n\t * * {@link module:engine/view/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n\t * * {@link module:engine/view/editableelement~EditableElement#is `EditableElement#is()`}\n\t * * {@link module:engine/view/element~Element#is `Element#is()`}\n\t * * {@link module:engine/view/emptyelement~EmptyElement#is `EmptyElement#is()`}\n\t * * {@link module:engine/view/node~Node#is `Node#is()`}\n\t * * {@link module:engine/view/position~Position#is `Position#is()`}\n\t * * {@link module:engine/view/range~Range#is `Range#is()`}\n\t * * {@link module:engine/view/rooteditableelement~RootEditableElement#is `RootEditableElement#is()`}\n\t * * {@link module:engine/view/selection~Selection#is `Selection#is()`}\n\t * * {@link module:engine/view/text~Text#is `Text#is()`}\n\t * * {@link module:engine/view/textproxy~TextProxy#is `TextProxy#is()`}\n\t * * {@link module:engine/view/uielement~UIElement#is `UIElement#is()`}\n\t *\n\t * @method #is\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'node' || type === 'view:node';\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @method #_clone\n\t * @returns {module:engine/view/node~Node} Clone of this node.\n\t */\n\n\t/**\n\t * Checks if provided node is similar to this node.\n\t *\n\t * @method #isSimilar\n\t * @returns {Boolean} True if nodes are similar.\n\t */\n}\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\nmix( Node, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/observer\n */\n\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer {\n\t/**\n\t * Creates an instance of the observer.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * State of the observer. If it is disabled events will not be fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Enables the observer. This method is called when the observer is registered to the\n\t * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n\t * (all observers are {@link #disable disabled} before rendering).\n\t *\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#disable\n\t */\n\tenable() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the observer. This method is called before\n\t * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#enable\n\t */\n\tdisable() {\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\n\t */\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether the given DOM event should be ignored (should not be turned into a synthetic view document event).\n\t *\n\t * Currently, an event will be ignored only if its target or any of its ancestors has the `data-cke-ignore-events` attribute.\n\t * This attribute can be used inside structures generated by\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `DowncastWriter#createUIElement()`} to ignore events\n\t * fired within a UI that should be excluded from CKEditor 5's realms.\n\t *\n\t * @param {Node} domTarget The DOM event target to check (usually an element, sometimes a text node and\n\t * potentially sometimes a document too).\n\t * @returns {Boolean} Whether this event should be ignored by the observer.\n\t */\n\tcheckShouldIgnoreEventFromTarget( domTarget ) {\n\t\tif ( domTarget && domTarget.nodeType === 3 ) {\n\t\t\tdomTarget = domTarget.parentNode;\n\t\t}\n\n\t\tif ( !domTarget || domTarget.nodeType !== 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn domTarget.matches( '[data-cke-ignore-events], [data-cke-ignore-events] *' );\n\t}\n\n\t/**\n\t * Starts observing the given root element.\n\t *\n\t * @method #observe\n\t * @param {HTMLElement} domElement\n\t * @param {String} name The name of the root element.\n\t */\n}\n\nmix( Observer, DomEmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/emittermixin\n */\n\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport { extend } from 'lodash-es';\n\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\nconst DomEmitterMixin = extend( {}, EmitterMixin, {\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t * @param {Boolean} [options.usePassive=false] Indicates that the function specified by listener will never call preventDefault()\n\t * and prevents blocking browser's main thread by this event handler.\n\t */\n\tlistenTo( emitter, ...rest ) {\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with\n\t\t// corresponding ProxyEmitter (or create one if not existing).\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter ) || new ProxyEmitter( emitter );\n\n\t\t\tproxy.attach( ...rest );\n\n\t\t\temitter = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.listenTo.call( this, emitter, ...rest );\n\t},\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all object.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter );\n\n\t\t\t// Element has no listeners.\n\t\t\tif ( !proxy ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\temitter = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.stopListening.call( this, emitter, event, callback );\n\n\t\tif ( emitter instanceof ProxyEmitter ) {\n\t\t\temitter.detach( event );\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n\t *\n\t * @private\n\t * @param {Node} node DOM Node of the ProxyEmitter.\n\t * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n\t */\n\t_getProxyEmitter( node ) {\n\t\treturn _getEmitterListenedTo( this, getNodeUID( node ) );\n\t}\n} );\n\nexport default DomEmitterMixin;\n\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\nclass ProxyEmitter {\n\t/**\n\t * @param {Node} node DOM Node that fires events.\n\t * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n\t */\n\tconstructor( node ) {\n\t\t// Set emitter ID to match DOM Node \"expando\" property.\n\t\t_setEmitterId( this, getNodeUID( node ) );\n\n\t\t// Remember the DOM Node this ProxyEmitter is bound to.\n\t\tthis._domNode = node;\n\t}\n}\n\nextend( ProxyEmitter.prototype, EmitterMixin, {\n\t/**\n\t * Collection of native DOM listeners.\n\t *\n\t * @private\n\t * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n\t */\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired.\n\t *\n\t * It attaches a native DOM listener to the DOM Node. When fired,\n\t * a corresponding Emitter event will also fire with DOM Event object as an argument.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t * @param {Boolean} [options.usePassive=false] Indicates that the function specified by listener will never call preventDefault()\n\t * and prevents blocking browser's main thread by this event handler.\n\t */\n\tattach( event, callback, options = {} ) {\n\t\t// If the DOM Listener for given event already exist it is pointless\n\t\t// to attach another one.\n\t\tif ( this._domListeners && this._domListeners[ event ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listenerOptions = {\n\t\t\tcapture: !!options.useCapture,\n\t\t\tpassive: !!options.usePassive\n\t\t};\n\n\t\tconst domListener = this._createDomListener( event, listenerOptions );\n\n\t\t// Attach the native DOM listener to DOM Node.\n\t\tthis._domNode.addEventListener( event, domListener, listenerOptions );\n\n\t\tif ( !this._domListeners ) {\n\t\t\tthis._domListeners = {};\n\t\t}\n\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\n\t\t// when stopping listening to the event.\n\t\tthis._domListeners[ event ] = domListener;\n\t},\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n\t * @param {String} event The name of the event.\n\t */\n\tdetach( event ) {\n\t\tlet events;\n\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\n\t\t// See: {@link attach}.\n\n\t\tif ( this._domListeners[ event ] && ( !( events = this._events[ event ] ) || !events.callbacks.length ) ) {\n\t\t\tthis._domListeners[ event ].removeListener();\n\t\t}\n\t},\n\n\t/**\n\t * Creates a native DOM listener callback. When the native DOM event\n\t * is fired it will fire corresponding event on this ProxyEmitter.\n\t * Note: A native DOM Event is passed as an argument.\n\t *\n\t * @private\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n\t * @param {String} event The name of the event.\n\t * @param {Object} [options] Additional options.\n\t * @param {Boolean} [options.capture=false] Indicates whether the listener was created for capturing event.\n\t * @param {Boolean} [options.passive=false] Indicates that the function specified by listener will never call preventDefault()\n\t * and prevents blocking browser's main thread by this event handler.\n\t * @returns {Function} The DOM listener callback.\n\t */\n\t_createDomListener( event, options ) {\n\t\tconst domListener = domEvt => {\n\t\t\tthis.fire( event, domEvt );\n\t\t};\n\n\t\t// Supply the DOM listener callback with a function that will help\n\t\t// detach it from the DOM Node, when it is no longer necessary.\n\t\t// See: {@link detach}.\n\t\tdomListener.removeListener = () => {\n\t\t\tthis._domNode.removeEventListener( event, domListener, options );\n\t\t\tdelete this._domListeners[ event ];\n\t\t};\n\n\t\treturn domListener;\n\t}\n} );\n\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\nfunction getNodeUID( node ) {\n\treturn node[ 'data-ck-expando' ] || ( node[ 'data-ck-expando' ] = uid() );\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\n\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DomEventObserver extends Observer {\n\t/**\n\t * Type of the DOM event the observer should listen on. Array of types can be defined\n\t * if the obsever should listen to multiple DOM events.\n\t *\n\t * @readonly\n\t * @member {String|Array.<String>} #domEventType\n\t */\n\n\t/**\n\t * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n\t * observer {@link #isEnabled is not enabled}.\n\t *\n\t * @see #domEventType\n\t * @abstract\n\t * @method #onDomEvent\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * If set to `true` DOM events will be listened on the capturing phase.\n\t\t * Default value is `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.useCapture = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst types = typeof this.domEventType == 'string' ? [ this.domEventType ] : this.domEventType;\n\n\t\ttypes.forEach( type => {\n\t\t\tthis.listenTo( domElement, type, ( eventInfo, domEvent ) => {\n\t\t\t\tif ( this.isEnabled && !this.checkShouldIgnoreEventFromTarget( domEvent.target ) ) {\n\t\t\t\t\tthis.onDomEvent( domEvent );\n\t\t\t\t}\n\t\t\t}, { useCapture: this.useCapture } );\n\t\t} );\n\t}\n\n\t/**\n\t * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n\t *\n\t * @see module:utils/emittermixin~EmitterMixin#fire\n\t * @param {String} eventType The event type (name).\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] The additional data which should extend the\n\t * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n\t */\n\tfire( eventType, domEvent, additionalData ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( eventType, new DomEventData( this.view, domEvent, additionalData ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/diff\n */\n\nimport fastDiff from '../src/fastdiff';\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nexport default function diff( a, b, cmp ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\tconst aLength = a.length;\n\tconst bLength = b.length;\n\n\t// Perform `fastDiff` for longer strings/arrays (see #269).\n\tif ( aLength > 200 || bLength > 200 || aLength + bLength > 300 ) {\n\t\treturn diff.fastDiff( a, b, cmp, true );\n\t}\n\n\t// Temporary action type statics.\n\tlet _insert, _delete;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif ( bLength < aLength ) {\n\t\tconst tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tconst m = a.length;\n\tconst n = b.length;\n\tconst delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tconst es = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tconst fp = {};\n\n\tfunction snake( k ) {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\n\t\t// The way we should go to get further.\n\t\tconst dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif ( es[ k + dir ] ) {\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\n\t\t}\n\n\t\t// Create changes array.\n\t\tif ( !es[ k ] ) {\n\t\t\tes[ k ] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\n\n\t\t// Set the beginning coordinates.\n\t\tlet y = Math.max( y1, y2 );\n\t\tlet x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile ( x < m && y < n && cmp( a[ x ], b[ y ] ) ) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[ k ].push( 'equal' );\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tlet p = 0;\n\tlet k;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor ( k = -p; k < delta; k++ ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor ( k = delta + p; k > delta; k-- ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[ delta ] = snake( delta );\n\n\t\tp++;\n\t} while ( fp[ delta ] !== n );\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[ delta ].slice( 1 );\n}\n\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\ndiff.fastDiff = fastDiff;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n\t * from which the text proxy starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset size of this node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.data.length !== this.textNode.data.length;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttextProxy.is( '$textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'view:$textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'model:$textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'element' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * **Note:** Until version 20.0.0 this method wasn't accepting `'$textProxy'` type. The legacy `'textProxy'` type is still\n\t * accepted for backward compatibility.\n\t *\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === '$textProxy' || type === 'view:$textProxy' ||\n\t\t\t// This are legacy values kept for backward compatibility.\n\t\t\ttype === 'textProxy' || type === 'view:textProxy';\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n\t * root element, otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this.textNode : this.parent;\n\n\t\twhile ( parent !== null ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport { isObject, cloneDeepWith } from 'lodash-es';\n\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\n\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * and it will render the following HTML element:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Template {\n\t/**\n\t * Creates an instance of the {@link ~Template} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, normalize( clone( def ) ) );\n\n\t\t/**\n\t\t * Indicates whether this particular Template instance has been\n\t\t * {@link #render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isRendered = false;\n\n\t\t/**\n\t\t * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n\t\t * renders to an HTML element.\n\t\t *\n\t\t * @member {String} #tag\n\t\t */\n\n\t\t/**\n\t\t * The text of the template. It also indicates that the template renders to a DOM text node.\n\t\t *\n\t\t * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n\t\t */\n\n\t\t/**\n\t\t * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n\t\t * the attributes of an HTML element.\n\t\t *\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Object} #attributes\n\t\t */\n\n\t\t/**\n\t\t * The children of the template. They can be either:\n\t\t * * independent instances of {@link ~Template} (sub–templates),\n\t\t * * native DOM Nodes.\n\t\t *\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Array.<module:ui/template~Template|Node>} #children\n\t\t */\n\n\t\t/**\n\t\t * The DOM event listeners of the template.\n\t\t *\n\t\t * @member {Object} #eventListeners\n\t\t */\n\n\t\t/**\n\t\t * The data used by the {@link #revert} method to restore a node to its original state.\n\t\t *\n\t\t * See: {@link #apply}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/template~RenderData}\n\t\t */\n\t\tthis._revertData = null;\n\t}\n\n\t/**\n\t * Renders a DOM Node (an HTML element or text) out of the template.\n\t *\n\t *\t\tconst domNode = new Template( { ... } ).render();\n\t *\n\t * See: {@link #apply}.\n\t *\n\t * @returns {HTMLElement|Text}\n\t */\n\trender() {\n\t\tconst node = this._renderNode( {\n\t\t\tintoFragment: true\n\t\t} );\n\n\t\tthis._isRendered = true;\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Applies the template to an existing DOM Node, either HTML element or text.\n\t *\n\t * **Note:** No new DOM nodes will be created. Applying extends:\n\t *\n\t * {@link module:ui/template~TemplateDefinition attributes},\n\t * {@link module:ui/template~TemplateDefinition event listeners}, and\n\t * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\n\t *\n\t * **Note:** Existing `class` and `style` attributes are extended when a template\n\t * is applied to an HTML element, while other attributes and `textContent` are overridden.\n\t *\n\t * **Note:** The process of applying a template can be easily reverted using the\n\t * {@link module:ui/template~Template#revert} method.\n\t *\n\t *\t\tconst element = document.createElement( 'div' );\n\t *\t\tconst observable = new Model( { divClass: 'my-div' } );\n\t *\t\tconst emitter = Object.create( EmitterMixin );\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tid: 'first-div',\n\t *\t\t\t\tclass: bind.to( 'divClass' )\n\t *\t\t\t},\n\t *\t\t\ton: {\n\t *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t'Div text.'\n\t *\t\t\t]\n\t *\t\t} ).apply( element );\n\t *\n\t *\t\tconsole.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\n\t *\n\t * @see module:ui/template~Template#render\n\t * @see module:ui/template~Template#revert\n\t * @param {Node} node Root node for the template to apply.\n\t */\n\tapply( node ) {\n\t\tthis._revertData = getEmptyRevertData();\n\n\t\tthis._renderNode( {\n\t\t\tnode,\n\t\t\tisApplying: true,\n\t\t\trevertData: this._revertData\n\t\t} );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n\t *\n\t * @param {Node} node The root node for the template to revert. In most of the cases, it is the\n\t * same node used by {@link module:ui/template~Template#apply}.\n\t */\n\trevert( node ) {\n\t\tif ( !this._revertData ) {\n\t\t\t/**\n\t\t\t * Attempting to revert a template which has not been applied yet.\n\t\t\t *\n\t\t\t * @error ui-template-revert-not-applied\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-revert-not-applied',\n\t\t\t\t[ this, node ]\n\t\t\t);\n\t\t}\n\n\t\tthis._revertTemplateFromNode( node, this._revertData );\n\t}\n\n\t/**\n\t * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n\t * instances and returns them one by one.\n\t *\n\t *\t\tconst viewFoo = new View();\n\t *\t\tconst viewBar = new View();\n\t *\t\tconst viewBaz = new View();\n\t *\t\tconst template = new Template( {\n\t *\t\t\ttag: 'div',\n\t *\t\t\tchildren: [\n\t *\t\t\t\tviewFoo,\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'div',\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\tviewBar\n\t *\t\t\t\t\t]\n\t *\t\t\t\t},\n\t *\t\t\t\tviewBaz\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Logs: viewFoo, viewBar, viewBaz\n\t *\t\tfor ( const view of template.getViews() ) {\n\t *\t\t\tconsole.log( view );\n\t *\t\t}\n\t *\n\t * @returns {Iterable.<module:ui/view~View>}\n\t */\n\t* getViews() {\n\t\tfunction* search( def ) {\n\t\t\tif ( def.children ) {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isView( child ) ) {\n\t\t\t\t\t\tyield child;\n\t\t\t\t\t} else if ( isTemplate( child ) ) {\n\t\t\t\t\t\tyield* search( child );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tyield* search( this );\n\t}\n\n\t/**\n\t * An entry point to the interface which binds DOM nodes to\n\t * {@link module:utils/observablemixin~Observable observables}.\n\t * There are two types of bindings:\n\t *\n\t * * HTML element attributes or text `textContent` synchronized with attributes of an\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n\t * and {@link module:ui/template~BindChain#if}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\n\t *\t\t\t\tclass: bind.to( 'classAttribute' )\n\t *\t\t\t}\n\t *\t\t} ).render();\n\t *\n\t * * DOM events fired on HTML element propagated through\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\ton: {\n\t *\t\t\t\t// Will be fired by the observable.\n\t *\t\t\t\tclick: bind( 'elementClicked' )\n\t *\t\t\t}\n\t *\t\t} ).render();\n\t *\n\t * Also see {@link module:ui/view~View#bindTemplate}.\n\t *\n\t * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\n\t * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\n\t * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n\t * @returns {module:ui/template~BindChain}\n\t */\n\tstatic bind( observable, emitter ) {\n\t\treturn {\n\t\t\tto( eventNameOrFunctionOrAttribute, callback ) {\n\t\t\t\treturn new TemplateToBinding( {\n\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tobservable, emitter, callback\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\tif( attribute, valueIfTrue, callback ) {\n\t\t\t\treturn new TemplateIfBinding( {\n\t\t\t\t\tobservable, emitter, attribute, valueIfTrue, callback\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Extends an existing {@link module:ui/template~Template} instance with some additional content\n\t * from another {@link module:ui/template~TemplateDefinition}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tconst template = new Template( {\n\t *\t\t\ttag: 'p',\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'a',\n\t *\t\t\t\tdata-x: bind.to( 'foo' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'span',\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'b'\n\t *\t\t\t\t\t},\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\t'Span'\n\t *\t\t\t\t\t]\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t } );\n\t *\n\t *\t\t// Instance-level extension.\n\t *\t\tTemplate.extend( template, {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'b',\n\t *\t\t\t\tdata-x: bind.to( 'bar' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'c'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Child extension.\n\t *\t\tTemplate.extend( template.children[ 0 ], {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'd'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * the `outerHTML` of `template.render()` is:\n\t *\n\t *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n\t *\t\t\t<span class=\"b c d\">Span</span>\n\t *\t\t</p>\n\t *\n\t * @param {module:ui/template~Template} template An existing template instance to be extended.\n\t * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\n\t */\n\tstatic extend( template, def ) {\n\t\tif ( template._isRendered ) {\n\t\t\t/**\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\n\t\t\t * the {@link module:ui/template~Template.extend extending} works for an element,\n\t\t\t * make sure it happens before {@link #render} is called.\n\t\t\t *\n\t\t\t * @error template-extend-render\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'template-extend-render',\n\t\t\t\t[ this, template ]\n\t\t\t);\n\t\t}\n\n\t\textendTemplate( template, normalize( clone( def ) ) );\n\t}\n\n\t/**\n\t * Renders a DOM Node (either an HTML element or text) out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderNode( data ) {\n\t\tlet isInvalid;\n\n\t\tif ( data.node ) {\n\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n\t\t\tisInvalid = this.tag && this.text;\n\t\t} else {\n\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n\t\t\tisInvalid = this.tag ? this.text : !this.text;\n\t\t}\n\n\t\tif ( isInvalid ) {\n\t\t\t/**\n\t\t\t * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n\t\t\t *\n\t\t\t * @error ui-template-wrong-syntax\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-wrong-syntax',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this.text ) {\n\t\t\treturn this._renderText( data );\n\t\t} else {\n\t\t\treturn this._renderElement( data );\n\t\t}\n\t}\n\n\t/**\n\t * Renders an HTML element out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElement( data ) {\n\t\tlet node = data.node;\n\n\t\tif ( !node ) {\n\t\t\tnode = data.node = document.createElementNS( this.ns || xhtmlNs, this.tag );\n\t\t}\n\n\t\tthis._renderAttributes( data );\n\t\tthis._renderElementChildren( data );\n\t\tthis._setUpListeners( data );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders a text node out of {@link module:ui/template~Template#text}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderText( data ) {\n\t\tlet node = data.node;\n\n\t\t// Save the original textContent to revert it in #revert().\n\t\tif ( node ) {\n\t\t\tdata.revertData.text = node.textContent;\n\t\t} else {\n\t\t\tnode = data.node = document.createTextNode( '' );\n\t\t}\n\n\t\t// Check if this Text Node is bound to Observable. Cases:\n\t\t//\n\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\n\t\t//\n\t\t//\t\ttext: [\n\t\t//\t\t\t'foo',\n\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t//\t\t\t...\n\t\t//\t\t]\n\t\t//\n\t\tif ( hasTemplateBinding( this.text ) ) {\n\t\t\tthis._bindToObservable( {\n\t\t\t\tschema: this.text,\n\t\t\t\tupdater: getTextUpdater( node ),\n\t\t\t\tdata\n\t\t\t} );\n\t\t}\n\t\t// Simply set text. Cases:\n\t\t//\n\t\t//\t\ttext: [ 'all', 'are', 'static' ]\n\t\t//\n\t\t//\t\ttext: [ 'foo' ]\n\t\t//\n\t\telse {\n\t\t\tnode.textContent = this.text.join( '' );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderAttributes( data ) {\n\t\tlet attrName, attrValue, domAttrValue, attrNs;\n\n\t\tif ( !this.attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = data.node;\n\t\tconst revertData = data.revertData;\n\n\t\tfor ( attrName in this.attributes ) {\n\t\t\t// Current attribute value in DOM.\n\t\t\tdomAttrValue = node.getAttribute( attrName );\n\n\t\t\t// The value to be set.\n\t\t\tattrValue = this.attributes[ attrName ];\n\n\t\t\t// Save revert data.\n\t\t\tif ( revertData ) {\n\t\t\t\trevertData.attributes[ attrName ] = domAttrValue;\n\t\t\t}\n\n\t\t\t// Detect custom namespace:\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tattrNs = ( isObject( attrValue[ 0 ] ) && attrValue[ 0 ].ns ) ? attrValue[ 0 ].ns : null;\n\n\t\t\t// Activate binding if one is found. Cases:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'bar',\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t//\t\t\t'baz'\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( attrValue ) ) {\n\t\t\t\t// Normalize attributes with additional data like namespace:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: [ ... ]\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tconst valueToBind = attrNs ? attrValue[ 0 ].value : attrValue;\n\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && shouldExtend( attrName ) ) {\n\t\t\t\t\tvalueToBind.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: valueToBind,\n\t\t\t\t\tupdater: getAttributeUpdater( node, attrName, attrNs ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\twidth: '100px',\n\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse if ( attrName == 'style' && typeof attrValue[ 0 ] !== 'string' ) {\n\t\t\t\tthis._renderStyleAttribute( attrValue[ 0 ], data );\n\t\t\t}\n\n\t\t\t// Otherwise simply set the static attribute:\n\t\t\t//\n\t\t\t//\t\tclass: [ 'foo' ]\n\t\t\t//\n\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t{\n\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t//\t\t\t\tvalue: [ 'foo' ]\n\t\t\t//\t\t\t}\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\telse {\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && domAttrValue && shouldExtend( attrName ) ) {\n\t\t\t\t\tattrValue.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tattrValue = attrValue\n\t\t\t\t\t// Retrieve \"values\" from:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\n\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\t.map( val => val ? ( val.value || val ) : val )\n\t\t\t\t\t// Flatten the array.\n\t\t\t\t\t.reduce( ( prev, next ) => prev.concat( next ), [] )\n\t\t\t\t\t// Convert into string.\n\t\t\t\t\t.reduce( arrayValueReducer, '' );\n\n\t\t\t\tif ( !isFalsy( attrValue ) ) {\n\t\t\t\t\tnode.setAttributeNS( attrNs, attrName, attrValue );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders the `style` attribute of an HTML element based on\n\t * {@link module:ui/template~Template#attributes}.\n\t *\n\t * A style attribute is an {Object} with static values:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: 'red'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * or values bound to {@link module:ui/model~Model} properties:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: bind.to( ... )\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n\t * needed.\n\t *\n\t * @private\n\t * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderStyleAttribute( styles, data ) {\n\t\tconst node = data.node;\n\n\t\tfor ( const styleName in styles ) {\n\t\t\tconst styleValue = styles[ styleName ];\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( styleValue ) ) {\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: [ styleValue ],\n\t\t\t\t\tupdater: getStyleUpdater( node, styleName ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: 'red'\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse {\n\t\t\t\tnode.style[ styleName ] = styleValue;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElementChildren( data ) {\n\t\tconst node = data.node;\n\t\tconst container = data.intoFragment ? document.createDocumentFragment() : node;\n\t\tconst isApplying = data.isApplying;\n\t\tlet childIndex = 0;\n\n\t\tfor ( const child of this.children ) {\n\t\t\tif ( isViewCollection( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tchild.setParent( node );\n\n\t\t\t\t\t// Note: ViewCollection renders its children.\n\t\t\t\t\tfor ( const view of child ) {\n\t\t\t\t\t\tcontainer.appendChild( view.element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isView( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tif ( !child.isRendered ) {\n\t\t\t\t\t\tchild.render();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontainer.appendChild( child.element );\n\t\t\t\t}\n\t\t\t} else if ( isNode( child ) ) {\n\t\t\t\tcontainer.appendChild( child );\n\t\t\t} else {\n\t\t\t\tif ( isApplying ) {\n\t\t\t\t\tconst revertData = data.revertData;\n\t\t\t\t\tconst childRevertData = getEmptyRevertData();\n\n\t\t\t\t\trevertData.children.push( childRevertData );\n\n\t\t\t\t\tchild._renderNode( {\n\t\t\t\t\t\tnode: container.childNodes[ childIndex++ ],\n\t\t\t\t\t\tisApplying: true,\n\t\t\t\t\t\trevertData: childRevertData\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild( child.render() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( data.intoFragment ) {\n\t\t\tnode.appendChild( container );\n\t\t}\n\t}\n\n\t/**\n\t * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n\t * on an HTML element.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_setUpListeners( data ) {\n\t\tif ( !this.eventListeners ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const key in this.eventListeners ) {\n\t\t\tconst revertBindings = this.eventListeners[ key ].map( schemaItem => {\n\t\t\t\tconst [ domEvtName, domSelector ] = key.split( '@' );\n\n\t\t\t\treturn schemaItem.activateDomEventListener( domEvtName, domSelector, data );\n\t\t\t} );\n\n\t\t\tif ( data.revertData ) {\n\t\t\t\tdata.revertData.bindings.push( revertBindings );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n\t * activates the binding and sets its initial value.\n\t *\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n\t * text node `textContent`.\n\t *\n\t * @protected\n\t * @param {Object} options Binding options.\n\t * @param {module:ui/template~TemplateValueSchema} options.schema\n\t * @param {Function} options.updater A function which updates the DOM (like attribute or text).\n\t * @param {module:ui/template~RenderData} options.data Rendering data.\n\t */\n\t_bindToObservable( { schema, updater, data } ) {\n\t\tconst revertData = data.revertData;\n\n\t\t// Set initial values.\n\t\tsyncValueSchemaValue( schema, updater, data );\n\n\t\tconst revertBindings = schema\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n\t\t\t.filter( item => !isFalsy( item ) )\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n\t\t\t.filter( item => item.observable )\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\n\t\t\t// to the same observable attribute.\n\t\t\t.map( templateBinding => templateBinding.activateAttributeListener( schema, updater, data ) );\n\n\t\tif ( revertData ) {\n\t\t\trevertData.bindings.push( revertBindings );\n\t\t}\n\t}\n\n\t/**\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n\t * return it to the original state.\n\t *\n\t * @protected\n\t * @param {HTMLElement|Text} node A node to be reverted.\n\t * @param {Object} revertData An object that stores information about what changes have been made by\n\t * {@link #apply} to the node. See {@link module:ui/template~RenderData#revertData} for more information.\n\t */\n\t_revertTemplateFromNode( node, revertData ) {\n\t\tfor ( const binding of revertData.bindings ) {\n\t\t\t// Each binding may consist of several observable+observable#attribute.\n\t\t\t// like the following has 2:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'x',\n\t\t\t//\t\t\tbind.to( 'foo' ),\n\t\t\t//\t\t\t'y',\n\t\t\t//\t\t\tbind.to( 'bar' )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\tfor ( const revertBinding of binding ) {\n\t\t\t\trevertBinding();\n\t\t\t}\n\t\t}\n\n\t\tif ( revertData.text ) {\n\t\t\tnode.textContent = revertData.text;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const attrName in revertData.attributes ) {\n\t\t\tconst attrValue = revertData.attributes[ attrName ];\n\n\t\t\t// When the attribute has **not** been set before #apply().\n\t\t\tif ( attrValue === null ) {\n\t\t\t\tnode.removeAttribute( attrName );\n\t\t\t} else {\n\t\t\t\tnode.setAttribute( attrName, attrValue );\n\t\t\t}\n\t\t}\n\n\t\tfor ( let i = 0; i < revertData.children.length; ++i ) {\n\t\t\tthis._revertTemplateFromNode( node.childNodes[ i ], revertData.children[ i ] );\n\t\t}\n\t}\n}\n\nmix( Template, EmitterMixin );\n\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\nexport class TemplateBinding {\n\t/**\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, def );\n\n\t\t/**\n\t\t * An observable instance of the binding. It either:\n\t\t *\n\t\t * * provides the attribute with the value,\n\t\t * * or passes the event when a corresponding DOM event is fired.\n\t\t *\n\t\t * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n\t\t */\n\n\t\t/**\n\t\t * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n\t\t *\n\t\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n\t\t * * or listen to the event in the DOM.\n\t\t *\n\t\t * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n\t\t */\n\n\t\t/**\n\t\t * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n\t\t *\n\t\t * @member {String} module:ui/template~TemplateBinding#attribute\n\t\t */\n\n\t\t/**\n\t\t * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n\t\t *\n\t\t * @member {Function} [module:ui/template~TemplateBinding#callback]\n\t\t */\n\t}\n\n\t/**\n\t * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n\t * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n\t *\n\t * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n\t * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t */\n\tgetValue( node ) {\n\t\tconst value = this.observable[ this.attribute ];\n\n\t\treturn this.callback ? this.callback( value, node ) : value;\n\t}\n\n\t/**\n\t * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n\t * value of {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\n\t * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateAttributeListener( schema, updater, data ) {\n\t\tconst callback = () => syncValueSchemaValue( schema, updater, data );\n\n\t\tthis.emitter.listenTo( this.observable, 'change:' + this.attribute, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( this.observable, 'change:' + this.attribute, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\nexport class TemplateToBinding extends TemplateBinding {\n\t/**\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\n\t *\n\t * @param {String} domEvtName The name of the native DOM event.\n\t * @param {String} domSelector The selector in the DOM to filter delegated events.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateDomEventListener( domEvtName, domSelector, data ) {\n\t\tconst callback = ( evt, domEvt ) => {\n\t\t\tif ( !domSelector || domEvt.target.matches( domSelector ) ) {\n\t\t\t\tif ( typeof this.eventNameOrFunction == 'function' ) {\n\t\t\t\t\tthis.eventNameOrFunction( domEvt );\n\t\t\t\t} else {\n\t\t\t\t\tthis.observable.fire( this.eventNameOrFunction, domEvt );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.emitter.listenTo( data.node, domEvtName, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( data.node, domEvtName, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\nexport class TemplateIfBinding extends TemplateBinding {\n\t/**\n\t * @inheritDoc\n\t */\n\tgetValue( node ) {\n\t\tconst value = super.getValue( node );\n\n\t\treturn isFalsy( value ) ? false : ( this.valueIfTrue || true );\n\t}\n\n\t/**\n\t * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\n\t *\n\t * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n\t */\n}\n\n// Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\nfunction hasTemplateBinding( schema ) {\n\tif ( !schema ) {\n\t\treturn false;\n\t}\n\n\t// Normalize attributes with additional data like namespace:\n\t//\n\t//\t\tclass: {\n\t//\t\t\tns: 'abc',\n\t//\t\t\tvalue: [ ... ]\n\t//\t\t}\n\t//\n\tif ( schema.value ) {\n\t\tschema = schema.value;\n\t}\n\n\tif ( Array.isArray( schema ) ) {\n\t\treturn schema.some( hasTemplateBinding );\n\t} else if ( schema instanceof TemplateBinding ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @returns {Array}\nfunction getValueSchemaValue( schema, node ) {\n\treturn schema.map( schemaItem => {\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\n\t\tif ( schemaItem instanceof TemplateBinding ) {\n\t\t\treturn schemaItem.getValue( node );\n\t\t}\n\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\t\treturn schemaItem;\n\t} );\n}\n\n// A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates the DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\nfunction syncValueSchemaValue( schema, updater, { node } ) {\n\tlet value = getValueSchemaValue( schema, node );\n\n\t// Check if schema is a single Template.bind.if, like:\n\t//\n\t//\t\tclass: Template.bind.if( 'foo' )\n\t//\n\tif ( schema.length == 1 && schema[ 0 ] instanceof TemplateIfBinding ) {\n\t\tvalue = value[ 0 ];\n\t} else {\n\t\tvalue = value.reduce( arrayValueReducer, '' );\n\t}\n\n\tif ( isFalsy( value ) ) {\n\t\tupdater.remove();\n\t} else {\n\t\tupdater.set( value );\n\t}\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\nfunction getTextUpdater( node ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tnode.textContent = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tnode.textContent = '';\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\nfunction getAttributeUpdater( el, attrName, ns ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.setAttributeNS( ns, attrName, value );\n\t\t},\n\n\t\tremove() {\n\t\t\tel.removeAttributeNS( ns, attrName );\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\nfunction getStyleUpdater( el, styleName ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.style[ styleName ] = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tel.style[ styleName ] = null;\n\t\t}\n\t};\n}\n\n// Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\nfunction clone( def ) {\n\tconst clone = cloneDeepWith( def, value => {\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n\t\t// along with the definition.\n\t\t//\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\n\t\t// and nothing should interfere.\n\t\t//\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\n\t\t// instance will be extracted from the View during the normalization and there's no need\n\t\t// to clone it.\n\t\tif ( value && ( value instanceof TemplateBinding || isTemplate( value ) || isView( value ) || isViewCollection( value ) ) ) {\n\t\t\treturn value;\n\t\t}\n\t} );\n\n\treturn clone;\n}\n\n// Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\nfunction normalize( def ) {\n\tif ( typeof def == 'string' ) {\n\t\tdef = normalizePlainTextDefinition( def );\n\t} else if ( def.text ) {\n\t\tnormalizeTextDefinition( def );\n\t}\n\n\tif ( def.on ) {\n\t\tdef.eventListeners = normalizeListeners( def.on );\n\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\n\t\tdelete def.on;\n\t}\n\n\tif ( !def.text ) {\n\t\tif ( def.attributes ) {\n\t\t\tnormalizeAttributes( def.attributes );\n\t\t}\n\n\t\tconst children = [];\n\n\t\tif ( def.children ) {\n\t\t\tif ( isViewCollection( def.children ) ) {\n\t\t\t\tchildren.push( def.children );\n\t\t\t} else {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isTemplate( child ) || isView( child ) || isNode( child ) ) {\n\t\t\t\t\t\tchildren.push( child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildren.push( new Template( child ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdef.children = children;\n\t}\n\n\treturn def;\n}\n\n// Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attributes\nfunction normalizeAttributes( attributes ) {\n\tfor ( const a in attributes ) {\n\t\tif ( attributes[ a ].value ) {\n\t\t\tattributes[ a ].value = [].concat( attributes[ a ].value );\n\t\t}\n\n\t\tarrayify( attributes, a );\n\t}\n}\n\n// Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\nfunction normalizeListeners( listeners ) {\n\tfor ( const l in listeners ) {\n\t\tarrayify( listeners, l );\n\t}\n\n\treturn listeners;\n}\n\n// Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\nfunction normalizePlainTextDefinition( def ) {\n\treturn {\n\t\ttext: [ def ]\n\t};\n}\n\n// Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\nfunction normalizeTextDefinition( def ) {\n\tif ( !Array.isArray( def.text ) ) {\n\t\tdef.text = [ def.text ];\n\t}\n}\n\n// Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\nfunction arrayify( obj, key ) {\n\tif ( !Array.isArray( obj[ key ] ) ) {\n\t\tobj[ key ] = [ obj[ key ] ];\n\t}\n}\n\n// A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\nfunction arrayValueReducer( prev, cur ) {\n\tif ( isFalsy( cur ) ) {\n\t\treturn prev;\n\t} else if ( isFalsy( prev ) ) {\n\t\treturn cur;\n\t} else {\n\t\treturn `${ prev } ${ cur }`;\n\t}\n}\n\n// Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\nfunction extendObjectValueArray( obj, ext ) {\n\tfor ( const a in ext ) {\n\t\tif ( obj[ a ] ) {\n\t\t\tobj[ a ].push( ...ext[ a ] );\n\t\t} else {\n\t\t\tobj[ a ] = ext[ a ];\n\t\t}\n\t}\n}\n\n// A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\n// @param {Object} Error context.\nfunction extendTemplate( template, def ) {\n\tif ( def.attributes ) {\n\t\tif ( !template.attributes ) {\n\t\t\ttemplate.attributes = {};\n\t\t}\n\n\t\textendObjectValueArray( template.attributes, def.attributes );\n\t}\n\n\tif ( def.eventListeners ) {\n\t\tif ( !template.eventListeners ) {\n\t\t\ttemplate.eventListeners = {};\n\t\t}\n\n\t\textendObjectValueArray( template.eventListeners, def.eventListeners );\n\t}\n\n\tif ( def.text ) {\n\t\ttemplate.text.push( ...def.text );\n\t}\n\n\tif ( def.children && def.children.length ) {\n\t\tif ( template.children.length != def.children.length ) {\n\t\t\t/**\n\t\t\t * The number of children in extended definition does not match.\n\t\t\t *\n\t\t\t * @error ui-template-extend-children-mismatch\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-extend-children-mismatch',\n\t\t\t\ttemplate\n\t\t\t);\n\t\t}\n\n\t\tlet childIndex = 0;\n\n\t\tfor ( const childDef of def.children ) {\n\t\t\textendTemplate( template.children[ childIndex++ ], childDef );\n\t\t}\n\t}\n}\n\n// Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isFalsy( value ) {\n\treturn !value && value !== 0;\n}\n\n// Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isView( item ) {\n\treturn item instanceof View;\n}\n\n// Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isTemplate( item ) {\n\treturn item instanceof Template;\n}\n\n// Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isViewCollection( item ) {\n\treturn item instanceof ViewCollection;\n}\n\n// Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\nfunction getEmptyRevertData() {\n\treturn {\n\t\tchildren: [],\n\t\tbindings: [],\n\t\tattributes: {}\n\t};\n}\n\n// Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\nfunction shouldExtend( attrName ) {\n\treturn attrName == 'class' || attrName == 'style';\n}\n\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// Document.querySelector format is also accepted.\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t}\n *\t\t} );\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n *\t\tconst view = new SomeView();\n *\t\tconst childTemplate = new Template( { ... } );\n *\t\tconst childNode = document.createElement( 'b' );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: [\n *\t\t\t\t// view#element will be added as a child of this <p>.\n *\t\t\t\tview,\n *\n * \t\t\t\t// The output of childTemplate.render() will be added here.\n *\t\t\t\tchildTemplate,\n *\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\n *\t\t\t\tchildNode\n *\t\t\t]\n *\t\t} );\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n *\t\tconst collection = new ViewCollection();\n *\t\tcollection.add( someView );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: collection\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n *\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\n *\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * See the template {@link module:ui/template~Template#children} property.\n *\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\n * See the template {@link module:ui/template~Template#attributes} property.\n *\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * See the template {@link module:ui/template~Template#text} property.\n *\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\n * See the template {@link module:ui/template~Template#eventListeners} property.\n */\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n *\t\t// Bind helper will create bindings to attributes of the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// A plain string schema.\n *\t\t\t\t'class': 'static-text',\n *\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\n *\t\t\t\t// observable and follows its value.\n *\t\t\t\t'class': bind.to( 'foo' ),\n *\n *\t\t\t\t// An array schema, combines the above.\n *\t\t\t\t'class': [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t\t\t// Bindings can also be conditional.\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n *\t\t\t\t'class': {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// An object schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * Text nodes can also have complex values:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\t// Will render a \"foo\" text node.\n *\t\tnew Template( {\n *\t\t\ttext: 'foo'\n *\t\t} );\n *\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\n *\t\tnew Template( {\n *\t\t\ttext: [\n *\t\t\t\t'static text: ',\n *\t\t\t\tbind.to( 'foo', () => { ... } )\n *\t\t\t]\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n *\t\t// Bind helper will propagate events through the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\n *\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\n *\t\t\t\tclick: [\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( 'executed' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema with a custom callback.\n *\t\t\t\t'click@a.foo': {\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( evt => {\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n *\t\t\t\t\t} }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n *\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n * attribute as it changes,\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n *\n * Some common use cases of `to()` bindings are presented below:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\n *\t\t\t\tclass: bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n *\t\t\t\t{\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n *\t\t\t\t}\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n * {@link module:ui/template~TemplateListenerSchema}.\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n * node `textContent` so it remains in sync with the observable attribute as it changes.\n *\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n * undefined/null/false/'' (empty string).\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It is a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/tomap\n */\n\nimport objectToMap from './objecttomap';\nimport isIterable from './isiterable';\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\nexport default function toMap( data ) {\n\tif ( isIterable( data ) ) {\n\t\treturn new Map( data );\n\t} else {\n\t\treturn objectToMap( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * **Note**: For mixed data (`Object` or `Iterable`) there's a dedicated {@link module:utils/tomap~toMap} function.\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap( obj ) {\n\tconst map = new Map();\n\n\tfor ( const key in obj ) {\n\t\tmap.set( key, obj[ key ] );\n\t}\n\n\treturn map;\n}\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/node\n */\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/writer~Writer Writer API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\nexport default class Node {\n\t/**\n\t * Creates a model node.\n\t *\n\t * This is an abstract class, so this constructor should not be used directly.\n\t *\n\t * @abstract\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( attrs ) {\n\t\t/**\n\t\t * Parent of this node. It could be {@link module:engine/model/element~Element}\n\t\t * or {@link module:engine/model/documentfragment~DocumentFragment}.\n\t\t * Equals to `null` if the node has no parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * Attributes set on this node.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/node~Node#_attrs\n\t\t */\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Index of this node in it's parent or `null` if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) === null ) {\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n\t * of all it's previous siblings. Equals to `null` if node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget startOffset() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildStartOffset( this ) ) === null ) {\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n\t * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n\t * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n\t * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n\t * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n\t * Equals to `null` if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget endOffset() {\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.startOffset + this.offsetSize;\n\t}\n\n\t/**\n\t * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n\t * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\n\t *\n\t * @returns {Boolean}\n\t */\n\tisAttached() {\n\t\treturn this.root.is( 'rootElement' );\n\t}\n\n\t/**\n\t * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n\t * create {@link module:engine/model/position~Position Position} instance.\n\t *\n\t *\t\tconst abc = new Text( 'abc' );\n\t *\t\tconst foo = new Text( 'foo' );\n\t *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n\t *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.startOffset );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/model/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( node, options = {} ) {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/model/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisBefore( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/model/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisAfter( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Checks if the node has an attribute with given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Converts `Node` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = {};\n\n\t\t// Serializes attributes to the object.\n\t\t// attributes = { a: 'foo', b: 1, c: true }.\n\t\tif ( this._attrs.size ) {\n\t\t\tjson.attributes = Array.from( this._attrs ).reduce( ( result, attr ) => {\n\t\t\t\tresult[ attr[ 0 ] ] = attr[ 1 ];\n\n\t\t\t\treturn result;\n\t\t\t}, {} );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t * This method is useful when processing model objects that are of unknown type. For example, a function\n\t * may return a {@link module:engine/model/documentfragment~DocumentFragment} or a {@link module:engine/model/node~Node}\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n\t *\n\t * Since this method is also available on a range of view objects, you can prefix the type of the object with\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\n\t *\n\t *\t\tmodelElement.is( 'model:element' ); // -> true\n\t *\t\tmodelElement.is( 'view:element' ); // -> false\n\t *\n\t * By using this method it is also possible to check a name of an element:\n\t *\n\t *\t\timageElement.is( 'element', 'image' ); // -> true\n\t *\t\timageElement.is( 'element', 'image' ); // -> same as above\n\t *\t\timageElement.is( 'model:element', 'image' ); // -> same as above, but more precise\n\t *\n\t * The list of model objects which implement the `is()` method:\n\t *\n\t * * {@link module:engine/model/node~Node#is `Node#is()`}\n\t * * {@link module:engine/model/text~Text#is `Text#is()`}\n\t * * {@link module:engine/model/element~Element#is `Element#is()`}\n\t * * {@link module:engine/model/rootelement~RootElement#is `RootElement#is()`}\n\t * * {@link module:engine/model/position~Position#is `Position#is()`}\n\t * * {@link module:engine/model/liveposition~LivePosition#is `LivePosition#is()`}\n\t * * {@link module:engine/model/range~Range#is `Range#is()`}\n\t * * {@link module:engine/model/liverange~LiveRange#is `LiveRange#is()`}\n\t * * {@link module:engine/model/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n\t * * {@link module:engine/model/selection~Selection#is `Selection#is()`}\n\t * * {@link module:engine/model/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n\t * * {@link module:engine/model/markercollection~Marker#is `Marker#is()`}\n\t * * {@link module:engine/model/textproxy~TextProxy#is `TextProxy#is()`}\n\t *\n\t * @method #is\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'node' || type === 'model:node';\n\t}\n\n\t/**\n\t * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n\t */\n\t_clone() {\n\t\treturn new Node( this._attrs );\n\t}\n\n\t/**\n\t * Removes this node from it's parent.\n\t *\n\t * @see module:engine/model/writer~Writer#remove\n\t * @protected\n\t */\n\t_remove() {\n\t\tthis.parent._removeChildren( this.index );\n\t}\n\n\t/**\n\t * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * @see module:engine/model/writer~Writer#setAttribute\n\t * @protected\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_setAttribute( key, value ) {\n\t\tthis._attrs.set( key, value );\n\t}\n\n\t/**\n\t * Removes all attributes from the node and sets given attributes.\n\t *\n\t * @see module:engine/model/writer~Writer#setAttributes\n\t * @protected\n\t * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\t_setAttributesTo( attrs ) {\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the node.\n\t *\n\t * @see module:engine/model/writer~Writer#removeAttribute\n\t * @protected\n\t * @param {String} key Key of attribute to remove.\n\t * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n\t */\n\t_removeAttribute( key ) {\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Removes all attributes from the node.\n\t *\n\t * @see module:engine/model/writer~Writer#clearAttributes\n\t * @protected\n\t */\n\t_clearAttributes() {\n\t\tthis._attrs.clear();\n\t}\n}\n\n/**\n * The node's parent does not contain this node.\n *\n * @error model-node-not-found-in-parent\n */\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/nodelist\n */\n\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\nexport default class NodeList {\n\t/**\n\t * Creates an empty node list.\n\t *\n\t * @protected\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n\t */\n\tconstructor( nodes ) {\n\t\t/**\n\t\t * Nodes contained in this node list.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<module:engine/model/node~Node>}\n\t\t */\n\t\tthis._nodes = [];\n\n\t\tif ( nodes ) {\n\t\t\tthis._insertNodes( 0, nodes );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all nodes contained inside this node list.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._nodes[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._nodes.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Gets the node at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of node.\n\t * @returns {module:engine/model/node~Node|null} Node at given index.\n\t */\n\tgetNode( index ) {\n\t\treturn this._nodes[ index ] || null;\n\t}\n\n\t/**\n\t * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetNodeIndex( node ) {\n\t\tconst index = this._nodes.indexOf( node );\n\n\t\treturn index == -1 ? null : index;\n\t}\n\n\t/**\n\t * Returns the starting offset of given node. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Node to look for.\n\t * @returns {Number|null} Node's starting offset.\n\t */\n\tgetNodeStartOffset( node ) {\n\t\tconst index = this.getNodeIndex( node );\n\n\t\treturn index === null ? null : this._nodes.slice( 0, index ).reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Converts index to offset in node list.\n\t *\n\t * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n\t *\n\t * @param {Number} index Node's index.\n\t * @returns {Number} Node's starting offset.\n\t */\n\tindexToOffset( index ) {\n\t\tif ( index == this._nodes.length ) {\n\t\t\treturn this.maxOffset;\n\t\t}\n\n\t\tconst node = this._nodes[ index ];\n\n\t\tif ( !node ) {\n\t\t\t/**\n\t\t\t * Given index cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error model-nodelist-index-out-of-bounds\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-index-out-of-bounds', this );\n\t\t}\n\n\t\treturn this.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Converts offset in node list to index.\n\t *\n\t * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\tlet totalOffset = 0;\n\n\t\tfor ( const node of this._nodes ) {\n\t\t\tif ( offset >= totalOffset && offset < totalOffset + node.offsetSize ) {\n\t\t\t\treturn this.getNodeIndex( node );\n\t\t\t}\n\n\t\t\ttotalOffset += node.offsetSize;\n\t\t}\n\n\t\tif ( totalOffset != offset ) {\n\t\t\t/**\n\t\t\t * Given offset cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error model-nodelist-offset-out-of-bounds\n\t\t\t * @param {Number} offset\n\t\t\t * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-offset-out-of-bounds',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\toffset,\n\t\t\t\t\tnodeList: this\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn this.length;\n\t}\n\n\t/**\n\t * Inserts given nodes at given index.\n\t *\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\t_insertNodes( index, nodes ) {\n\t\t// Validation.\n\t\tfor ( const node of nodes ) {\n\t\t\tif ( !( node instanceof Node ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to insert an object which is not a Node instance.\n\t\t\t\t *\n\t\t\t\t * @error model-nodelist-insertnodes-not-node\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'model-nodelist-insertnodes-not-node', this );\n\t\t\t}\n\t\t}\n\n\t\tthis._nodes.splice( index, 0, ...nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index.\n\t *\n\t * @protected\n\t * @param {Number} indexStart Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeNodes( indexStart, howMany = 1 ) {\n\t\treturn this._nodes.splice( indexStart, howMany );\n\t}\n\n\t/**\n\t * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n\t * are also converted to their plain object representation.\n\t *\n\t * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n\t */\n\ttoJSON() {\n\t\treturn this._nodes.map( node => node.toJSON() );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/treewalker\n */\n\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} options Object with configuration.\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n\t * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n\t * {@link module:engine/view/textproxy~TextProxy} (`true`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position have been defined.\n\t\t\t *\n\t\t\t * @error view-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-no-start-position',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tif ( options.direction && options.direction != 'forward' && options.direction != 'backward' ) {\n\t\t\t/**\n\t\t\t * Only `backward` and `forward` direction allowed.\n\t\t\t *\n\t\t\t * @error view-tree-walker-unknown-direction\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-tree-walker-unknown-direction', options.startPosition, { direction: options.direction } );\n\t\t}\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n\t\t * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = Position._createAt( options.startPosition );\n\t\t} else {\n\t\t\tthis.position = Position._createAt( options.boundaries[ options.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = options.direction || 'forward';\n\n\t\t/**\n\t\t * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n\t\t * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n\t\t * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n\t\t * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n\t * \t\twalker.skip( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n\t * information about taken step.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.childCount ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just after current position.\n\t\tlet node;\n\n\t\t// Text is a specific parent because it contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtEnd ) {\n\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createAfter( parent );\n\n\t\t\t\treturn this._next();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryEndParent ) {\n\t\t\t\t\tcharactersCount = this.boundaries.end.offset;\n\t\t\t\t\titem = new TextProxy( node, 0, charactersCount );\n\t\t\t\t\tposition = Position._createAfter( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving forward.\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\ttextLength = 1;\n\t\t\t} else {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n\n\t\t\t\ttextLength = endOffset - position.offset;\n\t\t\t}\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tposition.offset += textLength;\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition = Position._createAfter( parent );\n\t\t\tthis.position = position;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before current position.\n\t\tlet node;\n\n\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createBefore( parent );\n\n\t\t\t\treturn this._previous();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset - 1 ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset - 1 );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, node.childCount );\n\t\t\t\tthis.position = position;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn this._formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tposition.offset--;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, node.data.length );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._previous();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryStartParent ) {\n\t\t\t\t\tconst offset = this.boundaries.start.offset;\n\n\t\t\t\t\titem = new TextProxy( node, offset, node.data.length - offset );\n\t\t\t\t\tcharactersCount = item.data.length;\n\t\t\t\t\tposition = Position._createBefore( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving backward.\n\t\t\t\t\tposition.offset--;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( !this.singleCharacters ) {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n\n\t\t\t\ttextLength = position.offset - startOffset;\n\t\t\t} else {\n\t\t\t\ttextLength = 1;\n\t\t\t}\n\n\t\t\tposition.offset -= textLength;\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition = Position._createBefore( parent );\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n\n\t/**\n\t * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n\t *\n\t * @private\n\t * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n\t * @param {module:engine/view/item~Item} item Item between old and new position.\n\t * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n\t * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n\t * @param {Number} [length] Length of the item.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue}\n\t */\n\t_formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\t\t// Text is a specific parent, because contains string instead of children.\n\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n\t\t// we move it just before or just after Text.\n\t\tif ( item instanceof TextProxy ) {\n\t\t\t// Position is at the end of Text.\n\t\t\tif ( item.offsetInText + item.data.length == item.textNode.data.length ) {\n\t\t\t\tif ( this.direction == 'forward' && !( this.boundaries && this.boundaries.end.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createAfter( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createAfter( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position is at the begining ot the text.\n\t\t\tif ( item.offsetInText === 0 ) {\n\t\t\t\tif ( this.direction == 'backward' && !( this.boundaries && this.boundaries.start.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createBefore( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createBefore( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: {\n\t\t\t\ttype,\n\t\t\t\titem,\n\t\t\t\tpreviousPosition,\n\t\t\t\tnextPosition,\n\t\t\t\tlength\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentfragment\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates new DocumentFragment instance.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document to which this document fragment belongs.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t */\n\tconstructor( document, children ) {\n\t\t/**\n\t\t * The document to which this document fragment belongs.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over nodes added to this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of child nodes in this document fragment.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> true\n\t *\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> false\n\t *\t\tdocFrag.is( 'element' ); // -> false\n\t *\t\tdocFrag.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'documentFragment' || type === 'view:documentFragment';\n\t}\n\n\t/**\n\t * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n\t * and sets the parent of these nodes to this fragment.\n\t *\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of appended nodes.\n\t */\n\t_appendChild( items ) {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this fragment.\n\t *\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\t_insertChild( index, items ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( this.document, items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Fires `change` event with given type of the change.\n\t *\n\t * @private\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ViewDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( '$text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( DocumentFragment, EmitterMixin );\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( document, nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( document, nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( document, node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( document, node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode( obj ) {\n\tif ( obj ) {\n\t\tif ( obj.defaultView ) {\n\t\t\treturn obj instanceof obj.defaultView.Document;\n\t\t} else if ( obj.ownerDocument && obj.ownerDocument.defaultView ) {\n\t\t\treturn obj instanceof obj.ownerDocument.defaultView.Node;\n\t\t}\n\t}\n\n\treturn false;\n}\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\n\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n// @if CK_DEBUG_ENGINE // const { stringifyMap } = require( '../dev-utils/utils' );\n\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\n * {@link module:engine/model/writer~Writer#insert} function.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates an empty `DocumentFragment`.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * Nodes to be contained inside the `DocumentFragment`.\n\t */\n\tconstructor( children ) {\n\t\t/**\n\t\t * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n\t\t * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\n\t\t * when DocumentFragment will be inserted to the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\n\t\t */\n\t\tthis.markers = new Map();\n\n\t\t/**\n\t\t * List of nodes contained inside the document fragment.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all nodes contained inside this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this.getChildren();\n\t}\n\n\t/**\n\t * Number of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> true\n\t *\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> false\n\t *\t\tdocFrag.is( 'element' ); // -> false\n\t *\t\tdocFrag.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'documentFragment' || type === 'model:documentFragment';\n\t}\n\n\t/**\n\t * Gets the child at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node|null} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this document fragment's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n\t *\n\t * @returns {Array}\n\t */\n\tgetPath() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Converts offset \"position\" to index \"position\".\n\t *\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n\t *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * Converts `DocumentFragment` instance to plain object and returns it.\n\t * Takes care of converting all of this document fragment's children.\n\t *\n\t * @returns {Object} `DocumentFragment` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = [];\n\n\t\tfor ( const node of this._children ) {\n\t\t\tjson.push( node.toJSON() );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `DocumentFragment` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `DocumentFragment`.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new DocumentFragment( children );\n\t}\n\n\t/**\n\t * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\n\t *\n\t * @protected\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_appendChild( items ) {\n\t\tthis._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this document fragment.\n\t *\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_insertChild( index, items ) {\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children._insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index\n\t * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @protected\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children._removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn 'documentFragment';\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelDocumentFragment: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ModelDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n';\n\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( '$text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tconst textAttrs = stringifyMap( child._attrs );\n\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\t'.repeat( 1 );\n\n\t// @if CK_DEBUG_ENGINE //\t\t\tif ( textAttrs !== '' ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\n\t// @if CK_DEBUG_ENGINE //\t\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t\t}\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/viewcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ViewCollection extends Collection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n\t *\n\t * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n\t */\n\tconstructor( initialItems = [] ) {\n\t\tsuper( initialItems, {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tthis.on( 'add', ( evt, view, index ) => {\n\t\t\tthis._renderViewIntoCollectionParent( view, index );\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A parent element within which child views are rendered and managed in DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._parentElement = null;\n\t}\n\n\t/**\n\t * Destroys the view collection along with child views.\n\t * See the view {@link module:ui/view~View#destroy} method.\n\t */\n\tdestroy() {\n\t\tthis.map( view => view.destroy() );\n\t}\n\n\t/**\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n\t * {@link #remove removing} views in the collection synchronizes their\n\t * {@link module:ui/view~View#element elements} in the parent element.\n\t *\n\t * @param {HTMLElement} element A new parent element.\n\t */\n\tsetParent( elementOrDocFragment ) {\n\t\tthis._parentElement = elementOrDocFragment;\n\n\t\t// Take care of the initial collection items passed to the constructor.\n\t\tfor ( const view of this ) {\n\t\t\tthis._renderViewIntoCollectionParent( view );\n\t\t}\n\t}\n\n\t/**\n\t * Delegates selected events coming from within views in the collection to any\n\t * {@link module:utils/emittermixin~Emitter}.\n\t *\n\t * For the following views and collection:\n\t *\n\t *\t\tconst viewA = new View();\n\t *\t\tconst viewB = new View();\n\t *\t\tconst viewC = new View();\n\t *\n\t *\t\tconst views = parentView.createCollection();\n\t *\n\t *\t\tviews.delegate( 'eventX' ).to( viewB );\n\t *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t *\t\tviews.add( viewA );\n\t *\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventX', customData );\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventY', customData );\n\t *\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\n\t *\n\t * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n\t * {@link module:utils/emittermixin~Emitter}.\n\t * @returns {Object}\n\t * @returns {Function} return.to A function which accepts the destination of\n\t * {@link module:utils/emittermixin~Emitter#delegate delegated} events.\n\t */\n\tdelegate( ...events ) {\n\t\tif ( !events.length || !isStringArray( events ) ) {\n\t\t\t/**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-viewcollection-delegate-wrong-events',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Selects destination for {@link module:utils/emittermixin~Emitter#delegate} events.\n\t\t\t *\n\t\t\t * @memberOf module:ui/viewcollection~ViewCollection#delegate\n\t\t\t * @function module:ui/viewcollection~ViewCollection#delegate.to\n\t\t\t * @param {module:utils/emittermixin~Emitter} dest An `Emitter` instance which is\n\t\t\t * the destination for delegated events.\n\t\t\t */\n\t\t\tto: dest => {\n\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\tfor ( const view of this ) {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\tthis.on( 'add', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * This method {@link module:ui/view~View#render renders} a new view added to the collection.\n\t *\n\t * If the {@link #_parentElement parent element} of the collection is set, this method also adds\n\t * the view's {@link module:ui/view~View#element} as a child of the parent in DOM at a specified index.\n\t *\n\t * **Note**: If index is not specified, the view's element is pushed as the last child\n\t * of the parent element.\n\t *\n\t * @private\n\t * @param {module:ui/view~View} view A new view added to the collection.\n\t * @param {Number} [index] An index the view holds in the collection. When not specified,\n\t * the view is added at the end.\n\t */\n\t_renderViewIntoCollectionParent( view, index ) {\n\t\tif ( !view.isRendered ) {\n\t\t\tview.render();\n\t\t}\n\n\t\tif ( view.element && this._parentElement ) {\n\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index ] );\n\t\t}\n\t}\n\n\t/**\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n\t * in DOM, reflecting the order of the collection.\n\t *\n\t * See the {@link #add} method.\n\t *\n\t * @method #remove\n\t * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n\t * @returns {Object} The removed view.\n\t */\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x4038=['_remove','destroy','requires','adapter','_updateComment','createdAt','switchReadOnly','CommentsRepository','isReadOnly','removeComment','map','_repository','commentsrepository-update-comment-missing-comment-thread','commentsrepository-add-comment-to-missing-comment-thread','commentsrepository-remove-comment-missing-comment-thread','pop','assign','getCommentThread','commentsrepository-invalid-commentid','_readOnlyChannels','isEditable','weight','noChannel','_attachCommentThread','init','slice','has','delete','toJSON','resolve','getComment','threadId','commentUpdated','_createCommentThreadView','commentsrepository-missing-target','_isAttached','function','context','hasCommentThread','updateComment','push','_detachCommentThread','indexOf','Users','Annotations','change:activeView','_threads','commentsrepository-remove-missing-comment','_removeComment','substring','textContent','commentsrepository-remove-comment-internal-error','error','getIndex','channelId','createElement','add','afterInit','update','isAttached','commentsrepository-invalid-comment-authorid','max','_findOptimalIndex','get','addCommentThread','_addCommentThread','comments.CommentView','commentsrepository-add-comment-internal-error','content','reduce','locale','_adapter','then','commentsrepository-update-comment-invalid-content','comment','pluginName','commentsrepository-active-not-attached','comments.maxThreadTotalWeight','commentsrepository-get-comment-invalid-id','fire','fetchCommentThread','listenTo','CommentThreadView','editorReady','commentsrepository-invalid-comment-thread-id','charAt','_add','author','remove','config','activeView','commentsrepository-invalid-comment-content','removeCommentThread','string','addComment','performance','once','comments.CommentThreadView','isDirty','isRemovable','set','change:isDirty','replace','change:createdAt','plugins','from','_addComment','commentsrepository-adapter-already-set','values','commentsrepository-missing-thread-and-adapter-method','bind','catch','commentsrepository-missing-thread-and-adapter','_threadToController','getCommentThreads','test','length','find','comments.maxCommentCharsWhenCollapsed','innerHTML','_model','activeCommentThread','view','trim','setActiveCommentThread','commentsrepository-add-comment-user-not-exists','define','_viewToController','lowest','isFromAdapter','_removeCommentThread','commentInputView','commentThreadInputView','licenseKey','join','isActive','commentsrepository-fetch-comment-thread','getTime','parse','now','openNewCommentThread','fromCharCode','comments','PENDING_ACTION_COMMENT_THREAD','PendingActions'];(function(_0x34e915,_0x40387a){const _0x60191=function(_0x4286c7){while(--_0x4286c7){_0x34e915['push'](_0x34e915['shift']());}};_0x60191(++_0x40387a);}(_0x4038,0x142));const _0x6019=function(_0x34e915,_0x40387a){_0x34e915=_0x34e915-0x0;let _0x60191=_0x4038[_0x34e915];return _0x60191;};import _0x18c5af from'@ckeditor/ckeditor5-core/src/context';import _0x4c03f4 from'@ckeditor/ckeditor5-core/src/contextplugin';import _0x3ac86f from'@ckeditor/ckeditor5-core/src/pendingactions';import _0x311bd3 from'../annotations/annotations';import _0x56cd1d from'@ckeditor/ckeditor5-collaboration-core/src/users';import _0xa0b78d from'@ckeditor/ckeditor5-utils/src/collection';import _0x2a1e0d from'./ui/commentthreadcontroller';import _0x241419 from'../utils/getdatetimeformatter';import _0x2d520a from'@ckeditor/ckeditor5-utils/src/uid';import _0x5ed045 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';import _0xf9caf0 from'@ckeditor/ckeditor5-utils/src/observablemixin';import _0x4b60ff from'@ckeditor/ckeditor5-utils/src/mix';import _0x3a6864 from'./ui/view/commentthreadview';import _0x40e900 from'./ui/view/commentview';import{getTranslation}from'../utils/common-translations';import'../../theme/comment.css';import'../../theme/commentthread.css';import'../../theme/commentinput.css';const noChannel=Symbol(_0x6019('0x87'));export default class m extends _0x4c03f4{static get[_0x6019('0x73')](){return[_0x311bd3,_0x56cd1d,_0x3ac86f];}static get[_0x6019('0x2b')](){return _0x6019('0x78');}constructor(_0x240215){super(_0x240215),this['_threads']=new Map(),this['_threadToController']=new Map(),this[_0x6019('0x5f')]=new Map(),this['_readOnlyChannels']=new Set(),this[_0x6019('0x65')]=this[_0x6019('0x5')][_0x6019('0x39')]['get'](_0x6019('0x65'));const _0x13d797=this[_0x6019('0x5')]['config'];_0x13d797[_0x6019('0x5e')]('comments.maxCommentsWhenCollapsed',0x2),_0x13d797[_0x6019('0x5e')](_0x6019('0x2d'),0x1f4),_0x13d797[_0x6019('0x5e')](_0x6019('0x56'),0x8c),_0x13d797[_0x6019('0x5e')](_0x6019('0x41'),_0x3a6864),_0x13d797[_0x6019('0x5e')](_0x6019('0x22'),_0x40e900);}[_0x6019('0x89')](){const _0xc8f901=this[_0x6019('0x5')][_0x6019('0x48')]['get']('Annotations');this['set'](_0x6019('0x59'),null),this['on']('addCommentThread',(_0xee727,_0x5c4d91)=>this[_0x6019('0x21')](_0x5c4d91)),this['on'](_0x6019('0x3c'),(_0x35939f,_0x2d3c4e)=>this[_0x6019('0x62')](_0x2d3c4e)),this['on'](_0x6019('0x3e'),(_0x47f231,_0x3128a4)=>this[_0x6019('0x4a')](_0x3128a4)),this['on'](_0x6019('0x7'),(_0x35479f,_0x45d086)=>this['_updateComment'](_0x45d086)),this['on'](_0x6019('0x7a'),(_0x30ee9a,_0x4c1a00)=>this[_0x6019('0x10')](_0x4c1a00)),this['on']('addComment',(_0x4bf011,{threadId:_0x8284a7,isFromAdapter:_0x1c199e})=>{if(_0x1c199e)return;const _0xc53ce6=this[_0x6019('0x82')](_0x8284a7),_0x1c76dc=this[_0x6019('0x51')][_0x6019('0x1f')](_0xc53ce6);_0x1c76dc&&_0x1c76dc[_0x6019('0x5a')]['focus']();},{'priority':_0x6019('0x60')}),this['listenTo'](_0xc8f901,_0x6019('0xd'),(_0x50a601,_0x22b3ef,_0x372d24,_0x5c7332)=>{_0x5c7332&&(_0x5c7332[_0x6019('0x67')]=!0x1),_0x372d24?(_0x372d24[_0x6019('0x67')]=!0x0,this[_0x6019('0x59')]=_0x372d24[_0x6019('0x58')]):this[_0x6019('0x59')]=null;});}[_0x6019('0x19')](){x8eE(this[_0x6019('0x5')]);}set['adapter'](_0x25b9df){if(this[_0x6019('0x27')])throw new _0x5ed045(_0x6019('0x4b'));this[_0x6019('0x27')]=_0x25b9df;}get[_0x6019('0x74')](){return this[_0x6019('0x27')];}[_0x6019('0x20')]({channelId:_0x538c8f=noChannel,threadId:_0x1f7184=_0x2d520a(),comments:_0x3d5e21=[],target:_0x5b1118,isFromAdapter:_0xf6bf30}={}){return this[_0x6019('0x2f')](toEventName(_0x6019('0x20'),_0x538c8f),{'channelId':_0x538c8f,'threadId':_0x1f7184,'comments':_0x3d5e21,'target':_0x5b1118,'isFromAdapter':_0xf6bf30}),this['getCommentThread'](_0x1f7184);}[_0x6019('0x6c')]({channelId:_0xfe80fc=noChannel,threadId:_0x30725e=_0x2d520a(),target:_0xd30a85}){if(this['_readOnlyChannels'][_0x6019('0x8b')](_0xfe80fc)||this[_0x6019('0x84')][_0x6019('0x8b')](void 0x0))return;if(!_0xd30a85)throw new _0x5ed045(_0x6019('0x2'));const _0x2f4e2e=this[_0x6019('0x20')]({'channelId':_0xfe80fc,'threadId':_0x30725e,'target':_0xd30a85});if(!_0x2f4e2e)return null;const _0x532ed2=this[_0x6019('0x51')][_0x6019('0x1f')](_0x2f4e2e),_0x267a4b=_0x532ed2['view'][_0x6019('0x64')][_0x6019('0x63')],_0x542e54=this[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0xc'));return _0x542e54[_0x6019('0x3a')]=_0x532ed2[_0x6019('0x5a')],_0x542e54['selectedViews']=[_0x532ed2[_0x6019('0x5a')],..._0x542e54['selectedViews']],_0x267a4b[_0x6019('0x40')](_0x6019('0x33'),()=>_0x267a4b['focus']()),_0x2f4e2e;}['hasCommentThread'](_0x22b543){if('string'!=typeof _0x22b543)throw new _0x5ed045(_0x6019('0x34'));return this['_threads'][_0x6019('0x8b')](_0x22b543);}[_0x6019('0x82')](_0xe57f2c){if(_0x6019('0x3d')!=typeof _0xe57f2c)throw new _0x5ed045(_0x6019('0x34'));return this[_0x6019('0xe')]['get'](_0xe57f2c);}[_0x6019('0x30')]({channelId:_0x35fe28,threadId:_0x435820}={}){const _0xf0b4f8=this[_0x6019('0x82')](_0x435820);if(_0xf0b4f8)return Promise[_0x6019('0x8e')](_0xf0b4f8);if(!this['adapter'])throw new _0x5ed045(_0x6019('0x50'),this['context']);if(_0x6019('0x4')!=typeof this[_0x6019('0x74')]['getCommentThread'])throw new _0x5ed045(_0x6019('0x4d'),this[_0x6019('0x5')]);return this[_0x6019('0x74')][_0x6019('0x82')]({'channelId':_0x35fe28,'threadId':_0x435820})[_0x6019('0x28')](_0x20daf4=>this[_0x6019('0x6')](_0x435820)?this[_0x6019('0x82')](_0x435820):_0x20daf4?this[_0x6019('0x20')](Object[_0x6019('0x81')]({'isFromAdapter':!0x0,'channelId':_0x35fe28},_0x20daf4)):void 0x0)[_0x6019('0x4f')](_0x4c2269=>{throw console[_0x6019('0x14')](_0x4c2269),new _0x5ed045(_0x6019('0x68'),this[_0x6019('0x5')]);});}[_0x6019('0x52')]({channelId:_0x35bab2,skipNotAttached:_0x10d700=!0x1,skipEmpty:_0x1ffc32=!0x1,toJSON:_0x58d7fa=!0x1}={}){const _0x29e310=[];for(const _0x622755 of this[_0x6019('0xe')][_0x6019('0x4c')]())_0x35bab2&&_0x622755[_0x6019('0x16')]!==_0x35bab2||_0x10d700&&!_0x622755['isAttached']||_0x1ffc32&&0x0===_0x622755['length']||_0x29e310[_0x6019('0x8')](_0x622755);return _0x58d7fa?_0x29e310[_0x6019('0x7b')](_0x32f63d=>_0x32f63d[_0x6019('0x8d')]()):_0x29e310;}[_0x6019('0x5c')](_0x35f683){const _0x209de0=this[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0xc'));if(!_0x35f683)return void(this['activeCommentThread']&&(_0x209de0[_0x6019('0x3a')]=null));const _0x181f4d=this['getCommentThread'](_0x35f683);if(!_0x181f4d)throw new _0x5ed045('commentsrepository-active-missing-comment-thread',null,{'threadId':_0x35f683});if(!this[_0x6019('0x51')][_0x6019('0x8b')](_0x181f4d))throw new _0x5ed045(_0x6019('0x2c'),null,{'threadId':_0x35f683});_0x209de0[_0x6019('0x3a')]=this[_0x6019('0x51')][_0x6019('0x1f')](_0x181f4d)[_0x6019('0x5a')];}[_0x6019('0x77')](_0x1409bd,_0x2ffc09){_0x1409bd?this[_0x6019('0x84')][_0x6019('0x18')](_0x2ffc09):this['_readOnlyChannels'][_0x6019('0x8c')](_0x2ffc09);for(const _0x1858ea of this[_0x6019('0x52')]({'channelId':_0x2ffc09}))_0x1858ea['isReadOnly']=!!_0x1409bd;}[_0x6019('0x21')]({channelId:_0x491fb9,threadId:_0x5094b3,comments:_0xb1293c,target:_0x4ff9df,isFromAdapter:_0x72bd17}){if('string'!=typeof _0x5094b3)throw new _0x5ed045(_0x6019('0x34'),null,{'threadId':_0x5094b3});if(this[_0x6019('0x6')](_0x5094b3))throw new _0x5ed045('commentsrepository-duplicated-comment-thread-id',null,{'threadId':_0x5094b3});const _0x52cfde=new CommentThread(this,{'channelId':_0x491fb9,'id':_0x5094b3});(this[_0x6019('0x84')]['has'](_0x491fb9)||this[_0x6019('0x84')][_0x6019('0x8b')](void 0x0))&&(_0x52cfde[_0x6019('0x79')]=!0x0),this['_threads'][_0x6019('0x44')](_0x5094b3,_0x52cfde);for(const _0xe1c866 of _0xb1293c)_0x52cfde[_0x6019('0x3e')](Object[_0x6019('0x81')]({'isFromAdapter':_0x72bd17},_0xe1c866));_0x4ff9df&&_0x52cfde['attachTo'](_0x4ff9df);}[_0x6019('0x88')]({threadId:_0x458683,target:_0x2c2b9c}){const _0x9b1a95=this[_0x6019('0x82')](_0x458683);if(!_0x9b1a95)throw new _0x5ed045('commentsrepository-attach-missing-comment-thread',this);const _0x37a488=this['context'][_0x6019('0x48')][_0x6019('0x1f')]('PendingActions'),_0x314dab=this[_0x6019('0x5')][_0x6019('0x48')]['get']('Annotations'),_0x5b3df5=this['_createCommentThreadView'](_0x9b1a95),_0xbbe88b=new _0x2a1e0d(_0x9b1a95,_0x5b3df5);let _0x292624=null;_0x5b3df5['on'](_0x6019('0x45'),(_0x3b72ed,_0x4d6555,_0x1d14cf)=>{_0x1d14cf?_0x292624=_0x37a488[_0x6019('0x18')](getTranslation(this[_0x6019('0x5')]['locale'],_0x6019('0x6f'))):(_0x37a488[_0x6019('0x38')](_0x292624),_0x292624=null);}),this['_threadToController']['set'](_0x9b1a95,_0xbbe88b),this['_viewToController'][_0x6019('0x44')](_0x5b3df5,_0xbbe88b);const _0xac6683=_0x314dab[_0x6019('0x18')](_0x5b3df5,_0x2c2b9c);_0xac6683['type']=_0x6019('0x2a'),_0xac6683['bind'](_0x6019('0x54'))['to'](_0x5b3df5),_0xac6683[_0x6019('0x4e')](_0x6019('0x42'))['to'](_0x5b3df5,_0x6019('0x42'),_0x5b3df5,_0x6019('0x54'),(_0x52c812,_0x2775e9)=>_0x52c812||!_0x2775e9),_0xac6683[_0x6019('0x4e')]('isActive')['to'](_0x5b3df5);}[_0x6019('0x1')](_0x36b4fc){const _0x453944=this['context'][_0x6019('0x48')]['get']('Users'),{config:_0x1f8f7d,locale:_0x3cfa5c}=this[_0x6019('0x5')],_0x3332d7=_0x241419(_0x1f8f7d[_0x6019('0x1f')](_0x6019('0x26')));return new(0x0,(_0x1f8f7d['get'](_0x6019('0x6e')))[(_0x6019('0x32'))])(_0x3cfa5c,_0x36b4fc,_0x453944['me'],{'editorConfig':_0x1f8f7d['get']('comments.editorConfig'),'maxCommentsWhenCollapsed':_0x1f8f7d['get']('comments.maxCommentsWhenCollapsed'),'maxThreadTotalWeight':_0x1f8f7d['get'](_0x6019('0x2d')),'maxCommentCharsWhenCollapsed':_0x1f8f7d[_0x6019('0x1f')]('comments.maxCommentCharsWhenCollapsed'),'formatDateTime':_0x3332d7,'CommentView':_0x1f8f7d[_0x6019('0x1f')](_0x6019('0x6e'))['CommentView']});}[_0x6019('0x62')]({threadId:_0x74681f,isFromAdapter:_0x389798}){const _0x48d1f4=this[_0x6019('0x82')](_0x74681f);if(!_0x48d1f4)throw new _0x5ed045('commentsrepository-remove-missing-comment-thread',this);if(this[_0x6019('0x9')](_0x74681f),this[_0x6019('0xe')]['delete'](_0x74681f),!_0x48d1f4[_0x6019('0x54')]||_0x389798||!this[_0x6019('0x74')]||_0x6019('0x4')!=typeof this[_0x6019('0x74')][_0x6019('0x3c')])return Promise['resolve']();const _0x3ea2ea=this[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0x70')),{channelId:_0x3cbffd}=_0x48d1f4,_0x2d49ac=_0x3ea2ea['add'](getTranslation(this[_0x6019('0x5')][_0x6019('0x26')],_0x6019('0x6f')));return this[_0x6019('0x74')][_0x6019('0x3c')]({'channelId':_0x3cbffd,'threadId':_0x74681f})[_0x6019('0x28')](()=>_0x3ea2ea[_0x6019('0x38')](_0x2d49ac))[_0x6019('0x4f')](_0xab511d=>{throw console[_0x6019('0x14')](_0xab511d),new _0x5ed045('commentsrepository-remove-comment-thread-internal-error',this);});}['_detachCommentThread'](_0x1b4383){const _0x3234f6=this['context'][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0xc')),_0x2f7909=this[_0x6019('0x82')](_0x1b4383);if(this['_threadToController'][_0x6019('0x8b')](_0x2f7909)){const _0x161b9c=this[_0x6019('0x51')][_0x6019('0x1f')](_0x2f7909),_0x3372d0=_0x161b9c[_0x6019('0x5a')];this[_0x6019('0x51')]['delete'](_0x2f7909),this[_0x6019('0x5f')][_0x6019('0x8c')](_0x3372d0),_0x3234f6[_0x6019('0x38')](_0x3372d0),_0x161b9c[_0x6019('0x72')](),_0x3372d0[_0x6019('0x72')]();}}[_0x6019('0x4a')]({threadId:_0x425f20,commentId:_0x2b92af=_0x2d520a(),content:_0x5031d6,authorId:_0x59a5c1,createdAt:_0x4eafc3,isFromAdapter:_0x3b30e8}){if('string'!=typeof _0x2b92af)throw new _0x5ed045(_0x6019('0x83'));if(_0x6019('0x3d')!=typeof _0x59a5c1)throw new _0x5ed045(_0x6019('0x1c'));if(_0x6019('0x3d')!=typeof _0x5031d6||!_0x5031d6[_0x6019('0x5b')]())throw new _0x5ed045(_0x6019('0x3b'));const _0x412209=this[_0x6019('0x82')](_0x425f20);if(!_0x412209)throw new _0x5ed045(_0x6019('0x7e'),this);const _0x6c5296=this[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x56cd1d)['getUser'](_0x59a5c1);if(!_0x6c5296)throw new _0x5ed045(_0x6019('0x5d'),null,{'authorId':_0x59a5c1});const _0x5ea9e7=new Comment(this,{'threadId':_0x425f20,'id':_0x2b92af,'author':_0x6c5296,'content':_0x5031d6,'createdAt':_0x4eafc3||new Date()});if(_0x412209['_add'](_0x5ea9e7),_0x3b30e8||!this[_0x6019('0x74')]||_0x6019('0x4')!=typeof this['adapter'][_0x6019('0x3e')])return Promise[_0x6019('0x8e')]();const _0x26ae4d=this[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0x70')),{channelId:_0x2e7699}=_0x412209,_0x2ddd78=_0x26ae4d[_0x6019('0x18')](getTranslation(this[_0x6019('0x5')]['locale'],_0x6019('0x6f')));return this['adapter'][_0x6019('0x3e')]({'channelId':_0x2e7699,'threadId':_0x425f20,'commentId':_0x2b92af,'content':_0x5031d6})[_0x6019('0x28')](_0x192282=>{if(_0x26ae4d[_0x6019('0x38')](_0x2ddd78),this[_0x6019('0x6')](_0x425f20))_0x192282&&_0x192282[_0x6019('0x76')]&&this[_0x6019('0x75')]({'threadId':_0x425f20,'commentId':_0x2b92af,'createdAt':_0x192282[_0x6019('0x76')],'isFromAdapter':!0x0});else{const _0x106daf={'threadId':_0x425f20,'commentId':_0x2b92af,'content':_0x5031d6,'createdAt':_0x192282&&_0x192282[_0x6019('0x76')]?_0x192282[_0x6019('0x76')]:_0x4eafc3,'authorId':_0x6c5296['id']};this[_0x6019('0x20')]({'channelId':_0x2e7699,'threadId':_0x425f20,'comments':[_0x106daf],'isFromAdapter':!0x0});}})[_0x6019('0x4f')](_0x446f24=>{throw console['error'](_0x446f24),new _0x5ed045(_0x6019('0x23'),this);});}[_0x6019('0x75')]({threadId:_0x139cdd,commentId:_0x1c6c89,content:_0x4c6dbc,createdAt:_0x401623,isFromAdapter:_0x142416}){if(void 0x0!==_0x4c6dbc&&(_0x6019('0x3d')!=typeof _0x4c6dbc||!_0x4c6dbc[_0x6019('0x5b')]()[_0x6019('0x54')]))throw new _0x5ed045(_0x6019('0x29'));const _0x5361ab=this[_0x6019('0x82')](_0x139cdd),_0x67154c=_0x5361ab['getComment'](_0x1c6c89);if(!_0x67154c)throw new _0x5ed045('commentsrepository-update-missing-comment',this);let _0x3ee001=!0x1;if(_0x4c6dbc&&_0x4c6dbc!==_0x67154c['content']&&(_0x67154c[_0x6019('0x24')]=_0x4c6dbc,_0x3ee001=!0x0),_0x401623&&_0x401623!==_0x67154c[_0x6019('0x76')]&&(_0x67154c[_0x6019('0x76')]=_0x401623,_0x3ee001=!0x0),!_0x3ee001)return Promise[_0x6019('0x8e')]();if(_0x5361ab[_0x6019('0x2f')](_0x6019('0x0')),_0x142416||!this[_0x6019('0x74')]||_0x6019('0x4')!=typeof this[_0x6019('0x74')][_0x6019('0x7')])return Promise['resolve']();const _0x474df2=this[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0x70')),{channelId:_0x1cacfd}=this[_0x6019('0x82')](_0x67154c[_0x6019('0x90')]),_0xf51f33=_0x474df2['add'](getTranslation(this['context'][_0x6019('0x26')],_0x6019('0x6f')));return this[_0x6019('0x74')]['updateComment']({'channelId':_0x1cacfd,'threadId':_0x139cdd,'commentId':_0x1c6c89,'content':_0x4c6dbc})[_0x6019('0x28')](()=>_0x474df2['remove'](_0xf51f33))[_0x6019('0x4f')](_0xbc8b56=>{throw console['error'](_0xbc8b56),new _0x5ed045('commentsrepository-update-comment-internal-error',this);});}[_0x6019('0x10')]({threadId:_0x5e5ea3,commentId:_0x54c999,isFromAdapter:_0x58d09d}){const _0x2decf7=this['getCommentThread'](_0x5e5ea3),_0x59f353=_0x2decf7[_0x6019('0x8f')](_0x54c999);if(!_0x59f353)throw new _0x5ed045(_0x6019('0xf'),this);if(_0x2decf7[_0x6019('0x71')](_0x59f353),_0x58d09d||!this[_0x6019('0x74')]||_0x6019('0x4')!=typeof this[_0x6019('0x74')][_0x6019('0x7a')])return Promise[_0x6019('0x8e')]();const _0x25bada=this[_0x6019('0x5')][_0x6019('0x48')]['get'](_0x6019('0x70')),{channelId:_0x1c00cb}=_0x2decf7,_0x892b22=_0x25bada[_0x6019('0x18')](getTranslation(this['context'][_0x6019('0x26')],'PENDING_ACTION_COMMENT_THREAD'));return this[_0x6019('0x74')][_0x6019('0x7a')]({'channelId':_0x1c00cb,'threadId':_0x5e5ea3,'commentId':_0x54c999})['then'](()=>_0x25bada[_0x6019('0x38')](_0x892b22))[_0x6019('0x4f')](_0x1a0957=>{throw console['error'](_0x1a0957),new _0x5ed045(_0x6019('0x13'),this);});}}export class CommentThread{constructor(_0x178ae8,_0x1a9886){this[_0x6019('0x16')]=_0x1a9886[_0x6019('0x16')],this['id']=_0x1a9886['id'],this[_0x6019('0x44')](_0x6019('0x79'),!0x1),this[_0x6019('0x6e')]=new _0xa0b78d(),this[_0x6019('0x7c')]=_0x178ae8,this[_0x6019('0x3')]=!0x1;}get['weight'](){return Array['from'](this[_0x6019('0x6e')])[_0x6019('0x25')]((_0x586612,_0x149b65)=>_0x586612+_0x149b65['weight'],0x0);}get[_0x6019('0x54')](){return this[_0x6019('0x6e')]['length'];}get[_0x6019('0x1b')](){return this[_0x6019('0x3')];}[_0x6019('0x38')]({isFromAdapter:_0x4f8d90=!0x1}={}){const {channelId:_0x61db1,id:_0x2b0e76}=this;this[_0x6019('0x7c')][_0x6019('0x2f')](toEventName(_0x6019('0x3c'),_0x61db1),{'channelId':_0x61db1,'threadId':_0x2b0e76,'isFromAdapter':_0x4f8d90});}['attachTo'](_0x2d0a32){this[_0x6019('0x7c')][_0x6019('0x88')]({'threadId':this['id'],'target':_0x2d0a32});}[_0x6019('0x3e')](_0x1a5f02){const {channelId:_0x478363,id:_0x496767}=this;this[_0x6019('0x7c')]['fire'](toEventName('addComment',_0x478363,_0x496767),Object[_0x6019('0x81')]({'channelId':_0x478363,'threadId':_0x496767},_0x1a5f02));}[_0x6019('0x8f')](_0x19ddb1){if('string'!=typeof _0x19ddb1)throw new _0x5ed045(_0x6019('0x2e'),null,{'commentId':_0x19ddb1});return this[_0x6019('0x6e')]['get'](_0x19ddb1);}[_0x6019('0x8d')](){return{'threadId':this['id'],'comments':this[_0x6019('0x6e')][_0x6019('0x7b')](_0x5adfaa=>_0x5adfaa[_0x6019('0x8d')]())};}[_0x6019('0x36')](_0x3edd82){return this[_0x6019('0x31')](_0x3edd82,_0x6019('0x47'),()=>{const _0x46aec7=this[_0x6019('0x1e')](_0x3edd82),_0x9df4b4=this[_0x6019('0x6e')];_0x46aec7-0x1!=_0x9df4b4[_0x6019('0x15')](_0x3edd82)&&_0x46aec7+0x1!=_0x9df4b4[_0x6019('0x15')](_0x3edd82)&&(this[_0x6019('0x71')](_0x3edd82),this[_0x6019('0x36')](_0x3edd82));}),_0x3edd82[_0x6019('0x76')]?this[_0x6019('0x6e')]['add'](_0x3edd82,this[_0x6019('0x1e')](_0x3edd82)):this['comments']['add'](_0x3edd82);}[_0x6019('0x71')](_0x11806a){return this['stopListening'](_0x11806a),_0x11806a[_0x6019('0x72')](),this[_0x6019('0x6e')][_0x6019('0x38')](_0x11806a);}[_0x6019('0x1e')](_0x3a28b6){const _0x40b908=this[_0x6019('0x6e')][_0x6019('0x55')](_0x5867f1=>new Date(_0x5867f1[_0x6019('0x76')])[_0x6019('0x69')]()>new Date(_0x3a28b6[_0x6019('0x76')])['getTime']());return _0x40b908?this[_0x6019('0x6e')]['getIndex'](_0x40b908):this[_0x6019('0x54')];}}_0x4b60ff(CommentThread,_0xf9caf0);const MIN_WEIGHT=0xc8;function getContentLength(_0x5d7e34){const _0x5874ac=document[_0x6019('0x17')]('div');return _0x5874ac[_0x6019('0x57')]=_0x5d7e34,_0x5874ac[_0x6019('0x12')][_0x6019('0x54')];}export class Comment{constructor(_0x30057c,_0x2bef2d){const _0x5656ae=_0x30057c[_0x6019('0x5')][_0x6019('0x48')][_0x6019('0x1f')](_0x6019('0xb'))['me'],_0x5edf5d=_0x30057c[_0x6019('0x82')](_0x2bef2d[_0x6019('0x90')]);this['id']=_0x2bef2d['id'],this[_0x6019('0x90')]=_0x2bef2d[_0x6019('0x90')],this['author']=_0x2bef2d[_0x6019('0x37')],this[_0x6019('0x44')](_0x6019('0x24'),_0x2bef2d[_0x6019('0x24')]),this[_0x6019('0x44')](_0x6019('0x76'),_0x2bef2d[_0x6019('0x76')]),this['set'](_0x6019('0x85'),_0x5656ae===_0x2bef2d['author']),this['set'](_0x6019('0x43'),_0x5656ae===_0x2bef2d[_0x6019('0x37')]),this[_0x6019('0x4e')]('isReadOnly')['to'](_0x5edf5d,_0x6019('0x79')),this['_repository']=_0x30057c;}get[_0x6019('0x86')](){return Math[_0x6019('0x1d')](getContentLength(this['content']),MIN_WEIGHT);}[_0x6019('0x1a')](_0x447800){if(!_0x447800[_0x6019('0x61')]&&!this[_0x6019('0x85')])return;const {threadId:_0xa685a2,id:_0x5f5830}=this;if(!this[_0x6019('0x7c')]['hasCommentThread'](_0xa685a2))throw new _0x5ed045(_0x6019('0x7d'),this);const _0xda6538=this['_repository'][_0x6019('0x82')](_0xa685a2),{channelId:_0x30dfc7}=_0xda6538;this[_0x6019('0x7c')]['fire'](toEventName(_0x6019('0x7'),_0x30dfc7,_0xa685a2),Object[_0x6019('0x81')]({'channelId':_0x30dfc7,'threadId':_0xa685a2,'commentId':_0x5f5830},_0x447800));}[_0x6019('0x38')](_0x3eb5a3={}){if(!_0x3eb5a3[_0x6019('0x61')]&&!this[_0x6019('0x43')])return;const {threadId:_0x7cc7a0,id:_0x14cc9a}=this;if(!this[_0x6019('0x7c')][_0x6019('0x6')](_0x7cc7a0))throw new _0x5ed045(_0x6019('0x7f'),this);const _0x3450d1=this[_0x6019('0x7c')]['getCommentThread'](_0x7cc7a0),{channelId:_0x567409}=_0x3450d1;this['_repository'][_0x6019('0x2f')](toEventName(_0x6019('0x7a'),_0x567409,_0x7cc7a0),Object[_0x6019('0x81')]({'channelId':_0x567409,'threadId':_0x7cc7a0,'commentId':_0x14cc9a},_0x3eb5a3));}[_0x6019('0x8d')](){return{'commentId':this['id'],'content':this[_0x6019('0x24')],'createdAt':this[_0x6019('0x76')],'authorId':this[_0x6019('0x37')]['id']};}[_0x6019('0x72')](){this['stopListening']();}}function toEventName(_0x10287f,..._0x483993){for(const _0x303349 of _0x483993)_0x6019('0x3d')==typeof _0x303349&&(_0x10287f+=':'+_0x303349);return _0x10287f;}function x8eE(_0x12584e){const _0x2878bd=_0x12584e instanceof _0x18c5af,_0x188d79=[0x1,0x55,0x4e,0x73,0xc6,0xff,0x32,0x70,0x53,0x57,0xa1],_0x311e9f=_0x38a52a([0x34,0x30,0x34,0x30,0x32,0x30,0x35,0x38]),_0x42ab48=[0x7f,0x22,0x6,0xd3,0xa7,0x56,0x92,0xc7,0x84,0xa0,0x12],_0x44c8f6=_0x38a52a([0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39]),_0x4e7312=_0x458aa0(_0x12584e[_0x6019('0x39')][_0x6019('0x1f')](_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79])));function _0x458aa0(_0x2678e5){if(_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x68,0x61,0x73])](_0x38a52a([0x57,0x65,0x62,0x53,0x6f,0x63,0x6b,0x65,0x74,0x47,0x61,0x74,0x65,0x77,0x61,0x79]))&&_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x67,0x65,0x74])](_0x38a52a([0x57,0x65,0x62,0x53,0x6f,0x63,0x6b,0x65,0x74,0x47,0x61,0x74,0x65,0x77,0x61,0x79]))[_0x38a52a([0x73,0x74,0x61,0x74,0x65])]==_0x38a52a([0x63,0x6f,0x6e,0x6e,0x65,0x63,0x74,0x65,0x64]))return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x56,0x61,0x6c,0x69,0x64]));if(_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x68,0x61,0x73])](_0x38a52a([0x54,0x72,0x61,0x63,0x6b,0x43,0x68,0x61,0x6e,0x67,0x65,0x73,0x44,0x61,0x74,0x61,0x47,0x65,0x74,0x74,0x65,0x72]))&&_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x67,0x65,0x74])](_0x38a52a([0x54,0x72,0x61,0x63,0x6b,0x43,0x68,0x61,0x6e,0x67,0x65,0x73,0x44,0x61,0x74,0x61,0x47,0x65,0x74,0x74,0x65,0x72]))[_0x38a52a([0x72,0x65,0x73,0x75,0x6c,0x74])]==_0x38a52a([0x65,0x6e,0x64]))return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x56,0x61,0x6c,0x69,0x64]));try{const _0x3e6fbe=_0x513b1f(_0x2678e5),_0x5b6569=JSON[_0x6019('0x6a')](_0x3e6fbe),_0x3d103d=parseInt(_0x5b6569[_0x38a52a([0x31])]),_0x7e3a30=parseInt(_0x5b6569[_0x38a52a([0x33])]),_0x4a62ed=parseInt(_0x5b6569[_0x38a52a([0x34])])||0x0,_0x3bdcdf=parseInt(_0x5b6569[_0x38a52a([0x35])])||0x0,_0x307313=0x1,_0x4f76bf=0x2;if(!(_0x4a62ed&_0x307313)||_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x68,0x61,0x73])](_0x38a52a([0x54,0x72,0x61,0x63,0x6b,0x43,0x68,0x61,0x6e,0x67,0x65,0x73,0x45,0x64,0x69,0x74,0x69,0x6e,0x67]))&&!(_0x4a62ed&_0x4f76bf))return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64]));if(_0x3bdcdf&&!eval(_0x38a52a([0x77,0x69,0x6e,0x64,0x6f,0x77]))[_0x38a52a([0x6f,0x70,0x65,0x6e])][_0x38a52a([0x63,0x6c,0x6f,0x73,0x65,0x64])])return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64]));if(parseInt(_0x311e9f)/0x2>_0x3d103d)return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64]));if(_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x68,0x61,0x73])](_0x38a52a([0x54,0x72,0x61,0x63,0x6b,0x43,0x68,0x61,0x6e,0x67,0x65,0x73,0x45,0x64,0x69,0x74,0x69,0x6e,0x67]))){const _0x3a2a25=_0x12584e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x67,0x65,0x74])](_0x38a52a([0x54,0x72,0x61,0x63,0x6b,0x43,0x68,0x61,0x6e,0x67,0x65,0x73,0x45,0x64,0x69,0x74,0x69,0x6e,0x67]));if(parseInt(_0x3a2a25[_0x38a52a([0x5f,0x65,0x78,0x65,0x63,0x75,0x74,0x65,0x53,0x75,0x67,0x67,0x65,0x73,0x74,0x69,0x6f,0x6e])])/0x2>_0x3d103d)return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64]));}return _0xb58c87(_0x7e3a30?_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x54,0x72,0x69,0x61,0x6c]):_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x56,0x61,0x6c,0x69,0x64]));}catch(_0x1fc800){return _0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64]));}}function _0x513b1f(_0x18d448){const _0x9d4f5b=[0x1d,0xdd,0xaf,0x5a,0xe7,0x85,0xef,0xf0,0x4b,0xb4],_0x478bca=new(eval(_0x38a52a([0x77,0x69,0x6e,0x64,0x6f,0x77])))[(_0x38a52a([0x55,0x69,0x6e,0x74,0x38,0x41,0x72,0x72,0x61,0x79]))]([..._0x188d79,..._0x9d4f5b,..._0x42ab48]);return _0x2cd8b1(_0x18d448,_0x478bca);}function _0x2cd8b1(_0x53a10c,_0x4c988d){const _0x830f04=_0x41b360(_0x53a10c),_0xa7bbab=Array[_0x6019('0x49')](_0x72854e(_0x830f04)),_0x3e4a04=_0xa7bbab['pop'](),_0x5dd90d=_0xa7bbab[_0x6019('0x80')]();return _0x16527a(_0x1765e5(_0xa7bbab,_0x4c988d,_0x5dd90d+0x100*_0x3e4a04));}function _0xb58c87(_0x8683af){const _0x2d5f8e=_0x431e72();return _0x12584e[_0x2d5f8e]=_0x8683af,_0x8683af;}function _0x431e72(){const _0x1557ce=String(window[_0x6019('0x3f')][_0x6019('0x6b')]())['replace'](_0x38a52a([0x2e]),'');let _0xa80869='';for(let _0x4faa99=0x0;_0x4faa99<_0x1557ce[_0x6019('0x54')];_0x4faa99+=0x2){let _0x2c2665=parseInt(_0x1557ce[_0x6019('0x11')](_0x4faa99,_0x4faa99+0x2));_0x2c2665>=_0x44c8f6[_0x6019('0x54')]&&(_0x2c2665-=_0x44c8f6[_0x6019('0x54')]),_0xa80869+=_0x44c8f6[_0x2c2665];}return _0xa80869;}function _0x694c19(_0x56d35e){for(const _0x3c1029 of _0x56d35e[_0x38a52a([0x65,0x64,0x69,0x74,0x6f,0x72,0x73])])_0x3f1a0e(_0x3c1029);_0x56d35e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x67,0x65,0x74])](_0x38a52a([0x43,0x6f,0x6d,0x6d,0x65,0x6e,0x74,0x73,0x52,0x65,0x70,0x6f,0x73,0x69,0x74,0x6f,0x72,0x79]))[_0x38a52a([0x73,0x77,0x69,0x74,0x63,0x68,0x52,0x65,0x61,0x64,0x4f,0x6e,0x6c,0x79])](!0x0),_0x56d35e[_0x38a52a([0x70,0x6c,0x75,0x67,0x69,0x6e,0x73])][_0x38a52a([0x67,0x65,0x74])](_0x38a52a([0x43,0x6f,0x6d,0x6d,0x65,0x6e,0x74,0x73,0x52,0x65,0x70,0x6f,0x73,0x69,0x74,0x6f,0x72,0x79]))[_0x38a52a([0x73,0x77,0x69,0x74,0x63,0x68,0x52,0x65,0x61,0x64,0x4f,0x6e,0x6c,0x79])]=_0x2147d4;}function _0x3f1a0e(_0x27f147){function _0x552455(){_0x27f147[_0x38a52a([0x6d,0x6f,0x64,0x65,0x6c])][_0x38a52a([0x63,0x68,0x61,0x6e,0x67,0x65])]=_0x2147d4,_0x27f147[_0x38a52a([0x6d,0x6f,0x64,0x65,0x6c])][_0x38a52a([0x65,0x6e,0x71,0x75,0x65,0x75,0x65,0x43,0x68,0x61,0x6e,0x67,0x65])]=_0x2147d4,_0x27f147[_0x38a52a([0x69,0x73,0x52,0x65,0x61,0x64,0x4f,0x6e,0x6c,0x79])]=!0x0;}_0x27f147[_0x38a52a([0x73,0x74,0x61,0x74,0x65])]==_0x38a52a([0x72,0x65,0x61,0x64,0x79])?_0x552455():_0x27f147[_0x38a52a([0x6f,0x6e,0x63,0x65])](_0x38a52a([0x72,0x65,0x61,0x64,0x79]),()=>_0x552455());}function _0x2147d4(){return null;}function _0x72854e(_0x463648){const _0x365e4a=new Uint8Array(_0x463648['length']);for(let _0xd9d72e=0x0;_0xd9d72e<_0x463648[_0x6019('0x54')];_0xd9d72e++)_0x365e4a[_0xd9d72e]=_0x463648['charCodeAt'](_0xd9d72e);return _0x365e4a;}function _0x16527a(_0x413038){let _0x1d5d44='';for(const _0x148de4 of _0x413038)_0x1d5d44+=String[_0x6019('0x6d')](_0x148de4);return _0x1d5d44;}function _0x41b360(_0x138ade){const _0x231710=_0x44c8f6+_0x38a52a([0x2b,0x2f,0x3d]);if(_0x138ade=String(_0x138ade)[_0x6019('0x46')](/[\\t\\n\\f\\r ]+/g,''),!/^(?:[A-Za-z\\d+/]{4})*?(?:[A-Za-z\\d+/]{2}(?:==)?|[A-Za-z\\d+/]{3}=?)?$/[_0x6019('0x53')](_0x138ade))throw new TypeError(_0x38a52a([0x46,0x61,0x69,0x6c,0x65,0x64,0x20,0x74,0x6f,0x20,0x70,0x61,0x72,0x73,0x65,0x20,0x62,0x61,0x73,0x65,0x36,0x34,0x20,0x74,0x6f,0x20,0x73,0x74,0x72,0x69,0x6e,0x67,0x2e]));_0x138ade+=_0x38a52a([0x3d,0x3d])[_0x6019('0x8a')](0x2-(0x3&_0x138ade['length']));let _0x7e4b68,_0x219aed,_0x37388f,_0x7bb265='';for(let _0x5e4a34=0x0;_0x5e4a34<_0x138ade[_0x6019('0x54')];)_0x7e4b68=_0x231710[_0x6019('0xa')](_0x138ade[_0x6019('0x35')](_0x5e4a34++))<<0x12|_0x231710[_0x6019('0xa')](_0x138ade[_0x6019('0x35')](_0x5e4a34++))<<0xc|(_0x219aed=_0x231710['indexOf'](_0x138ade[_0x6019('0x35')](_0x5e4a34++)))<<0x6|(_0x37388f=_0x231710[_0x6019('0xa')](_0x138ade[_0x6019('0x35')](_0x5e4a34++))),_0x7bb265+=0x40===_0x219aed?String[_0x6019('0x6d')](_0x7e4b68>>0x10&0xff):0x40===_0x37388f?String[_0x6019('0x6d')](_0x7e4b68>>0x10&0xff,_0x7e4b68>>0x8&0xff):String[_0x6019('0x6d')](_0x7e4b68>>0x10&0xff,_0x7e4b68>>0x8&0xff,0xff&_0x7e4b68);return _0x7bb265;}function _0x1765e5(_0x3d78f4,_0x3947bc,_0x324d0f){const _0x5a16f8={};_0x5a16f8[_0x38a52a([0x6e,0x75,0x6d,0x62,0x65,0x72,0x4f,0x66,0x52,0x6f,0x75,0x6e,0x64,0x73])]={0x10:0xa,0x18:0xc,0x20:0xe},_0x5a16f8[_0x38a52a([0x72,0x63,0x6f,0x6e])]=[0x1,0x2,0x4,0x8,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91],_0x5a16f8[_0x38a52a([0x53])]=[0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x1,0x67,0x2b,0xfe,0xd7,0xab,0x76,0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,0x4,0xc7,0x23,0xc3,0x18,0x96,0x5,0x9a,0x7,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,0x9,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,0x53,0xd1,0x0,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x2,0x7f,0x50,0x3c,0x9f,0xa8,0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,0xcd,0xc,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0xb,0xdb,0xe0,0x32,0x3a,0xa,0x49,0x6,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x8,0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,0x70,0x3e,0xb5,0x66,0x48,0x3,0xf6,0xe,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,0x8c,0xa1,0x89,0xd,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0xf,0xb0,0x54,0xbb,0x16],_0x5a16f8[_0x38a52a([0x54,0x31])]=[0xc66363a5,0xf87c7c84,0xee777799,0xf67b7b8d,0xfff2f20d,0xd66b6bbd,0xde6f6fb1,0x91c5c554,0x60303050,0x2010103,0xce6767a9,0x562b2b7d,0xe7fefe19,0xb5d7d762,0x4dababe6,0xec76769a,0x8fcaca45,0x1f82829d,0x89c9c940,0xfa7d7d87,0xeffafa15,0xb25959eb,0x8e4747c9,0xfbf0f00b,0x41adadec,0xb3d4d467,0x5fa2a2fd,0x45afafea,0x239c9cbf,0x53a4a4f7,0xe4727296,0x9bc0c05b,0x75b7b7c2,0xe1fdfd1c,0x3d9393ae,0x4c26266a,0x6c36365a,0x7e3f3f41,0xf5f7f702,0x83cccc4f,0x6834345c,0x51a5a5f4,0xd1e5e534,0xf9f1f108,0xe2717193,0xabd8d873,0x62313153,0x2a15153f,0x804040c,0x95c7c752,0x46232365,0x9dc3c35e,0x30181828,0x379696a1,0xa05050f,0x2f9a9ab5,0xe070709,0x24121236,0x1b80809b,0xdfe2e23d,0xcdebeb26,0x4e272769,0x7fb2b2cd,0xea75759f,0x1209091b,0x1d83839e,0x582c2c74,0x341a1a2e,0x361b1b2d,0xdc6e6eb2,0xb45a5aee,0x5ba0a0fb,0xa45252f6,0x763b3b4d,0xb7d6d661,0x7db3b3ce,0x5229297b,0xdde3e33e,0x5e2f2f71,0x13848497,0xa65353f5,0xb9d1d168,0x0,0xc1eded2c,0x40202060,0xe3fcfc1f,0x79b1b1c8,0xb65b5bed,0xd46a6abe,0x8dcbcb46,0x67bebed9,0x7239394b,0x944a4ade,0x984c4cd4,0xb05858e8,0x85cfcf4a,0xbbd0d06b,0xc5efef2a,0x4faaaae5,0xedfbfb16,0x864343c5,0x9a4d4dd7,0x66333355,0x11858594,0x8a4545cf,0xe9f9f910,0x4020206,0xfe7f7f81,0xa05050f0,0x783c3c44,0x259f9fba,0x4ba8a8e3,0xa25151f3,0x5da3a3fe,0x804040c0,0x58f8f8a,0x3f9292ad,0x219d9dbc,0x70383848,0xf1f5f504,0x63bcbcdf,0x77b6b6c1,0xafdada75,0x42212163,0x20101030,0xe5ffff1a,0xfdf3f30e,0xbfd2d26d,0x81cdcd4c,0x180c0c14,0x26131335,0xc3ecec2f,0xbe5f5fe1,0x359797a2,0x884444cc,0x2e171739,0x93c4c457,0x55a7a7f2,0xfc7e7e82,0x7a3d3d47,0xc86464ac,0xba5d5de7,0x3219192b,0xe6737395,0xc06060a0,0x19818198,0x9e4f4fd1,0xa3dcdc7f,0x44222266,0x542a2a7e,0x3b9090ab,0xb888883,0x8c4646ca,0xc7eeee29,0x6bb8b8d3,0x2814143c,0xa7dede79,0xbc5e5ee2,0x160b0b1d,0xaddbdb76,0xdbe0e03b,0x64323256,0x743a3a4e,0x140a0a1e,0x924949db,0xc06060a,0x4824246c,0xb85c5ce4,0x9fc2c25d,0xbdd3d36e,0x43acacef,0xc46262a6,0x399191a8,0x319595a4,0xd3e4e437,0xf279798b,0xd5e7e732,0x8bc8c843,0x6e373759,0xda6d6db7,0x18d8d8c,0xb1d5d564,0x9c4e4ed2,0x49a9a9e0,0xd86c6cb4,0xac5656fa,0xf3f4f407,0xcfeaea25,0xca6565af,0xf47a7a8e,0x47aeaee9,0x10080818,0x6fbabad5,0xf0787888,0x4a25256f,0x5c2e2e72,0x381c1c24,0x57a6a6f1,0x73b4b4c7,0x97c6c651,0xcbe8e823,0xa1dddd7c,0xe874749c,0x3e1f1f21,0x964b4bdd,0x61bdbddc,0xd8b8b86,0xf8a8a85,0xe0707090,0x7c3e3e42,0x71b5b5c4,0xcc6666aa,0x904848d8,0x6030305,0xf7f6f601,0x1c0e0e12,0xc26161a3,0x6a35355f,0xae5757f9,0x69b9b9d0,0x17868691,0x99c1c158,0x3a1d1d27,0x279e9eb9,0xd9e1e138,0xebf8f813,0x2b9898b3,0x22111133,0xd26969bb,0xa9d9d970,0x78e8e89,0x339494a7,0x2d9b9bb6,0x3c1e1e22,0x15878792,0xc9e9e920,0x87cece49,0xaa5555ff,0x50282878,0xa5dfdf7a,0x38c8c8f,0x59a1a1f8,0x9898980,0x1a0d0d17,0x65bfbfda,0xd7e6e631,0x844242c6,0xd06868b8,0x824141c3,0x299999b0,0x5a2d2d77,0x1e0f0f11,0x7bb0b0cb,0xa85454fc,0x6dbbbbd6,0x2c16163a],_0x5a16f8[_0x38a52a([0x54,0x32])]=[0xa5c66363,0x84f87c7c,0x99ee7777,0x8df67b7b,0xdfff2f2,0xbdd66b6b,0xb1de6f6f,0x5491c5c5,0x50603030,0x3020101,0xa9ce6767,0x7d562b2b,0x19e7fefe,0x62b5d7d7,0xe64dabab,0x9aec7676,0x458fcaca,0x9d1f8282,0x4089c9c9,0x87fa7d7d,0x15effafa,0xebb25959,0xc98e4747,0xbfbf0f0,0xec41adad,0x67b3d4d4,0xfd5fa2a2,0xea45afaf,0xbf239c9c,0xf753a4a4,0x96e47272,0x5b9bc0c0,0xc275b7b7,0x1ce1fdfd,0xae3d9393,0x6a4c2626,0x5a6c3636,0x417e3f3f,0x2f5f7f7,0x4f83cccc,0x5c683434,0xf451a5a5,0x34d1e5e5,0x8f9f1f1,0x93e27171,0x73abd8d8,0x53623131,0x3f2a1515,0xc080404,0x5295c7c7,0x65462323,0x5e9dc3c3,0x28301818,0xa1379696,0xf0a0505,0xb52f9a9a,0x90e0707,0x36241212,0x9b1b8080,0x3ddfe2e2,0x26cdebeb,0x694e2727,0xcd7fb2b2,0x9fea7575,0x1b120909,0x9e1d8383,0x74582c2c,0x2e341a1a,0x2d361b1b,0xb2dc6e6e,0xeeb45a5a,0xfb5ba0a0,0xf6a45252,0x4d763b3b,0x61b7d6d6,0xce7db3b3,0x7b522929,0x3edde3e3,0x715e2f2f,0x97138484,0xf5a65353,0x68b9d1d1,0x0,0x2cc1eded,0x60402020,0x1fe3fcfc,0xc879b1b1,0xedb65b5b,0xbed46a6a,0x468dcbcb,0xd967bebe,0x4b723939,0xde944a4a,0xd4984c4c,0xe8b05858,0x4a85cfcf,0x6bbbd0d0,0x2ac5efef,0xe54faaaa,0x16edfbfb,0xc5864343,0xd79a4d4d,0x55663333,0x94118585,0xcf8a4545,0x10e9f9f9,0x6040202,0x81fe7f7f,0xf0a05050,0x44783c3c,0xba259f9f,0xe34ba8a8,0xf3a25151,0xfe5da3a3,0xc0804040,0x8a058f8f,0xad3f9292,0xbc219d9d,0x48703838,0x4f1f5f5,0xdf63bcbc,0xc177b6b6,0x75afdada,0x63422121,0x30201010,0x1ae5ffff,0xefdf3f3,0x6dbfd2d2,0x4c81cdcd,0x14180c0c,0x35261313,0x2fc3ecec,0xe1be5f5f,0xa2359797,0xcc884444,0x392e1717,0x5793c4c4,0xf255a7a7,0x82fc7e7e,0x477a3d3d,0xacc86464,0xe7ba5d5d,0x2b321919,0x95e67373,0xa0c06060,0x98198181,0xd19e4f4f,0x7fa3dcdc,0x66442222,0x7e542a2a,0xab3b9090,0x830b8888,0xca8c4646,0x29c7eeee,0xd36bb8b8,0x3c281414,0x79a7dede,0xe2bc5e5e,0x1d160b0b,0x76addbdb,0x3bdbe0e0,0x56643232,0x4e743a3a,0x1e140a0a,0xdb924949,0xa0c0606,0x6c482424,0xe4b85c5c,0x5d9fc2c2,0x6ebdd3d3,0xef43acac,0xa6c46262,0xa8399191,0xa4319595,0x37d3e4e4,0x8bf27979,0x32d5e7e7,0x438bc8c8,0x596e3737,0xb7da6d6d,0x8c018d8d,0x64b1d5d5,0xd29c4e4e,0xe049a9a9,0xb4d86c6c,0xfaac5656,0x7f3f4f4,0x25cfeaea,0xafca6565,0x8ef47a7a,0xe947aeae,0x18100808,0xd56fbaba,0x88f07878,0x6f4a2525,0x725c2e2e,0x24381c1c,0xf157a6a6,0xc773b4b4,0x5197c6c6,0x23cbe8e8,0x7ca1dddd,0x9ce87474,0x213e1f1f,0xdd964b4b,0xdc61bdbd,0x860d8b8b,0x850f8a8a,0x90e07070,0x427c3e3e,0xc471b5b5,0xaacc6666,0xd8904848,0x5060303,0x1f7f6f6,0x121c0e0e,0xa3c26161,0x5f6a3535,0xf9ae5757,0xd069b9b9,0x91178686,0x5899c1c1,0x273a1d1d,0xb9279e9e,0x38d9e1e1,0x13ebf8f8,0xb32b9898,0x33221111,0xbbd26969,0x70a9d9d9,0x89078e8e,0xa7339494,0xb62d9b9b,0x223c1e1e,0x92158787,0x20c9e9e9,0x4987cece,0xffaa5555,0x78502828,0x7aa5dfdf,0x8f038c8c,0xf859a1a1,0x80098989,0x171a0d0d,0xda65bfbf,0x31d7e6e6,0xc6844242,0xb8d06868,0xc3824141,0xb0299999,0x775a2d2d,0x111e0f0f,0xcb7bb0b0,0xfca85454,0xd66dbbbb,0x3a2c1616],_0x5a16f8[_0x38a52a([0x54,0x33])]=[0x63a5c663,0x7c84f87c,0x7799ee77,0x7b8df67b,0xf20dfff2,0x6bbdd66b,0x6fb1de6f,0xc55491c5,0x30506030,0x1030201,0x67a9ce67,0x2b7d562b,0xfe19e7fe,0xd762b5d7,0xabe64dab,0x769aec76,0xca458fca,0x829d1f82,0xc94089c9,0x7d87fa7d,0xfa15effa,0x59ebb259,0x47c98e47,0xf00bfbf0,0xadec41ad,0xd467b3d4,0xa2fd5fa2,0xafea45af,0x9cbf239c,0xa4f753a4,0x7296e472,0xc05b9bc0,0xb7c275b7,0xfd1ce1fd,0x93ae3d93,0x266a4c26,0x365a6c36,0x3f417e3f,0xf702f5f7,0xcc4f83cc,0x345c6834,0xa5f451a5,0xe534d1e5,0xf108f9f1,0x7193e271,0xd873abd8,0x31536231,0x153f2a15,0x40c0804,0xc75295c7,0x23654623,0xc35e9dc3,0x18283018,0x96a13796,0x50f0a05,0x9ab52f9a,0x7090e07,0x12362412,0x809b1b80,0xe23ddfe2,0xeb26cdeb,0x27694e27,0xb2cd7fb2,0x759fea75,0x91b1209,0x839e1d83,0x2c74582c,0x1a2e341a,0x1b2d361b,0x6eb2dc6e,0x5aeeb45a,0xa0fb5ba0,0x52f6a452,0x3b4d763b,0xd661b7d6,0xb3ce7db3,0x297b5229,0xe33edde3,0x2f715e2f,0x84971384,0x53f5a653,0xd168b9d1,0x0,0xed2cc1ed,0x20604020,0xfc1fe3fc,0xb1c879b1,0x5bedb65b,0x6abed46a,0xcb468dcb,0xbed967be,0x394b7239,0x4ade944a,0x4cd4984c,0x58e8b058,0xcf4a85cf,0xd06bbbd0,0xef2ac5ef,0xaae54faa,0xfb16edfb,0x43c58643,0x4dd79a4d,0x33556633,0x85941185,0x45cf8a45,0xf910e9f9,0x2060402,0x7f81fe7f,0x50f0a050,0x3c44783c,0x9fba259f,0xa8e34ba8,0x51f3a251,0xa3fe5da3,0x40c08040,0x8f8a058f,0x92ad3f92,0x9dbc219d,0x38487038,0xf504f1f5,0xbcdf63bc,0xb6c177b6,0xda75afda,0x21634221,0x10302010,0xff1ae5ff,0xf30efdf3,0xd26dbfd2,0xcd4c81cd,0xc14180c,0x13352613,0xec2fc3ec,0x5fe1be5f,0x97a23597,0x44cc8844,0x17392e17,0xc45793c4,0xa7f255a7,0x7e82fc7e,0x3d477a3d,0x64acc864,0x5de7ba5d,0x192b3219,0x7395e673,0x60a0c060,0x81981981,0x4fd19e4f,0xdc7fa3dc,0x22664422,0x2a7e542a,0x90ab3b90,0x88830b88,0x46ca8c46,0xee29c7ee,0xb8d36bb8,0x143c2814,0xde79a7de,0x5ee2bc5e,0xb1d160b,0xdb76addb,0xe03bdbe0,0x32566432,0x3a4e743a,0xa1e140a,0x49db9249,0x60a0c06,0x246c4824,0x5ce4b85c,0xc25d9fc2,0xd36ebdd3,0xacef43ac,0x62a6c462,0x91a83991,0x95a43195,0xe437d3e4,0x798bf279,0xe732d5e7,0xc8438bc8,0x37596e37,0x6db7da6d,0x8d8c018d,0xd564b1d5,0x4ed29c4e,0xa9e049a9,0x6cb4d86c,0x56faac56,0xf407f3f4,0xea25cfea,0x65afca65,0x7a8ef47a,0xaee947ae,0x8181008,0xbad56fba,0x7888f078,0x256f4a25,0x2e725c2e,0x1c24381c,0xa6f157a6,0xb4c773b4,0xc65197c6,0xe823cbe8,0xdd7ca1dd,0x749ce874,0x1f213e1f,0x4bdd964b,0xbddc61bd,0x8b860d8b,0x8a850f8a,0x7090e070,0x3e427c3e,0xb5c471b5,0x66aacc66,0x48d89048,0x3050603,0xf601f7f6,0xe121c0e,0x61a3c261,0x355f6a35,0x57f9ae57,0xb9d069b9,0x86911786,0xc15899c1,0x1d273a1d,0x9eb9279e,0xe138d9e1,0xf813ebf8,0x98b32b98,0x11332211,0x69bbd269,0xd970a9d9,0x8e89078e,0x94a73394,0x9bb62d9b,0x1e223c1e,0x87921587,0xe920c9e9,0xce4987ce,0x55ffaa55,0x28785028,0xdf7aa5df,0x8c8f038c,0xa1f859a1,0x89800989,0xd171a0d,0xbfda65bf,0xe631d7e6,0x42c68442,0x68b8d068,0x41c38241,0x99b02999,0x2d775a2d,0xf111e0f,0xb0cb7bb0,0x54fca854,0xbbd66dbb,0x163a2c16],_0x5a16f8[_0x38a52a([0x54,0x34])]=[0x6363a5c6,0x7c7c84f8,0x777799ee,0x7b7b8df6,0xf2f20dff,0x6b6bbdd6,0x6f6fb1de,0xc5c55491,0x30305060,0x1010302,0x6767a9ce,0x2b2b7d56,0xfefe19e7,0xd7d762b5,0xababe64d,0x76769aec,0xcaca458f,0x82829d1f,0xc9c94089,0x7d7d87fa,0xfafa15ef,0x5959ebb2,0x4747c98e,0xf0f00bfb,0xadadec41,0xd4d467b3,0xa2a2fd5f,0xafafea45,0x9c9cbf23,0xa4a4f753,0x727296e4,0xc0c05b9b,0xb7b7c275,0xfdfd1ce1,0x9393ae3d,0x26266a4c,0x36365a6c,0x3f3f417e,0xf7f702f5,0xcccc4f83,0x34345c68,0xa5a5f451,0xe5e534d1,0xf1f108f9,0x717193e2,0xd8d873ab,0x31315362,0x15153f2a,0x4040c08,0xc7c75295,0x23236546,0xc3c35e9d,0x18182830,0x9696a137,0x5050f0a,0x9a9ab52f,0x707090e,0x12123624,0x80809b1b,0xe2e23ddf,0xebeb26cd,0x2727694e,0xb2b2cd7f,0x75759fea,0x9091b12,0x83839e1d,0x2c2c7458,0x1a1a2e34,0x1b1b2d36,0x6e6eb2dc,0x5a5aeeb4,0xa0a0fb5b,0x5252f6a4,0x3b3b4d76,0xd6d661b7,0xb3b3ce7d,0x29297b52,0xe3e33edd,0x2f2f715e,0x84849713,0x5353f5a6,0xd1d168b9,0x0,0xeded2cc1,0x20206040,0xfcfc1fe3,0xb1b1c879,0x5b5bedb6,0x6a6abed4,0xcbcb468d,0xbebed967,0x39394b72,0x4a4ade94,0x4c4cd498,0x5858e8b0,0xcfcf4a85,0xd0d06bbb,0xefef2ac5,0xaaaae54f,0xfbfb16ed,0x4343c586,0x4d4dd79a,0x33335566,0x85859411,0x4545cf8a,0xf9f910e9,0x2020604,0x7f7f81fe,0x5050f0a0,0x3c3c4478,0x9f9fba25,0xa8a8e34b,0x5151f3a2,0xa3a3fe5d,0x4040c080,0x8f8f8a05,0x9292ad3f,0x9d9dbc21,0x38384870,0xf5f504f1,0xbcbcdf63,0xb6b6c177,0xdada75af,0x21216342,0x10103020,0xffff1ae5,0xf3f30efd,0xd2d26dbf,0xcdcd4c81,0xc0c1418,0x13133526,0xecec2fc3,0x5f5fe1be,0x9797a235,0x4444cc88,0x1717392e,0xc4c45793,0xa7a7f255,0x7e7e82fc,0x3d3d477a,0x6464acc8,0x5d5de7ba,0x19192b32,0x737395e6,0x6060a0c0,0x81819819,0x4f4fd19e,0xdcdc7fa3,0x22226644,0x2a2a7e54,0x9090ab3b,0x8888830b,0x4646ca8c,0xeeee29c7,0xb8b8d36b,0x14143c28,0xdede79a7,0x5e5ee2bc,0xb0b1d16,0xdbdb76ad,0xe0e03bdb,0x32325664,0x3a3a4e74,0xa0a1e14,0x4949db92,0x6060a0c,0x24246c48,0x5c5ce4b8,0xc2c25d9f,0xd3d36ebd,0xacacef43,0x6262a6c4,0x9191a839,0x9595a431,0xe4e437d3,0x79798bf2,0xe7e732d5,0xc8c8438b,0x3737596e,0x6d6db7da,0x8d8d8c01,0xd5d564b1,0x4e4ed29c,0xa9a9e049,0x6c6cb4d8,0x5656faac,0xf4f407f3,0xeaea25cf,0x6565afca,0x7a7a8ef4,0xaeaee947,0x8081810,0xbabad56f,0x787888f0,0x25256f4a,0x2e2e725c,0x1c1c2438,0xa6a6f157,0xb4b4c773,0xc6c65197,0xe8e823cb,0xdddd7ca1,0x74749ce8,0x1f1f213e,0x4b4bdd96,0xbdbddc61,0x8b8b860d,0x8a8a850f,0x707090e0,0x3e3e427c,0xb5b5c471,0x6666aacc,0x4848d890,0x3030506,0xf6f601f7,0xe0e121c,0x6161a3c2,0x35355f6a,0x5757f9ae,0xb9b9d069,0x86869117,0xc1c15899,0x1d1d273a,0x9e9eb927,0xe1e138d9,0xf8f813eb,0x9898b32b,0x11113322,0x6969bbd2,0xd9d970a9,0x8e8e8907,0x9494a733,0x9b9bb62d,0x1e1e223c,0x87879215,0xe9e920c9,0xcece4987,0x5555ffaa,0x28287850,0xdfdf7aa5,0x8c8c8f03,0xa1a1f859,0x89898009,0xd0d171a,0xbfbfda65,0xe6e631d7,0x4242c684,0x6868b8d0,0x4141c382,0x9999b029,0x2d2d775a,0xf0f111e,0xb0b0cb7b,0x5454fca8,0xbbbbd66d,0x16163a2c],_0x5a16f8[_0x38a52a([0x55,0x31])]=[0x0,0xe090d0b,0x1c121a16,0x121b171d,0x3824342c,0x362d3927,0x24362e3a,0x2a3f2331,0x70486858,0x7e416553,0x6c5a724e,0x62537f45,0x486c5c74,0x4665517f,0x547e4662,0x5a774b69,0xe090d0b0,0xee99ddbb,0xfc82caa6,0xf28bc7ad,0xd8b4e49c,0xd6bde997,0xc4a6fe8a,0xcaaff381,0x90d8b8e8,0x9ed1b5e3,0x8ccaa2fe,0x82c3aff5,0xa8fc8cc4,0xa6f581cf,0xb4ee96d2,0xbae79bd9,0xdb3bbb7b,0xd532b670,0xc729a16d,0xc920ac66,0xe31f8f57,0xed16825c,0xff0d9541,0xf104984a,0xab73d323,0xa57ade28,0xb761c935,0xb968c43e,0x9357e70f,0x9d5eea04,0x8f45fd19,0x814cf012,0x3bab6bcb,0x35a266c0,0x27b971dd,0x29b07cd6,0x38f5fe7,0xd8652ec,0x1f9d45f1,0x119448fa,0x4be30393,0x45ea0e98,0x57f11985,0x59f8148e,0x73c737bf,0x7dce3ab4,0x6fd52da9,0x61dc20a2,0xad766df6,0xa37f60fd,0xb16477e0,0xbf6d7aeb,0x955259da,0x9b5b54d1,0x894043cc,0x87494ec7,0xdd3e05ae,0xd33708a5,0xc12c1fb8,0xcf2512b3,0xe51a3182,0xeb133c89,0xf9082b94,0xf701269f,0x4de6bd46,0x43efb04d,0x51f4a750,0x5ffdaa5b,0x75c2896a,0x7bcb8461,0x69d0937c,0x67d99e77,0x3daed51e,0x33a7d815,0x21bccf08,0x2fb5c203,0x58ae132,0xb83ec39,0x1998fb24,0x1791f62f,0x764dd68d,0x7844db86,0x6a5fcc9b,0x6456c190,0x4e69e2a1,0x4060efaa,0x527bf8b7,0x5c72f5bc,0x605bed5,0x80cb3de,0x1a17a4c3,0x141ea9c8,0x3e218af9,0x302887f2,0x223390ef,0x2c3a9de4,0x96dd063d,0x98d40b36,0x8acf1c2b,0x84c61120,0xaef93211,0xa0f03f1a,0xb2eb2807,0xbce2250c,0xe6956e65,0xe89c636e,0xfa877473,0xf48e7978,0xdeb15a49,0xd0b85742,0xc2a3405f,0xccaa4d54,0x41ecdaf7,0x4fe5d7fc,0x5dfec0e1,0x53f7cdea,0x79c8eedb,0x77c1e3d0,0x65daf4cd,0x6bd3f9c6,0x31a4b2af,0x3fadbfa4,0x2db6a8b9,0x23bfa5b2,0x9808683,0x7898b88,0x15929c95,0x1b9b919e,0xa17c0a47,0xaf75074c,0xbd6e1051,0xb3671d5a,0x99583e6b,0x97513360,0x854a247d,0x8b432976,0xd134621f,0xdf3d6f14,0xcd267809,0xc32f7502,0xe9105633,0xe7195b38,0xf5024c25,0xfb0b412e,0x9ad7618c,0x94de6c87,0x86c57b9a,0x88cc7691,0xa2f355a0,0xacfa58ab,0xbee14fb6,0xb0e842bd,0xea9f09d4,0xe49604df,0xf68d13c2,0xf8841ec9,0xd2bb3df8,0xdcb230f3,0xcea927ee,0xc0a02ae5,0x7a47b13c,0x744ebc37,0x6655ab2a,0x685ca621,0x42638510,0x4c6a881b,0x5e719f06,0x5078920d,0xa0fd964,0x406d46f,0x161dc372,0x1814ce79,0x322bed48,0x3c22e043,0x2e39f75e,0x2030fa55,0xec9ab701,0xe293ba0a,0xf088ad17,0xfe81a01c,0xd4be832d,0xdab78e26,0xc8ac993b,0xc6a59430,0x9cd2df59,0x92dbd252,0x80c0c54f,0x8ec9c844,0xa4f6eb75,0xaaffe67e,0xb8e4f163,0xb6edfc68,0xc0a67b1,0x2036aba,0x10187da7,0x1e1170ac,0x342e539d,0x3a275e96,0x283c498b,0x26354480,0x7c420fe9,0x724b02e2,0x605015ff,0x6e5918f4,0x44663bc5,0x4a6f36ce,0x587421d3,0x567d2cd8,0x37a10c7a,0x39a80171,0x2bb3166c,0x25ba1b67,0xf853856,0x18c355d,0x13972240,0x1d9e2f4b,0x47e96422,0x49e06929,0x5bfb7e34,0x55f2733f,0x7fcd500e,0x71c45d05,0x63df4a18,0x6dd64713,0xd731dcca,0xd938d1c1,0xcb23c6dc,0xc52acbd7,0xef15e8e6,0xe11ce5ed,0xf307f2f0,0xfd0efffb,0xa779b492,0xa970b999,0xbb6bae84,0xb562a38f,0x9f5d80be,0x91548db5,0x834f9aa8,0x8d4697a3],_0x5a16f8[_0x38a52a([0x55,0x32])]=[0x0,0xb0e090d,0x161c121a,0x1d121b17,0x2c382434,0x27362d39,0x3a24362e,0x312a3f23,0x58704868,0x537e4165,0x4e6c5a72,0x4562537f,0x74486c5c,0x7f466551,0x62547e46,0x695a774b,0xb0e090d0,0xbbee99dd,0xa6fc82ca,0xadf28bc7,0x9cd8b4e4,0x97d6bde9,0x8ac4a6fe,0x81caaff3,0xe890d8b8,0xe39ed1b5,0xfe8ccaa2,0xf582c3af,0xc4a8fc8c,0xcfa6f581,0xd2b4ee96,0xd9bae79b,0x7bdb3bbb,0x70d532b6,0x6dc729a1,0x66c920ac,0x57e31f8f,0x5ced1682,0x41ff0d95,0x4af10498,0x23ab73d3,0x28a57ade,0x35b761c9,0x3eb968c4,0xf9357e7,0x49d5eea,0x198f45fd,0x12814cf0,0xcb3bab6b,0xc035a266,0xdd27b971,0xd629b07c,0xe7038f5f,0xec0d8652,0xf11f9d45,0xfa119448,0x934be303,0x9845ea0e,0x8557f119,0x8e59f814,0xbf73c737,0xb47dce3a,0xa96fd52d,0xa261dc20,0xf6ad766d,0xfda37f60,0xe0b16477,0xebbf6d7a,0xda955259,0xd19b5b54,0xcc894043,0xc787494e,0xaedd3e05,0xa5d33708,0xb8c12c1f,0xb3cf2512,0x82e51a31,0x89eb133c,0x94f9082b,0x9ff70126,0x464de6bd,0x4d43efb0,0x5051f4a7,0x5b5ffdaa,0x6a75c289,0x617bcb84,0x7c69d093,0x7767d99e,0x1e3daed5,0x1533a7d8,0x821bccf,0x32fb5c2,0x32058ae1,0x390b83ec,0x241998fb,0x2f1791f6,0x8d764dd6,0x867844db,0x9b6a5fcc,0x906456c1,0xa14e69e2,0xaa4060ef,0xb7527bf8,0xbc5c72f5,0xd50605be,0xde080cb3,0xc31a17a4,0xc8141ea9,0xf93e218a,0xf2302887,0xef223390,0xe42c3a9d,0x3d96dd06,0x3698d40b,0x2b8acf1c,0x2084c611,0x11aef932,0x1aa0f03f,0x7b2eb28,0xcbce225,0x65e6956e,0x6ee89c63,0x73fa8774,0x78f48e79,0x49deb15a,0x42d0b857,0x5fc2a340,0x54ccaa4d,0xf741ecda,0xfc4fe5d7,0xe15dfec0,0xea53f7cd,0xdb79c8ee,0xd077c1e3,0xcd65daf4,0xc66bd3f9,0xaf31a4b2,0xa43fadbf,0xb92db6a8,0xb223bfa5,0x83098086,0x8807898b,0x9515929c,0x9e1b9b91,0x47a17c0a,0x4caf7507,0x51bd6e10,0x5ab3671d,0x6b99583e,0x60975133,0x7d854a24,0x768b4329,0x1fd13462,0x14df3d6f,0x9cd2678,0x2c32f75,0x33e91056,0x38e7195b,0x25f5024c,0x2efb0b41,0x8c9ad761,0x8794de6c,0x9a86c57b,0x9188cc76,0xa0a2f355,0xabacfa58,0xb6bee14f,0xbdb0e842,0xd4ea9f09,0xdfe49604,0xc2f68d13,0xc9f8841e,0xf8d2bb3d,0xf3dcb230,0xeecea927,0xe5c0a02a,0x3c7a47b1,0x37744ebc,0x2a6655ab,0x21685ca6,0x10426385,0x1b4c6a88,0x65e719f,0xd507892,0x640a0fd9,0x6f0406d4,0x72161dc3,0x791814ce,0x48322bed,0x433c22e0,0x5e2e39f7,0x552030fa,0x1ec9ab7,0xae293ba,0x17f088ad,0x1cfe81a0,0x2dd4be83,0x26dab78e,0x3bc8ac99,0x30c6a594,0x599cd2df,0x5292dbd2,0x4f80c0c5,0x448ec9c8,0x75a4f6eb,0x7eaaffe6,0x63b8e4f1,0x68b6edfc,0xb10c0a67,0xba02036a,0xa710187d,0xac1e1170,0x9d342e53,0x963a275e,0x8b283c49,0x80263544,0xe97c420f,0xe2724b02,0xff605015,0xf46e5918,0xc544663b,0xce4a6f36,0xd3587421,0xd8567d2c,0x7a37a10c,0x7139a801,0x6c2bb316,0x6725ba1b,0x560f8538,0x5d018c35,0x40139722,0x4b1d9e2f,0x2247e964,0x2949e069,0x345bfb7e,0x3f55f273,0xe7fcd50,0x571c45d,0x1863df4a,0x136dd647,0xcad731dc,0xc1d938d1,0xdccb23c6,0xd7c52acb,0xe6ef15e8,0xede11ce5,0xf0f307f2,0xfbfd0eff,0x92a779b4,0x99a970b9,0x84bb6bae,0x8fb562a3,0xbe9f5d80,0xb591548d,0xa8834f9a,0xa38d4697],_0x5a16f8[_0x38a52a([0x55,0x33])]=[0x0,0xd0b0e09,0x1a161c12,0x171d121b,0x342c3824,0x3927362d,0x2e3a2436,0x23312a3f,0x68587048,0x65537e41,0x724e6c5a,0x7f456253,0x5c74486c,0x517f4665,0x4662547e,0x4b695a77,0xd0b0e090,0xddbbee99,0xcaa6fc82,0xc7adf28b,0xe49cd8b4,0xe997d6bd,0xfe8ac4a6,0xf381caaf,0xb8e890d8,0xb5e39ed1,0xa2fe8cca,0xaff582c3,0x8cc4a8fc,0x81cfa6f5,0x96d2b4ee,0x9bd9bae7,0xbb7bdb3b,0xb670d532,0xa16dc729,0xac66c920,0x8f57e31f,0x825ced16,0x9541ff0d,0x984af104,0xd323ab73,0xde28a57a,0xc935b761,0xc43eb968,0xe70f9357,0xea049d5e,0xfd198f45,0xf012814c,0x6bcb3bab,0x66c035a2,0x71dd27b9,0x7cd629b0,0x5fe7038f,0x52ec0d86,0x45f11f9d,0x48fa1194,0x3934be3,0xe9845ea,0x198557f1,0x148e59f8,0x37bf73c7,0x3ab47dce,0x2da96fd5,0x20a261dc,0x6df6ad76,0x60fda37f,0x77e0b164,0x7aebbf6d,0x59da9552,0x54d19b5b,0x43cc8940,0x4ec78749,0x5aedd3e,0x8a5d337,0x1fb8c12c,0x12b3cf25,0x3182e51a,0x3c89eb13,0x2b94f908,0x269ff701,0xbd464de6,0xb04d43ef,0xa75051f4,0xaa5b5ffd,0x896a75c2,0x84617bcb,0x937c69d0,0x9e7767d9,0xd51e3dae,0xd81533a7,0xcf0821bc,0xc2032fb5,0xe132058a,0xec390b83,0xfb241998,0xf62f1791,0xd68d764d,0xdb867844,0xcc9b6a5f,0xc1906456,0xe2a14e69,0xefaa4060,0xf8b7527b,0xf5bc5c72,0xbed50605,0xb3de080c,0xa4c31a17,0xa9c8141e,0x8af93e21,0x87f23028,0x90ef2233,0x9de42c3a,0x63d96dd,0xb3698d4,0x1c2b8acf,0x112084c6,0x3211aef9,0x3f1aa0f0,0x2807b2eb,0x250cbce2,0x6e65e695,0x636ee89c,0x7473fa87,0x7978f48e,0x5a49deb1,0x5742d0b8,0x405fc2a3,0x4d54ccaa,0xdaf741ec,0xd7fc4fe5,0xc0e15dfe,0xcdea53f7,0xeedb79c8,0xe3d077c1,0xf4cd65da,0xf9c66bd3,0xb2af31a4,0xbfa43fad,0xa8b92db6,0xa5b223bf,0x86830980,0x8b880789,0x9c951592,0x919e1b9b,0xa47a17c,0x74caf75,0x1051bd6e,0x1d5ab367,0x3e6b9958,0x33609751,0x247d854a,0x29768b43,0x621fd134,0x6f14df3d,0x7809cd26,0x7502c32f,0x5633e910,0x5b38e719,0x4c25f502,0x412efb0b,0x618c9ad7,0x6c8794de,0x7b9a86c5,0x769188cc,0x55a0a2f3,0x58abacfa,0x4fb6bee1,0x42bdb0e8,0x9d4ea9f,0x4dfe496,0x13c2f68d,0x1ec9f884,0x3df8d2bb,0x30f3dcb2,0x27eecea9,0x2ae5c0a0,0xb13c7a47,0xbc37744e,0xab2a6655,0xa621685c,0x85104263,0x881b4c6a,0x9f065e71,0x920d5078,0xd9640a0f,0xd46f0406,0xc372161d,0xce791814,0xed48322b,0xe0433c22,0xf75e2e39,0xfa552030,0xb701ec9a,0xba0ae293,0xad17f088,0xa01cfe81,0x832dd4be,0x8e26dab7,0x993bc8ac,0x9430c6a5,0xdf599cd2,0xd25292db,0xc54f80c0,0xc8448ec9,0xeb75a4f6,0xe67eaaff,0xf163b8e4,0xfc68b6ed,0x67b10c0a,0x6aba0203,0x7da71018,0x70ac1e11,0x539d342e,0x5e963a27,0x498b283c,0x44802635,0xfe97c42,0x2e2724b,0x15ff6050,0x18f46e59,0x3bc54466,0x36ce4a6f,0x21d35874,0x2cd8567d,0xc7a37a1,0x17139a8,0x166c2bb3,0x1b6725ba,0x38560f85,0x355d018c,0x22401397,0x2f4b1d9e,0x642247e9,0x692949e0,0x7e345bfb,0x733f55f2,0x500e7fcd,0x5d0571c4,0x4a1863df,0x47136dd6,0xdccad731,0xd1c1d938,0xc6dccb23,0xcbd7c52a,0xe8e6ef15,0xe5ede11c,0xf2f0f307,0xfffbfd0e,0xb492a779,0xb999a970,0xae84bb6b,0xa38fb562,0x80be9f5d,0x8db59154,0x9aa8834f,0x97a38d46],_0x5a16f8[_0x38a52a([0x55,0x34])]=[0x0,0x90d0b0e,0x121a161c,0x1b171d12,0x24342c38,0x2d392736,0x362e3a24,0x3f23312a,0x48685870,0x4165537e,0x5a724e6c,0x537f4562,0x6c5c7448,0x65517f46,0x7e466254,0x774b695a,0x90d0b0e0,0x99ddbbee,0x82caa6fc,0x8bc7adf2,0xb4e49cd8,0xbde997d6,0xa6fe8ac4,0xaff381ca,0xd8b8e890,0xd1b5e39e,0xcaa2fe8c,0xc3aff582,0xfc8cc4a8,0xf581cfa6,0xee96d2b4,0xe79bd9ba,0x3bbb7bdb,0x32b670d5,0x29a16dc7,0x20ac66c9,0x1f8f57e3,0x16825ced,0xd9541ff,0x4984af1,0x73d323ab,0x7ade28a5,0x61c935b7,0x68c43eb9,0x57e70f93,0x5eea049d,0x45fd198f,0x4cf01281,0xab6bcb3b,0xa266c035,0xb971dd27,0xb07cd629,0x8f5fe703,0x8652ec0d,0x9d45f11f,0x9448fa11,0xe303934b,0xea0e9845,0xf1198557,0xf8148e59,0xc737bf73,0xce3ab47d,0xd52da96f,0xdc20a261,0x766df6ad,0x7f60fda3,0x6477e0b1,0x6d7aebbf,0x5259da95,0x5b54d19b,0x4043cc89,0x494ec787,0x3e05aedd,0x3708a5d3,0x2c1fb8c1,0x2512b3cf,0x1a3182e5,0x133c89eb,0x82b94f9,0x1269ff7,0xe6bd464d,0xefb04d43,0xf4a75051,0xfdaa5b5f,0xc2896a75,0xcb84617b,0xd0937c69,0xd99e7767,0xaed51e3d,0xa7d81533,0xbccf0821,0xb5c2032f,0x8ae13205,0x83ec390b,0x98fb2419,0x91f62f17,0x4dd68d76,0x44db8678,0x5fcc9b6a,0x56c19064,0x69e2a14e,0x60efaa40,0x7bf8b752,0x72f5bc5c,0x5bed506,0xcb3de08,0x17a4c31a,0x1ea9c814,0x218af93e,0x2887f230,0x3390ef22,0x3a9de42c,0xdd063d96,0xd40b3698,0xcf1c2b8a,0xc6112084,0xf93211ae,0xf03f1aa0,0xeb2807b2,0xe2250cbc,0x956e65e6,0x9c636ee8,0x877473fa,0x8e7978f4,0xb15a49de,0xb85742d0,0xa3405fc2,0xaa4d54cc,0xecdaf741,0xe5d7fc4f,0xfec0e15d,0xf7cdea53,0xc8eedb79,0xc1e3d077,0xdaf4cd65,0xd3f9c66b,0xa4b2af31,0xadbfa43f,0xb6a8b92d,0xbfa5b223,0x80868309,0x898b8807,0x929c9515,0x9b919e1b,0x7c0a47a1,0x75074caf,0x6e1051bd,0x671d5ab3,0x583e6b99,0x51336097,0x4a247d85,0x4329768b,0x34621fd1,0x3d6f14df,0x267809cd,0x2f7502c3,0x105633e9,0x195b38e7,0x24c25f5,0xb412efb,0xd7618c9a,0xde6c8794,0xc57b9a86,0xcc769188,0xf355a0a2,0xfa58abac,0xe14fb6be,0xe842bdb0,0x9f09d4ea,0x9604dfe4,0x8d13c2f6,0x841ec9f8,0xbb3df8d2,0xb230f3dc,0xa927eece,0xa02ae5c0,0x47b13c7a,0x4ebc3774,0x55ab2a66,0x5ca62168,0x63851042,0x6a881b4c,0x719f065e,0x78920d50,0xfd9640a,0x6d46f04,0x1dc37216,0x14ce7918,0x2bed4832,0x22e0433c,0x39f75e2e,0x30fa5520,0x9ab701ec,0x93ba0ae2,0x88ad17f0,0x81a01cfe,0xbe832dd4,0xb78e26da,0xac993bc8,0xa59430c6,0xd2df599c,0xdbd25292,0xc0c54f80,0xc9c8448e,0xf6eb75a4,0xffe67eaa,0xe4f163b8,0xedfc68b6,0xa67b10c,0x36aba02,0x187da710,0x1170ac1e,0x2e539d34,0x275e963a,0x3c498b28,0x35448026,0x420fe97c,0x4b02e272,0x5015ff60,0x5918f46e,0x663bc544,0x6f36ce4a,0x7421d358,0x7d2cd856,0xa10c7a37,0xa8017139,0xb3166c2b,0xba1b6725,0x8538560f,0x8c355d01,0x97224013,0x9e2f4b1d,0xe9642247,0xe0692949,0xfb7e345b,0xf2733f55,0xcd500e7f,0xc45d0571,0xdf4a1863,0xd647136d,0x31dccad7,0x38d1c1d9,0x23c6dccb,0x2acbd7c5,0x15e8e6ef,0x1ce5ede1,0x7f2f0f3,0xefffbfd,0x79b492a7,0x70b999a9,0x6bae84bb,0x62a38fb5,0x5d80be9f,0x548db591,0x4f9aa883,0x4697a38d];const _0x420fed=new Uint8Array(0x10);for(let _0x4e120c=0xf;_0x4e120c>=0x0;--_0x4e120c)_0x420fed[_0x4e120c]=_0x324d0f%0x100,_0x324d0f=parseInt(_0x324d0f/0x100);let _0x42db37=null,_0x3832e3=0x10;const _0x19b6c2=new Uint8Array(_0x3947bc),_0x3d30ef=[],_0x32b6b4=[];!function(){const _0x30ab94=_0x5a16f8[_0x38a52a([0x6e,0x75,0x6d,0x62,0x65,0x72,0x4f,0x66,0x52,0x6f,0x75,0x6e,0x64,0x73])][_0x19b6c2['length']];for(let _0x9dda26=0x0;_0x9dda26<=_0x30ab94;_0x9dda26++)_0x3d30ef[_0x6019('0x8')]([0x0,0x0,0x0,0x0]),_0x32b6b4[_0x6019('0x8')]([0x0,0x0,0x0,0x0]);const _0x19c7eb=0x4*(_0x30ab94+0x1),_0xae6a7e=_0x19b6c2[_0x6019('0x54')]/0x4,_0x4218bc=_0x8c20ab(_0x19b6c2);let _0x41512a;for(let _0x1bf1ae=0x0;_0x1bf1ae<_0xae6a7e;_0x1bf1ae++)_0x41512a=_0x1bf1ae>>0x2,_0x3d30ef[_0x41512a][_0x1bf1ae%0x4]=_0x4218bc[_0x1bf1ae],_0x32b6b4[_0x30ab94-_0x41512a][_0x1bf1ae%0x4]=_0x4218bc[_0x1bf1ae];let _0x7348f6,_0x2272fb=0x0,_0x35bd5a=_0xae6a7e;for(;_0x35bd5a<_0x19c7eb;){_0x7348f6=_0x4218bc[_0xae6a7e-0x1],_0x4218bc[0x0]^=_0x5a16f8[_0x38a52a([0x53])][_0x7348f6>>0x10&0xff]<<0x18^_0x5a16f8[_0x38a52a([0x53])][_0x7348f6>>0x8&0xff]<<0x10^_0x5a16f8[_0x38a52a([0x53])][0xff&_0x7348f6]<<0x8^_0x5a16f8[_0x38a52a([0x53])][_0x7348f6>>0x18&0xff]^_0x5a16f8[_0x38a52a([0x72,0x63,0x6f,0x6e])][_0x2272fb]<<0x18,_0x2272fb+=0x1;for(let _0x12e4a7=0x1;_0x12e4a7<_0xae6a7e/0x2;_0x12e4a7++)_0x4218bc[_0x12e4a7]^=_0x4218bc[_0x12e4a7-0x1];_0x7348f6=_0x4218bc[_0xae6a7e/0x2-0x1],_0x4218bc[_0xae6a7e/0x2]^=_0x5a16f8[_0x38a52a([0x53])][0xff&_0x7348f6]^_0x5a16f8[_0x38a52a([0x53])][_0x7348f6>>0x8&0xff]<<0x8^_0x5a16f8[_0x38a52a([0x53])][_0x7348f6>>0x10&0xff]<<0x10^_0x5a16f8[_0x38a52a([0x53])][_0x7348f6>>0x18&0xff]<<0x18;for(let _0x5b5294=_0xae6a7e/0x2+0x1;_0x5b5294<_0xae6a7e;_0x5b5294++)_0x4218bc[_0x5b5294]^=_0x4218bc[_0x5b5294-0x1];let _0x1634f0,_0x552b3f,_0xc7cdb5=0x0;for(;_0xc7cdb5<_0xae6a7e&&_0x35bd5a<_0x19c7eb;)_0x1634f0=_0x35bd5a>>0x2,_0x552b3f=_0x35bd5a%0x4,_0x3d30ef[_0x1634f0][_0x552b3f]=_0x4218bc[_0xc7cdb5],_0x32b6b4[_0x30ab94-_0x1634f0][_0x552b3f]=_0x4218bc[_0xc7cdb5++],_0x35bd5a++;}for(let _0x5e0a77=0x1;_0x5e0a77<_0x30ab94;_0x5e0a77++)for(let _0x3051c4=0x0;_0x3051c4<0x4;_0x3051c4++)_0x7348f6=_0x32b6b4[_0x5e0a77][_0x3051c4],_0x32b6b4[_0x5e0a77][_0x3051c4]=_0x5a16f8[_0x38a52a([0x55,0x31])][_0x7348f6>>0x18&0xff]^_0x5a16f8[_0x38a52a([0x55,0x32])][_0x7348f6>>0x10&0xff]^_0x5a16f8[_0x38a52a([0x55,0x33])][_0x7348f6>>0x8&0xff]^_0x5a16f8[_0x38a52a([0x55,0x34])][0xff&_0x7348f6];}();for(let _0x3eb698=0x0;_0x3eb698<_0x3d78f4[_0x6019('0x54')];_0x3eb698++)0x10===_0x3832e3&&(_0x42db37=_0x28c1d1(_0x420fed),_0x3832e3=0x0,_0x499418(_0x420fed)),_0x3d78f4[_0x3eb698]^=_0x42db37[_0x3832e3++];return _0x3d78f4;function _0x8c20ab(_0x4a1fa9){const _0x5b8bad=[];for(let _0x149bf9=0x0;_0x149bf9<_0x4a1fa9[_0x6019('0x54')];_0x149bf9+=0x4)_0x5b8bad[_0x6019('0x8')](_0x4a1fa9[_0x149bf9]<<0x18|_0x4a1fa9[_0x149bf9+0x1]<<0x10|_0x4a1fa9[_0x149bf9+0x2]<<0x8|_0x4a1fa9[_0x149bf9+0x3]);return _0x5b8bad;}function _0x499418(_0x4b67a4){for(let _0x394e85=0xf;_0x394e85>=0x0;_0x394e85--){if(0xff!==_0x4b67a4[_0x394e85]){_0x4b67a4[_0x394e85]++;break;}_0x4b67a4[_0x394e85]=0x0;}}function _0x28c1d1(_0x1c16c4){const _0x331e40=_0x3d30ef['length']-0x1,_0x480613=[0x0,0x0,0x0,0x0];let _0x3666ed=_0x8c20ab(_0x1c16c4);for(let _0x5a4b1e=0x0;_0x5a4b1e<0x4;_0x5a4b1e++)_0x3666ed[_0x5a4b1e]^=_0x3d30ef[0x0][_0x5a4b1e];for(let _0x513c82=0x1;_0x513c82<_0x331e40;_0x513c82++){for(let _0x147c9e=0x0;_0x147c9e<0x4;_0x147c9e++)_0x480613[_0x147c9e]=_0x5a16f8[_0x38a52a([0x54,0x31])][_0x3666ed[_0x147c9e]>>0x18&0xff]^_0x5a16f8[_0x38a52a([0x54,0x32])][_0x3666ed[(_0x147c9e+0x1)%0x4]>>0x10&0xff]^_0x5a16f8[_0x38a52a([0x54,0x33])][_0x3666ed[(_0x147c9e+0x2)%0x4]>>0x8&0xff]^_0x5a16f8[_0x38a52a([0x54,0x34])][0xff&_0x3666ed[(_0x147c9e+0x3)%0x4]]^_0x3d30ef[_0x513c82][_0x147c9e];_0x3666ed=_0x480613[_0x6019('0x8a')]();}const _0x1edae9=new Uint8Array(0x10);let _0x4e277a;for(let _0x3c5cea=0x0;_0x3c5cea<0x4;_0x3c5cea++)_0x4e277a=_0x3d30ef[_0x331e40][_0x3c5cea],_0x1edae9[0x4*_0x3c5cea]=0xff&(_0x5a16f8[_0x38a52a([0x53])][_0x3666ed[_0x3c5cea]>>0x18&0xff]^_0x4e277a>>0x18),_0x1edae9[0x4*_0x3c5cea+0x1]=0xff&(_0x5a16f8[_0x38a52a([0x53])][_0x3666ed[(_0x3c5cea+0x1)%0x4]>>0x10&0xff]^_0x4e277a>>0x10),_0x1edae9[0x4*_0x3c5cea+0x2]=0xff&(_0x5a16f8[_0x38a52a([0x53])][_0x3666ed[(_0x3c5cea+0x2)%0x4]>>0x8&0xff]^_0x4e277a>>0x8),_0x1edae9[0x4*_0x3c5cea+0x3]=0xff&(_0x5a16f8[_0x38a52a([0x53])][0xff&_0x3666ed[(_0x3c5cea+0x3)%0x4]]^_0x4e277a);return _0x1edae9;}}function _0x38a52a(_0x157a41){return _0x157a41[_0x6019('0x7b')](_0xec5d54=>String[_0x6019('0x6d')](_0xec5d54))[_0x6019('0x66')]('');}_0x2878bd?(_0x4e7312==_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64])?_0x694c19(_0x12584e):_0x4e7312==_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x54,0x72,0x69,0x61,0x6c])&&eval(_0x38a52a([0x77,0x69,0x6e,0x64,0x6f,0x77]))[_0x38a52a([0x73,0x65,0x74,0x54,0x69,0x6d,0x65,0x6f,0x75,0x74])](()=>{_0x694c19(_0x12584e),_0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x54,0x72,0x69,0x61,0x6c,0x4c,0x69,0x6d,0x69,0x74]));},_0x42ab48[0x6]*_0x188d79[0x8]*_0x188d79[0x6]),_0x12584e[_0x38a52a([0x65,0x64,0x69,0x74,0x6f,0x72,0x73])][_0x38a52a([0x6f,0x6e])](_0x38a52a([0x61,0x64,0x64]),(_0x59b330,_0x4797f3)=>{_0x4e7312!=_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64])&&_0x4e7312!=_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x54,0x72,0x69,0x61,0x6c,0x4c,0x69,0x6d,0x69,0x74])||_0x3f1a0e(_0x4797f3);})):_0x4e7312==_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x49,0x6e,0x76,0x61,0x6c,0x69,0x64])?_0x3f1a0e(_0x12584e):_0x4e7312==_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x54,0x72,0x69,0x61,0x6c])&&_0x12584e[_0x38a52a([0x6f,0x6e])](_0x38a52a([0x72,0x65,0x61,0x64,0x79]),()=>{let _0x9f9764=0x0;_0x12584e[_0x38a52a([0x6d,0x6f,0x64,0x65,0x6c])][_0x38a52a([0x6f,0x6e])](_0x38a52a([0x61,0x70,0x70,0x6c,0x79,0x4f,0x70,0x65,0x72,0x61,0x74,0x69,0x6f,0x6e]),(_0x284430,_0x375a79)=>{_0x375a79[0x0][_0x38a52a([0x69,0x73,0x44,0x6f,0x63,0x75,0x6d,0x65,0x6e,0x74,0x4f,0x70,0x65,0x72,0x61,0x74,0x69,0x6f,0x6e])]&&_0x9f9764++,0x1f8===_0x9f9764&&(_0x3f1a0e(_0x12584e),_0xb58c87(_0x38a52a([0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x4b,0x65,0x79,0x54,0x72,0x69,0x61,0x6c,0x4c,0x69,0x6d,0x69,0x74])),_0x284430[_0x38a52a([0x6f,0x66,0x66])]());},{'priority':_0x38a52a([0x68,0x69,0x67,0x68,0x65,0x73,0x74])});});}_0x4b60ff(Comment,_0xf9caf0);","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf( node ) {\n\tlet index = 0;\n\n\twhile ( node.previousSibling ) {\n\t\tnode = node.previousSibling;\n\t\tindex++;\n\t}\n\n\treturn index;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors( node ) {\n\tconst nodes = [];\n\n\t// We are interested in `Node`s `DocumentFragment`s only.\n\twhile ( node && node.nodeType != Node.DOCUMENT_NODE ) {\n\t\tnodes.unshift( node );\n\t\tnode = node.parentNode;\n\t}\n\n\treturn nodes;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter, Text */\n\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, getDataWithoutFiller, INLINE_FILLER_LENGTH, isInlineFiller, NBSP_FILLER, startsWithFiller } from './filler';\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport { isElement } from 'lodash-es';\n\n// eslint-disable-next-line new-cap\nconst BR_FILLER_REF = BR_FILLER( document );\n\n/**\n * `DomConverter` is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements bindings} between these nodes.\n *\n * An instance of the DOM converter is available under\n * {@link module:engine/view/view~View#domConverter `editor.editing.view.domConverter`}.\n *\n * The DOM converter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep the\n * state of a tree nor keeps the synchronization between the tree view and the DOM tree (use {@link module:engine/view/document~Document}).\n *\n * The DOM converter keeps DOM elements to view element bindings, so when the converter gets destroyed, the bindings are lost.\n * Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\nexport default class DomConverter {\n\t/**\n\t * Creates a DOM converter.\n\t *\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t * @param {Object} options An object with configuration options.\n\t * @param {module:engine/view/filler~BlockFillerMode} [options.blockFillerMode='br'] The type of the block filler to use.\n\t */\n\tconstructor( document, options = {} ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * The mode of a block filler used by the DOM converter.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'br'|'nbsp'} module:engine/view/domconverter~DomConverter#blockFillerMode\n\t\t */\n\t\tthis.blockFillerMode = options.blockFillerMode || 'br';\n\n\t\t/**\n\t\t * Elements which are considered pre-formatted elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n\t\t */\n\t\tthis.preElements = [ 'pre' ];\n\n\t\t/**\n\t\t * Elements which are considered block elements (and hence should be filled with a\n\t\t * {@link #isBlockFiller block filler}).\n\t\t *\n\t\t * Whether an element is considered a block element also affects handling of trailing whitespaces.\n\t\t *\n\t\t * You can extend this array if you introduce support for block elements which are not yet recognized here.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n\t\t */\n\t\tthis.blockElements = [ 'p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'dd', 'dt', 'figcaption', 'td', 'th' ];\n\n\t\t/**\n\t\t * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n\t\t * view-to-DOM conversion and to recognize block fillers during the DOM-to-view conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Function} module:engine/view/domconverter~DomConverter#_blockFiller\n\t\t */\n\t\tthis._blockFiller = this.blockFillerMode == 'br' ? BR_FILLER : NBSP_FILLER;\n\n\t\t/**\n\t\t * The DOM-to-view mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n\t\t */\n\t\tthis._domToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * The view-to-DOM mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n\t\t */\n\t\tthis._viewToDomMapping = new WeakMap();\n\n\t\t/**\n\t\t * Holds the mapping between fake selection containers and corresponding view selections.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n\t\t */\n\t\tthis._fakeSelectionMapping = new WeakMap();\n\t}\n\n\t/**\n\t * Binds given DOM element that represents fake selection to a **position** of a\n\t * {@link module:engine/view/documentselection~DocumentSelection document selection}.\n\t * Document selection copy is stored and can be retrieved by\n\t * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n\t */\n\tbindFakeSelection( domElement, viewDocumentSelection ) {\n\t\tthis._fakeSelectionMapping.set( domElement, new ViewSelection( viewDocumentSelection ) );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\n\t * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @returns {module:engine/view/selection~Selection|undefined}\n\t */\n\tfakeSelectionToView( domElement ) {\n\t\treturn this._fakeSelectionMapping.get( domElement );\n\t}\n\n\t/**\n\t * Binds DOM and View elements, so it will be possible to get corresponding elements using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {HTMLElement} domElement DOM element to bind.\n\t * @param {module:engine/view/element~Element} viewElement View element to bind.\n\t */\n\tbindElements( domElement, viewElement ) {\n\t\tthis._domToViewMapping.set( domElement, viewElement );\n\t\tthis._viewToDomMapping.set( viewElement, domElement );\n\t}\n\n\t/**\n\t * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n\t * `domElement` will be unbound too.\n\t *\n\t * @param {HTMLElement} domElement DOM element to unbind.\n\t */\n\tunbindDomElement( domElement ) {\n\t\tconst viewElement = this._domToViewMapping.get( domElement );\n\n\t\tif ( viewElement ) {\n\t\t\tthis._domToViewMapping.delete( domElement );\n\t\t\tthis._viewToDomMapping.delete( viewElement );\n\n\t\t\tfor ( const child of domElement.childNodes ) {\n\t\t\t\tthis.unbindDomElement( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {DocumentFragment} domFragment DOM document fragment to bind.\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n\t */\n\tbindDocumentFragments( domFragment, viewFragment ) {\n\t\tthis._domToViewMapping.set( domFragment, viewFragment );\n\t\tthis._viewToDomMapping.set( viewFragment, domFragment );\n\t}\n\n\t/**\n\t * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View node or document fragment to transform.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n\t */\n\tviewToDom( viewNode, domDocument, options = {} ) {\n\t\tif ( viewNode.is( '$text' ) ) {\n\t\t\tconst textData = this._processDataFromViewText( viewNode );\n\n\t\t\treturn domDocument.createTextNode( textData );\n\t\t} else {\n\t\t\tif ( this.mapViewToDom( viewNode ) ) {\n\t\t\t\treturn this.mapViewToDom( viewNode );\n\t\t\t}\n\n\t\t\tlet domElement;\n\n\t\t\tif ( viewNode.is( 'documentFragment' ) ) {\n\t\t\t\t// Create DOM document fragment.\n\t\t\t\tdomElement = domDocument.createDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domElement, viewNode );\n\t\t\t\t}\n\t\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\t\t// UIElement has its own render() method (see #799).\n\t\t\t\tdomElement = viewNode.render( domDocument );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\treturn domElement;\n\t\t\t} else {\n\t\t\t\t// Create DOM element.\n\t\t\t\tif ( viewNode.hasAttribute( 'xmlns' ) ) {\n\t\t\t\t\tdomElement = domDocument.createElementNS( viewNode.getAttribute( 'xmlns' ), viewNode.name );\n\t\t\t\t} else {\n\t\t\t\t\tdomElement = domDocument.createElement( viewNode.name );\n\t\t\t\t}\n\n\t\t\t\t// RawElement take care of their children in RawElement#render() method which can be customized\n\t\t\t\t// (see https://github.com/ckeditor/ckeditor5/issues/4469).\n\t\t\t\tif ( viewNode.is( 'rawElement' ) ) {\n\t\t\t\t\tviewNode.render( domElement );\n\t\t\t\t}\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tfor ( const key of viewNode.getAttributeKeys() ) {\n\t\t\t\t\tdomElement.setAttribute( key, viewNode.getAttribute( key ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.viewChildrenToDom( viewNode, domDocument, options ) ) {\n\t\t\t\t\tdomElement.appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn domElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the view element to DOM using the\n\t * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n\t * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n\t * @returns {Iterable.<Node>} DOM nodes.\n\t */\n\t* viewChildrenToDom( viewElement, domDocument, options = {} ) {\n\t\tconst fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n\t\tlet offset = 0;\n\n\t\tfor ( const childView of viewElement.getChildren() ) {\n\t\t\tif ( fillerPositionOffset === offset ) {\n\t\t\t\tyield this._blockFiller( domDocument );\n\t\t\t}\n\n\t\t\tyield this.viewToDom( childView, domDocument, options );\n\n\t\t\toffset++;\n\t\t}\n\n\t\tif ( fillerPositionOffset === offset ) {\n\t\t\tyield this._blockFiller( domDocument );\n\t\t}\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/range~Range} to DOM range.\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {Range} DOM range.\n\t */\n\tviewRangeToDom( viewRange ) {\n\t\tconst domStart = this.viewPositionToDom( viewRange.start );\n\t\tconst domEnd = this.viewPositionToDom( viewRange.end );\n\n\t\tconst domRange = document.createRange();\n\t\tdomRange.setStart( domStart.parent, domStart.offset );\n\t\tdomRange.setEnd( domEnd.parent, domEnd.offset );\n\n\t\treturn domRange;\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n\t *\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t * If the converted position is directly before inline filler it is moved inside the filler.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n\t * @returns {Node} position.parent DOM position parent.\n\t * @returns {Number} position.offset DOM position offset.\n\t */\n\tviewPositionToDom( viewPosition ) {\n\t\tconst viewParent = viewPosition.parent;\n\n\t\tif ( viewParent.is( '$text' ) ) {\n\t\t\tconst domParent = this.findCorrespondingDomText( viewParent );\n\n\t\t\tif ( !domParent ) {\n\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet offset = viewPosition.offset;\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset += INLINE_FILLER_LENGTH;\n\t\t\t}\n\n\t\t\treturn { parent: domParent, offset };\n\t\t} else {\n\t\t\t// viewParent is instance of ViewElement.\n\t\t\tlet domParent, domBefore, domAfter;\n\n\t\t\tif ( viewPosition.offset === 0 ) {\n\t\t\t\tdomParent = this.mapViewToDom( viewParent );\n\n\t\t\t\tif ( !domParent ) {\n\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomAfter = domParent.childNodes[ 0 ];\n\t\t\t} else {\n\t\t\t\tconst nodeBefore = viewPosition.nodeBefore;\n\n\t\t\t\tdomBefore = nodeBefore.is( '$text' ) ?\n\t\t\t\t\tthis.findCorrespondingDomText( nodeBefore ) :\n\t\t\t\t\tthis.mapViewToDom( viewPosition.nodeBefore );\n\n\t\t\t\tif ( !domBefore ) {\n\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomParent = domBefore.parentNode;\n\t\t\t\tdomAfter = domBefore.nextSibling;\n\t\t\t}\n\n\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\n\t\t\t// the position before the inline filler.\n\t\t\tif ( isText( domAfter ) && startsWithFiller( domAfter ) ) {\n\t\t\t\treturn { parent: domAfter, offset: INLINE_FILLER_LENGTH };\n\t\t\t}\n\n\t\t\tconst offset = domBefore ? indexOf( domBefore ) + 1 : 0;\n\n\t\t\treturn { parent: domParent, offset };\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items. For\n\t * {@link module:engine/view/filler fillers} `null` will be returned.\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n\t * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n\t */\n\tdomToView( domNode, options = {} ) {\n\t\tif ( this.isBlockFiller( domNode, this.blockFillerMode ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// When node is inside a UIElement or a RawElement return that parent as it's view representation.\n\t\tconst hostElement = this.getHostViewElement( domNode, this._domToViewMapping );\n\n\t\tif ( hostElement ) {\n\t\t\treturn hostElement;\n\t\t}\n\n\t\tif ( isText( domNode ) ) {\n\t\t\tif ( isInlineFiller( domNode ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst textData = this._processDataFromDomText( domNode );\n\n\t\t\t\treturn textData === '' ? null : new ViewText( this.document, textData );\n\t\t\t}\n\t\t} else if ( this.isComment( domNode ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif ( this.mapDomToView( domNode ) ) {\n\t\t\t\treturn this.mapDomToView( domNode );\n\t\t\t}\n\n\t\t\tlet viewElement;\n\n\t\t\tif ( this.isDocumentFragment( domNode ) ) {\n\t\t\t\t// Create view document fragment.\n\t\t\t\tviewElement = new ViewDocumentFragment( this.document );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domNode, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create view element.\n\t\t\t\tconst viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n\t\t\t\tviewElement = new ViewElement( this.document, viewName );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domNode, viewElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tconst attrs = domNode.attributes;\n\n\t\t\t\tfor ( let i = attrs.length - 1; i >= 0; i-- ) {\n\t\t\t\t\tviewElement._setAttribute( attrs[ i ].name, attrs[ i ].value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.domChildrenToView( domNode, options ) ) {\n\t\t\t\t\tviewElement._appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the DOM element to view nodes using\n\t * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n\t * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n\t *\n\t * @param {HTMLElement} domElement Parent DOM element.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n\t */\n\t* domChildrenToView( domElement, options = {} ) {\n\t\tfor ( let i = 0; i < domElement.childNodes.length; i++ ) {\n\t\t\tconst domChild = domElement.childNodes[ i ];\n\t\t\tconst viewChild = this.domToView( domChild, options );\n\n\t\t\tif ( viewChild !== null ) {\n\t\t\t\tyield viewChild;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n\t * Ranges which cannot be converted will be omitted.\n\t *\n\t * @param {Selection} domSelection DOM selection.\n\t * @returns {module:engine/view/selection~Selection} View selection.\n\t */\n\tdomSelectionToView( domSelection ) {\n\t\t// DOM selection might be placed in fake selection container.\n\t\t// If container contains fake selection - return corresponding view selection.\n\t\tif ( domSelection.rangeCount === 1 ) {\n\t\t\tlet container = domSelection.getRangeAt( 0 ).startContainer;\n\n\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\n\t\t\tif ( isText( container ) ) {\n\t\t\t\tcontainer = container.parentNode;\n\t\t\t}\n\n\t\t\tconst viewSelection = this.fakeSelectionToView( container );\n\n\t\t\tif ( viewSelection ) {\n\t\t\t\treturn viewSelection;\n\t\t\t}\n\t\t}\n\n\t\tconst isBackward = this.isDomSelectionBackward( domSelection );\n\n\t\tconst viewRanges = [];\n\n\t\tfor ( let i = 0; i < domSelection.rangeCount; i++ ) {\n\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n\t\t\tconst domRange = domSelection.getRangeAt( i );\n\t\t\tconst viewRange = this.domRangeToView( domRange );\n\n\t\t\tif ( viewRange ) {\n\t\t\t\tviewRanges.push( viewRange );\n\t\t\t}\n\t\t}\n\n\t\treturn new ViewSelection( viewRanges, { backward: isBackward } );\n\t}\n\n\t/**\n\t * Converts DOM Range to view {@link module:engine/view/range~Range}.\n\t * If the start or end position can not be converted `null` is returned.\n\t *\n\t * @param {Range} domRange DOM range.\n\t * @returns {module:engine/view/range~Range|null} View range.\n\t */\n\tdomRangeToView( domRange ) {\n\t\tconst viewStart = this.domPositionToView( domRange.startContainer, domRange.startOffset );\n\t\tconst viewEnd = this.domPositionToView( domRange.endContainer, domRange.endOffset );\n\n\t\tif ( viewStart && viewEnd ) {\n\t\t\treturn new ViewRange( viewStart, viewEnd );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n\t *\n\t * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n\t * position of the filler will be converted and returned.\n\t *\n\t * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n\t * that position will be converted to view position before that UIElement.\n\t *\n\t * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n\t *\n\t * @param {Node} domParent DOM position parent.\n\t * @param {Number} domOffset DOM position offset.\n\t * @returns {module:engine/view/position~Position} viewPosition View position.\n\t */\n\tdomPositionToView( domParent, domOffset ) {\n\t\tif ( this.isBlockFiller( domParent, this.blockFillerMode ) ) {\n\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t}\n\n\t\t// If position is somewhere inside UIElement or a RawElement - return position before that element.\n\t\tconst viewElement = this.mapDomToView( domParent );\n\n\t\tif ( viewElement && ( viewElement.is( 'uiElement' ) || viewElement.is( 'rawElement' ) ) ) {\n\t\t\treturn ViewPosition._createBefore( viewElement );\n\t\t}\n\n\t\tif ( isText( domParent ) ) {\n\t\t\tif ( isInlineFiller( domParent ) ) {\n\t\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t\t}\n\n\t\t\tconst viewParent = this.findCorrespondingViewText( domParent );\n\t\t\tlet offset = domOffset;\n\n\t\t\tif ( !viewParent ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset -= INLINE_FILLER_LENGTH;\n\t\t\t\toffset = offset < 0 ? 0 : offset;\n\t\t\t}\n\n\t\t\treturn new ViewPosition( viewParent, offset );\n\t\t}\n\t\t// domParent instanceof HTMLElement.\n\t\telse {\n\t\t\tif ( domOffset === 0 ) {\n\t\t\t\tconst viewParent = this.mapDomToView( domParent );\n\n\t\t\t\tif ( viewParent ) {\n\t\t\t\t\treturn new ViewPosition( viewParent, 0 );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst domBefore = domParent.childNodes[ domOffset - 1 ];\n\t\t\t\tconst viewBefore = isText( domBefore ) ?\n\t\t\t\t\tthis.findCorrespondingViewText( domBefore ) :\n\t\t\t\t\tthis.mapDomToView( domBefore );\n\n\t\t\t\t// TODO #663\n\t\t\t\tif ( viewBefore && viewBefore.parent ) {\n\t\t\t\t\treturn new ViewPosition( viewBefore.parent, viewBefore.index + 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns corresponding view {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n\t * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * to the given DOM - `undefined` is returned.\n\t *\n\t * For all DOM elements rendered by a {@link module:engine/view/uielement~UIElement} or\n\t * a {@link module:engine/view/rawelement~RawElement}, the parent `UIElement` or `RawElement` will be returned.\n\t *\n\t * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n\t * Corresponding view element, document fragment or `undefined` if no element was bound.\n\t */\n\tmapDomToView( domElementOrDocumentFragment ) {\n\t\tconst hostElement = this.getHostViewElement( domElementOrDocumentFragment );\n\n\t\treturn hostElement || this._domToViewMapping.get( domElementOrDocumentFragment );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * For all text nodes rendered by a {@link module:engine/view/uielement~UIElement} or\n\t * a {@link module:engine/view/rawelement~RawElement}, the parent `UIElement` or `RawElement` will be returned.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n\t *\n\t * @param {Text} domText DOM text node.\n\t * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n\t * corresponding node.\n\t */\n\tfindCorrespondingViewText( domText ) {\n\t\tif ( isInlineFiller( domText ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If DOM text was rendered by a UIElement or a RawElement - return this parent element.\n\t\tconst hostElement = this.getHostViewElement( domText );\n\n\t\tif ( hostElement ) {\n\t\t\treturn hostElement;\n\t\t}\n\n\t\tconst previousSibling = domText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling ) {\n\t\t\tif ( !( this.isElement( previousSibling ) ) ) {\n\t\t\t\t// The previous is text or comment.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewElement = this.mapDomToView( previousSibling );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst nextSibling = viewElement.nextSibling;\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( nextSibling instanceof ViewText ) {\n\t\t\t\t\treturn viewElement.nextSibling;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Try to use parent to find the corresponding text node.\n\t\telse {\n\t\t\tconst viewElement = this.mapDomToView( domText.parentNode );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst firstChild = viewElement.getChild( 0 );\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( firstChild instanceof ViewText ) {\n\t\t\t\t\treturn firstChild;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n\t * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n\t * use {@link #findCorrespondingDomText}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View element or document fragment.\n\t * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n\t */\n\tmapViewToDom( documentFragmentOrElement ) {\n\t\treturn this._viewToDomMapping.get( documentFragmentOrElement );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} viewText View text node.\n\t * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n\t */\n\tfindCorrespondingDomText( viewText ) {\n\t\tconst previousSibling = viewText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling && this.mapViewToDom( previousSibling ) ) {\n\t\t\treturn this.mapViewToDom( previousSibling ).nextSibling;\n\t\t}\n\n\t\t// If this is a first node, try to use parent to find the corresponding text node.\n\t\tif ( !previousSibling && viewText.parent && this.mapViewToDom( viewText.parent ) ) {\n\t\t\treturn this.mapViewToDom( viewText.parent ).childNodes[ 0 ];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t * @param {module:engine/view/editableelement~EditableElement} viewEditable\n\t */\n\tfocus( viewEditable ) {\n\t\tconst domEditable = this.mapViewToDom( viewEditable );\n\n\t\tif ( domEditable && domEditable.ownerDocument.activeElement !== domEditable ) {\n\t\t\t// Save the scrollX and scrollY positions before the focus.\n\t\t\tconst { scrollX, scrollY } = global.window;\n\t\t\tconst scrollPositions = [];\n\n\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst { scrollLeft, scrollTop } = node;\n\n\t\t\t\tscrollPositions.push( [ scrollLeft, scrollTop ] );\n\t\t\t} );\n\n\t\t\tdomEditable.focus();\n\n\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst [ scrollLeft, scrollTop ] = scrollPositions.shift();\n\n\t\t\t\tnode.scrollLeft = scrollLeft;\n\t\t\t\tnode.scrollTop = scrollTop;\n\t\t\t} );\n\n\t\t\t// Restore the scrollX and scrollY positions after the focus.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\tglobal.window.scrollTo( scrollX, scrollY );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisElement( node ) {\n\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisDocumentFragment( node ) {\n\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisComment( node ) {\n\t\treturn node && node.nodeType == Node.COMMENT_NODE;\n\t}\n\n\t/**\n\t * Checks if the node is an instance of the block filler for this DOM converter.\n\t *\n\t *\t\tconst converter = new DomConverter( viewDocument, { blockFillerMode: 'br' } );\n\t *\n\t *\t\tconverter.isBlockFiller( BR_FILLER( document ) ); // true\n\t *\t\tconverter.isBlockFiller( NBSP_FILLER( document ) ); // false\n\t *\n\t * **Note:**: For the `'nbsp'` mode the method also checks context of a node so it cannot be a detached node.\n\t *\n\t * **Note:** A special case in the `'nbsp'` mode exists where the `<br>` in `<p><br></p>` is treated as a block filler.\n\t *\n\t * @param {Node} domNode DOM node to check.\n\t * @returns {Boolean} True if a node is considered a block filler for given mode.\n\t */\n\tisBlockFiller( domNode ) {\n\t\tif ( this.blockFillerMode == 'br' ) {\n\t\t\treturn domNode.isEqualNode( BR_FILLER_REF );\n\t\t}\n\n\t\t// Special case for <p><br></p> in which case the <br> should be treated as filler even\n\t\t// when we're in the 'nbsp' mode. See ckeditor5#5564.\n\t\tif ( domNode.tagName === 'BR' && hasBlockParent( domNode, this.blockElements ) && domNode.parentNode.childNodes.length === 1 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn isNbspBlockFiller( domNode, this.blockElements );\n\t}\n\n\t/**\n\t * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n\t *\n\t * @param {Selection} DOM Selection instance to check.\n\t * @returns {Boolean}\n\t */\n\tisDomSelectionBackward( selection ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n\t\t// we will use the fact that range will collapse if it's end is before it's start.\n\t\tconst range = document.createRange();\n\n\t\trange.setStart( selection.anchorNode, selection.anchorOffset );\n\t\trange.setEnd( selection.focusNode, selection.focusOffset );\n\n\t\tconst backward = range.collapsed;\n\n\t\trange.detach();\n\n\t\treturn backward;\n\t}\n\n\t/**\n\t * Returns a parent {@link module:engine/view/uielement~UIElement} or {@link module:engine/view/rawelement~RawElement}\n\t * that hosts the provided DOM node. Returns `null` if there is no such parent.\n\t *\n\t * @param {Node} domNode\n\t * @returns {module:engine/view/uielement~UIElement|module:engine/view/rawelement~RawElement|null}\n\t */\n\tgetHostViewElement( domNode ) {\n\t\tconst ancestors = getAncestors( domNode );\n\n\t\t// Remove domNode from the list.\n\t\tancestors.pop();\n\n\t\twhile ( ancestors.length ) {\n\t\t\tconst domNode = ancestors.pop();\n\t\t\tconst viewNode = this._domToViewMapping.get( domNode );\n\n\t\t\tif ( viewNode && ( viewNode.is( 'uiElement' ) || viewNode.is( 'rawElement' ) ) ) {\n\t\t\t\treturn viewNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks if the given selection's boundaries are at correct places.\n\t *\n\t * The following places are considered as incorrect for selection boundaries:\n\t *\n\t * * before or in the middle of an inline filler sequence,\n\t * * inside a DOM element which represents {@link module:engine/view/uielement~UIElement a view UI element},\n\t * * inside a DOM element which represents {@link module:engine/view/rawelement~RawElement a view raw element}.\n\t *\n\t * @param {Selection} domSelection The DOM selection object to be checked.\n\t * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n\t */\n\tisDomSelectionCorrect( domSelection ) {\n\t\treturn this._isDomSelectionPositionCorrect( domSelection.anchorNode, domSelection.anchorOffset ) &&\n\t\t\tthis._isDomSelectionPositionCorrect( domSelection.focusNode, domSelection.focusOffset );\n\t}\n\n\t/**\n\t * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n\t *\n\t * @private\n\t * @param {Element} domParent Position parent.\n\t * @param {Number} offset Position offset.\n\t * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n\t */\n\t_isDomSelectionPositionCorrect( domParent, offset ) {\n\t\t// If selection is before or in the middle of inline filler string, it is incorrect.\n\t\tif ( isText( domParent ) && startsWithFiller( domParent ) && offset < INLINE_FILLER_LENGTH ) {\n\t\t\t// Selection in a text node, at wrong position (before or in the middle of filler).\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isElement( domParent ) && startsWithFiller( domParent.childNodes[ offset ] ) ) {\n\t\t\t// Selection in an element node, before filler text node.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewParent = this.mapDomToView( domParent );\n\n\t\t// The position is incorrect when anchored inside a UIElement or a RawElement.\n\t\t// Note: In case of UIElement and RawElement, mapDomToView() returns a parent element for any DOM child\n\t\t// so there's no need to perform any additional checks.\n\t\tif ( viewParent && ( viewParent.is( 'uiElement' ) || viewParent.is( 'rawElement' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n\t * it is correctly displayed in the DOM.\n\t *\n\t * Following changes are done:\n\t *\n\t * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n\t * element or if a previous text node ends with a space character,\n\t * * space at the end of the text node is changed to `&nbsp;` if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container,\n\t * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n\t *\n\t * Content of {@link #preElements} is not processed.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node View text node to process.\n\t * @returns {String} Processed text data.\n\t */\n\t_processDataFromViewText( node ) {\n\t\tlet data = node.data;\n\n\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\n\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn data;\n\t\t}\n\n\t\t// 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n\t\t// (container element boundary).\n\t\tif ( data.charAt( 0 ) == ' ' ) {\n\t\t\tconst prevNode = this._getTouchingViewTextNode( node, false );\n\t\t\tconst prevEndsWithSpace = prevNode && this._nodeEndsWithSpace( prevNode );\n\n\t\t\tif ( prevEndsWithSpace || !prevNode ) {\n\t\t\t\tdata = '\\u00A0' + data.substr( 1 );\n\t\t\t}\n\t\t}\n\n\t\t// 2. Replace the last space with nbsp if there are two spaces at the end or if the next node starts with space or there is no\n\t\t// next node (container element boundary).\n\t\t//\n\t\t// Keep in mind that Firefox prefers $nbsp; before tag, not inside it:\n\t\t//\n\t\t// Foo <span>&nbsp;bar</span>  <-- bad.\n\t\t// Foo&nbsp;<span> bar</span>  <-- good.\n\t\t//\n\t\t// More here: https://github.com/ckeditor/ckeditor5-engine/issues/1747.\n\t\tif ( data.charAt( data.length - 1 ) == ' ' ) {\n\t\t\tconst nextNode = this._getTouchingViewTextNode( node, true );\n\n\t\t\tif ( data.charAt( data.length - 2 ) == ' ' || !nextNode || nextNode.data.charAt( 0 ) == ' ' ) {\n\t\t\t\tdata = data.substr( 0, data.length - 1 ) + '\\u00A0';\n\t\t\t}\n\t\t}\n\n\t\t// 3. Create space+nbsp pairs.\n\t\treturn data.replace( / {2}/g, ' \\u00A0' );\n\t}\n\n\t/**\n\t * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node Node to check.\n\t * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n\t */\n\t_nodeEndsWithSpace( node ) {\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst data = this._processDataFromViewText( node );\n\n\t\treturn data.charAt( data.length - 1 ) == ' ';\n\t}\n\n\t/**\n\t * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n\t *\n\t * Following changes are done:\n\t *\n\t * * multiple whitespaces are replaced to a single space,\n\t * * space at the beginning of a text node is removed if it is the first text node in its container\n\t * element or if the previous text node ends with a space character,\n\t * * space at the end of the text node is removed if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container\n\t * * nbsps are converted to spaces.\n\t *\n\t * @param {Node} node DOM text node to process.\n\t * @returns {String} Processed data.\n\t * @private\n\t */\n\t_processDataFromDomText( node ) {\n\t\tlet data = node.data;\n\n\t\tif ( _hasDomParentOfType( node, this.preElements ) ) {\n\t\t\treturn getDataWithoutFiller( node );\n\t\t}\n\n\t\t// Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n\t\t// That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n\t\t// We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\t\tdata = data.replace( /[ \\n\\t\\r]{1,}/g, ' ' );\n\n\t\tconst prevNode = this._getTouchingInlineDomNode( node, false );\n\t\tconst nextNode = this._getTouchingInlineDomNode( node, true );\n\n\t\tconst shouldLeftTrim = this._checkShouldLeftTrimDomText( prevNode );\n\t\tconst shouldRightTrim = this._checkShouldRightTrimDomText( node, nextNode );\n\n\t\t// If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n\t\t// of this text node. Such space character is treated as a whitespace.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^ /, '' );\n\t\t}\n\n\t\t// If the next text node does not exist remove space character from the end of this text node.\n\t\tif ( shouldRightTrim ) {\n\t\t\tdata = data.replace( / $/, '' );\n\t\t}\n\n\t\t// At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n\t\t// This means that the text node starts/end with normal space instead of non-breaking space.\n\t\t// This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n\t\t// the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\t\tdata = getDataWithoutFiller( new Text( data ) );\n\n\t\t// At this point we should have removed all whitespaces from DOM text data.\n\t\t//\n\t\t// Now, We will reverse the process that happens in `_processDataFromViewText`.\n\t\t//\n\t\t// We have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view to\n\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them back to `  `.\n\t\tdata = data.replace( / \\u00A0/g, '  ' );\n\n\t\t// Then, let's change the last nbsp to a space.\n\t\tif ( /( |\\u00A0)\\u00A0$/.test( data ) || !nextNode || ( nextNode.data && nextNode.data.charAt( 0 ) == ' ' ) ) {\n\t\t\tdata = data.replace( /\\u00A0$/, ' ' );\n\t\t}\n\n\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\n\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^\\u00A0/, ' ' );\n\t\t}\n\n\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\t\treturn data;\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n\t * be trimmed from the left side.\n\t *\n\t * @param {Node} prevNode\n\t */\n\t_checkShouldLeftTrimDomText( prevNode ) {\n\t\tif ( !prevNode ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isElement( prevNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn /[^\\S\\u00A0]/.test( prevNode.data.charAt( prevNode.data.length - 1 ) );\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n\t * be trimmed from the right side.\n\t *\n\t * @param {Node} node\n\t * @param {Node} nextNode\n\t */\n\t_checkShouldRightTrimDomText( node, nextNode ) {\n\t\tif ( nextNode ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !startsWithFiller( node );\n\t}\n\n\t/**\n\t * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n\t * that is contained in the same container element. If there is no such sibling, `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} node Reference node.\n\t * @param {Boolean} getNext\n\t * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\n\t */\n\t_getTouchingViewTextNode( node, getNext ) {\n\t\tconst treeWalker = new ViewTreeWalker( {\n\t\t\tstartPosition: getNext ? ViewPosition._createAfter( node ) : ViewPosition._createBefore( node ),\n\t\t\tdirection: getNext ? 'forward' : 'backward'\n\t\t} );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n\t\t\t// text node in its container element.\n\t\t\tif ( value.item.is( 'containerElement' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// <br> found – it works like a block boundary, so do not scan further.\n\t\t\telse if ( value.item.is( 'element', 'br' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Found a text node in the same container element.\n\t\t\telse if ( value.item.is( '$textProxy' ) ) {\n\t\t\t\treturn value.item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Helper function. For the given text node, it finds the closest touching node which is either\n\t * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\n\t * wasn't found so far, `null` is returned.\n\t *\n\t * In the following DOM structure:\n\t *\n\t *\t\t<p>foo<b>bar</b><br>bom</p>\n\t *\n\t * * `foo` doesn't have its previous touching inline node (`null` is returned),\n\t * * `foo`'s next touching inline node is `bar`\n\t * * `bar`'s next touching inline node is `<br>`\n\t *\n\t * This method returns text nodes and `<br>` elements because these types of nodes affect how\n\t * spaces in the given text node need to be converted.\n\t *\n\t * @private\n\t * @param {Text} node\n\t * @param {Boolean} getNext\n\t * @returns {Text|Element|null}\n\t */\n\t_getTouchingInlineDomNode( node, getNext ) {\n\t\tif ( !node.parentNode ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst direction = getNext ? 'nextNode' : 'previousNode';\n\t\tconst document = node.ownerDocument;\n\t\tconst topmostParent = getAncestors( node )[ 0 ];\n\n\t\tconst treeWalker = document.createTreeWalker( topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n\t\t\tacceptNode( node ) {\n\t\t\t\tif ( isText( node ) ) {\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t}\n\n\t\t\t\tif ( node.tagName == 'BR' ) {\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t}\n\n\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t}\n\t\t} );\n\n\t\ttreeWalker.currentNode = node;\n\n\t\tconst touchingNode = treeWalker[ direction ]();\n\n\t\tif ( touchingNode !== null ) {\n\t\t\tconst lca = getCommonAncestor( node, touchingNode );\n\n\t\t\t// If there is common ancestor between the text node and next/prev text node,\n\t\t\t// and there are no block elements on a way from the text node to that ancestor,\n\t\t\t// and there are no block elements on a way from next/prev text node to that ancestor...\n\t\t\tif (\n\t\t\t\tlca &&\n\t\t\t\t!_hasDomParentOfType( node, this.blockElements, lca ) &&\n\t\t\t\t!_hasDomParentOfType( touchingNode, this.blockElements, lca )\n\t\t\t) {\n\t\t\t\t// Then they are in the same container element.\n\t\t\t\treturn touchingNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\nfunction _hasDomParentOfType( node, types, boundaryParent ) {\n\tlet parents = getAncestors( node );\n\n\tif ( boundaryParent ) {\n\t\tparents = parents.slice( parents.indexOf( boundaryParent ) + 1 );\n\t}\n\n\treturn parents.some( parent => parent.tagName && types.includes( parent.tagName.toLowerCase() ) );\n}\n\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\nfunction forEachDomNodeAncestor( node, callback ) {\n\twhile ( node && node != global.document ) {\n\t\tcallback( node );\n\t\tnode = node.parentNode;\n\t}\n}\n\n// Checks if given node is a nbsp block filler.\n//\n// A &nbsp; is a block filler only if it is a single child of a block element.\n//\n// @param {Node} domNode DOM node.\n// @returns {Boolean}\nfunction isNbspBlockFiller( domNode, blockElements ) {\n\tconst isNBSP = isText( domNode ) && domNode.data == '\\u00A0';\n\n\treturn isNBSP && hasBlockParent( domNode, blockElements ) && domNode.parentNode.childNodes.length === 1;\n}\n\n// Checks if domNode has block parent.\n//\n// @param {Node} domNode DOM node.\n// @returns {Boolean}\nfunction hasBlockParent( domNode, blockElements ) {\n\tconst parent = domNode.parentNode;\n\n\treturn parent && parent.tagName && blockElements.includes( parent.tagName.toLowerCase() );\n}\n\n/**\n * Enum representing type of the block filler.\n *\n * Possible values:\n *\n * * `br` - for `<br>` block filler used in editing view,\n * * `nbsp` - for `&nbsp;` block fillers used in the data.\n *\n * @typedef {String} module:engine/view/filler~BlockFillerMode\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\n\nimport getAncestors from './getancestors';\n\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\nexport default function getCommonAncestor( nodeA, nodeB ) {\n\tconst ancestorsA = getAncestors( nodeA );\n\tconst ancestorsB = getAncestors( nodeB );\n\n\tlet i = 0;\n\n\t// It does not matter which array is shorter.\n\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\ti++;\n\t}\n\n\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n}\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nconst priorities = {\n\t/**\n\t * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n\t *\n\t * @static\n\t * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n\t * @returns {Number} Converted priority.\n\t */\n\tget( priority ) {\n\t\tif ( typeof priority != 'number' ) {\n\t\t\treturn this[ priority ] || this.normal;\n\t\t} else {\n\t\t\treturn priority;\n\t\t}\n\t},\n\n\thighest: 100000,\n\thigh: 1000,\n\tnormal: 0,\n\tlow: -1000,\n\tlowest: -100000\n};\n\nexport default priorities;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/containerelement\n */\n\nimport Element from './element';\n\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class ContainerElement extends Element {\n\t/**\n\t * Creates a container element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tcontainerElement.is( 'containerElement' ); // -> true\n\t *\t\tcontainerElement.is( 'element' ); // -> true\n\t *\t\tcontainerElement.is( 'node' ); // -> true\n\t *\t\tcontainerElement.is( 'view:containerElement' ); // -> true\n\t *\t\tcontainerElement.is( 'view:element' ); // -> true\n\t *\t\tcontainerElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tcontainerElement.is( 'model:element' ); // -> false\n\t *\t\tcontainerElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a container element, you can also check its\n\t * {@link module:engine/view/containerelement~ContainerElement#name name}:\n\t *\n\t *\t\tcontainerElement.is( 'element', 'div' ); // -> true if this is a div container element\n\t *\t\tcontainerElement.is( 'contaienrElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'element', 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\nexport function getFillerOffset() {\n\tconst children = [ ...this.getChildren() ];\n\tconst lastChild = children[ this.childCount - 1 ];\n\n\t// Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\tif ( lastChild && lastChild.is( 'element', 'br' ) ) {\n\t\treturn this.childCount;\n\t}\n\n\tfor ( const child of children ) {\n\t\t// If there's any non-UI element – don't render the bogus.\n\t\tif ( !child.is( 'uiElement' ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// If there are only UI elements – render the bogus at the end of the element.\n\treturn this.childCount;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\n\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RootAttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes on root element.\n\t *\n\t * @see module:engine/model/operation/attributeoperation~AttributeOperation\n\t * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n\t * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( root, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Root element to change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/rootelement~RootElement}\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null` if adding a new attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue;\n\n\t\t/**\n\t\t * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addRootAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeRootAttribute';\n\t\t} else {\n\t\t\treturn 'changeRootAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( this.root != this.root.root || this.root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * The element to change is not a root element.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-not-a-root\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-not-a-root',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue !== null && this.root.getAttribute( this.key ) !== this.oldValue ) {\n\t\t\t/**\n\t\t\t * The attribute which should be removed does not exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-wrong-old-value\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-wrong-old-value',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue === null && this.newValue !== null && this.root.hasAttribute( this.key ) ) {\n\t\t\t/**\n\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-attribute-exists\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-attribute-exists',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tif ( this.newValue !== null ) {\n\t\t\tthis.root._setAttribute( this.key, this.newValue );\n\t\t} else {\n\t\t\tthis.root._removeAttribute( this.key );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.root = this.root.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'RootAttributeOperation';\n\t}\n\n\t/**\n\t * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tif ( !document.getRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'rootattribute-operation-fromjson-no-root', this, { rootName: json.root } );\n\t\t}\n\n\t\treturn new RootAttributeOperation( document.getRoot( json.root ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `RootAttributeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.root.rootName }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n\treturn function spy() {\n\t\tspy.called = true;\n\t};\n}\n\nexport default spy;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/eventinfo\n */\n\nimport spy from './spy';\n\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nexport default class EventInfo {\n\t/**\n\t * @param {Object} source The emitter.\n\t * @param {String} name The event name.\n\t */\n\tconstructor( source, name ) {\n\t\t/**\n\t\t * The object that fired the event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object}\n\t\t */\n\t\tthis.source = source;\n\n\t\t/**\n\t\t * The event name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis.path = [];\n\n\t\t// The following methods are defined in the constructor because they must be re-created per instance.\n\n\t\t/**\n\t\t * Stops the event emitter to call further callbacks for this event interaction.\n\t\t *\n\t\t * @method #stop\n\t\t */\n\t\tthis.stop = spy();\n\n\t\t/**\n\t\t * Removes the current callback from future interactions of this event.\n\t\t *\n\t\t * @method #off\n\t\t */\n\t\tthis.off = spy();\n\n\t\t/**\n\t\t * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n\t\t *\n\t\t * It's `undefined` by default and can be changed by an event listener:\n\t\t *\n\t\t *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n\t\t *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n\t\t *\t\t\t// always return an empty DocumentFragment.\n\t\t *\t\t\tevt.return = new DocumentFragment();\n\t\t *\n\t\t *\t\t\t// Make sure no other listeners are executed.\n\t\t *\t\t\tevt.stop();\n\t\t *\t\t} );\n\t\t *\n\t\t * @member #return\n\t\t */\n\t}\n}\n","var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js')\nvar isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange( obj ) {\n\treturn Object.prototype.toString.apply( obj ) == '[object Range]';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liverange\n */\n\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nexport default class LiveRange extends Range {\n\t/**\n\t * Creates a live range.\n\t *\n\t * @see module:engine/model/range~Range\n\t */\n\tconstructor( start, end ) {\n\t\tsuper( start, end );\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tliveRange.is( 'range' ); // -> true\n\t *\t\tliveRange.is( 'model:range' ); // -> true\n\t *\t\tliveRange.is( 'liveRange' ); // -> true\n\t *\t\tliveRange.is( 'model:liveRange' ); // -> true\n\t *\n\t *\t\tliveRange.is( 'view:range' ); // -> false\n\t *\t\tliveRange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'liveRange' || type === 'model:liveRange' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype == 'range' || type === 'model:range';\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\ttoRange() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Creates a `LiveRange` instance that is equal to the given range.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\tstatic fromRange( range ) {\n\t\treturn new LiveRange( range.start, range.end );\n\t}\n\n\t/**\n\t * @see module:engine/model/range~Range._createIn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createIn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createOn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createOn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createFromPositionAndShift\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n\t * @param {module:engine/model/position~Position} position\n\t * @param {Number} shift\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have changed due to changes in the\n\t * {@link module:engine/model/document~Document document}.\n\t *\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n\t * range before it got changed.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n\t * Available if the range was moved to the graveyard root, `null` otherwise.\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n\t * but the change took place inside the range, effectively changing its content.\n\t *\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n\t * change range.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n\t * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n\t */\n}\n\n// Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\t// Transform the range by the operation. Join the result ranges if needed.\n\tconst ranges = this.getTransformedByOperation( operation );\n\tconst result = Range._createFromRanges( ranges );\n\n\tconst boundariesChanged = !result.isEqual( this );\n\tconst contentChanged = doesOperationChangeRangeContent( this, operation );\n\n\tlet deletionPosition = null;\n\n\tif ( boundariesChanged ) {\n\t\t// If range boundaries have changed, fire `change:range` event.\n\t\t//\n\t\tif ( result.root.rootName == '$graveyard' ) {\n\t\t\t// If the range was moved to the graveyard root, set `deletionPosition`.\n\t\t\tif ( operation.type == 'remove' ) {\n\t\t\t\tdeletionPosition = operation.sourcePosition;\n\t\t\t} else {\n\t\t\t\t// Merge operation.\n\t\t\t\tdeletionPosition = operation.deletionPosition;\n\t\t\t}\n\t\t}\n\n\t\tconst oldRange = this.toRange();\n\n\t\tthis.start = result.start;\n\t\tthis.end = result.end;\n\n\t\tthis.fire( 'change:range', oldRange, { deletionPosition } );\n\t} else if ( contentChanged ) {\n\t\t// If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n\t\tthis.fire( 'change:content', this.toRange(), { deletionPosition } );\n\t}\n}\n\n// Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\nfunction doesOperationChangeRangeContent( range, operation ) {\n\tswitch ( operation.type ) {\n\t\tcase 'insert':\n\t\t\treturn range.containsPosition( operation.position );\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\tcase 'merge':\n\t\t\treturn range.containsPosition( operation.sourcePosition ) ||\n\t\t\t\trange.start.isEqual( operation.sourcePosition ) ||\n\t\t\t\trange.containsPosition( operation.targetPosition );\n\t\tcase 'split':\n\t\t\treturn range.containsPosition( operation.splitPosition ) || range.containsPosition( operation.insertionPosition );\n\t}\n\n\treturn false;\n}\n\nmix( LiveRange, EmitterMixin );\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/editableelement\n */\n\nimport ContainerElement from './containerelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditableElement extends ContainerElement {\n\t/**\n\t * Creates an editable element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n\t * @protected\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Whether the editable is in read-write or read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Whether the editable is focused.\n\t\t *\n\t\t * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n\t\t * selection is changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\tthis.bind( 'isReadOnly' ).to( document );\n\n\t\tthis.bind( 'isFocused' ).to(\n\t\t\tdocument,\n\t\t\t'isFocused',\n\t\t\tisFocused => isFocused && document.selection.editableElement == this\n\t\t);\n\n\t\t// Update focus state based on selection changes.\n\t\tthis.listenTo( document.selection, 'change', () => {\n\t\t\tthis.isFocused = document.isFocused && document.selection.editableElement == this;\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\teditableElement.is( 'editableElement' ); // -> true\n\t *\t\teditableElement.is( 'element' ); // -> true\n\t *\t\teditableElement.is( 'node' ); // -> true\n\t *\t\teditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\teditableElement.is( 'view:element' ); // -> true\n\t *\t\teditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\teditableElement.is( 'model:element' ); // -> false\n\t *\t\teditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an editbale element, you can also check its\n\t * {@link module:engine/view/editableelement~EditableElement#name name}:\n\t *\n\t *\t\teditableElement.is( 'element', 'div' ); // -> true if this is a div element\n\t *\t\teditableElement.is( 'editableElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'element', 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n}\n\nmix( EditableElement, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/document\n */\n\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Document {\n\t/**\n\t * Creates a Document instance.\n\t *\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( stylesProcessor ) {\n\t\t/**\n\t\t * Selection done on this document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n\t\t */\n\t\tthis.selection = new DocumentSelection();\n\n\t\t/**\n\t\t * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n\t\t *\n\t\t * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n\t\t * {@link module:engine/model/document~Document#roots} and this is handled by\n\t\t * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n\t\t * model root using {@link module:engine/model/document~Document#createRoot}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * The styles processor instance used by this document when normalizing styles.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis.stylesProcessor = stylesProcessor;\n\n\t\t/**\n\t\t * Defines whether document is in read-only mode.\n\t\t *\n\t\t * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * True if document is focused.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n\t\t * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * True if composition is in progress inside the document.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n\t\t * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isComposing\n\t\t */\n\t\tthis.set( 'isComposing', false );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the view document.\n\t\t *\n\t\t * @private\n\t\t * @member {Set}\n\t\t */\n\t\tthis._postFixers = new Set();\n\t}\n\n\t/**\n\t * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n\t * specific \"main\" root is returned.\n\t *\n\t * @param {String} [name='main'] Name of the root.\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n\t * or null when there is no root of given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Allows registering post-fixer callbacks. A post-fixers mechanism allows to update the view tree just before it is rendered\n\t * to the DOM.\n\t *\n\t * Post-fixers are executed right after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * View post-fixers are useful when you want to apply some fixes whenever the view structure changes. Keep in mind that\n\t * changes executed in a view post-fixer should not break model-view mapping.\n\t *\n\t * The types of changes which should be safe:\n\t *\n\t * * adding or removing attribute from elements,\n\t * * changes inside of {@link module:engine/view/uielement~UIElement UI elements},\n\t * * {@link module:engine/model/differ~Differ#refreshItem marking some of the model elements to be re-converted}.\n\t *\n\t * Try to avoid changes which touch view structure:\n\t *\n\t * * you should not add or remove nor wrap or unwrap any view elements,\n\t * * you should not change the editor data model in a view post-fixer.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n\t *\n\t * Typically, a post-fixer will look like this:\n\t *\n\t *\t\teditor.editing.view.document.registerPostFixer( writer => {\n\t *\t\t\tif ( checkSomeCondition() ) {\n\t *\t\t\t\twriter.doSomething();\n\t *\n\t *\t\t\t\t// Let other post-fixers know that something changed.\n\t *\t\t\t\treturn true;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Note that nothing happens right after you register a post-fixer (e.g. execute such a code in the console).\n\t * That is because adding a post-fixer does not execute it.\n\t * The post-fixer will be executed as soon as any change in the document needs to cause its rendering.\n\t * If you want to re-render the editor's view after registering the post-fixer then you should do it manually by calling\n\t * {@link module:engine/view/view~View#forceRender `view.forceRender()`}.\n\t *\n\t * If you need to register a callback which is executed when DOM elements are already updated,\n\t * use {@link module:engine/view/view~View#event:render render event}.\n\t *\n\t * @param {Function} postFixer\n\t */\n\tregisterPostFixer( postFixer ) {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tdestroy() {\n\t\tthis.roots.map( root => root.destroy() );\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @protected\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\t_callPostFixers( writer ) {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Event fired whenever document content layout changes. It is fired whenever content is\n\t * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n\t * other actions which may change layout, for instance when image loads.\n\t *\n\t * @event layoutChanged\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version ) {\n\t// @if CK_DEBUG_ENGINE //\tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( Document, ObservableMixin );\n\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\n\nimport { extend } from 'lodash-es';\n\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\nexport default class DomEventData {\n\t/**\n\t * @param {module:engine/view/view~View} view The instance of the view controller.\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] Additional properties that the instance should contain.\n\t */\n\tconstructor( view, domEvent, additionalData ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * The instance of the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * The DOM event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n\t\t */\n\t\tthis.domEvent = domEvent;\n\n\t\t/**\n\t\t * The DOM target.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n\t\t */\n\t\tthis.domTarget = domEvent.target;\n\n\t\textend( this, additionalData );\n\t}\n\n\t/**\n\t * The tree view element representing the target.\n\t *\n\t * @readonly\n\t * @type module:engine/view/element~Element\n\t */\n\tget target() {\n\t\treturn this.view.domConverter.mapDomToView( this.domTarget );\n\t}\n\n\t/**\n\t * Prevents the native's event default action.\n\t */\n\tpreventDefault() {\n\t\tthis.domEvent.preventDefault();\n\t}\n\n\t/**\n\t * Stops native event propagation.\n\t */\n\tstopPropagation() {\n\t\tthis.domEvent.stopPropagation();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/focuscycler\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n\n/**\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusable views to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * Then, the cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first focusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log the next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n *\t\t\t\t// focusPrevious() will be called on the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n *\n * Check out the {@glink framework/guides/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\" guide} to learn more.\n */\nexport default class FocusCycler {\n\t/**\n\t * Creates an instance of the focus cycler utility.\n\t *\n\t * @param {Object} options Configuration options.\n\t * @param {module:utils/collection~Collection|Object} options.focusables\n\t * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n\t * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n\t * @param {Object} [options.actions]\n\t */\n\tconstructor( options ) {\n\t\tObject.assign( this, options );\n\n\t\t/**\n\t\t * A {@link module:ui/view~View view} collection that the cycler operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} #focusables\n\t\t */\n\n\t\t/**\n\t\t * A focus tracker instance that the cycler uses to determine the current focus\n\t\t * state in {@link #focusables}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t\t * which can respond to certain keystrokes and cycle the focus.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n\t\t */\n\n\t\t/**\n\t\t * Actions that the cycler can take when a keystroke is pressed. Requires\n\t\t * `options.keystrokeHandler` to be passed and working. When an action is\n\t\t * performed, `preventDefault` and `stopPropagation` will be called on the event\n\t\t * the keystroke fired in the DOM.\n\t\t *\n\t\t *\t\tactions: {\n\t\t *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n\t\t *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\t\t *\n\t\t *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n\t\t *\t\t\tfocusNext: 'arrowdown'\n\t\t *\t\t}\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object} #actions\n\t\t */\n\n\t\tif ( options.actions && options.keystrokeHandler ) {\n\t\t\tfor ( const methodName in options.actions ) {\n\t\t\t\tlet actions = options.actions[ methodName ];\n\n\t\t\t\tif ( typeof actions == 'string' ) {\n\t\t\t\t\tactions = [ actions ];\n\t\t\t\t}\n\n\t\t\t\tfor ( const keystroke of actions ) {\n\t\t\t\t\toptions.keystrokeHandler.set( keystroke, ( data, cancel ) => {\n\t\t\t\t\t\tthis[ methodName ]();\n\t\t\t\t\t\tcancel();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the first focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #first\n\t */\n\tget first() {\n\t\treturn this.focusables.find( isFocusable ) || null;\n\t}\n\n\t/**\n\t * Returns the last focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #last\n\t */\n\tget last() {\n\t\treturn this.focusables.filter( isFocusable ).slice( -1 )[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #next\n\t */\n\tget next() {\n\t\treturn this._getFocusableItem( 1 );\n\t}\n\n\t/**\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #previous\n\t */\n\tget previous() {\n\t\treturn this._getFocusableItem( -1 );\n\t}\n\n\t/**\n\t * An index of the view in the {@link #focusables} which is focused according\n\t * to {@link #focusTracker}. Returns `null` when there is no such view.\n\t *\n\t * @readonly\n\t * @member {Number|null} #current\n\t */\n\tget current() {\n\t\tlet index = null;\n\n\t\t// There's no focused view in the focusables.\n\t\tif ( this.focusTracker.focusedElement === null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.focusables.find( ( view, viewIndex ) => {\n\t\t\tconst focused = view.element === this.focusTracker.focusedElement;\n\n\t\t\tif ( focused ) {\n\t\t\t\tindex = viewIndex;\n\t\t\t}\n\n\t\t\treturn focused;\n\t\t} );\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Focuses the {@link #first} item in {@link #focusables}.\n\t */\n\tfocusFirst() {\n\t\tthis._focus( this.first );\n\t}\n\n\t/**\n\t * Focuses the {@link #last} item in {@link #focusables}.\n\t */\n\tfocusLast() {\n\t\tthis._focus( this.last );\n\t}\n\n\t/**\n\t * Focuses the {@link #next} item in {@link #focusables}.\n\t */\n\tfocusNext() {\n\t\tthis._focus( this.next );\n\t}\n\n\t/**\n\t * Focuses the {@link #previous} item in {@link #focusables}.\n\t */\n\tfocusPrevious() {\n\t\tthis._focus( this.previous );\n\t}\n\n\t/**\n\t * Focuses the given view if it exists.\n\t *\n\t * @protected\n\t * @param {module:ui/view~View} view\n\t */\n\t_focus( view ) {\n\t\tif ( view ) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the next or previous focusable view in {@link #focusables} with respect\n\t * to {@link #current}.\n\t *\n\t * @protected\n\t * @param {Number} step Either `1` for checking forward from {@link #current} or\n\t * `-1` for checking backwards.\n\t * @returns {module:ui/view~View|null}\n\t */\n\t_getFocusableItem( step ) {\n\t\t// Cache for speed.\n\t\tconst current = this.current;\n\t\tconst collectionLength = this.focusables.length;\n\n\t\tif ( !collectionLength ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Start from the beginning if no view is focused.\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\tif ( current === null ) {\n\t\t\treturn this[ step === 1 ? 'first' : 'last' ];\n\t\t}\n\n\t\t// Cycle in both directions.\n\t\tlet index = ( current + collectionLength + step ) % collectionLength;\n\n\t\tdo {\n\t\t\tconst view = this.focusables.get( index );\n\n\t\t\t// TODO: Check if view is visible.\n\t\t\tif ( isFocusable( view ) ) {\n\t\t\t\treturn view;\n\t\t\t}\n\n\t\t\t// Cycle in both directions.\n\t\t\tindex = ( index + collectionLength + step ) % collectionLength;\n\t\t} while ( index !== current );\n\n\t\treturn null;\n\t}\n}\n\n// Checks whether a view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\nfunction isFocusable( view ) {\n\treturn !!( view.focus && global.window.getComputedStyle( view.element ).display != 'none' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/attributecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\nexport default class AttributeCommand extends Command {\n\t/**\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {String} attributeKey Attribute that will be set by the command.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The attribute that will be set by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n\t\t *\n\t\t * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n\t\t * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n\t\t * text will have this attribute, too).\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = this._getValueFromFirstAllowedNode();\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\n\t}\n\n\t/**\n\t * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n\t *\n\t * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n\t *\n\t * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n\t *\n\t * * If the selection is on a range, the command applies the attribute to all nodes in that range\n\t * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n\t * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n\t * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n\t * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n\t * that the selection inherits all attributes from a node if it is in an empty node).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Command options.\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n\t * otherwise the command will remove the attribute.\n\t * If not set, the command will look for its current value to decide what it should do.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, true );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the attribute value of the first node in the selection that allows the attribute.\n\t * For the collapsed selection returns the selection attribute.\n\t *\n\t * @private\n\t * @returns {Boolean} The attribute value.\n\t */\n\t_getValueFromFirstAllowedNode() {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn selection.hasAttribute( this.attributeKey );\n\t\t}\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\tif ( schema.checkAttribute( item, this.attributeKey ) ) {\n\t\t\t\t\treturn item.hasAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window */\n\n/**\n * @module utils/translation-service\n */\n\nimport CKEditorError from './ckeditorerror';\n\n/* istanbul ignore else */\nif ( !window.CKEDITOR_TRANSLATIONS ) {\n\twindow.CKEDITOR_TRANSLATIONS = {};\n}\n\n/**\n * Adds translations to existing ones or overrides the existing translations. These translations will later\n * be available for the {@link module:utils/locale~Locale#t `t()`} function.\n *\n * The `translations` is an object which consists of `messageId: translation` pairs. Note that the message ID can be\n * either constructed from the message string or from the message ID if it was passed\n * (this happens rarely and mostly for short messages or messages with placeholders).\n * Since the editor displays only the message string, the message ID can be found either in the source code or in the\n * built translations for another language.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'Cancel': 'Anuluj',\n *\t\t\t'IMAGE': 'obraz', // Note that the `IMAGE` comes from the message ID, while the string can be `image`.\n *\t\t} );\n *\n * If the message is supposed to support various plural forms, make sure to provide an array with the singular form and all plural forms:\n *\n *\t\tadd( 'pl', {\n *\t \t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n * \t\t} );\n *\n * You should also specify the third argument (the `getPluralForm()` function) that will be used to determine the plural form if no\n * language file was loaded for that language. All language files coming from CKEditor 5 sources will have this option set, so\n * these plural form rules will be reused by other translations added to the registered languages. The `getPluralForm()` function\n * can return either a Boolean or a number.\n *\n * \t\tadd( 'en', {\n *\t \t\t// ... Translations.\n * \t\t}, n => n !== 1 );\n * \t\tadd( 'pl', {\n *\t \t\t// ... Translations.\n * \t\t}, n => n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && ( n % 100 < 10 || n % 100 >= 20 ) ? 1 : 2 );\n *\n * All translations extend the global `window.CKEDITOR_TRANSLATIONS` object. An example of this object can be found below:\n *\n * \t\t{\n * \t\t\tpl: {\n *\t\t\t\tdictionary: {\n *\t\t\t\t\t'Cancel': 'Anuluj',\n *\t\t\t\t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n *\t\t\t\t},\n *\t\t\t\t// A function that returns the plural form index.\n *\t\t\t\tgetPluralForm: n => n !==1\n *\t\t\t}\n *\t\t\t// Other languages.\n *\t\t}\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations, getPluralForm ) {\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS[ language ] ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS[ language ] = {};\n *\t\t\t}\n *\n *\t\t\tconst languageTranslations = window.CKEDITOR_TRANSLATIONS[ language ];\n *\n * \t\t\tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n * \t\t\tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( languageTranslations.dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String,*>} translations An object with translations which will be added to the dictionary.\n * For each message ID the value should be either a translation or an array of translations if the message\n * should support plural forms.\n * @param {Function} getPluralForm A function that returns the plural form index (a number).\n */\nexport function add( language, translations, getPluralForm ) {\n\tif ( !window.CKEDITOR_TRANSLATIONS[ language ] ) {\n\t\twindow.CKEDITOR_TRANSLATIONS[ language ] = {};\n\t}\n\n\tconst languageTranslations = window.CKEDITOR_TRANSLATIONS[ language ];\n\n\tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n\tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n\n\tObject.assign( languageTranslations.dictionary, translations );\n}\n\n/**\n * **Note:** This method is internal, use {@link module:utils/locale~Locale#t the `t()` function} instead to translate\n * the editor UI parts.\n *\n * This function is responsible for translating messages to the specified language. It uses translations added perviously\n * by {@link module:utils/translation-service~add} (a translations dictionary and the `getPluralForm()` function\n * to provide accurate translations of plural forms).\n *\n * When no translation is defined in the dictionary or the dictionary does not exist, this function returns\n * the original message string or the message plural depending on the number of elements.\n *\n *\t\ttranslate( 'pl', { string: 'Cancel' } ); // 'Cancel'\n *\n * The third optional argument is the number of elements, based on which the single form or one of the plural forms\n * should be picked when the message is supposed to support various plural forms.\n *\n * \t\ttranslate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space'\n * \t\ttranslate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 3 ); // 'Add %0 spaces'\n *\n * The message should provide an ID using the `id` property when the message strings are not unique and their\n * translations should be different.\n *\n *\t\ttranslate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n *\t\ttranslate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n *\n * @protected\n * @param {String} language Target language.\n * @param {module:utils/translation-service~Message|String} message A message that will be translated.\n * @param {Number} [quantity] The number of elements for which a plural form should be picked from the target language dictionary.\n * @returns {String} Translated sentence.\n */\nexport function _translate( language, message, quantity = 1 ) {\n\tif ( typeof quantity !== 'number' ) {\n\t\t/**\n\t\t * An incorrect value was passed to the translation function. This was probably caused\n\t\t * by an incorrect message interpolation of a plural form. Note that for messages supporting plural forms\n\t\t * the second argument of the `t()` function should always be a number or an array with a number as the first element.\n\t\t *\n\t\t * @error translation-service-quantity-not-a-number\n\t\t */\n\t\tthrow new CKEditorError( 'translation-service-quantity-not-a-number', null, { quantity } );\n\t}\n\n\tconst numberOfLanguages = getNumberOfLanguages();\n\n\tif ( numberOfLanguages === 1 ) {\n\t\t// Override the language to the only supported one.\n\t\t// This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n\t\tlanguage = Object.keys( window.CKEDITOR_TRANSLATIONS )[ 0 ];\n\t}\n\n\tconst messageId = message.id || message.string;\n\n\tif ( numberOfLanguages === 0 || !hasTranslation( language, messageId ) ) {\n\t\tif ( quantity !== 1 ) {\n\t\t\t// Return the default plural form that was passed in the `message.plural` parameter.\n\t\t\treturn message.plural;\n\t\t}\n\n\t\treturn message.string;\n\t}\n\n\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ].dictionary;\n\tconst getPluralForm = window.CKEDITOR_TRANSLATIONS[ language ].getPluralForm || ( n => n === 1 ? 0 : 1 );\n\n\tif ( typeof dictionary[ messageId ] === 'string' ) {\n\t\treturn dictionary[ messageId ];\n\t}\n\n\tconst pluralFormIndex = Number( getPluralForm( quantity ) );\n\n\t// Note: The `translate` function is not responsible for replacing `%0, %1, ...` with values.\n\treturn dictionary[ messageId ][ pluralFormIndex ];\n}\n\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\nexport function _clear() {\n\twindow.CKEDITOR_TRANSLATIONS = {};\n}\n\n// Checks whether the dictionary exists and translation in that dictionary exists.\nfunction hasTranslation( language, messageId ) {\n\treturn (\n\t\t!!window.CKEDITOR_TRANSLATIONS[ language ] &&\n\t\t!!window.CKEDITOR_TRANSLATIONS[ language ].dictionary[ messageId ]\n\t);\n}\n\nfunction getNumberOfLanguages() {\n\treturn Object.keys( window.CKEDITOR_TRANSLATIONS ).length;\n}\n\n/**\n * The internationalization message interface. A message that implements this interface can be passed to the `t()` function\n * to be translated to the target UI language.\n *\n * @typedef {Object} module:utils/translation-service~Message\n *\n * @property {String} string The message string to translate. Acts as a default translation if the translation for a given language\n * is not defined. When the message is supposed to support plural forms, the string should be the English singular form of the message.\n * @property {String} [id] The message ID. If passed, the message ID is taken from this property instead of the `message.string`.\n * This property is useful when various messages share the same message string, for example, the `editor` string in `in the editor`\n * and `my editor` sentences.\n * @property {String} [plural] The plural form of the message. This property should be skipped when a message is not supposed\n * to support plural forms. Otherwise it should always be set to a string with the English plural form of the message.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/locale\n */\n\n/* globals console */\n\nimport { _translate } from './translation-service';\n\nconst RTL_LANGUAGE_CODES = [ 'ar', 'fa', 'he', 'ku', 'ug' ];\n\n/**\n * Represents the localization services.\n */\nexport default class Locale {\n\t/**\n\t * Creates a new instance of the locale class. Learn more about\n\t * {@glink features/ui-language configuring the language of the editor}.\n\t *\n\t * @param {Object} [options] Locale configuration.\n\t * @param {String} [options.uiLanguage='en'] The editor UI language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. See {@link #uiLanguage}.\n\t * @param {String} [options.contentLanguage] The editor content language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. If not specified, the same as `options.language`.\n\t * See {@link #contentLanguage}.\n\t */\n\tconstructor( options = {} ) {\n\t\t/**\n\t\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * If the {@link #contentLanguage content language} was not specified in the `Locale` constructor,\n\t\t * it also defines the language of the content.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.uiLanguage = options.uiLanguage || 'en';\n\n\t\t/**\n\t\t * The editor content language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * Usually the same as the {@link #uiLanguage editor language}, it can be customized by passing an optional\n\t\t * argument to the `Locale` constructor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.contentLanguage = options.contentLanguage || this.uiLanguage;\n\n\t\t/**\n\t\t * Text direction of the {@link #uiLanguage editor UI language}. Either `'ltr'` or `'rtl'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.uiLanguageDirection = getLanguageDirection( this.uiLanguage );\n\n\t\t/**\n\t\t * Text direction of the {@link #contentLanguage editor content language}.\n\t\t *\n\t\t * If the content language was passed directly to the `Locale` constructor, this property represents the\n\t\t * direction of that language.\n\t\t *\n\t\t * If the {@link #contentLanguage editor content language} was derived from the {@link #uiLanguage editor language},\n\t\t * the content language direction is the same as the {@link #uiLanguageDirection UI language direction}.\n\t\t *\n\t\t * The value is either `'ltr'` or `'rtl'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.contentLanguageDirection = getLanguageDirection( this.contentLanguage );\n\n\t\t/**\n\t\t * Translates the given message to the {@link #uiLanguage}. This method is also available in\n\t\t * {@link module:core/editor/editor~Editor#t `Editor`} and {@link module:ui/view~View#t `View`}.\n\t\t *\n\t\t * This method's context is statically bound to the `Locale` instance and **should always be called as a function**:\n\t\t *\n\t\t *\t\tconst t = locale.t;\n\t\t *\t\tt( 'Label' );\n\t\t *\n\t\t * The message can be either a string or an object implementing the {@link module:utils/translation-service~Message} interface.\n\t\t *\n\t\t * The message may contain placeholders (`%<index>`) for value(s) that are passed as a `values` parameter.\n\t\t * For an array of values, the `%<index>` will be changed to an element of that array at the given index.\n\t\t * For a single value passed as the second argument, only the `%0` placeholders will be changed to the provided value.\n\t\t *\n\t\t *\t\tt( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n\t\t * \t\tt( 'Created file \"%0\", fileName );\n\t\t *\n\t\t * The message supports plural forms. To specify the plural form, use the `plural` property. Singular or plural form\n\t\t * will be chosen depending on the first value from the passed `values`. The value of the `plural` property is used\n\t\t * as a default plural translation when the translation for the target language is missing.\n\t\t *\n\t\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space' for the English language.\n\t\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 5 ); // 'Add 5 spaces' for the English language.\n\t\t *\t\tt( { string: '%1 a space', plural: '%1 %0 spaces' }, [ 2, 'Add' ] ); // 'Add 2 spaces' for the English language.\n\t\t *\n\t\t * \t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Dodaj spację' for the Polish language.\n\t\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 5 ); // 'Dodaj 5 spacji' for the Polish language.\n\t\t *\t\tt( { string: '%1 a space', plural: '%1 %0 spaces' }, [ 2, 'Add' ] ); // 'Dodaj 2 spacje' for the Polish language.\n\t\t *\n\t\t *  * The message should provide an ID using the `id` property when the message strings are not unique and their\n\t\t * translations should be different.\n\t\t *\n\t\t *\t\ttranslate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n\t\t *\t\ttranslate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n\t\t *\n\t\t * @method #t\n\t\t * @param {String|module:utils/translation-service~Message} message A message that will be localized (translated).\n\t\t * @param {String|Number|Array.<String|Number>} [values] A value or an array of values that will fill message placeholders.\n\t\t * For messages supporting plural forms the first value will determine the plural form.\n\t\t * @returns {String}\n\t\t */\n\t\tthis.t = ( message, values ) => this._t( message, values );\n\t}\n\n\t/**\n\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t *\n\t * **Note**: This property was deprecated. Please use {@link #uiLanguage} and {@link #contentLanguage}\n\t * properties instead.\n\t *\n\t * @deprecated\n\t * @member {String}\n\t */\n\tget language() {\n\t\t/**\n\t\t * The {@link module:utils/locale~Locale#language `Locale#language`} property was deprecated and will\n\t\t * be removed in the near future. Please use the {@link #uiLanguage} and {@link #contentLanguage} properties instead.\n\t\t *\n\t\t * @error locale-deprecated-language-property\n\t\t */\n\t\tconsole.warn(\n\t\t\t'locale-deprecated-language-property: ' +\n\t\t\t'The Locale#language property has been deprecated and will be removed in the near future. ' +\n\t\t\t'Please use #uiLanguage and #contentLanguage properties instead.' );\n\n\t\treturn this.uiLanguage;\n\t}\n\n\t/**\n\t * An unbound version of the {@link #t} method.\n\t *\n\t * @private\n\t * @param {String|module:utils/translation-service~Message} message\n\t * @param {Number|String|Array.<Number|String>} [values]\n\t * @returns {String}\n\t */\n\t_t( message, values = [] ) {\n\t\tif ( !Array.isArray( values ) ) {\n\t\t\tvalues = [ values ];\n\t\t}\n\n\t\tif ( typeof message === 'string' ) {\n\t\t\tmessage = { string: message };\n\t\t}\n\n\t\tconst hasPluralForm = !!message.plural;\n\t\tconst quantity = hasPluralForm ? values[ 0 ] : 1;\n\n\t\tconst translatedString = _translate( this.uiLanguage, message, quantity );\n\n\t\treturn interpolateString( translatedString, values );\n\t}\n}\n\n// Fills the `%0, %1, ...` string placeholders with values.\nfunction interpolateString( string, values ) {\n\treturn string.replace( /%(\\d+)/g, ( match, index ) => {\n\t\treturn ( index < values.length ) ? values[ index ] : match;\n\t} );\n}\n\n// Helps determine whether a language is LTR or RTL.\n//\n// @param {String} language The ISO 639-1 language code.\n// @returns {String} 'ltr' or 'rtl\nfunction getLanguageDirection( languageCode ) {\n\treturn RTL_LANGUAGE_CODES.includes( languageCode ) ? 'rtl' : 'ltr';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/context\n */\n\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport PluginCollection from './plugincollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides a common, higher-level environment for solutions that use multiple {@link module:core/editor/editor~Editor editors}\n * or plugins that work outside the editor. Use it instead of {@link module:core/editor/editor~Editor.create `Editor.create()`}\n * in advanced application integrations.\n *\n * All configuration options passed to a context will be used as default options for editor instances initialized in that context.\n *\n * {@link module:core/contextplugin~ContextPlugin Context plugins} passed to a context instance will be shared among all\n * editor instances initialized in this context. These will be the same plugin instances for all the editors.\n *\n * **Note:** The context can only be initialized with {@link module:core/contextplugin~ContextPlugin context plugins}\n * (e.g. [comments](https://ckeditor.com/collaboration/comments/)). Regular {@link module:core/plugin~Plugin plugins} require an\n * editor instance to work and cannot be added to a context.\n *\n * **Note:** You can add a context plugin to an editor instance, though.\n *\n * If you are using multiple editor instances on one page and use any context plugins, create a context to share the configuration and\n * plugins among these editors. Some plugins will use the information about all existing editors to better integrate between them.\n *\n * If you are using plugins that do not require an editor to work (e.g. [comments](https://ckeditor.com/collaboration/comments/)),\n * enable and configure them using the context.\n *\n * If you are using only a single editor on each page, use {@link module:core/editor/editor~Editor.create `Editor.create()`} instead.\n * In such case, a context instance will be created by the editor instance in a transparent way.\n *\n * See {@link module:core/context~Context.create `Context.create()`} for usage examples.\n */\nexport default class Context {\n\t/**\n\t * Creates a context instance with a given configuration.\n\t *\n\t * Usually not to be used directly. See the static {@link module:core/context~Context.create `create()`} method.\n\t *\n\t * @param {Object} [config={}] The context configuration.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * Stores all the configurations specific to this context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\n\n\t\tconst availablePlugins = this.constructor.builtinPlugins;\n\n\t\tthis.config.define( 'plugins', availablePlugins );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:core/plugincollection~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins );\n\n\t\tconst languageConfig = this.config.get( 'language' ) || {};\n\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = new Locale( {\n\t\t\tuiLanguage: typeof languageConfig === 'string' ? languageConfig : languageConfig.ui,\n\t\t\tcontentLanguage: this.config.get( 'language.content' )\n\t\t} );\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * A list of editors that this context instance is injected to.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.editors = new Collection();\n\n\t\t/**\n\t\t * Reference to the editor which created the context.\n\t\t * Null when the context was created outside of the editor.\n\t\t *\n\t\t * It is used to destroy the context when removing the editor that has created the context.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor|null}\n\t\t */\n\t\tthis._contextOwner = null;\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the configuration.\n\t *\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n\t * once the initialization is completed, providing an array of loaded plugins.\n\t */\n\tinitPlugins() {\n\t\tconst plugins = this.config.get( 'plugins' ) || [];\n\n\t\tfor ( const Plugin of plugins ) {\n\t\t\tif ( typeof Plugin != 'function' ) {\n\t\t\t\t/**\n\t\t\t\t * Only a constructor function is allowed as a {@link module:core/contextplugin~ContextPlugin context plugin}.\n\t\t\t\t *\n\t\t\t\t * @error context-initplugins-constructor-only\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'context-initplugins-constructor-only',\n\t\t\t\t\tnull,\n\t\t\t\t\t{ Plugin }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( Plugin.isContextPlugin !== true ) {\n\t\t\t\t/**\n\t\t\t\t * Only a plugin marked as a {@link module:core/contextplugin~ContextPlugin.isContextPlugin context plugin}\n\t\t\t\t * is allowed to be used with a context.\n\t\t\t\t *\n\t\t\t\t * @error context-initplugins-invalid-plugin\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'context-initplugins-invalid-plugin',\n\t\t\t\t\tnull,\n\t\t\t\t\t{ Plugin }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this.plugins.init( plugins );\n\t}\n\n\t/**\n\t * Destroys the context instance and all editors used with the context,\n\t * releasing all resources used by the context.\n\t *\n\t * @returns {Promise} A promise that resolves once the context instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\treturn Promise.all( Array.from( this.editors, editor => editor.destroy() ) )\n\t\t\t.then( () => this.plugins.destroy() );\n\t}\n\n\t/**\n\t * Adds a reference to the editor which is used with this context.\n\t *\n\t * When the given editor has created the context, the reference to this editor will be stored\n\t * as a {@link ~Context#_contextOwner}.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Boolean} isContextOwner Stores the given editor as a context owner.\n\t */\n\t_addEditor( editor, isContextOwner ) {\n\t\tif ( this._contextOwner ) {\n\t\t\t/**\n\t\t\t * Cannot add multiple editors to the context which is created by the editor.\n\t\t\t *\n\t\t\t * @error context-addeditor-private-context\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'context-addeditor-private-context' );\n\t\t}\n\n\t\tthis.editors.add( editor );\n\n\t\tif ( isContextOwner ) {\n\t\t\tthis._contextOwner = editor;\n\t\t}\n\t}\n\n\t/**\n\t * Removes a reference to the editor which was used with this context.\n\t * When the context was created by the given editor, the context will be destroyed.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @return {Promise} A promise that resolves once the editor is removed from the context or when the context was destroyed.\n\t */\n\t_removeEditor( editor ) {\n\t\tif ( this.editors.has( editor ) ) {\n\t\t\tthis.editors.remove( editor );\n\t\t}\n\n\t\tif ( this._contextOwner === editor ) {\n\t\t\treturn this.destroy();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Returns the context configuration which will be copied to the editors created using this context.\n\t *\n\t * The configuration returned by this method has the plugins configuration removed &mdash; plugins are shared with all editors\n\t * through another mechanism.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @returns {Object} Configuration as a plain object.\n\t */\n\t_getEditorConfig() {\n\t\tconst result = {};\n\n\t\tfor ( const name of this.config.names() ) {\n\t\t\tif ( ![ 'plugins', 'removePlugins', 'extraPlugins' ].includes( name ) ) {\n\t\t\t\tresult[ name ] = this.config.get( name );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates and initializes a new context instance.\n\t *\n\t *\t\tconst commonConfig = { ... }; // Configuration for all the plugins and editors.\n\t *\t\tconst editorPlugins = [ ... ]; // Regular plugins here.\n\t *\n\t *\t\tContext\n\t *\t\t\t.create( {\n\t *\t\t\t\t// Only context plugins here.\n\t *\t\t\t\tplugins: [ ... ],\n\t *\n\t *\t\t\t\t// Configure the language for all the editors (it cannot be overwritten).\n\t *\t\t\t\tlanguage: { ... },\n\t *\n\t *\t\t\t\t// Configuration for context plugins.\n\t *\t\t\t\tcomments: { ... },\n\t *\t\t\t\t...\n\t *\n\t *\t\t\t\t// Default configuration for editor plugins.\n\t *\t\t\t\ttoolbar: { ... },\n\t *\t\t\t\timage: { ... },\n\t *\t\t\t\t...\n\t *\t\t\t} )\n\t *\t\t\t.then( context => {\n\t *\t\t\t\tconst promises = [];\n\t *\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\n\t *\t\t\t\t\tdocument.getElementById( 'editor1' ),\n\t *\t\t\t\t\t{\n\t *\t\t\t\t\t\teditorPlugins,\n\t *\t\t\t\t\t\tcontext\n\t *\t\t\t\t\t}\n\t *\t\t\t\t) );\n\t *\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\n\t *\t\t\t\t\tdocument.getElementById( 'editor2' ),\n\t *\t\t\t\t\t{\n\t *\t\t\t\t\t\teditorPlugins,\n\t *\t\t\t\t\t\tcontext,\n\t *\t\t\t\t\t\ttoolbar: { ... } // You can overwrite the configuration of the context.\n\t *\t\t\t\t\t}\n\t *\t\t\t\t) );\n\t *\n\t *\t\t\t\treturn Promise.all( promises );\n\t *\t\t\t} );\n\t *\n\t * @param {Object} [config] The context configuration.\n\t * @returns {Promise} A promise resolved once the context is ready. The promise resolves with the created context instance.\n\t */\n\tstatic create( config ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst context = new this( config );\n\n\t\t\tresolve( context.initPlugins().then( () => context ) );\n\t\t} );\n\t}\n}\n\n/**\n * An array of plugins built into the `Context` class.\n *\n * It is used in CKEditor 5 builds featuring `Context` to provide a list of context plugins which are later automatically initialized\n * during the context initialization.\n *\n * They will be automatically initialized by `Context` unless `config.plugins` is passed.\n *\n *\t\t// Build some context plugins into the Context class first.\n *\t\tContext.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since Context.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tContext\n *\t\t\t.create()\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\tcontext.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n * See also {@link module:core/context~Context.defaultConfig `Context.defaultConfig`}\n * and {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n *\n * @static\n * @member {Array.<Function>} module:core/context~Context.builtinPlugins\n */\n\n/**\n * The default configuration which is built into the `Context` class.\n *\n * It is used in CKEditor 5 builds featuring `Context` to provide the default configuration options which are later used during the\n * context initialization.\n *\n *\t\tContext.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tContext\n *\t\t\t.create()\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the configuration passed to create().\n *\t\tContext\n *\t\t\t.create( { bar: 3 } )\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/context~Context.builtinPlugins `Context.builtinPlugins`}\n * and {@link module:core/editor/editor~Editor.defaultConfig `Editor.defaultConfig`}.\n *\n * @static\n * @member {Object} module:core/context~Context.defaultConfig\n */\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\nexport default class ParagraphCommand extends Command {\n\t/**\n\t * The value of the command. Indicates whether the selection start is placed in a paragraph.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst block = first( document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && block.is( 'element', 'paragraph' );\n\t\tthis.isEnabled = !!block && checkCanBecomeParagraph( block, model.schema );\n\t}\n\n\t/**\n\t * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n\t * will be turned to paragraphs.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\n\t * The selection that the command should be applied to.\n\t * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = ( options.selection || document.selection ).getSelectedBlocks();\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( 'element', 'paragraph' ) && checkCanBecomeParagraph( block, model.schema ) ) {\n\t\t\t\t\twriter.rename( block, 'paragraph' );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeParagraph( block, schema ) {\n\treturn schema.checkChild( block.parent, 'paragraph' ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/insertparagraphcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The insert paragraph command. It inserts a new paragraph at a specific\n * {@link module:engine/model/position~Position document position}.\n *\n *\t\t// Insert a new paragraph before an element in the document.\n *\t\teditor.execute( 'insertParagraph', {\n *\t\t\tposition: editor.model.createPositionBefore( element )\n *\t\t} );\n *\n * If a paragraph is disallowed in the context of the specific position, the command\n * will attempt to split position ancestors to find a place where it is possible\n * to insert a paragraph.\n *\n * **Note**: This command moves the selection to the inserted paragraph.\n *\n * @extends module:core/command~Command\n */\nexport default class InsertParagraphCommand extends Command {\n\t/**\n\t * Executes the command.\n\t *\n\t * @param {Object} options Options for the executed command.\n\t * @param {module:engine/model/position~Position} options.position The model position at which\n\t * the new paragraph will be inserted.\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tlet position = options.position;\n\n\t\tmodel.change( writer => {\n\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\t\tif ( !model.schema.checkChild( position.parent, paragraph ) ) {\n\t\t\t\tconst allowedParent = model.schema.findAllowedParent( position, paragraph );\n\n\t\t\t\t// It could be there's no ancestor limit that would allow paragraph.\n\t\t\t\t// In theory, \"paragraph\" could be disallowed even in the \"$root\".\n\t\t\t\tif ( !allowedParent ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tposition = writer.split( position, allowedParent ).position;\n\t\t\t}\n\n\t\t\tmodel.insertContent( paragraph, position );\n\n\t\t\twriter.setSelection( paragraph, 'in' );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraph\n */\n\nimport ParagraphCommand from './paragraphcommand';\nimport InsertParagraphCommand from './insertparagraphcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * It also brings two editors commands:\n *\n * * The {@link module:paragraph/paragraphcommand~ParagraphCommand `'paragraph'`} command that converts all\n * blocks in the model selection into paragraphs.\n * * The {@link module:paragraph/insertparagraphcommand~InsertParagraphCommand `'insertParagraph'`} command\n * that inserts a new paragraph at a specified location in the model.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Paragraph extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Paragraph';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\teditor.commands.add( 'paragraph', new ParagraphCommand( editor ) );\n\t\teditor.commands.add( 'insertParagraph', new InsertParagraphCommand( editor ) );\n\n\t\t// Schema.\n\t\tmodel.schema.register( 'paragraph', { inheritAllFrom: '$block' } );\n\n\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\n\t\t// Conversion for paragraph-like elements which has not been converted by any plugin.\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: ( viewElement, { writer } ) => {\n\t\t\t\tif ( !Paragraph.paragraphLikeElements.has( viewElement.name ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Do not auto-paragraph empty elements.\n\t\t\t\tif ( viewElement.isEmpty ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn writer.createElement( 'paragraph' );\n\t\t\t},\n\t\t\tview: /.+/,\n\t\t\tconverterPriority: 'low'\n\t\t} );\n\t}\n}\n\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\nParagraph.paragraphLikeElements = new Set( [\n\t'blockquote',\n\t'dd',\n\t'div',\n\t'dt',\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6',\n\t'li',\n\t'p',\n\t'td',\n\t'th'\n] );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nexport default class BasicHtmlWriter {\n\t/**\n\t * Returns an HTML string created from the document fragment.\n\t *\n\t * @param {DocumentFragment} fragment\n\t * @returns {String}\n\t */\n\tgetHtml( fragment ) {\n\t\tconst doc = document.implementation.createHTMLDocument( '' );\n\t\tconst container = doc.createElement( 'div' );\n\t\tcontainer.appendChild( fragment );\n\n\t\treturn container.innerHTML;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\n\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\n\n/**\n * The HTML data processor class.\n * This data processor implementation uses HTML as input and output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nexport default class HtmlDataProcessor {\n\t/**\n\t * Creates a new instance of the HTML data processor class.\n\t *\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * A DOM parser instance used to parse an HTML string to an HTML document.\n\t\t *\n\t\t * @private\n\t\t * @member {DOMParser}\n\t\t */\n\t\tthis._domParser = new DOMParser();\n\n\t\t/**\n\t\t * A DOM converter used to convert DOM elements to view elements.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis._domConverter = new DomConverter( document, { blockFillerMode: 'nbsp' } );\n\n\t\t/**\n\t\t * A basic HTML writer instance used to convert DOM elements to an HTML string.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n\t\t */\n\t\tthis._htmlWriter = new BasicHtmlWriter();\n\t}\n\n\t/**\n\t * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n\t * to data format &mdash; in this case to an HTML string.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n\t * @returns {String} HTML string.\n\t */\n\ttoData( viewFragment ) {\n\t\t// Convert view DocumentFragment to DOM DocumentFragment.\n\t\tconst domFragment = this._domConverter.viewToDom( viewFragment, document );\n\n\t\t// Convert DOM DocumentFragment to HTML output.\n\t\treturn this._htmlWriter.getHtml( domFragment );\n\t}\n\n\t/**\n\t * Converts the provided HTML string to a view tree.\n\t *\n\t * @param {String} data An HTML string.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n\t */\n\ttoView( data ) {\n\t\t// Convert input HTML data to DOM DocumentFragment.\n\t\tconst domFragment = this._toDom( data );\n\n\t\t// Convert DOM DocumentFragment to view DocumentFragment.\n\t\treturn this._domConverter.domToView( domFragment );\n\t}\n\n\t/**\n\t * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\n\t * the provided data.\n\t *\n\t * @private\n\t * @param {String} data\n\t * @returns {DocumentFragment}\n\t */\n\t_toDom( data ) {\n\t\tconst document = this._domParser.parseFromString( data, 'text/html' );\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst nodes = document.body.childNodes;\n\n\t\twhile ( nodes.length > 0 ) {\n\t\t\tfragment.appendChild( nodes[ 0 ] );\n\t\t}\n\n\t\treturn fragment;\n\t}\n}\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow( obj ) {\n\tconst stringifiedObject = Object.prototype.toString.apply( obj );\n\n\t// Returns `true` for the `window` object in browser environments.\n\tif ( stringifiedObject == '[object Window]' ) {\n\t\treturn true;\n\t}\n\n\t// Returns `true` for the `window` object in the Electron environment.\n\tif ( stringifiedObject == '[object global]' ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nexport function getTranslation(_0x33e18e,_0x5cb9d8){const t=_0x33e18e['t'];if('PENDING_ACTION_COMMENT_THREAD'==_0x5cb9d8)return t({'string':'Unsaved\\x20change\\x20in\\x20comment\\x20thread.','id':'PENDING_ACTION_COMMENT_THREAD'});}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\n\nimport CKEditorError from './ckeditorerror';\n\nconst version = '23.1.0';\n\n/* istanbul ignore next */\nconst windowOrGlobal = typeof window === 'object' ? window : global;\n\n/* istanbul ignore next */\nif ( windowOrGlobal.CKEDITOR_VERSION ) {\n\t/**\n\t * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n\t * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n\t * errors.\n\t *\n\t * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n\t * you may need to check your project for each of these issues and fix them all.\n\t *\n\t * # Trying to add a plugin to an existing build\n\t *\n\t * If you import an existing CKEditor 5 build and a plugin like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n\t *\n\t * Then your project loads some CKEditor 5 packages twice. How does it happen?\n\t *\n\t * The build package contains a file which is already compiled with webpack. This means\n\t * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n\t *\n\t * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\n\t * build such a project, you will end up with the modules being included (and run) twice &mdash; first, because they are\n\t * included inside the build package, and second, because they are required by the `Highlight` plugin.\n\t *\n\t * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n\t *\n\t * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n\t * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\n\t *\n\t * Read more in the {@glink builds/guides/integration/installing-plugins \"Installing plugins\"} guide.\n\t *\n\t * # Confused an editor build with an editor implementation\n\t *\n\t * This scenario is very similar to the previous one, but has a different origin.\n\t *\n\t * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\n\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"} section\n\t * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\n\t *\n\t * The correct way to do so is to import an editor and plugins and run them together like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( error => {\n\t *\t\t\t\tconsole.error( error.stack );\n\t *\t\t\t} );\n\t *\n\t * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\n\t * your imports will look like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t * This creates the same situation as in the previous section because you use a build together with source plugins.\n\t *\n\t * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\n\t *\n\t * # Loading two or more builds on one page\n\t *\n\t * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\n\t * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n\t *\n\t * If you want to use two different types of editors at once, see the\n\t * {@glink builds/guides/integration/advanced-setup#scenario-3-using-two-different-editors \"Using two different editors\"}\n\t * section.\n\t *\n\t * # Using outdated packages\n\t *\n\t * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\n\t * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\n\t * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n\t * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n\t * different versions of the core package.\n\t *\n\t * The solution to this issue is to update all packages to their latest version. We recommend\n\t * using tools like [`npm-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n\t *\n\t * # Conflicting version of dependencies\n\t *\n\t * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\n\t * it may happen that even if you use the latest versions of the official packages and the latest version of\n\t * these third-party packages, there will be a conflict between some of their dependencies.\n\t *\n\t * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n\t * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\n\t *\n\t * **Note:** All official CKEditor 5 packages (excluding integrations and `ckeditor5-dev-*` packages) are released in the\n\t * same major version. This is &mdash; in the `x.y.z`, the `x` is the same for all packages. This is the simplest way to check\n\t * whether you use packages coming from the same CKEditor 5 version. You can read more about versioning in the\n\t * {@glink framework/guides/support/versioning-policy Versioning policy} guide.\n\t *\n\t * # Packages were duplicated in `node_modules`\n\t *\n\t * In some situations, especially when calling `npm install` multiple times, it may happen\n\t * that npm will not correctly \"deduplicate\" packages.\n\t *\n\t * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n\t * However, it is known to fail to do so from time to time.\n\t *\n\t * We recommend checking if any of the steps listed below help:\n\t *\n\t * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\n\t * is known to help in most cases.\n\t * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\n\t * * Check whether all CKEditor 5 packages are up to date and reinstall them\n\t * if you changed anything (`rm -rf node_modules && npm install`).\n\t *\n\t * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\n\t * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n\t *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n\t *\n\t * @error ckeditor-duplicated-modules\n\t */\n\tthrow new CKEditorError(\n\t\t'ckeditor-duplicated-modules',\n\t\tnull\n\t);\n} else {\n\twindowOrGlobal.CKEDITOR_VERSION = version;\n}\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count( iterator ) {\n\tlet count = 0;\n\n\tfor ( const _ of iterator ) { // eslint-disable-line no-unused-vars\n\t\tcount++;\n\t}\n\n\treturn count;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport '../../theme/placeholder.css';\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\nexport function enablePlaceholder( options ) {\n\tconst { view, element, text, isDirectHost = true } = options;\n\tconst doc = view.document;\n\n\t// Use a single a single post fixer per—document to update all placeholders.\n\tif ( !documentPlaceholders.has( doc ) ) {\n\t\tdocumentPlaceholders.set( doc, new Map() );\n\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\n\t\t// can re–evaluate the document again.\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\n\t}\n\n\t// Store information about the element placeholder under its document.\n\tdocumentPlaceholders.get( doc ).set( element, {\n\t\ttext,\n\t\tisDirectHost\n\t} );\n\n\t// Update the placeholders right away.\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\n}\n\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\nexport function disablePlaceholder( view, element ) {\n\tconst doc = element.document;\n\n\tview.change( writer => {\n\t\tif ( !documentPlaceholders.has( doc ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst placeholders = documentPlaceholders.get( doc );\n\t\tconst config = placeholders.get( element );\n\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\n\t\thidePlaceholder( writer, config.hostElement );\n\n\t\tplaceholders.delete( element );\n\t} );\n}\n\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function showPlaceholder( writer, element ) {\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.addClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function hidePlaceholder( writer, element ) {\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nexport function needsPlaceholder( element ) {\n\tif ( !element.isAttached() ) {\n\t\treturn false;\n\t}\n\n\t// The element is empty only as long as it contains nothing but uiElements.\n\tconst isEmptyish = !Array.from( element.getChildren() )\n\t\t.some( element => !element.is( 'uiElement' ) );\n\n\tconst doc = element.document;\n\n\t// If the element is empty and the document is blurred.\n\tif ( !doc.isFocused && isEmptyish ) {\n\t\treturn true;\n\t}\n\n\tconst viewSelection = doc.selection;\n\tconst selectionAnchor = viewSelection.anchor;\n\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\n\tif ( isEmptyish && selectionAnchor && selectionAnchor.parent !== element ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updateDocumentPlaceholders( doc, writer ) {\n\tconst placeholders = documentPlaceholders.get( doc );\n\tlet wasViewModified = false;\n\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t}\n\n\treturn wasViewModified;\n}\n\n// Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updatePlaceholder( writer, element, config ) {\n\tconst { text, isDirectHost } = config;\n\n\tconst hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute( element );\n\tlet wasViewModified = false;\n\n\t// When not a direct host, it could happen that there is no child element\n\t// capable of displaying a placeholder.\n\tif ( !hostElement ) {\n\t\treturn false;\n\t}\n\n\t// Cache the host element. It will be necessary for disablePlaceholder() to know\n\t// which element should have class and attribute removed because, depending on\n\t// the config.isDirectHost value, it could be the element or one of its descendants.\n\tconfig.hostElement = hostElement;\n\n\t// This may be necessary when updating the placeholder text to something else.\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\n\t\twasViewModified = true;\n\t}\n\n\tif ( needsPlaceholder( hostElement ) ) {\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\n\t\twasViewModified = true;\n\t}\n\n\treturn wasViewModified;\n}\n\n// Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\nfunction getChildPlaceholderHostSubstitute( parent ) {\n\tif ( parent.childCount === 1 ) {\n\t\tconst firstChild = parent.getChild( 0 );\n\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\n\t\t\treturn firstChild;\n\t\t}\n\t}\n\n\treturn null;\n}\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/config\n */\n\nimport { isPlainObject, isElement, cloneDeepWith } from 'lodash-es';\n\n/**\n * Handles a configuration dictionary.\n */\nexport default class Config {\n\t/**\n\t * Creates an instance of the {@link ~Config} class.\n\t *\n\t * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n\t * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n\t */\n\tconstructor( configurations, defaultConfigurations ) {\n\t\t/**\n\t\t * Store for the whole configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {};\n\n\t\t// Set default configuration.\n\t\tif ( defaultConfigurations ) {\n\t\t\t// Clone the configuration to make sure that the properties will not be shared\n\t\t\t// between editors and make the watchdog feature work correctly.\n\t\t\tthis.define( cloneConfig( defaultConfigurations ) );\n\t\t}\n\n\t\t// Set initial configuration.\n\t\tif ( configurations ) {\n\t\t\tthis._setObjectToTarget( this._config, configurations );\n\t\t}\n\t}\n\n\t/**\n\t * Set configuration values.\n\t *\n\t * It accepts both a name/value pair or an object, which properties and values will be used to set\n\t * configurations.\n\t *\n\t * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n\t * the value for the `width` configuration in the `resize` subset.\n\t *\n\t *\t\tconfig.set( 'width', 500 );\n\t *\t\tconfig.set( 'toolbar.collapsed', true );\n\t *\n\t *\t\t// Equivalent to:\n\t *\t\tconfig.set( {\n\t *\t\t\twidth: 500\n\t *\t\t\ttoolbar: {\n\t *\t\t\t\tcollapsed: true\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Passing an object as the value will amend the configuration, not replace it.\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcollapsed: true,\n\t *\t\t} );\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcolor: 'red',\n\t *\t\t} );\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' ); // true\n\t *\t\tconfig.get( 'toolbar.color' ); // 'red'\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tset( name, value ) {\n\t\tthis._setToTarget( this._config, name, value );\n\t}\n\n\t/**\n\t * Does exactly the same as {@link #set} with one exception – passed configuration extends\n\t * existing one, but does not overwrite already defined values.\n\t *\n\t * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n\t * rarely used for other needs.\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tdefine( name, value ) {\n\t\tconst isDefine = true;\n\n\t\tthis._setToTarget( this._config, name, value, isDefine );\n\t}\n\n\t/**\n\t * Gets the value for a configuration entry.\n\t *\n\t *\t\tconfig.get( 'name' );\n\t *\n\t * Deep configurations can be retrieved by separating each part with a dot.\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' );\n\t *\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\tget( name ) {\n\t\treturn this._getFromSource( this._config, name );\n\t}\n\n\t/**\n\t * Iterates over all top level configuration names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tfor ( const name of Object.keys( this._config ) ) {\n\t\t\tyield name;\n\t\t}\n\t}\n\n\t/**\n\t * Saves passed configuration to the specified target (nested object).\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n\t */\n\t_setToTarget( target, name, value, isDefine = false ) {\n\t\t// In case of an object, iterate through it and call `_setToTarget` again for each property.\n\t\tif ( isPlainObject( name ) ) {\n\t\t\tthis._setObjectToTarget( target, name, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\t// If there is no object for specified part then create one.\n\t\t\tif ( !isPlainObject( target[ part ] ) ) {\n\t\t\t\ttarget[ part ] = {};\n\t\t\t}\n\n\t\t\t// Nested object becomes a target.\n\t\t\ttarget = target[ part ];\n\t\t}\n\n\t\t// In case of value is an object.\n\t\tif ( isPlainObject( value ) ) {\n\t\t\t// We take care of proper config structure.\n\t\t\tif ( !isPlainObject( target[ name ] ) ) {\n\t\t\t\ttarget[ name ] = {};\n\t\t\t}\n\n\t\t\ttarget = target[ name ];\n\n\t\t\t// And iterate through this object calling `_setToTarget` again for each property.\n\t\t\tthis._setObjectToTarget( target, value, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Do nothing if we are defining configuration for non empty name.\n\t\tif ( isDefine && typeof target[ name ] != 'undefined' ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttarget[ name ] = value;\n\t}\n\n\t/**\n\t * Get specified configuration from specified source (nested object).\n\t *\n\t * @private\n\t * @param {Object} source level of nested object.\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\t_getFromSource( source, name ) {\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\tif ( !isPlainObject( source[ part ] ) ) {\n\t\t\t\tsource = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Nested object becomes a source.\n\t\t\tsource = source[ part ];\n\t\t}\n\n\t\t// Always returns undefined for non existing configuration.\n\t\treturn source ? cloneConfig( source[ name ] ) : undefined;\n\t}\n\n\t/**\n\t * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {Object} configuration Configuration data set\n\t * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n\t */\n\t_setObjectToTarget( target, configuration, isDefine ) {\n\t\tObject.keys( configuration ).forEach( key => {\n\t\t\tthis._setToTarget( target, key, configuration[ key ], isDefine );\n\t\t} );\n\t}\n}\n\n// Clones configuration object or value.\n// @param {*} source Source configuration\n// @returns {*} Cloned configuration value.\nfunction cloneConfig( source ) {\n\treturn cloneDeepWith( source, leaveDOMReferences );\n}\n\n// A customized function for cloneDeepWith.\n// It will leave references to DOM Elements instead of cloning them.\n//\n// @param {*} value\n// @returns {Element|undefined}\nfunction leaveDOMReferences( value ) {\n\treturn isElement( value ) ? value : undefined;\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugincollection\n */\n\nimport CKEditorError, { logError } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class PluginCollection {\n\t/**\n\t * Creates an instance of the plugin collection class.\n\t * Allows loading and initializing plugins and their dependencies.\n\t * Allows to provide a list of already loaded plugins. These plugins will not be destroyed along with this collection.\n\t *\n\t * @param {module:core/editor/editor~Editor|module:core/context~Context} context\n\t * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n\t * when {@link module:core/plugincollection~PluginCollection#init} is used with plugin names (strings, instead of constructors).\n\t * Usually, the editor will pass its built-in plugins to the collection so they can later be\n\t * used in `config.plugins` or `config.removePlugins` by names.\n\t * @param {Iterable.<Array>} contextPlugins A list of already initialized plugins represented by a\n\t * `[ PluginConstructor, pluginInstance ]` pair.\n\t */\n\tconstructor( context, availablePlugins = [], contextPlugins = [] ) {\n\t\t/**\n\t\t * @protected\n\t\t * @type {module:core/editor/editor~Editor|module:core/context~Context}\n\t\t */\n\t\tthis._context = context;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Map}\n\t\t */\n\t\tthis._plugins = new Map();\n\n\t\t/**\n\t\t * A map of plugin constructors that can be retrieved by their names.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<String|Function,Function>}\n\t\t */\n\t\tthis._availablePlugins = new Map();\n\n\t\tfor ( const PluginConstructor of availablePlugins ) {\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Map of {@link module:core/contextplugin~ContextPlugin context plugins} which can be retrieved by their constructors or instances.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map<Function,Function>}\n\t\t */\n\t\tthis._contextPlugins = new Map();\n\n\t\tfor ( const [ PluginConstructor, pluginInstance ] of contextPlugins ) {\n\t\t\tthis._contextPlugins.set( PluginConstructor, pluginInstance );\n\t\t\tthis._contextPlugins.set( pluginInstance, PluginConstructor );\n\n\t\t\t// To make it possible to require a plugin by its name.\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Returns `[ PluginConstructor, pluginInstance ]` pairs.\n\t *\n\t * @returns {Iterable.<Array>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tfor ( const entry of this._plugins ) {\n\t\t\tif ( typeof entry[ 0 ] == 'function' ) {\n\t\t\t\tyield entry;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the plugin instance by its constructor or name.\n\t *\n\t *\t\t// Check if 'Clipboard' plugin was loaded.\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n\t *\t\t\t// Get clipboard plugin instance\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n\t *\n\t *\t\t\tthis.listenTo( clipboard, 'inputTransformation', ( evt, data ) => {\n\t *\t\t\t\t// Do something on clipboard input.\n\t *\t\t\t} );\n\t *\t\t}\n\t *\n\t * **Note**: This method will throw error if plugin is not loaded. Use `{@link #has editor.plugins.has()}`\n\t * to check if plugin is available.\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {module:core/plugin~PluginInterface}\n\t */\n\tget( key ) {\n\t\tconst plugin = this._plugins.get( key );\n\n\t\tif ( !plugin ) {\n\t\t\tlet pluginName = key;\n\n\t\t\tif ( typeof key == 'function' ) {\n\t\t\t\tpluginName = key.pluginName || key.name;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The plugin is not loaded and could not be obtained.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor and must be loaded before they can be obtained from\n\t\t\t * the plugin collection.\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * **Note**: You can use `{@link module:core/plugincollection~PluginCollection#has editor.plugins.has()}`\n\t\t\t * to check if plugin was loaded.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-loaded\n\t\t\t * @param {String} plugin The name of the plugin which is not loaded.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'plugincollection-plugin-not-loaded', this._context, { plugin: pluginName } );\n\t\t}\n\n\t\treturn plugin;\n\t}\n\n\t/**\n\t * Checks if a plugin is loaded.\n\t *\n\t *\t\t// Check if the 'Clipboard' plugin was loaded.\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n\t *\t\t\t// Now use the clipboard plugin instance:\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n\t *\n\t *\t\t\t// ...\n\t *\t\t}\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {Boolean}\n\t */\n\thas( key ) {\n\t\treturn this._plugins.has( key );\n\t}\n\n\t/**\n\t * Initializes a set of plugins and adds them to the collection.\n\t *\n\t * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n\t * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\n\t * `availablePlugins` were passed to the {@link #constructor}.\n\t * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n\t * that should not be loaded (despite being specified in the `plugins` array).\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which gets resolved once all plugins are loaded\n\t * and available in the collection.\n\t */\n\tinit( plugins, removePlugins = [] ) {\n\t\tconst that = this;\n\t\tconst context = this._context;\n\t\tconst loading = new Set();\n\t\tconst loaded = [];\n\n\t\tconst pluginConstructors = mapToAvailableConstructors( plugins );\n\t\tconst removePluginConstructors = mapToAvailableConstructors( removePlugins );\n\t\tconst missingPlugins = getMissingPluginNames( plugins );\n\n\t\tif ( missingPlugins ) {\n\t\t\t/**\n\t\t\t * Some plugins are not available and could not be loaded.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\n\t\t\t * that you try to enable a plugin which was not included in that build. This may be due to a typo\n\t\t\t * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\n\t\t\t * read more about {@glink builds/guides/development/custom-builds custom builds}.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the editor creators directly** (not a build), then it means\n\t\t\t * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\n\t\t\t * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\n\t\t\t * provide each plugin through reference (as a constructor function). Check out the examples in\n\t\t\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-found\n\t\t\t * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n\t\t\t */\n\t\t\tconst errorId = 'plugincollection-plugin-not-found';\n\n\t\t\t// Log the error, so it's more visible on the console. Hopefully, for better DX.\n\t\t\tlogError( errorId, { plugins: missingPlugins } );\n\n\t\t\treturn Promise.reject( new CKEditorError( errorId, context, { plugins: missingPlugins } ) );\n\t\t}\n\n\t\treturn Promise.all( pluginConstructors.map( loadPlugin ) )\n\t\t\t.then( () => initPlugins( loaded, 'init' ) )\n\t\t\t.then( () => initPlugins( loaded, 'afterInit' ) )\n\t\t\t.then( () => loaded );\n\n\t\tfunction loadPlugin( PluginConstructor ) {\n\t\t\tif ( removePluginConstructors.includes( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The plugin is already loaded or being loaded - do nothing.\n\t\t\tif ( that._plugins.has( PluginConstructor ) || loading.has( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn instantiatePlugin( PluginConstructor )\n\t\t\t\t.catch( err => {\n\t\t\t\t\t/**\n\t\t\t\t\t * It was not possible to load the plugin.\n\t\t\t\t\t *\n\t\t\t\t\t * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\n\t\t\t\t\t * of one of the plugins.\n\t\t\t\t\t *\n\t\t\t\t\t * If you correctly handled the promise returned by the editor's `create()` method (like shown below),\n\t\t\t\t\t * you will find the original error logged to the console, too:\n\t\t\t\t\t *\n\t\t\t\t\t *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\n\t\t\t\t\t *\t\t\t.then( editor => {\n\t\t\t\t\t *\t\t\t\t// ...\n\t\t\t\t\t * \t\t\t} )\n\t\t\t\t\t *\t\t\t.catch( error => {\n\t\t\t\t\t *\t\t\t\tconsole.error( error );\n\t\t\t\t\t *\t\t\t} );\n\t\t\t\t\t *\n\t\t\t\t\t * @error plugincollection-load\n\t\t\t\t\t * @param {String} plugin The name of the plugin that could not be loaded.\n\t\t\t\t\t */\n\t\t\t\t\tlogError( 'plugincollection-load', { plugin: PluginConstructor } );\n\n\t\t\t\t\tthrow err;\n\t\t\t\t} );\n\t\t}\n\n\t\tfunction initPlugins( loadedPlugins, method ) {\n\t\t\treturn loadedPlugins.reduce( ( promise, plugin ) => {\n\t\t\t\tif ( !plugin[ method ] ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\tif ( that._contextPlugins.has( plugin ) ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\treturn promise.then( plugin[ method ].bind( plugin ) );\n\t\t\t}, Promise.resolve() );\n\t\t}\n\n\t\tfunction instantiatePlugin( PluginConstructor ) {\n\t\t\treturn new Promise( resolve => {\n\t\t\t\tloading.add( PluginConstructor );\n\n\t\t\t\tif ( PluginConstructor.requires ) {\n\t\t\t\t\tPluginConstructor.requires.forEach( RequiredPluginConstructorOrName => {\n\t\t\t\t\t\tconst RequiredPluginConstructor = getPluginConstructor( RequiredPluginConstructorOrName );\n\n\t\t\t\t\t\tif ( PluginConstructor.isContextPlugin && !RequiredPluginConstructor.isContextPlugin ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * If a plugin is a context plugin, all plugins it requires should also be context plugins\n\t\t\t\t\t\t\t * instead of plugins. In other words, if one plugin can be used in the context,\n\t\t\t\t\t\t\t * all its requirements should also be ready to be used in the context. Note that the context\n\t\t\t\t\t\t\t * provides only a part of the API provided by the editor. If one plugin needs a full\n\t\t\t\t\t\t\t * editor API, all plugins which require it are considered as plugins that need a full\n\t\t\t\t\t\t\t * editor API.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-context-required\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-context-required',\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( removePlugins.includes( RequiredPluginConstructor ) ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-required\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-required',\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tloadPlugin( RequiredPluginConstructor );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tconst plugin = that._contextPlugins.get( PluginConstructor ) || new PluginConstructor( context );\n\t\t\t\tthat._add( PluginConstructor, plugin );\n\t\t\t\tloaded.push( plugin );\n\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t}\n\n\t\tfunction getPluginConstructor( PluginConstructorOrName ) {\n\t\t\tif ( typeof PluginConstructorOrName == 'function' ) {\n\t\t\t\treturn PluginConstructorOrName;\n\t\t\t}\n\n\t\t\treturn that._availablePlugins.get( PluginConstructorOrName );\n\t\t}\n\n\t\tfunction getMissingPluginNames( plugins ) {\n\t\t\tconst missingPlugins = [];\n\n\t\t\tfor ( const pluginNameOrConstructor of plugins ) {\n\t\t\t\tif ( !getPluginConstructor( pluginNameOrConstructor ) ) {\n\t\t\t\t\tmissingPlugins.push( pluginNameOrConstructor );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn missingPlugins.length ? missingPlugins : null;\n\t\t}\n\n\t\tfunction mapToAvailableConstructors( plugins ) {\n\t\t\treturn plugins\n\t\t\t\t.map( pluginNameOrConstructor => getPluginConstructor( pluginNameOrConstructor ) )\n\t\t\t\t.filter( PluginConstructor => !!PluginConstructor );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all loaded plugins.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tconst promises = [];\n\n\t\tfor ( const [ , pluginInstance ] of this ) {\n\t\t\tif ( typeof pluginInstance.destroy == 'function' && !this._contextPlugins.has( pluginInstance ) ) {\n\t\t\t\tpromises.push( pluginInstance.destroy() );\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all( promises );\n\t}\n\n\t/**\n\t * Adds the plugin to the collection. Exposed mainly for testing purposes.\n\t *\n\t * @protected\n\t * @param {Function} PluginConstructor The plugin constructor.\n\t * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n\t */\n\t_add( PluginConstructor, plugin ) {\n\t\tthis._plugins.set( PluginConstructor, plugin );\n\n\t\tconst pluginName = PluginConstructor.pluginName;\n\n\t\tif ( !pluginName ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._plugins.has( pluginName ) ) {\n\t\t\t/**\n\t\t\t * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n\t\t\t * This will lead to runtime conflicts between these plugins.\n\t\t\t *\n\t\t\t * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\n\t\t\t * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\n\t\t\t * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\n\t\t\t *\n\t\t\t * Check your import paths and the list of plugins passed to\n\t\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}\n\t\t\t * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n\t\t\t *\n\t\t\t * The second option is that your `node_modules/` directory contains duplicated versions of the same\n\t\t\t * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\n\t\t\t * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\n\t\t\t * of packages, their dependencies may need to be installed in more than one version which may lead to this\n\t\t\t * warning.\n\t\t\t *\n\t\t\t * Technically speaking, this error occurs because after adding a plugin to an existing editor build\n\t\t\t * dependencies of this plugin are being duplicated.\n\t\t\t * They are already built into that editor build and now get added for the second time as dependencies\n\t\t\t * of the plugin you are installing.\n\t\t\t *\n\t\t\t * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-name-conflict\n\t\t\t * @param {String} pluginName The duplicated plugin name.\n\t\t\t * @param {Function} plugin1 The first plugin constructor.\n\t\t\t * @param {Function} plugin2 The second plugin constructor.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'plugincollection-plugin-name-conflict',\n\t\t\t\tnull,\n\t\t\t\t{ pluginName, plugin1: this._plugins.get( pluginName ).constructor, plugin2: PluginConstructor }\n\t\t\t);\n\t\t}\n\n\t\tthis._plugins.set( pluginName, plugin );\n\t}\n}\n\nmix( PluginCollection, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentselection\n */\n\nimport Selection from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\nexport default class DocumentSelection {\n\t/**\n\t * Creates new DocumentSelection instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = new DocumentSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = new DocumentSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tconst selection = new DocumentSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = new DocumentSelection( otherSelection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tconst selection = new DocumentSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = new DocumentSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( selectable = null, placeOrOffset, options ) {\n\t\t/**\n\t\t * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/selection~Selection}\n\t\t */\n\t\tthis._selection = new Selection();\n\n\t\t// Delegate change event to be fired on DocumentSelection instance.\n\t\tthis._selection.delegate( 'change' ).to( this );\n\n\t\t// Set selection data.\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #_setTo\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._selection.isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #_setTo\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\treturn this._selection.editableElement;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tget _ranges() {\n\t\treturn this._selection._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tyield* this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\treturn this._selection.isEqual( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tisSimilar( otherSelection ) {\n\t\treturn this._selection.isSimilar( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocSelection.is( 'selection' ); // -> true\n\t *\t\tdocSelection.is( 'documentSelection' ); // -> true\n\t *\t\tdocSelection.is( 'view:selection' ); // -> true\n\t *\t\tdocSelection.is( 'view:documentSelection' ); // -> true\n\t *\n\t *\t\tdocSelection.is( 'model:documentSelection' ); // -> false\n\t *\t\tdocSelection.is( 'element' ); // -> false\n\t *\t\tdocSelection.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' ||\n\t\t\ttype == 'documentSelection' ||\n\t\t\ttype == 'view:selection' ||\n\t\t\ttype == 'view:documentSelection';\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tdocumentSelection._setTo( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tdocumentSelection._setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tdocumentSelection._setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tdocumentSelection._setTo( null );\n\t *\n\t * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tdocumentSelection._setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\t_setTo( selectable, placeOrOffset, options ) {\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\t_setFocus( itemOrPosition, offset ) {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\nmix( DocumentSelection, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/fastdiff\n */\n\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n *\t\t\treturn a.value === b.value;\n *\t\t} );\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n *\t\tlet input = '12abc3';\n *\t\tconst output = '2ab';\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * or in case of arrays:\n *\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\n *\t\tconst output = [ '2', 'a', 'b' ];\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n *\t\tconst a = '1234';\n *\t\tconst b = '12xyz34';\n *\n *\t\t// Both calls will return the same results (grouped changes format).\n *\t\tfastDiff( a, b );\n *\t\tdiffToChanges( diff( a, b ) );\n *\n *\t\t// Again, both calls will return the same results (atomic changes format).\n *\t\tfastDiff( a, b, null, true );\n *\t\tdiff( a, b );\n *\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Input array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff( a, b, cmp, atomicChanges = false ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\t// Convert the string (or any array-like object - eg. NodeList) to an array by using the slice() method because,\n\t// unlike Array.from(), it returns array of UTF-16 code units instead of the code points of a string.\n\t// One code point might be a surrogate pair of two code units. All text offsets are expected to be in code units.\n\t// See ckeditor/ckeditor5#3147.\n\t//\n\t// We need to make sure here that fastDiff() works identical to diff().\n\tif ( !Array.isArray( a ) ) {\n\t\ta = Array.prototype.slice.call( a );\n\t}\n\n\tif ( !Array.isArray( b ) ) {\n\t\tb = Array.prototype.slice.call( b );\n\t}\n\n\t// Find first and last change.\n\tconst changeIndexes = findChangeBoundaryIndexes( a, b, cmp );\n\n\t// Transform into changes array.\n\treturn atomicChanges ? changeIndexesToAtomicChanges( changeIndexes, b.length ) : changeIndexesToChanges( b, changeIndexes );\n}\n\n// Finds position of the first and last change in the given arrays. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n// can be generated.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\nfunction findChangeBoundaryIndexes( arr1, arr2, cmp ) {\n\t// Find the first difference between passed values.\n\tconst firstIndex = findFirstDifferenceIndex( arr1, arr2, cmp );\n\n\t// If arrays are equal return -1 indexes object.\n\tif ( firstIndex === -1 ) {\n\t\treturn { firstIndex: -1, lastIndexOld: -1, lastIndexNew: -1 };\n\t}\n\n\t// Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n\tconst oldArrayReversed = cutAndReverse( arr1, firstIndex );\n\tconst newArrayReversed = cutAndReverse( arr2, firstIndex );\n\n\t// Find the first difference between reversed values.\n\t// It should be treated as \"how many elements from the end the last difference occurred\".\n\t//\n\t// For example:\n\t//\n\t// \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n\t// oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n\t// newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n\t// lastIndex:\t\t\t\t\t\t\t-> 2\n\t//\n\t// So the last change occurred two characters from the end of the arrays.\n\tconst lastIndex = findFirstDifferenceIndex( oldArrayReversed, newArrayReversed, cmp );\n\n\t// Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\tconst lastIndexOld = arr1.length - lastIndex;\n\tconst lastIndexNew = arr2.length - lastIndex;\n\n\treturn { firstIndex, lastIndexOld, lastIndexNew };\n}\n\n// Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Number}\nfunction findFirstDifferenceIndex( arr1, arr2, cmp ) {\n\tfor ( let i = 0; i < Math.max( arr1.length, arr2.length ); i++ ) {\n\t\tif ( arr1[ i ] === undefined || arr2[ i ] === undefined || !cmp( arr1[ i ], arr2[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1; // Return -1 if arrays are equal.\n}\n\n// Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n//\n// @param {Array} arr Array to be processed.\n// @param {Number} howMany How many elements from array beginning to remove.\n// @returns {Array} Shortened and reversed array.\nfunction cutAndReverse( arr, howMany ) {\n\treturn arr.slice( howMany ).reverse();\n}\n\n// Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {Array} newArray New array for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\nfunction changeIndexesToChanges( newArray, changeIndexes ) {\n\tconst result = [];\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n\t// in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n\t// (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex,\n\t\t\ttype: 'insert',\n\t\t\tvalues: newArray.slice( firstIndex, lastIndexNew )\n\t\t} );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex + ( lastIndexNew - firstIndex ), // Increase index of what was inserted.\n\t\t\ttype: 'delete',\n\t\t\thowMany: lastIndexOld - firstIndex\n\t\t} );\n\t}\n\n\treturn result;\n}\n\n// Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n//\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n// @returns {Array.<String>} Array of changes compatible with {@link module:utils/diff~diff} format.\nfunction changeIndexesToAtomicChanges( changeIndexes, newLength ) {\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// No changes.\n\tif ( firstIndex === -1 ) {\n\t\treturn Array( newLength ).fill( 'equal' );\n\t}\n\n\tlet result = [];\n\tif ( firstIndex > 0 ) {\n\t\tresult = result.concat( Array( firstIndex ).fill( 'equal' ) );\n\t}\n\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexNew - firstIndex ).fill( 'insert' ) );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexOld - firstIndex ).fill( 'delete' ) );\n\t}\n\n\tif ( lastIndexNew < newLength ) {\n\t\tresult = result.concat( Array( newLength - lastIndexNew ).fill( 'equal' ) );\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths( element ) {\n\t// Call getComputedStyle on the window the element document belongs to.\n\tconst style = element.ownerDocument.defaultView.getComputedStyle( element );\n\n\treturn {\n\t\ttop: parseInt( style.borderTopWidth, 10 ),\n\t\tright: parseInt( style.borderRightWidth, 10 ),\n\t\tbottom: parseInt( style.borderBottomWidth, 10 ),\n\t\tleft: parseInt( style.borderLeftWidth, 10 )\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nconst DataApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tsetData( data ) {\n\t\tthis.data.set( data );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetData( options ) {\n\t\treturn this.data.get( options );\n\t}\n};\n\nexport default DataApiMixin;\n\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #getData\n * @param {Object} [options] Additional configuration for the retrieved data.\n * Editor features may introduce more configuration options that can be set through this parameter.\n * @param {String} [options.rootName='main'] Root name.\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\n * @returns {String} Output data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\nimport View from '../view';\nimport BodyCollection from './bodycollection';\n\nimport '../../theme/components/editorui/editorui.css';\n\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\nexport default class EditorUIView extends View {\n\t/**\n\t * Creates an instance of the editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views, detached from the DOM\n\t\t * structure of the editor, like panels, icons etc.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection} #body\n\t\t */\n\t\tthis.body = new BodyCollection( locale );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.body.attachToDom();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.body.detachFromDom();\n\n\t\treturn super.destroy();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/label/labelview\n */\n\nimport View from '../view';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nimport '../../theme/components/label/label.css';\n\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text' );\n\n\t\t/**\n\t\t * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #for\n\t\t */\n\t\tthis.set( 'for' );\n\n\t\t/**\n\t\t * An unique id of the label. It can be used by other UI components to reference\n\t\t * the label, for instance, using the `aria-describedby` DOM attribute.\n\t\t *\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.id = `ck-editor__label_${ uid() }`;\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'label',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-label'\n\t\t\t\t],\n\t\t\t\tid: this.id,\n\t\t\t\tfor: bind.to( 'for' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/icon/icon.css';\n\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\nexport default class IconView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The SVG source of the icon.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #content\n\t\t */\n\t\tthis.set( 'content', '' );\n\n\t\t/**\n\t\t * This attribute specifies the boundaries to which the\n\t\t * icon content should stretch.\n\t\t *\n\t\t * @observable\n\t\t * @default '0 0 20 20'\n\t\t * @member {String} #viewBox\n\t\t */\n\t\tthis.set( 'viewBox', '0 0 20 20' );\n\n\t\t/**\n\t\t * The fill color of the child `path.ck-icon__fill`.\n\t\t *\n\t\t * @observable\n\t\t * @default ''\n\t\t * @member {String} #fillColor\n\t\t */\n\t\tthis.set( 'fillColor', '' );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-icon'\n\t\t\t\t],\n\t\t\t\tviewBox: bind.to( 'viewBox' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis._updateXMLContent();\n\t\tthis._colorFillPaths();\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\tthis.on( 'change:content', () => {\n\t\t\tthis._updateXMLContent();\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\n\t\tthis.on( 'change:fillColor', () => {\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the {@link #element} with the value of {@link #content}.\n\t *\n\t * @private\n\t */\n\t_updateXMLContent() {\n\t\tif ( this.content ) {\n\t\t\tconst parsed = new DOMParser().parseFromString( this.content.trim(), 'image/svg+xml' );\n\t\t\tconst svg = parsed.querySelector( 'svg' );\n\t\t\tconst viewBox = svg.getAttribute( 'viewBox' );\n\n\t\t\tif ( viewBox ) {\n\t\t\t\tthis.viewBox = viewBox;\n\t\t\t}\n\n\t\t\tthis.element.innerHTML = '';\n\n\t\t\twhile ( svg.childNodes.length > 0 ) {\n\t\t\t\tthis.element.appendChild( svg.childNodes[ 0 ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n\t *\n\t * @private\n\t */\n\t_colorFillPaths() {\n\t\tif ( this.fillColor ) {\n\t\t\tthis.element.querySelectorAll( '.ck-icon__fill' ).forEach( path => {\n\t\t\t\tpath.style.fill = this.fillColor;\n\t\t\t} );\n\t\t}\n\t}\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x2c79=['attributes','cancel','disconnect','type'];(function(_0x41c4c5,_0x2c7981){const _0x3cfba8=function(_0x2c1c3b){while(--_0x2c1c3b){_0x41c4c5['push'](_0x41c4c5['shift']());}};_0x3cfba8(++_0x2c7981);}(_0x2c79,0x178));const _0x3cfb=function(_0x41c4c5,_0x2c7981){_0x41c4c5=_0x41c4c5-0x0;let _0x3cfba8=_0x2c79[_0x41c4c5];return _0x3cfba8;};import{throttle as _0x223b34}from'lodash-es';export default function j(_0x5520f1){const _0x56b6fc=_0x223b34(_0x5520f1,0x1e),_0x4cced4=new MutationObserver(_0x423803=>{for(const _0xfc30a4 of _0x423803)(_0x3cfb('0x0')==_0xfc30a4[_0x3cfb('0x3')]&&'class'==_0xfc30a4['attributeName']||'childList'==_0xfc30a4['type'])&&_0x56b6fc();});return{'attach'(_0x459a47){_0x4cced4['observe'](_0x459a47,{'attributes':!0x0,'childList':!0x0,'subtree':!0x0});},'detach'(){_0x4cced4[_0x3cfb('0x2')](),_0x56b6fc[_0x3cfb('0x1')]();}};}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nconst smallPaddingElements = [ 'figcaption', 'li' ];\n\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\nexport default function viewToPlainText( viewItem ) {\n\tlet text = '';\n\n\tif ( viewItem.is( '$text' ) || viewItem.is( '$textProxy' ) ) {\n\t\t// If item is `Text` or `TextProxy` simple take its text data.\n\t\ttext = viewItem.data;\n\t} else if ( viewItem.is( 'element', 'img' ) && viewItem.hasAttribute( 'alt' ) ) {\n\t\t// Special case for images - use alt attribute if it is provided.\n\t\ttext = viewItem.getAttribute( 'alt' );\n\t} else if ( viewItem.is( 'element', 'br' ) ) {\n\t\t// A soft break should be converted into a single line break (#8045).\n\t\ttext = '\\n';\n\t} else {\n\t\t// Other elements are document fragments, attribute elements or container elements.\n\t\t// They don't have their own text value, so convert their children.\n\t\tlet prev = null;\n\n\t\tfor ( const child of viewItem.getChildren() ) {\n\t\t\tconst childText = viewToPlainText( child );\n\n\t\t\t// Separate container element children with one or more new-line characters.\n\t\t\tif ( prev && ( prev.is( 'containerElement' ) || child.is( 'containerElement' ) ) ) {\n\t\t\t\tif ( smallPaddingElements.includes( prev.name ) || smallPaddingElements.includes( child.name ) ) {\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t} else {\n\t\t\t\t\ttext += '\\n\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += childText;\n\t\t\tprev = child;\n\t\t}\n\t}\n\n\treturn text;\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.972 16.615a.997.997 0 0 1-.744-.292l-4.596-4.596a1 1 0 1 1 1.414-1.414l3.926 3.926 9.937-9.937a1 1 0 0 1 1.414 1.415L7.717 16.323a.997.997 0 0 1-.745.292z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.591 10.177l4.243 4.242a1 1 0 0 1-1.415 1.415l-4.242-4.243-4.243 4.243a1 1 0 0 1-1.414-1.415l4.243-4.242L4.52 5.934A1 1 0 0 1 5.934 4.52l4.243 4.243 4.242-4.243a1 1 0 1 1 1.415 1.414l-4.243 4.243z\\\"/></svg>\";","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x4c8f=['ck\\x20ck-user__name\\x20ck-user__name--hidden','isAnonymous','name','ck\\x20ck-user__name','ck-user__avatar','push','div','ck-user__img','setTemplate','avatar','url(\\x27'];(function(_0x2ee08a,_0x4c8fa8){const _0x2667ab=function(_0x562e98){while(--_0x562e98){_0x2ee08a['push'](_0x2ee08a['shift']());}};_0x2667ab(++_0x4c8fa8);}(_0x4c8f,0x70));const _0x2667=function(_0x2ee08a,_0x4c8fa8){_0x2ee08a=_0x2ee08a-0x0;let _0x2667ab=_0x4c8f[_0x2ee08a];return _0x2667ab;};import _0x6a5f7c from'@ckeditor/ckeditor5-ui/src/view';import'../../../theme/users.css';export default class a extends _0x6a5f7c{constructor(_0x197ee6,_0x5b22be){super(_0x197ee6),this[_0x2667('0x0')]=_0x5b22be[_0x2667('0x0')];const _0x397e61=['ck',_0x2667('0x5')];_0x5b22be[_0x2667('0xa')]&&_0x397e61[_0x2667('0x3')]('ck-user__anonymous'),_0x5b22be[_0x2667('0x7')]&&_0x397e61[_0x2667('0x3')](_0x2667('0x2')),this[_0x2667('0x6')]({'tag':_0x2667('0x4'),'attributes':{'class':['ck','ck-user'],'data-user-id':_0x5b22be['id']},'children':[{'tag':_0x2667('0x4'),'attributes':{'class':_0x397e61,'style':{'background-image':_0x5b22be[_0x2667('0x7')]?_0x2667('0x8')+_0x5b22be[_0x2667('0x7')]+'\\x27)':''}}},{'tag':_0x2667('0x4'),'attributes':{'class':_0x5b22be[_0x2667('0x7')]?_0x2667('0x9'):_0x2667('0x1')},'children':[{'text':_0x5b22be['initials']}]}]});}}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\n\nimport EditableElement from './editableelement';\n\nconst rootNameSymbol = Symbol( 'rootName' );\n\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\nexport default class RootEditableElement extends EditableElement {\n\t/**\n\t * Creates root editable element.\n\t *\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t */\n\tconstructor( document, name ) {\n\t\tsuper( document, name );\n\n\t\t/**\n\t\t * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n\t\t * other name is set, `main` name is used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = 'main';\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootEditableElement.is( 'rootElement' ); // -> true\n\t *\t\trootEditableElement.is( 'editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'element' ); // -> true\n\t *\t\trootEditableElement.is( 'node' ); // -> true\n\t *\t\trootEditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'view:element' ); // -> true\n\t *\t\trootEditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\trootEditableElement.is( 'model:element' ); // -> false\n\t *\t\trootEditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a root editable element, you can also check its\n\t * {@link module:engine/view/rooteditableelement~RootEditableElement#name name}:\n\t *\n\t *\t\trootEditableElement.is( 'element', 'div' ); // -> true if this is a div root editable element\n\t *\t\trootEditableElement.is( 'rootElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'element', 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'rootElement' || type === 'view:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'rootElement' || type === 'view:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\tget rootName() {\n\t\treturn this.getCustomProperty( rootNameSymbol );\n\t}\n\n\tset rootName( rootName ) {\n\t\tthis._setCustomProperty( rootNameSymbol, rootName );\n\t}\n\n\t/**\n\t * Overrides old element name and sets new one.\n\t * This is needed because view roots are created before they are attached to the DOM.\n\t * The name of the root element is temporary at this stage. It has to be changed when the\n\t * view root element is attached to the DOM element.\n\t *\n\t * @protected\n\t * @param {String} name The new name of element.\n\t */\n\tset _name( name ) {\n\t\tthis.name = name;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/attributeelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// Default attribute priority.\nconst DEFAULT_PRIORITY = 10;\n\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class AttributeElement extends Element {\n\t/**\n\t * Creates an attribute element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\n\t\t/**\n\t\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Number}\n\t\t */\n\t\tthis._priority = DEFAULT_PRIORITY;\n\n\t\t/**\n\t\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t\t * and then two elements are considered similar if, and only if they have the same `_id`.\n\t\t *\n\t\t * @protected\n\t\t * @member {String|Number}\n\t\t */\n\t\tthis._id = null;\n\n\t\t/**\n\t\t * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n\t\t * and still exist in the view tree.\n\t\t *\n\t\t * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n\t\t */\n\t\tthis._clonesGroup = null;\n\t}\n\n\t/**\n\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget priority() {\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t * and then two elements are considered similar if, and only if they have the same `id`.\n\t *\n\t * @readonly\n\t * @type {String|Number}\n\t */\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n\t * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n\t *\n\t * Note: If this element has been removed from the tree, returned set will not include it.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n\t * if this element has no `id`.\n\t *\n\t * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n\t * with the same `id` that were added and not removed from the view tree.\n\t */\n\tgetElementsWithSameId() {\n\t\tif ( this.id === null ) {\n\t\t\t/**\n\t\t\t * Cannot get elements with the same id for an attribute element without id.\n\t\t\t *\n\t\t\t * @error attribute-element-get-elements-with-same-id-no-id\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'attribute-element-get-elements-with-same-id-no-id',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn new Set( this._clonesGroup );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tattributeElement.is( 'attributeElement' ); // -> true\n\t *\t\tattributeElement.is( 'element' ); // -> true\n\t *\t\tattributeElement.is( 'node' ); // -> true\n\t *\t\tattributeElement.is( 'view:attributeElement' ); // -> true\n\t *\t\tattributeElement.is( 'view:element' ); // -> true\n\t *\t\tattributeElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tattributeElement.is( 'model:element' ); // -> false\n\t *\t\tattributeElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an attribute element, you can also check its\n\t * {@link module:engine/view/attributeelement~AttributeElement#name name}:\n\t *\n\t *\t\tattributeElement.is( 'element', 'b' ); // -> true if this is a bold element\n\t *\t\tattributeElement.is( 'attributeElement', 'b' ); // -> same as above\n\t *\t\ttext.is( 'element', 'b' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'attributeElement' || type === 'view:attributeElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'attributeElement' || type === 'view:attributeElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t *\n\t * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n\t * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n\t * different set of children nodes.\n\t *\n\t * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n\t * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n\t * considered similar.\n\t *\n\t * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n\t *\n\t * * two following similar elements can be merged together into one, longer element,\n\t * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n\t * decide whether processed element should be unwrapped,\n\t * * etc.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\t// If any element has an `id` set, just compare the ids.\n\t\tif ( this.id !== null || otherElement.id !== null ) {\n\t\t\treturn this.id === otherElement.id;\n\t\t}\n\n\t\treturn super.isSimilar( otherElement ) && this.priority == otherElement.priority;\n\t}\n\n\t/**\n\t * Clones provided element with priority.\n\t *\n\t * @protected\n\t * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n\t */\n\t_clone( deep ) {\n\t\tconst cloned = super._clone( deep );\n\n\t\t// Clone priority too.\n\t\tcloned._priority = this._priority;\n\n\t\t// And id too.\n\t\tcloned._id = this._id;\n\n\t\treturn cloned;\n\t}\n}\n\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\n\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\t// <b>foo</b> does not need filler.\n\tif ( nonUiChildrenCount( this ) ) {\n\t\treturn null;\n\t}\n\n\tlet element = this.parent;\n\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\n\twhile ( element && element.is( 'attributeElement' ) ) {\n\t\tif ( nonUiChildrenCount( element ) > 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\tif ( !element || nonUiChildrenCount( element ) > 1 ) {\n\t\treturn null;\n\t}\n\n\t// Render block filler at the end of element (after all ui elements).\n\treturn this.childCount;\n}\n\n// Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\nfunction nonUiChildrenCount( element ) {\n\treturn Array.from( element.getChildren() ).filter( element => !element.is( 'uiElement' ) ).length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/emptyelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class EmptyElement extends Element {\n\t/**\n\t * Creates new instance of EmptyElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for EmptyElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\temptyElement.is( 'emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'element' ); // -> true\n\t *\t\temptyElement.is( 'node' ); // -> true\n\t *\t\temptyElement.is( 'view:emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'view:element' ); // -> true\n\t *\t\temptyElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\temptyElement.is( 'model:element' ); // -> false\n\t *\t\temptyElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an empty element, you can also check its\n\t * {@link module:engine/view/emptyelement~EmptyElement#name name}:\n\t *\n\t *\t\temptyElement.is( 'element', 'img' ); // -> true if this is a img element\n\t *\t\temptyElement.is( 'emptyElement', 'img' ); // -> same as above\n\t *\t\ttext.is( 'element', 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'emptyElement' || type === 'view:emptyElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'emptyElement' || type === 'view:emptyElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n\t * adding any child nodes to EmptyElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n\t\t\t *\n\t\t\t * @error view-emptyelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-emptyelement-cannot-add',\n\t\t\t\t[ this, nodes ]\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/uielement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class UIElement extends Element {\n\t/**\n\t * Creates new instance of UIElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attributes, children ) {\n\t\tsuper( document, name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for UIElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tuiElement.is( 'uiElement' ); // -> true\n\t *\t\tuiElement.is( 'element' ); // -> true\n\t *\t\tuiElement.is( 'node' ); // -> true\n\t *\t\tuiElement.is( 'view:uiElement' ); // -> true\n\t *\t\tuiElement.is( 'view:element' ); // -> true\n\t *\t\tuiElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tuiElement.is( 'model:element' ); // -> false\n\t *\t\tuiElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an ui element, you can also check its\n\t * {@link module:engine/view/uielement~UIElement#name name}:\n\t *\n\t *\t\tuiElement.is( 'element', 'span' ); // -> true if this is a span ui element\n\t *\t\tuiElement.is( 'uiElement', 'span' ); // -> same as above\n\t *\t\ttext.is( 'element', 'span' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'uiElement' || type === 'view:uiElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'uiElement' || type === 'view:uiElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n\t * to UIElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n\t\t\t *\n\t\t\t * @error view-uielement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add', this );\n\t\t}\n\t}\n\n\t/**\n\t * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n\t * {@link module:engine/view/domconverter~DomConverter}.\n\t * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n\t *\n\t *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n\t *\t\tmyUIElement.render = function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t};\n\t *\n\t * If changes in your UI element should trigger some editor UI update you should call\n\t * the {@link module:core/editor/editorui~EditorUI#update `editor.ui.update()`} method\n\t * after rendering your UI element.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\trender( domDocument ) {\n\t\treturn this.toDomElement( domDocument );\n\t}\n\n\t/**\n\t * Creates DOM element based on this view UIElement.\n\t * Note that each time this method is called new DOM element is created.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\ttoDomElement( domDocument ) {\n\t\tconst domElement = domDocument.createElement( this.name );\n\n\t\tfor ( const key of this.getAttributeKeys() ) {\n\t\t\tdomElement.setAttribute( key, this.getAttribute( key ) );\n\t\t}\n\n\t\treturn domElement;\n\t}\n}\n\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\nexport function injectUiElementHandling( view ) {\n\tview.document.on( 'keydown', ( evt, data ) => jumpOverUiElement( evt, data, view.domConverter ) );\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\nfunction jumpOverUiElement( evt, data, domConverter ) {\n\tif ( data.keyCode == keyCodes.arrowright ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\t\tconst domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed;\n\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\t\tif ( domSelectionCollapsed || data.shiftKey ) {\n\t\t\tconst domParent = domSelection.focusNode;\n\t\t\tconst domOffset = domSelection.focusOffset;\n\n\t\t\tconst viewPosition = domConverter.domPositionToView( domParent, domOffset );\n\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\t\t\tif ( viewPosition === null ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip all following ui elements.\n\t\t\tlet jumpedOverAnyUiElement = false;\n\n\t\t\tconst nextViewPosition = viewPosition.getLastMatchingPosition( value => {\n\t\t\t\tif ( value.item.is( 'uiElement' ) ) {\n\t\t\t\t\t// Remember that there was at least one ui element.\n\t\t\t\t\tjumpedOverAnyUiElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\t\t\t\tif ( value.item.is( 'uiElement' ) || value.item.is( 'attributeElement' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Don't jump over text or don't get out of container element.\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\t// If anything has been skipped, fix position.\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\t\t\tif ( jumpedOverAnyUiElement ) {\n\t\t\t\tconst newDomPosition = domConverter.viewPositionToDom( nextViewPosition );\n\n\t\t\t\tif ( domSelectionCollapsed ) {\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\n\t\t\t\t\tdomSelection.collapse( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t} else {\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\n\t\t\t\t\tdomSelection.extend( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rawelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * The raw element class.\n *\n * The raw elements work as data containers (\"wrappers\", \"sandboxes\") but their children are not managed or\n * even recognized by the editor. This encapsulation allows integrations to maintain custom DOM structures\n * in the editor content without, for instance, worrying about compatibility with other editor features.\n * Raw elements are a perfect tool for integration with external frameworks and data sources.\n *\n * Unlike {@link module:engine/view/uielement~UIElement UI elements}, raw elements act like real editor\n * content (similar to {@link module:engine/view/containerelement~ContainerElement} or\n * {@link module:engine/view/emptyelement~EmptyElement}), they are considered by the editor selection and\n * {@link module:widget/utils~toWidget they can work as widgets}.\n *\n * To create a new raw element, use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createRawElement `downcastWriter#createRawElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class RawElement extends Element {\n\t/**\n\t * Creates a new instance of a raw element.\n\t *\n\t * Throws the `view-rawelement-cannot-add` {@link module:utils/ckeditorerror~CKEditorError CKEditorError} when the `children`\n\t * parameter is passed to inform that the usage of `RawElement` is incorrect (adding child nodes to `RawElement` is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createRawElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name A node name.\n\t * @param {Object|Iterable} [attrs] The collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for raw elements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type or name.\n\t *\n\t *\t\trawElement.is( 'rawElement' ); // -> true\n\t *\t\trawElement.is( 'element' ); // -> true\n\t *\t\trawElement.is( 'node' ); // -> true\n\t *\t\trawElement.is( 'view:rawElement' ); // -> true\n\t *\t\trawElement.is( 'view:element' ); // -> true\n\t *\t\trawElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\trawElement.is( 'model:element' ); // -> false\n\t *\t\trawElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a raw element, you can also check its\n\t * {@link module:engine/view/rawelement~RawElement#name name}:\n\t *\n\t *\t\trawElement.is( 'img' ); // -> true if this is an img element\n\t *\t\trawElement.is( 'rawElement', 'img' ); // -> same as above\n\t *\t\ttext.is( 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type The type to check when the `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] The element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'rawElement' || type === 'view:rawElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'rawElement' || type === 'view:rawElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides the {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws the `view-rawelement-cannot-add` {@link module:utils/ckeditorerror~CKEditorError CKEditorError} to prevent\n\t * adding any child nodes to a raw element.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to a {@link module:engine/view/rawelement~RawElement} instance.\n\t\t\t *\n\t\t\t * @error view-rawelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-rawelement-cannot-add',\n\t\t\t\t[ this, nodes ]\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * This allows rendering the children of a {@link module:engine/view/rawelement~RawElement} on the DOM level.\n\t * This method is called by the {@link module:engine/view/domconverter~DomConverter} with the raw DOM element\n\t * passed as an argument, leaving the number and shape of the children up to the integrator.\n\t *\n\t * This method **must be defined** for the raw element to work:\n\t *\n\t *\t\tconst myRawElement = downcastWriter.createRawElement( 'div' );\n\t *\n\t *\t\tmyRawElement.render = function( domElement ) {\n\t *\t\t\tdomElement.innerHTML = '<b>This is the raw content of myRawElement.</b>';\n\t *\t\t};\n\t *\n\t * @method #render\n\t * @param {HTMLElement} domElement The native DOM element representing the raw view element.\n\t */\n}\n\n// Returns `null` because block filler is not needed for raw elements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\n\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport RawElement from './rawelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\nexport default class DowncastWriter {\n\t/**\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * The view document instance in which this writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t\t * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._cloneGroups = new Map();\n\t}\n\n\t/**\n\t * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n\t * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t * Usage:\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets backward selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t * \t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t * \t\t// Removes all ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t *\t\t// Sets selection as fake.\n\t *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * \t\t// represented in other way, for example by applying proper CSS class.\n\t *\t\twriter.setSelection( range, { fake: true } );\n\t *\n\t * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * \t\t// (and be  properly handled by screen readers).\n\t *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tsetSelection( selectable, placeOrOffset, options ) {\n\t\tthis.document.selection._setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetSelectionFocus( itemOrPosition, offset ) {\n\t\tthis.document.selection._setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tcreateText( data ) {\n\t\treturn new Text( this.document, data );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/attributeelement~AttributeElement}.\n\t *\n\t *\t\twriter.createAttributeElement( 'strong' );\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' } );\n\t *\n\t *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n\t *\n\t *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n\t *\t\twriter.createAttributeElement( 'span', { class: 'my-marker' }, { id: 'marker:my' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Element's attributes.\n\t * @param {Object} [options] Element's options.\n\t * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n\t * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n\t */\n\tcreateAttributeElement( name, attributes, options = {} ) {\n\t\tconst attributeElement = new AttributeElement( this.document, name, attributes );\n\n\t\tif ( options.priority ) {\n\t\t\tattributeElement._priority = options.priority;\n\t\t}\n\n\t\tif ( options.id ) {\n\t\t\tattributeElement._id = options.id;\n\t\t}\n\n\t\treturn attributeElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/containerelement~ContainerElement}.\n\t *\n\t *\t\twriter.createContainerElement( 'p' );\n\t *\n\t *\t\t// Create element with custom attributes.\n\t *\t\twriter.createContainerElement( 'div', { id: 'foo-bar', 'data-baz': '123' } );\n\t *\n\t *\t\t// Create element with custom styles.\n\t *\t\twriter.createContainerElement( 'p', { style: 'font-weight: bold; padding-bottom: 10px' } );\n\t *\n\t *\t\t// Create element with custom classes.\n\t *\t\twriter.createContainerElement( 'p', { class: 'foo bar baz' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n\t */\n\tcreateContainerElement( name, attributes ) {\n\t\treturn new ContainerElement( this.document, name, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t *\t\twriter.createEditableElement( 'div' );\n\t *\t\twriter.createEditableElement( 'div', { id: 'foo-1234' } );\n\t *\n\t * Note: The editable element is to be used in the editing pipeline. Usually, together with\n\t * {@link module:widget/utils~toWidgetEditable `toWidgetEditable()`}.\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/editableelement~EditableElement} Created element.\n\t */\n\tcreateEditableElement( name, attributes ) {\n\t\tconst editableElement = new EditableElement( this.document, name, attributes );\n\t\teditableElement._document = this.document;\n\n\t\treturn editableElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/emptyelement~EmptyElement}.\n\t *\n\t *\t\twriter.createEmptyElement( 'img' );\n\t *\t\twriter.createEmptyElement( 'img', { id: 'foo-1234' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n\t */\n\tcreateEmptyElement( name, attributes ) {\n\t\treturn new EmptyElement( this.document, name, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/uielement~UIElement}.\n\t *\n\t *\t\twriter.createUIElement( 'span' );\n\t *\t\twriter.createUIElement( 'span', { id: 'foo-1234' } );\n\t *\n\t * A custom render function can be provided as the third parameter:\n\t *\n\t *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t} );\n\t *\n\t * Unlike {@link #createRawElement raw elements}, UI elements are by no means editor content, for instance,\n\t * they are ignored by the editor selection system.\n\t *\n\t * You should not use UI elements as data containers. Check out {@link #createRawElement} instead.\n\t *\n\t * @param {String} name The name of the element.\n\t * @param {Object} [attributes] Element attributes.\n\t * @param {Function} [renderFunction] A custom render function.\n\t * @returns {module:engine/view/uielement~UIElement} The created element.\n\t */\n\tcreateUIElement( name, attributes, renderFunction ) {\n\t\tconst uiElement = new UIElement( this.document, name, attributes );\n\n\t\tif ( renderFunction ) {\n\t\t\tuiElement.render = renderFunction;\n\t\t}\n\n\t\treturn uiElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/rawelement~RawElement}.\n\t *\n\t *\t\twriter.createRawElement( 'span', { id: 'foo-1234' }, function( domElement ) {\n\t *\t\t\tdomElement.innerHTML = '<b>This is the raw content of the raw element.</b>';\n\t *\t\t} );\n\t *\n\t * Raw elements work as data containers (\"wrappers\", \"sandboxes\") but their children are not managed or\n\t * even recognized by the editor. This encapsulation allows integrations to maintain custom DOM structures\n\t * in the editor content without, for instance, worrying about compatibility with other editor features.\n\t * Raw elements are a perfect tool for integration with external frameworks and data sources.\n\t *\n\t * Unlike {@link #createUIElement UI elements}, raw elements act like \"real\" editor content (similar to\n\t * {@link module:engine/view/containerelement~ContainerElement} or {@link module:engine/view/emptyelement~EmptyElement}),\n\t * and they are considered by the editor selection.\n\t *\n\t * You should not use raw elements to render the UI in the editor content. Check out {@link #createUIElement `#createUIElement()`}\n\t * instead.\n\t *\n\t * @param {String} name The name of the element.\n\t * @param {Object} [attributes] Element attributes.\n\t * @param {Function} [renderFunction] A custom render function.\n\t * @returns {module:engine/view/rawelement~RawElement} The created element.\n\t */\n\tcreateRawElement( name, attributes, renderFunction ) {\n\t\tconst rawElement = new RawElement( this.document, name, attributes );\n\n\t\trawElement.render = renderFunction || ( () => {} );\n\n\t\treturn rawElement;\n\t}\n\n\t/**\n\t * Adds or overwrites the element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n\t *\n\t * @param {String} key The attribute key.\n\t * @param {String} value The attribute value.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tsetAttribute( key, value, element ) {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( 'href', linkElement );\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveAttribute( key, element ) {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( 'foo', linkElement );\n\t *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\taddClass( className, element ) {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( 'foo', linkElement );\n\t *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveClass( className, element ) {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( 'color', 'red', element );\n\t *\t\twriter.setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t}, element );\n\t *\n\t * **Note**: The passed style can be normalized if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element to set styles on.\n\t */\n\tsetStyle( property, value, element ) {\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\telement = value;\n\t\t}\n\n\t\telement._setStyle( property, value );\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( 'color', element ); // Removes 'color' style.\n\t *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @param {Array.<String>|String} property\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveStyle( property, element ) {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tsetCustomProperty( key, value, element ) {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key, element ) {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Breaks attribute elements at the provided position or at the boundaries of a provided range. It breaks attribute elements\n\t * up to their first ancestor that is a container element.\n\t *\n\t * In following examples `<p>` is a container, `<b>` and `<u>` are attribute elements:\n\t *\n\t *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n\t *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n\t *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n\t *\n\t * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n\t *\n\t * **Note:** The difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes()} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer()} is that `breakAttributes()` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of a given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer()` assumes that a given `position` is directly in the container element and breaks that container element.\n\t *\n\t * Throws the `view-writer-invalid-range-container` {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * when the {@link module:engine/view/range~Range#start start}\n\t * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n\t *\n\t * Throws the `view-writer-cannot-break-empty-element` {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * when trying to break attributes inside an {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws the `view-writer-cannot-break-ui-element` {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * when trying to break attributes inside a {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n\t * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange The position where\n\t * to break attribute elements.\n\t * @returns {module:engine/view/position~Position|module:engine/view/range~Range} The new position or range, after breaking the\n\t * attribute elements.\n\t */\n\tbreakAttributes( positionOrRange ) {\n\t\tif ( positionOrRange instanceof Position ) {\n\t\t\treturn this._breakAttributes( positionOrRange );\n\t\t} else {\n\t\t\treturn this._breakAttributesRange( positionOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Breaks a {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position.\n\t * The position has to be directly inside the container element and cannot be in the root. It does not break the conrainer view element\n\t * if the position is at the beginning or at the end of its parent element.\n\t *\n\t *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\n\t *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n\t *\t\t<p>^foobar</p> -> ^<p>foobar</p>\n\t *\t\t<p>foobar^</p> -> <p>foobar</p>^\n\t *\n\t * **Note:** The difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes()} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer()} is that `breakAttributes()` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of a given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer()` assumes that the given `position` is directly in the container element and breaks that container element.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n\t * @param {module:engine/view/position~Position} position The position where to break the element.\n\t * @returns {module:engine/view/position~Position} The position between broken elements. If an element has not been broken,\n\t * the returned position is placed either before or after it.\n\t */\n\tbreakContainer( position ) {\n\t\tconst element = position.parent;\n\n\t\tif ( !( element.is( 'containerElement' ) ) ) {\n\t\t\t/**\n\t\t\t * Trying to break an element which is not a container element.\n\t\t\t *\n\t\t\t * @error view-writer-break-non-container-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-break-non-container-element', this.document );\n\t\t}\n\n\t\tif ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Trying to break root element.\n\t\t\t *\n\t\t\t * @error view-writer-break-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-break-root', this.document );\n\t\t}\n\n\t\tif ( position.isAtStart ) {\n\t\t\treturn Position._createBefore( element );\n\t\t} else if ( !position.isAtEnd ) {\n\t\t\tconst newElement = element._clone( false );\n\n\t\t\tthis.insert( Position._createAfter( element ), newElement );\n\n\t\t\tconst sourceRange = new Range( position, Position._createAt( element, 'end' ) );\n\t\t\tconst targetPosition = new Position( newElement, 0 );\n\n\t\t\tthis.move( sourceRange, targetPosition );\n\t\t}\n\n\t\treturn Position._createAfter( element );\n\t}\n\n\t/**\n\t * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n\t * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n\t *\n\t * In following examples `<p>` is a container and `<b>` is an attribute element:\n\t *\n\t *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\n\t *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n\t *\n\t * It will also take care about empty attributes when merging:\n\t *\n\t *\t\t<p><b>[]</b></p> -> <p>[]</p>\n\t *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tmergeAttributes( position ) {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// When inside text node - nothing to merge.\n\t\tif ( positionParent.is( '$text' ) ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When inside empty attribute - remove it.\n\t\tif ( positionParent.is( 'attributeElement' ) && positionParent.childCount === 0 ) {\n\t\t\tconst parent = positionParent.parent;\n\t\t\tconst offset = positionParent.index;\n\n\t\t\tpositionParent._remove();\n\t\t\tthis._removeFromClonedElementsGroup( positionParent );\n\n\t\t\treturn this.mergeAttributes( new Position( parent, offset ) );\n\t\t}\n\n\t\tconst nodeBefore = positionParent.getChild( positionOffset - 1 );\n\t\tconst nodeAfter = positionParent.getChild( positionOffset );\n\n\t\t// Position should be placed between two nodes.\n\t\tif ( !nodeBefore || !nodeAfter ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When position is between two text nodes.\n\t\tif ( nodeBefore.is( '$text' ) && nodeAfter.is( '$text' ) ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\t\t// When position is between two same attribute elements.\n\t\telse if ( nodeBefore.is( 'attributeElement' ) && nodeAfter.is( 'attributeElement' ) && nodeBefore.isSimilar( nodeAfter ) ) {\n\t\t\t// Move all children nodes from node placed after selection and remove that node.\n\t\t\tconst count = nodeBefore.childCount;\n\t\t\tnodeBefore._appendChild( nodeAfter.getChildren() );\n\n\t\t\tnodeAfter._remove();\n\t\t\tthis._removeFromClonedElementsGroup( nodeAfter );\n\n\t\t\t// New position is located inside the first node, before new nodes.\n\t\t\t// Call this method recursively to merge again if needed.\n\t\t\treturn this.mergeAttributes( new Position( nodeBefore, count ) );\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n\t * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n\t *\n\t *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n\t *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tmergeContainers( position ) {\n\t\tconst prev = position.nodeBefore;\n\t\tconst next = position.nodeAfter;\n\n\t\tif ( !prev || !next || !prev.is( 'containerElement' ) || !next.is( 'containerElement' ) ) {\n\t\t\t/**\n\t\t\t * Element before and after given position cannot be merged.\n\t\t\t *\n\t\t\t * @error view-writer-merge-containers-invalid-position\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-merge-containers-invalid-position', this.document );\n\t\t}\n\n\t\tconst lastChild = prev.getChild( prev.childCount - 1 );\n\t\tconst newPosition = lastChild instanceof Text ? Position._createAt( lastChild, 'end' ) : Position._createAt( prev, 'end' );\n\n\t\tthis.move( Range._createIn( next ), Position._createAt( prev, 'end' ) );\n\t\tthis.remove( Range._createOn( next ) );\n\n\t\treturn newPosition;\n\t}\n\n\t/**\n\t * Inserts a node or nodes at specified position. Takes care about breaking attributes before insertion\n\t * and merging them afterwards.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n\t * contains instances that are not {@link module:engine/view/text~Text Texts},\n\t * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n\t * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n\t * {@link module:engine/view/rawelement~RawElement RawElements} or\n\t * {@link module:engine/view/uielement~UIElement UIElements}.\n\t *\n\t * @param {module:engine/view/position~Position} position Insertion position.\n\t * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n\t * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n\t * module:engine/view/rawelement~RawElement|module:engine/view/uielement~UIElement|\n\t * Iterable.<module:engine/view/text~Text|\n\t * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n\t * module:engine/view/emptyelement~EmptyElement|module:engine/view/rawelement~RawElement|\n\t * module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n\t * @returns {module:engine/view/range~Range} Range around inserted nodes.\n\t */\n\tinsert( position, nodes ) {\n\t\tnodes = isIterable( nodes ) ? [ ...nodes ] : [ nodes ];\n\n\t\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\t\tvalidateNodesToInsert( nodes, this.document );\n\n\t\tconst container = getParentContainer( position );\n\n\t\tif ( !container ) {\n\t\t\t/**\n\t\t\t * Position's parent container cannot be found.\n\t\t\t *\n\t\t\t * @error view-writer-invalid-position-container\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-invalid-position-container',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tconst insertionPosition = this._breakAttributes( position, true );\n\t\tconst length = container._insertChild( insertionPosition.offset, nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tthis._addToClonedElementsGroup( node );\n\t\t}\n\n\t\tconst endPosition = insertionPosition.getShiftedBy( length );\n\t\tconst start = this.mergeAttributes( insertionPosition );\n\n\t\t// When no nodes were inserted - return collapsed range.\n\t\tif ( length === 0 ) {\n\t\t\treturn new Range( start, start );\n\t\t} else {\n\t\t\t// If start position was merged - move end position.\n\t\t\tif ( !start.isEqual( insertionPosition ) ) {\n\t\t\t\tendPosition.offset--;\n\t\t\t}\n\n\t\t\tconst end = this.mergeAttributes( endPosition );\n\n\t\t\treturn new Range( start, end );\n\t\t}\n\t}\n\n\t/**\n\t * Removes provided range from the container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n\t * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n\t * to a collapsed range showing the new position.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n\t */\n\tremove( rangeOrItem ) {\n\t\tconst range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn( rangeOrItem );\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to remove.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn new DocumentFragment( this.document );\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\tconst count = breakEnd.offset - breakStart.offset;\n\n\t\t// Remove nodes in range.\n\t\tconst removed = parentContainer._removeChildren( breakStart.offset, count );\n\n\t\tfor ( const node of removed ) {\n\t\t\tthis._removeFromClonedElementsGroup( node );\n\t\t}\n\n\t\t// Merge after removing.\n\t\tconst mergePosition = this.mergeAttributes( breakStart );\n\t\trange.start = mergePosition;\n\t\trange.end = mergePosition.clone();\n\n\t\t// Return removed nodes.\n\t\treturn new DocumentFragment( this.document, removed );\n\t}\n\n\t/**\n\t * Removes matching elements from given range.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to clear.\n\t * @param {module:engine/view/element~Element} element Element to remove.\n\t */\n\tclear( range, element ) {\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Create walker on given range.\n\t\t// We walk backward because when we remove element during walk it modifies range end position.\n\t\tconst walker = range.getWalker( {\n\t\t\tdirection: 'backward',\n\t\t\tignoreElementEnd: true\n\t\t} );\n\n\t\t// Let's walk.\n\t\tfor ( const current of walker ) {\n\t\t\tconst item = current.item;\n\t\t\tlet rangeToRemove;\n\n\t\t\t// When current item matches to the given element.\n\t\t\tif ( item.is( 'element' ) && element.isSimilar( item ) ) {\n\t\t\t\t// Create range on this element.\n\t\t\t\trangeToRemove = Range._createOn( item );\n\t\t\t\t// When range starts inside Text or TextProxy element.\n\t\t\t} else if ( !current.nextPosition.isAfter( range.start ) && item.is( '$textProxy' ) ) {\n\t\t\t\t// We need to check if parent of this text matches to given element.\n\t\t\t\tconst parentElement = item.getAncestors().find( ancestor => {\n\t\t\t\t\treturn ancestor.is( 'element' ) && element.isSimilar( ancestor );\n\t\t\t\t} );\n\n\t\t\t\t// If it is then create range inside this element.\n\t\t\t\tif ( parentElement ) {\n\t\t\t\t\trangeToRemove = Range._createIn( parentElement );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have found element to remove.\n\t\t\tif ( rangeToRemove ) {\n\t\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\n\t\t\t\tif ( rangeToRemove.end.isAfter( range.end ) ) {\n\t\t\t\t\trangeToRemove.end = range.end;\n\t\t\t\t}\n\n\t\t\t\tif ( rangeToRemove.start.isBefore( range.start ) ) {\n\t\t\t\t\trangeToRemove.start = range.start;\n\t\t\t\t}\n\n\t\t\t\t// At the end we remove range with found element.\n\t\t\t\tthis.remove( rangeToRemove );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves nodes from provided range to target position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n\t * @param {module:engine/view/position~Position} targetPosition Position to insert.\n\t * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n\t */\n\tmove( sourceRange, targetPosition ) {\n\t\tlet nodes;\n\n\t\tif ( targetPosition.isAfter( sourceRange.end ) ) {\n\t\t\ttargetPosition = this._breakAttributes( targetPosition, true );\n\n\t\t\tconst parent = targetPosition.parent;\n\t\t\tconst countBefore = parent.childCount;\n\n\t\t\tsourceRange = this._breakAttributesRange( sourceRange, true );\n\n\t\t\tnodes = this.remove( sourceRange );\n\n\t\t\ttargetPosition.offset += ( parent.childCount - countBefore );\n\t\t} else {\n\t\t\tnodes = this.remove( sourceRange );\n\t\t}\n\n\t\treturn this.insert( targetPosition, nodes );\n\t}\n\n\t/**\n\t * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n\t *\n\t * If a collapsed range was passed and is same as selection, the selection\n\t * will be moved to the inside of the wrapped attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n\t * when {@link module:engine/view/range~Range#start}\n\t * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n\t * is collapsed and different than view selection.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to wrap.\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n\t * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n\t */\n\twrap( range, attribute ) {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-wrap-invalid-attribute',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\tif ( !range.isCollapsed ) {\n\t\t\t// Non-collapsed range. Wrap it with the attribute element.\n\t\t\treturn this._wrapRange( range, attribute );\n\t\t} else {\n\t\t\t// Collapsed range. Wrap position.\n\t\t\tlet position = range.start;\n\n\t\t\tif ( position.parent.is( 'element' ) && !_hasNonUiChildren( position.parent ) ) {\n\t\t\t\tposition = position.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n\t\t\t}\n\n\t\t\tposition = this._wrapPosition( position, attribute );\n\t\t\tconst viewSelection = this.document.selection;\n\n\t\t\t// If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\t\t\tif ( viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual( range.start ) ) {\n\t\t\t\tthis.setSelection( position );\n\t\t\t}\n\n\t\t\treturn new Range( position );\n\t\t}\n\t}\n\n\t/**\n\t * Unwraps nodes within provided range from attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t */\n\tunwrap( range, attribute ) {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\t/**\n\t\t\t * The `attribute` passed to {@link module:engine/view/downcastwriter~DowncastWriter#unwrap `DowncastWriter#unwrap()`}\n\t\t\t * must be an instance of {@link module:engine/view/attributeelement~AttributeElement `AttributeElement`}.\n\t\t\t *\n\t\t\t * @error view-writer-unwrap-invalid-attribute\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-unwrap-invalid-attribute',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to unwrap.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn range;\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\t// Unwrap children located between break points.\n\t\tconst newRange = this._unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n\t * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n\t * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n\t *\n\t * New element has to be created because `Element#tagName` property in DOM is readonly.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New name for element.\n\t * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n\t */\n\trename( newName, viewElement ) {\n\t\tconst newElement = new ContainerElement( this.document, newName, viewElement.getAttributes() );\n\n\t\tthis.insert( Position._createAfter( viewElement ), newElement );\n\t\tthis.move( Range._createIn( viewElement ), Position._createAt( newElement, 0 ) );\n\t\tthis.remove( Range._createOn( viewElement ) );\n\n\t\treturn newElement;\n\t}\n\n\t/**\n\t * Cleans up memory by removing obsolete cloned elements group from the writer.\n\t *\n\t * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n\t * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n\t * the group will no longer be needed.\n\t *\n\t * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n\t * were removed from the view.\n\t *\n\t * Keep in mind that group names are equal to the `id` property of the attribute element.\n\t *\n\t * @param {String} groupName Name of the group to clear.\n\t */\n\tclearClonedElementsGroup( groupName ) {\n\t\tthis._cloneGroups.delete( groupName );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates its own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be wrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} wrapElement\n\t */\n\t_wrapChildren( parent, startOffset, endOffset, wrapElement ) {\n\t\tlet i = startOffset;\n\t\tconst wrapPositions = [];\n\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i );\n\t\t\tconst isText = child.is( '$text' );\n\t\t\tconst isAttribute = child.is( 'attributeElement' );\n\t\t\tconst isEmpty = child.is( 'emptyElement' );\n\t\t\tconst isUI = child.is( 'uiElement' );\n\t\t\tconst isRaw = child.is( 'rawElement' );\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\n\t\t\t// If possible, join elements.\n\t\t\t//\n\t\t\t// <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\n\t\t\t//\n\t\t\tif ( isAttribute && this._wrapAttributeElement( wrapElement, child ) ) {\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\n\t\t\t// `wrapElement` (due to priority).\n\t\t\t//\n\t\t\t// <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\n\t\t\t// <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\n\t\t\telse if ( isText || isEmpty || isUI || isRaw || ( isAttribute && shouldABeOutsideB( wrapElement, child ) ) ) {\n\t\t\t\t// Clone attribute.\n\t\t\t\tconst newAttribute = wrapElement._clone();\n\n\t\t\t\t// Wrap current node with new attribute.\n\t\t\t\tchild._remove();\n\t\t\t\tnewAttribute._appendChild( child );\n\n\t\t\t\tparent._insertChild( i, newAttribute );\n\t\t\t\tthis._addToClonedElementsGroup( newAttribute );\n\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\n\t\t\t//\n\t\t\t// <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\n\t\t\t//\n\t\t\telse if ( isAttribute ) {\n\t\t\t\tthis._wrapChildren( child, 0, child.childCount, wrapElement );\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each wrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of wrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} unwrapElement\n\t */\n\t_unwrapChildren( parent, startOffset, endOffset, unwrapElement ) {\n\t\tlet i = startOffset;\n\t\tconst unwrapPositions = [];\n\n\t\t// Iterate over each element between provided offsets inside parent.\n\t\t// We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\n\t\t// so it could get messy. It is safer to it manually in this case.\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i );\n\n\t\t\t// Skip all text nodes. There should be no container element's here either.\n\t\t\tif ( !child.is( 'attributeElement' ) ) {\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// If the child is similar to the given attribute element, unwrap it - it will be completely removed.\n\t\t\t//\n\t\t\t// <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\n\t\t\t//\n\t\t\tif ( child.isSimilar( unwrapElement ) ) {\n\t\t\t\tconst unwrapped = child.getChildren();\n\t\t\t\tconst count = child.childCount;\n\n\t\t\t\t// Replace wrapper element with its children\n\t\t\t\tchild._remove();\n\t\t\t\tparent._insertChild( i, unwrapped );\n\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\n\t\t\t\t// Save start and end position of moved items.\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + count )\n\t\t\t\t);\n\n\t\t\t\t// Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\n\t\t\t\ti += count;\n\t\t\t\tendOffset += count - 1;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\n\t\t\t// Partial unwrapping will happen only if the elements have the same name.\n\t\t\t//\n\t\t\t// <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\n\t\t\t// <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\n\t\t\t//\n\t\t\tif ( this._unwrapAttributeElement( unwrapElement, child ) ) {\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + 1 )\n\t\t\t\t);\n\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If other nested attribute is found, look through it's children for elements to unwrap.\n\t\t\t//\n\t\t\t// <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\n\t\t\t//\n\t\t\tthis._unwrapChildren( child, 0, child.childCount, unwrapElement );\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each unwrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of unwrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset || position.offset == endOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n\t */\n\t_wrapRange( range, attribute ) {\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\t// Wrap all children with attribute.\n\t\tconst newRange = this._wrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/position~Position} New position after wrapping.\n\t */\n\t_wrapPosition( position, attribute ) {\n\t\t// Return same position when trying to wrap with attribute similar to position parent.\n\t\tif ( attribute.isSimilar( position.parent ) ) {\n\t\t\treturn movePositionToTextNode( position.clone() );\n\t\t}\n\n\t\t// When position is inside text node - break it and place new position between two text nodes.\n\t\tif ( position.parent.is( '$text' ) ) {\n\t\t\tposition = breakTextNode( position );\n\t\t}\n\n\t\t// Create fake element that will represent position, and will not be merged with other attributes.\n\t\tconst fakePosition = this.createAttributeElement();\n\t\tfakePosition._priority = Number.POSITIVE_INFINITY;\n\t\tfakePosition.isSimilar = () => false;\n\n\t\t// Insert fake element in position location.\n\t\tposition.parent._insertChild( position.offset, fakePosition );\n\n\t\t// Range around inserted fake attribute element.\n\t\tconst wrapRange = new Range( position, position.getShiftedBy( 1 ) );\n\n\t\t// Wrap fake element with attribute (it will also merge if possible).\n\t\tthis.wrap( wrapRange, attribute );\n\n\t\t// Remove fake element and place new position there.\n\t\tconst newPosition = new Position( fakePosition.parent, fakePosition.index );\n\t\tfakePosition._remove();\n\n\t\t// If position is placed between text nodes - merge them and return position inside.\n\t\tconst nodeBefore = newPosition.nodeBefore;\n\t\tconst nodeAfter = newPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof Text && nodeAfter instanceof Text ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\n\t\t// If position is next to text node - move position inside.\n\t\treturn movePositionToTextNode( newPosition );\n\t}\n\n\t/**\n\t * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n\t * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n\t * \telement to element being wrapped.\n\t *\n\t * \t@private\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n\t * \t@returns {Boolean} Returns `true` if elements are merged.\n\t */\n\t_wrapAttributeElement( wrapper, toWrap ) {\n\t\tif ( !canBeJoined( wrapper, toWrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't merge if name or priority differs.\n\t\tif ( wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes can be merged.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are different we cannot wrap.\n\t\t\tif ( toWrap.hasAttribute( key ) && toWrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles can be merged.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( toWrap.hasStyle( key ) && toWrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Move only these attributes that are not present - other are similar.\n\t\t\tif ( !toWrap.hasAttribute( key ) ) {\n\t\t\t\tthis.setAttribute( key, wrapper.getAttribute( key ), toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( !toWrap.hasStyle( key ) ) {\n\t\t\t\tthis.setStyle( key, wrapper.getStyle( key ), toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getClassNames() ) {\n\t\t\tif ( !toWrap.hasClass( key ) ) {\n\t\t\t\tthis.addClass( key, toWrap );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n\t * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n\t * inside element being unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n\t * @returns {Boolean} Returns `true` if elements are unwrapped.\n\t **/\n\t_unwrapAttributeElement( wrapper, toUnwrap ) {\n\t\tif ( !canBeJoined( wrapper, toUnwrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't unwrap if name or priority differs.\n\t\tif ( wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper attributes.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasAttribute( key ) || toUnwrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper classes.\n\t\tif ( !toUnwrap.hasClass( ...wrapper.getClassNames() ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper styles.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\t// If some styles are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasStyle( key ) || toUnwrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Remove all wrapper's attributes from unwrapped element.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.removeAttribute( key, toUnwrap );\n\t\t}\n\n\t\t// Remove all wrapper's classes from unwrapped element.\n\t\tthis.removeClass( Array.from( wrapper.getClassNames() ), toUnwrap );\n\n\t\t// Remove all wrapper's styles from unwrapped element.\n\t\tthis.removeStyle( Array.from( wrapper.getStyleNames() ), toUnwrap );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/range~Range} New range with located at break positions.\n\t */\n\t_breakAttributesRange( range, forceSplitText = false ) {\n\t\tconst rangeStart = range.start;\n\t\tconst rangeEnd = range.end;\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Break at the collapsed position. Return new collapsed range.\n\t\tif ( range.isCollapsed ) {\n\t\t\tconst position = this._breakAttributes( range.start, forceSplitText );\n\n\t\t\treturn new Range( position, position );\n\t\t}\n\n\t\tconst breakEnd = this._breakAttributes( rangeEnd, forceSplitText );\n\t\tconst count = breakEnd.parent.childCount;\n\t\tconst breakStart = this._breakAttributes( rangeStart, forceSplitText );\n\n\t\t// Calculate new break end offset.\n\t\tbreakEnd.offset += breakEnd.parent.childCount - count;\n\n\t\treturn new Range( breakStart, breakEnd );\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n\t * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n\t * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position Position where to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n\t */\n\t_breakAttributes( position, forceSplitText = false ) {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'emptyElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break an `EmptyElement` instance.\n\t\t\t *\n\t\t\t * This error is thrown if\n\t\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes `DowncastWriter#breakAttributes()`}\n\t\t\t * was executed in an incorrect position.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-empty-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-empty-element', this.document );\n\t\t}\n\n\t\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'uiElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break a `UIElement` instance.\n\t\t\t *\n\t\t\t * This error is thrown if\n\t\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes `DowncastWriter#breakAttributes()`}\n\t\t\t * was executed in an incorrect position.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-ui-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-ui-element', this.document );\n\t\t}\n\n\t\t// If position is placed inside RawElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'rawElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break a `RawElement` instance.\n\t\t\t *\n\t\t\t * This error is thrown if\n\t\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes `DowncastWriter#breakAttributes()`}\n\t\t\t * was executed in an incorrect position.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-raw-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-raw-element', this.document );\n\t\t}\n\n\t\t// There are no attributes to break and text nodes breaking is not forced.\n\t\tif ( !forceSplitText && positionParent.is( '$text' ) && isContainerOrFragment( positionParent.parent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Position's parent is container, so no attributes to break.\n\t\tif ( isContainerOrFragment( positionParent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Break text and start again in new position.\n\t\tif ( positionParent.is( '$text' ) ) {\n\t\t\treturn this._breakAttributes( breakTextNode( position ), forceSplitText );\n\t\t}\n\n\t\tconst length = positionParent.childCount;\n\n\t\t// <p>foo<b><u>bar{}</u></b></p>\n\t\t// <p>foo<b><u>bar</u>[]</b></p>\n\t\t// <p>foo<b><u>bar</u></b>[]</p>\n\t\tif ( positionOffset == length ) {\n\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index + 1 );\n\n\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t} else {\n\t\t\t// <p>foo<b><u>{}bar</u></b></p>\n\t\t\t// <p>foo<b>[]<u>bar</u></b></p>\n\t\t\t// <p>foo{}<b><u>bar</u></b></p>\n\t\t\tif ( positionOffset === 0 ) {\n\t\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t\t// <p>foo<b><u>b{}ar</u></b></p>\n\t\t\t// <p>foo<b><u>b[]ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t\t\telse {\n\t\t\t\tconst offsetAfter = positionParent.index + 1;\n\n\t\t\t\t// Break element.\n\t\t\t\tconst clonedNode = positionParent._clone();\n\n\t\t\t\t// Insert cloned node to position's parent node.\n\t\t\t\tpositionParent.parent._insertChild( offsetAfter, clonedNode );\n\t\t\t\tthis._addToClonedElementsGroup( clonedNode );\n\n\t\t\t\t// Get nodes to move.\n\t\t\t\tconst count = positionParent.childCount - positionOffset;\n\t\t\t\tconst nodesToMove = positionParent._removeChildren( positionOffset, count );\n\n\t\t\t\t// Move nodes to cloned node.\n\t\t\t\tclonedNode._appendChild( nodesToMove );\n\n\t\t\t\t// Create new position to work on.\n\t\t\t\tconst newPosition = new Position( positionParent.parent, offsetAfter );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n\t * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n\t * from the group now keep a reference to the given attribute element.\n\t *\n\t * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n\t *\n\t * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n\t */\n\t_addToClonedElementsGroup( element ) {\n\t\t// Add only if the element is in document tree.\n\t\tif ( !element.root.is( 'rootElement' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Traverse the element's children recursively to find other attribute elements that also might got inserted.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._addToClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = element.id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\tgroup = new Set();\n\t\t\tthis._cloneGroups.set( id, group );\n\t\t}\n\n\t\tgroup.add( element );\n\t\telement._clonesGroup = group;\n\t}\n\n\t/**\n\t * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n\t * from its clones group.\n\t *\n\t * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n\t * This allows to reference the whole group even if the element was already removed from the tree.\n\t *\n\t * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n\t */\n\t_removeFromClonedElementsGroup( element ) {\n\t\t// Traverse the element's children recursively to find other attribute elements that also got removed.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = element.id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.delete( element );\n\t\t// Not removing group from element on purpose!\n\t\t// If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n\t}\n}\n\n// Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\nfunction _hasNonUiChildren( parent ) {\n\treturn Array.from( parent.getChildren() ).some( child => !child.is( 'uiElement' ) );\n}\n\n/**\n * The `attribute` passed to {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#wrap()`}\n * must be an instance of {@link module:engine/view/attributeelement~AttributeElement `AttributeElement`}.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\nfunction getParentContainer( position ) {\n\tlet parent = position.parent;\n\n\twhile ( !isContainerOrFragment( parent ) ) {\n\t\tif ( !parent ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\n\treturn parent;\n}\n\n// Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped otuside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\nfunction shouldABeOutsideB( a, b ) {\n\tif ( a.priority < b.priority ) {\n\t\treturn true;\n\t} else if ( a.priority > b.priority ) {\n\t\treturn false;\n\t}\n\n\t// When priorities are equal and names are different - use identities.\n\treturn a.getIdentity() < b.getIdentity();\n}\n\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\nfunction movePositionToTextNode( position ) {\n\tconst nodeBefore = position.nodeBefore;\n\n\tif ( nodeBefore && nodeBefore.is( '$text' ) ) {\n\t\treturn new Position( nodeBefore, nodeBefore.data.length );\n\t}\n\n\tconst nodeAfter = position.nodeAfter;\n\n\tif ( nodeAfter && nodeAfter.is( '$text' ) ) {\n\t\treturn new Position( nodeAfter, 0 );\n\t}\n\n\treturn position;\n}\n\n// Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\nfunction breakTextNode( position ) {\n\tif ( position.offset == position.parent.data.length ) {\n\t\treturn new Position( position.parent.parent, position.parent.index + 1 );\n\t}\n\n\tif ( position.offset === 0 ) {\n\t\treturn new Position( position.parent.parent, position.parent.index );\n\t}\n\n\t// Get part of the text that need to be moved.\n\tconst textToMove = position.parent.data.slice( position.offset );\n\n\t// Leave rest of the text in position's parent.\n\tposition.parent._data = position.parent.data.slice( 0, position.offset );\n\n\t// Insert new text node after position's parent text node.\n\tposition.parent.parent._insertChild( position.parent.index + 1, new Text( position.root.document, textToMove ) );\n\n\t// Return new position between two newly created text nodes.\n\treturn new Position( position.parent.parent, position.parent.index + 1 );\n}\n\n// Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\nfunction mergeTextNodes( t1, t2 ) {\n\t// Merge text data into first text node and remove second one.\n\tconst nodeBeforeLength = t1.data.length;\n\tt1._data += t2.data;\n\tt2._remove();\n\n\treturn new Position( t1, nodeBeforeLength );\n}\n\n// Checks if provided nodes are valid to insert.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not supported ones (see error description for valid ones.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/element~Element> nodes\n// @param {Object} errorContext\nfunction validateNodesToInsert( nodes, errorContext ) {\n\tfor ( const node of nodes ) {\n\t\tif ( !validNodesToInsert.some( ( validNode => node instanceof validNode ) ) ) { // eslint-disable-line no-use-before-define\n\t\t\t/**\n\t\t\t * One of the nodes to be inserted is of an invalid type.\n\t\t\t *\n\t\t\t * Nodes to be inserted with {@link module:engine/view/downcastwriter~DowncastWriter#insert `DowncastWriter#insert()`} should be\n\t\t\t * of the following types:\n\t\t\t *\n\t\t\t * * {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n\t\t\t * * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n\t\t\t * * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n\t\t\t * * {@link module:engine/view/uielement~UIElement UIElement},\n\t\t\t * * {@link module:engine/view/rawelement~RawElement RawElement},\n\t\t\t * * {@link module:engine/view/text~Text Text}.\n\t\t\t *\n\t\t\t * @error view-writer-insert-invalid-node-type\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-insert-invalid-node-type', errorContext );\n\t\t}\n\n\t\tif ( !node.is( '$text' ) ) {\n\t\t\tvalidateNodesToInsert( node.getChildren(), errorContext );\n\t\t}\n\t}\n}\n\nconst validNodesToInsert = [ Text, AttributeElement, ContainerElement, EmptyElement, RawElement, UIElement ];\n\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\nfunction isContainerOrFragment( node ) {\n\treturn node && ( node.is( 'containerElement' ) || node.is( 'documentFragment' ) );\n}\n\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n// @param {Object} errorContext\nfunction validateRangeContainer( range, errorContext ) {\n\tconst startContainer = getParentContainer( range.start );\n\tconst endContainer = getParentContainer( range.end );\n\n\tif ( !startContainer || !endContainer || startContainer !== endContainer ) {\n\t\t/**\n\t\t * The container of the given range is invalid.\n\t\t *\n\t\t * This may happen if {@link module:engine/view/range~Range#start range start} and\n\t\t * {@link module:engine/view/range~Range#end range end} positions are not placed inside the same container element or\n\t\t * a parent container for these positions cannot be found.\n\t\t *\n\t\t * Methods like {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#remove()`},\n\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#clean()`},\n\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#wrap()`},\n\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#unwrap()`} need to be called\n\t\t * on a range that has its start and end positions located in the same container element. Both positions can be\n\t\t * nested within other elements (e.g. an attribute element) but the closest container ancestor must be the same.\n\t\t *\n\t\t * @error view-writer-invalid-range-container\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-invalid-range-container', errorContext );\n\t}\n}\n\n// Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\nfunction canBeJoined( a, b ) {\n\treturn a.id === null && b.id === null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt( parentElement, index, nodeToInsert ) {\n\tparentElement.insertBefore( nodeToInsert, parentElement.childNodes[ index ] || null );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove( node ) {\n\tconst parent = node.parentNode;\n\n\tif ( parent ) {\n\t\tparent.removeChild( node );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module engine/view/renderer\n */\n\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller } from './filler';\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\nexport default class Renderer {\n\t/**\n\t * Creates a renderer instance.\n\t *\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n\t * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n\t */\n\tconstructor( domConverter, selection ) {\n\t\t/**\n\t\t * Set of DOM Documents instances.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<Document>}\n\t\t */\n\t\tthis.domDocuments = new Set();\n\n\t\t/**\n\t\t * Converter instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = domConverter;\n\n\t\t/**\n\t\t * Set of nodes which attributes changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedAttributes = new Set();\n\n\t\t/**\n\t\t * Set of elements which child lists changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedChildren = new Set();\n\n\t\t/**\n\t\t * Set of text nodes which text data changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedTexts = new Set();\n\n\t\t/**\n\t\t * View selection. Renderer updates DOM selection based on the view selection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = selection;\n\n\t\t/**\n\t\t * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n\t\t * this is set to `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isFocused = false;\n\n\t\t/**\n\t\t * The text node in which the inline filler was rendered.\n\t\t *\n\t\t * @private\n\t\t * @member {Text}\n\t\t */\n\t\tthis._inlineFiller = null;\n\n\t\t/**\n\t\t * DOM element containing fake selection.\n\t\t *\n\t\t * @private\n\t\t * @type {null|HTMLElement}\n\t\t */\n\t\tthis._fakeSelectionContainer = null;\n\t}\n\n\t/**\n\t * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n\t *\n\t * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n\t *\n\t * @see #markedAttributes\n\t * @see #markedChildren\n\t * @see #markedTexts\n\t *\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Node to be marked.\n\t */\n\tmarkToSync( type, node ) {\n\t\tif ( type === 'text' ) {\n\t\t\tif ( this.domConverter.mapViewToDom( node.parent ) ) {\n\t\t\t\tthis.markedTexts.add( node );\n\t\t\t}\n\t\t} else {\n\t\t\t// If the node has no DOM element it is not rendered yet,\n\t\t\t// its children/attributes do not need to be marked to be sync.\n\t\t\tif ( !this.domConverter.mapViewToDom( node ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( type === 'attributes' ) {\n\t\t\t\tthis.markedAttributes.add( node );\n\t\t\t} else if ( type === 'children' ) {\n\t\t\t\tthis.markedChildren.add( node );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Unknown type passed to Renderer.markToSync.\n\t\t\t\t *\n\t\t\t\t * @error view-renderer-unknown-type\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-renderer-unknown-type', this );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n\t * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n\t *\n\t * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n\t * so it does as little as it is needed to update the DOM.\n\t *\n\t * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n\t * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n\t * removed as long as the selection is in the text node which needed it at first.\n\t */\n\trender() {\n\t\tlet inlineFillerPosition;\n\n\t\t// Refresh mappings.\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildrenMappings( element );\n\t\t}\n\n\t\t// There was inline filler rendered in the DOM but it's not\n\t\t// at the selection position any more, so we can remove it\n\t\t// (cause even if it's needed, it must be placed in another location).\n\t\tif ( this._inlineFiller && !this._isSelectionInInlineFiller() ) {\n\t\t\tthis._removeInlineFiller();\n\t\t}\n\n\t\t// If we've got the filler, let's try to guess its position in the view.\n\t\tif ( this._inlineFiller ) {\n\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\n\t\t}\n\t\t// Otherwise, if it's needed, create it at the selection position.\n\t\telse if ( this._needsInlineFillerAtSelection() ) {\n\t\t\tinlineFillerPosition = this.selection.getFirstPosition();\n\n\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\n\t\t\tthis.markedChildren.add( inlineFillerPosition.parent );\n\t\t}\n\n\t\tfor ( const element of this.markedAttributes ) {\n\t\t\tthis._updateAttrs( element );\n\t\t}\n\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildren( element, { inlineFillerPosition } );\n\t\t}\n\n\t\tfor ( const node of this.markedTexts ) {\n\t\t\tif ( !this.markedChildren.has( node.parent ) && this.domConverter.mapViewToDom( node.parent ) ) {\n\t\t\t\tthis._updateText( node, { inlineFillerPosition } );\n\t\t\t}\n\t\t}\n\n\t\t// Check whether the inline filler is required and where it really is in the DOM.\n\t\t// At this point in most cases it will be in the DOM, but there are exceptions.\n\t\t// For example, if the inline filler was deep in the created DOM structure, it will not be created.\n\t\t// Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n\t\t// it will not be present.\n\t\t// Fix those and similar scenarios.\n\t\tif ( inlineFillerPosition ) {\n\t\t\tconst fillerDomPosition = this.domConverter.viewPositionToDom( inlineFillerPosition );\n\t\t\tconst domDocument = fillerDomPosition.parent.ownerDocument;\n\n\t\t\tif ( !startsWithFiller( fillerDomPosition.parent ) ) {\n\t\t\t\t// Filler has not been created at filler position. Create it now.\n\t\t\t\tthis._inlineFiller = addInlineFiller( domDocument, fillerDomPosition.parent, fillerDomPosition.offset );\n\t\t\t} else {\n\t\t\t\t// Filler has been found, save it.\n\t\t\t\tthis._inlineFiller = fillerDomPosition.parent;\n\t\t\t}\n\t\t} else {\n\t\t\t// There is no filler needed.\n\t\t\tthis._inlineFiller = null;\n\t\t}\n\n\t\tthis._updateSelection();\n\t\tthis._updateFocus();\n\n\t\tthis.markedTexts.clear();\n\t\tthis.markedAttributes.clear();\n\t\tthis.markedChildren.clear();\n\t}\n\n\t/**\n\t * Updates mappings of view element's children.\n\t *\n\t * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n\t * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n\t * Thanks to that these elements do not need to be re-rendered completely.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\n\t */\n\t_updateChildrenMappings( viewElement ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n\t\t\treturn;\n\t\t}\n\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { withChildren: false } )\n\t\t);\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\t\tconst actions = this._findReplaceActions( diff, actualDomChildren, expectedDomChildren );\n\n\t\tif ( actions.indexOf( 'replace' ) !== -1 ) {\n\t\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'replace' ) {\n\t\t\t\t\tconst insertIndex = counter.equal + counter.insert;\n\t\t\t\t\tconst deleteIndex = counter.equal + counter.delete;\n\t\t\t\t\tconst viewChild = viewElement.getChild( insertIndex );\n\n\t\t\t\t\t// UIElement and RawElement are special cases. Their children are not stored in a view (#799)\n\t\t\t\t\t// so we cannot use them with replacing flow (since they use view children during rendering\n\t\t\t\t\t// which will always result in rendering empty elements).\n\t\t\t\t\tif ( viewChild && !( viewChild.is( 'uiElement' ) || viewChild.is( 'rawElement' ) ) ) {\n\t\t\t\t\t\tthis._updateElementMappings( viewChild, actualDomChildren[ deleteIndex ] );\n\t\t\t\t\t}\n\n\t\t\t\t\tremove( expectedDomChildren[ insertIndex ] );\n\t\t\t\t\tcounter.equal++;\n\t\t\t\t} else {\n\t\t\t\t\tcounter[ action ]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates mappings of a given view element.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\n\t * @param {Node} domElement The DOM element representing the given view element.\n\t */\n\t_updateElementMappings( viewElement, domElement ) {\n\t\t// Remap 'DomConverter' bindings.\n\t\tthis.domConverter.unbindDomElement( domElement );\n\t\tthis.domConverter.bindElements( domElement, viewElement );\n\n\t\t// View element may have children which needs to be updated, but are not marked, mark them to update.\n\t\tthis.markedChildren.add( viewElement );\n\n\t\t// Because we replace new view element mapping with the existing one, the corresponding DOM element\n\t\t// will not be rerendered. The new view element may have different attributes than the previous one.\n\t\t// Since its corresponding DOM element will not be rerendered, new attributes will not be added\n\t\t// to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n\t\t// detailed case study.\n\t\t// Also there are cases where replaced element is removed from the view structure and then has\n\t\t// its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n\t\t// and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n\t\t// To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\t\tthis.markedAttributes.add( viewElement );\n\t}\n\n\t/**\n\t * Gets the position of the inline filler based on the current selection.\n\t * Here, we assume that we know that the filler is needed and\n\t * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n\t * it is somewhere at the selection position.\n\t *\n\t * Note: The filler position cannot be restored based on the filler's DOM text node, because\n\t * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n\t * bindings are only dependable after rendering.\n\t *\n\t * @private\n\t * @returns {module:engine/view/position~Position}\n\t */\n\t_getInlineFillerPosition() {\n\t\tconst firstPos = this.selection.getFirstPosition();\n\n\t\tif ( firstPos.parent.is( '$text' ) ) {\n\t\t\treturn ViewPosition._createBefore( this.selection.getFirstPosition().parent );\n\t\t} else {\n\t\t\treturn firstPos;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the selection has not left the inline filler's text node.\n\t * If it is `true`, it means that the filler had been added for a reason and the selection did not\n\t * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n\t */\n\t_isSelectionInInlineFiller() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Note, we can't check if selection's position equals position of the\n\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\n\t\t// the filler's position in the view at this stage.\n\t\t// Instead, we check it the other way – whether selection is anchored in\n\t\t// that text node or next to it.\n\n\t\t// Possible options are:\n\t\t// \"FILLER{}\"\n\t\t// \"FILLERadded-text{}\"\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst position = this.domConverter.viewPositionToDom( selectionPosition );\n\n\t\tif ( position && isText( position.parent ) && startsWithFiller( position.parent ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes the inline filler.\n\t *\n\t * @private\n\t */\n\t_removeInlineFiller() {\n\t\tconst domFillerNode = this._inlineFiller;\n\n\t\t// Something weird happened and the stored node doesn't contain the filler's text.\n\t\tif ( !startsWithFiller( domFillerNode ) ) {\n\t\t\t/**\n\t\t\t * The inline filler node was lost. Most likely, something overwrote the filler text node\n\t\t\t * in the DOM.\n\t\t\t *\n\t\t\t * @error view-renderer-filler-was-lost\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-renderer-filler-was-lost', this );\n\t\t}\n\n\t\tif ( isInlineFiller( domFillerNode ) ) {\n\t\t\tdomFillerNode.parentNode.removeChild( domFillerNode );\n\t\t} else {\n\t\t\tdomFillerNode.data = domFillerNode.data.substr( INLINE_FILLER_LENGTH );\n\t\t}\n\n\t\tthis._inlineFiller = null;\n\t}\n\n\t/**\n\t * Checks if the inline {@link module:engine/view/filler filler} should be added.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler should be added.\n\t */\n\t_needsInlineFillerAtSelection() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst selectionParent = selectionPosition.parent;\n\t\tconst selectionOffset = selectionPosition.offset;\n\n\t\t// If there is no DOM root we do not care about fillers.\n\t\tif ( !this.domConverter.mapViewToDom( selectionParent.root ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !( selectionParent.is( 'element' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Prevent adding inline filler inside elements with contenteditable=false.\n\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\t\tif ( !isEditable( selectionParent ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have block filler, we do not need inline one.\n\t\tif ( selectionOffset === selectionParent.getFillerOffset() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodeBefore = selectionPosition.nodeBefore;\n\t\tconst nodeAfter = selectionPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText || nodeAfter instanceof ViewText ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if text needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} viewText View text to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\t_updateText( viewText, options ) {\n\t\tconst domText = this.domConverter.findCorrespondingDomText( viewText );\n\t\tconst newDomText = this.domConverter.viewToDom( viewText, domText.ownerDocument );\n\n\t\tconst actualText = domText.data;\n\t\tlet expectedText = newDomText.data;\n\n\t\tconst filler = options.inlineFillerPosition;\n\n\t\tif ( filler && filler.parent == viewText.parent && filler.offset == viewText.index ) {\n\t\t\texpectedText = INLINE_FILLER + expectedText;\n\t\t}\n\n\t\tif ( actualText != expectedText ) {\n\t\t\tconst actions = fastDiff( actualText, expectedText );\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action.type === 'insert' ) {\n\t\t\t\t\tdomText.insertData( action.index, action.values.join( '' ) );\n\t\t\t\t} else { // 'delete'\n\t\t\t\t\tdomText.deleteData( action.index, action.howMany );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if attribute list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement The view element to update.\n\t */\n\t_updateAttrs( viewElement ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n\t\t\t// in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n\t\t\t// replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n\t\t\t// in 'this._updateChildrenMappings()' so it will be processed separately.\n\t\t\treturn;\n\t\t}\n\n\t\tconst domAttrKeys = Array.from( domElement.attributes ).map( attr => attr.name );\n\t\tconst viewAttrKeys = viewElement.getAttributeKeys();\n\n\t\t// Add or overwrite attributes.\n\t\tfor ( const key of viewAttrKeys ) {\n\t\t\tdomElement.setAttribute( key, viewElement.getAttribute( key ) );\n\t\t}\n\n\t\t// Remove from DOM attributes which do not exists in the view.\n\t\tfor ( const key of domAttrKeys ) {\n\t\t\tif ( !viewElement.hasAttribute( key ) ) {\n\t\t\t\tdomElement.removeAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if elements child list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\t_updateChildren( viewElement, options ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\n\t\t\t// There is no need to process it. It will be processed when re-inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tconst inlineFillerPosition = options.inlineFillerPosition;\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { bind: true, inlineFillerPosition } )\n\t\t);\n\n\t\t// Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n\t\t// during diffing so text nodes could be compared correctly and also during rendering to maintain\n\t\t// proper order and indexes while updating the DOM.\n\t\tif ( inlineFillerPosition && inlineFillerPosition.parent === viewElement ) {\n\t\t\taddInlineFiller( domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset );\n\t\t}\n\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\n\t\tlet i = 0;\n\t\tconst nodesToUnbind = new Set();\n\n\t\t// Handle deletions first.\n\t\t// This is to prevent a situation where an element that already exists in `actualDomChildren` is inserted at a different\n\t\t// index in `actualDomChildren`. Since `actualDomChildren` is a `NodeList`, this works like move, not like an insert,\n\t\t// and it disrupts the whole algorithm. See https://github.com/ckeditor/ckeditor5/issues/6367.\n\t\t//\n\t\t// It doesn't matter in what order we remove or add nodes, as long as we remove and add correct nodes at correct indexes.\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'delete' ) {\n\t\t\t\tnodesToUnbind.add( actualDomChildren[ i ] );\n\t\t\t\tremove( actualDomChildren[ i ] );\n\t\t\t} else if ( action === 'equal' ) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\ti = 0;\n\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\tinsertAt( domElement, i, expectedDomChildren[ i ] );\n\t\t\t\ti++;\n\t\t\t} else if ( action === 'equal' ) {\n\t\t\t\t// Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n\t\t\t\t// Do it here (not in the loop above) because only after insertions the `i` index is correct.\n\t\t\t\tthis._markDescendantTextToSync( this.domConverter.domToView( expectedDomChildren[ i ] ) );\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\t// Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n\t\t// comparison with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n\t\t// it was moved to DOM tree out of the removed node.\n\t\tfor ( const node of nodesToUnbind ) {\n\t\t\tif ( !node.parentNode ) {\n\t\t\t\tthis.domConverter.unbindDomElement( node );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shorthand for diffing two arrays or node lists of DOM nodes.\n\t *\n\t * @private\n\t * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\n\t * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\n\t * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n\t */\n\t_diffNodeLists( actualDomChildren, expectedDomChildren ) {\n\t\tactualDomChildren = filterOutFakeSelectionContainer( actualDomChildren, this._fakeSelectionContainer );\n\n\t\treturn diff( actualDomChildren, expectedDomChildren, sameNodes.bind( null, this.domConverter ) );\n\t}\n\n\t/**\n\t * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n\t * within one `insert`/`delete` action group, for example:\n\t *\n\t * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n\t * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n\t * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n\t * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n\t *\n\t * @private\n\t * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n\t * @param {Array.<Node>|NodeList} actualDom Actual DOM children\n\t * @param {Array.<Node>} expectedDom Expected DOM children.\n\t * @returns {Array.<String>} Actions array modified with the `replace` actions.\n\t */\n\t_findReplaceActions( actions, actualDom, expectedDom ) {\n\t\t// If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n\t\tif ( actions.indexOf( 'insert' ) === -1 || actions.indexOf( 'delete' ) === -1 ) {\n\t\t\treturn actions;\n\t\t}\n\n\t\tlet newActions = [];\n\t\tlet actualSlice = [];\n\t\tlet expectedSlice = [];\n\n\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\tfor ( const action of actions ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\texpectedSlice.push( expectedDom[ counter.equal + counter.insert ] );\n\t\t\t} else if ( action === 'delete' ) {\n\t\t\t\tactualSlice.push( actualDom[ counter.equal + counter.delete ] );\n\t\t\t} else { // equal\n\t\t\t\tnewActions = newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t\t\t\tnewActions.push( 'equal' );\n\t\t\t\t// Reset stored elements on 'equal'.\n\t\t\t\tactualSlice = [];\n\t\t\t\texpectedSlice = [];\n\t\t\t}\n\t\t\tcounter[ action ]++;\n\t\t}\n\n\t\treturn newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t}\n\n\t/**\n\t * Marks text nodes to be synchronized.\n\t *\n\t * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewNode View node to sync.\n\t */\n\t_markDescendantTextToSync( viewNode ) {\n\t\tif ( !viewNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( viewNode.is( '$text' ) ) {\n\t\t\tthis.markedTexts.add( viewNode );\n\t\t} else if ( viewNode.is( 'element' ) ) {\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tthis._markDescendantTextToSync( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the selection needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateSelection() {\n\t\t// If there is no selection - remove DOM and fake selections.\n\t\tif ( this.selection.rangeCount === 0 ) {\n\t\t\tthis._removeDomSelection();\n\t\t\tthis._removeFakeSelection();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst domRoot = this.domConverter.mapViewToDom( this.selection.editableElement );\n\n\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\t\tif ( !this.isFocused || !domRoot ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Render selection.\n\t\tif ( this.selection.isFake ) {\n\t\t\tthis._updateFakeSelection( domRoot );\n\t\t} else {\n\t\t\tthis._removeFakeSelection();\n\t\t\tthis._updateDomSelection( domRoot );\n\t\t}\n\t}\n\n\t/**\n\t * Updates the fake selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n\t */\n\t_updateFakeSelection( domRoot ) {\n\t\tconst domDocument = domRoot.ownerDocument;\n\n\t\tif ( !this._fakeSelectionContainer ) {\n\t\t\tthis._fakeSelectionContainer = createFakeSelectionContainer( domDocument );\n\t\t}\n\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\t// Bind fake selection container with the current selection *position*.\n\t\tthis.domConverter.bindFakeSelection( container, this.selection );\n\n\t\tif ( !this._fakeSelectionNeedsUpdate( domRoot ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !container.parentElement || container.parentElement != domRoot ) {\n\t\t\tdomRoot.appendChild( container );\n\t\t}\n\n\t\tcontainer.textContent = this.selection.fakeSelectionLabel || '\\u00A0';\n\n\t\tconst domSelection = domDocument.getSelection();\n\t\tconst domRange = domDocument.createRange();\n\n\t\tdomSelection.removeAllRanges();\n\t\tdomRange.selectNodeContents( container );\n\t\tdomSelection.addRange( domRange );\n\t}\n\n\t/**\n\t * Updates the DOM selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n\t */\n\t_updateDomSelection( domRoot ) {\n\t\tconst domSelection = domRoot.ownerDocument.defaultView.getSelection();\n\n\t\t// Let's check whether DOM selection needs updating at all.\n\t\tif ( !this._domSelectionNeedsUpdate( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n\t\t// and focus of view selection.\n\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\t\tconst anchor = this.domConverter.viewPositionToDom( this.selection.anchor );\n\t\tconst focus = this.domConverter.viewPositionToDom( this.selection.focus );\n\n\t\t// Focus the new editing host.\n\t\t// Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\t\tdomRoot.focus();\n\n\t\tdomSelection.collapse( anchor.parent, anchor.offset );\n\t\tdomSelection.extend( focus.parent, focus.offset );\n\n\t\t// Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\t\tif ( env.isGecko ) {\n\t\t\tfixGeckoSelectionAfterBr( focus, domSelection );\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether a given DOM selection needs to be updated.\n\t *\n\t * @private\n\t * @param {Selection} domSelection The DOM selection to check.\n\t * @returns {Boolean}\n\t */\n\t_domSelectionNeedsUpdate( domSelection ) {\n\t\tif ( !this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\t// Current DOM selection is in incorrect position. We need to update it.\n\t\t\treturn true;\n\t\t}\n\n\t\tconst oldViewSelection = domSelection && this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( oldViewSelection && this.selection.isEqual( oldViewSelection ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If selection is not collapsed, it does not need to be updated if it is similar.\n\t\tif ( !this.selection.isCollapsed && this.selection.isSimilar( oldViewSelection ) ) {\n\t\t\t// Selection did not changed and is correct, do not update.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Selections are not similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether the fake selection needs to be updated.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where a new fake selection container should be added.\n\t * @returns {Boolean}\n\t */\n\t_fakeSelectionNeedsUpdate( domRoot ) {\n\t\tconst container = this._fakeSelectionContainer;\n\t\tconst domSelection = domRoot.ownerDocument.getSelection();\n\n\t\t// Fake selection needs to be updated if there's no fake selection container, or the container currently sits\n\t\t// in a different root.\n\t\tif ( !container || container.parentElement !== domRoot ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Make sure that the selection actually is within the fake selection.\n\t\tif ( domSelection.anchorNode !== container && !container.contains( domSelection.anchorNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn container.textContent !== this.selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Removes the DOM selection.\n\t *\n\t * @private\n\t */\n\t_removeDomSelection() {\n\t\tfor ( const doc of this.domDocuments ) {\n\t\t\tconst domSelection = doc.getSelection();\n\n\t\t\tif ( domSelection.rangeCount ) {\n\t\t\t\tconst activeDomElement = doc.activeElement;\n\t\t\t\tconst viewElement = this.domConverter.mapDomToView( activeDomElement );\n\n\t\t\t\tif ( activeDomElement && viewElement ) {\n\t\t\t\t\tdoc.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the fake selection.\n\t *\n\t * @private\n\t */\n\t_removeFakeSelection() {\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\tif ( container ) {\n\t\t\tcontainer.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if focus needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateFocus() {\n\t\tif ( this.isFocused ) {\n\t\t\tconst editable = this.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t}\n\t\t}\n\t}\n}\n\nmix( Renderer, ObservableMixin );\n\n// Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\nfunction isEditable( element ) {\n\tif ( element.getAttribute( 'contenteditable' ) == 'false' ) {\n\t\treturn false;\n\t}\n\n\tconst parent = element.findAncestor( element => element.hasAttribute( 'contenteditable' ) );\n\n\treturn !parent || parent.getAttribute( 'contenteditable' ) == 'true';\n}\n\n// Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<Node>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\nfunction addInlineFiller( domDocument, domParentOrArray, offset ) {\n\tconst childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n\tconst nodeAfterFiller = childNodes[ offset ];\n\n\tif ( isText( nodeAfterFiller ) ) {\n\t\tnodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n\n\t\treturn nodeAfterFiller;\n\t} else {\n\t\tconst fillerNode = domDocument.createTextNode( INLINE_FILLER );\n\n\t\tif ( Array.isArray( domParentOrArray ) ) {\n\t\t\tchildNodes.splice( offset, 0, fillerNode );\n\t\t} else {\n\t\t\tinsertAt( domParentOrArray, offset, fillerNode );\n\t\t}\n\n\t\treturn fillerNode;\n\t}\n}\n\n// Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\nfunction areSimilar( node1, node2 ) {\n\treturn isNode( node1 ) && isNode( node2 ) &&\n\t\t!isText( node1 ) && !isText( node2 ) &&\n\t\tnode1.nodeType !== Node.COMMENT_NODE && node2.nodeType !== Node.COMMENT_NODE &&\n\t\tnode1.tagName.toLowerCase() === node2.tagName.toLowerCase();\n}\n\n// Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {String} blockFillerMode Block filler mode, see {@link module:engine/view/domconverter~DomConverter#blockFillerMode}.\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\nfunction sameNodes( domConverter, actualDomChild, expectedDomChild ) {\n\t// Elements.\n\tif ( actualDomChild === expectedDomChild ) {\n\t\treturn true;\n\t}\n\t// Texts.\n\telse if ( isText( actualDomChild ) && isText( expectedDomChild ) ) {\n\t\treturn actualDomChild.data === expectedDomChild.data;\n\t}\n\t// Block fillers.\n\telse if ( domConverter.isBlockFiller( actualDomChild ) &&\n\t\tdomConverter.isBlockFiller( expectedDomChild ) ) {\n\t\treturn true;\n\t}\n\n\t// Not matching types.\n\treturn false;\n}\n\n// The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\nfunction fixGeckoSelectionAfterBr( focus, domSelection ) {\n\tconst parent = focus.parent;\n\n\t// This fix works only when the focus point is at the very end of an element.\n\t// There is no point in running it in cases unrelated to the browser bug.\n\tif ( parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1 ) {\n\t\treturn;\n\t}\n\n\tconst childAtOffset = parent.childNodes[ focus.offset ];\n\n\t// To stay on the safe side, the fix being as specific as possible, it targets only the\n\t// selection which is at the very end of the element and preceded by <br />.\n\tif ( childAtOffset && childAtOffset.tagName == 'BR' ) {\n\t\tdomSelection.addRange( domSelection.getRangeAt( 0 ) );\n\t}\n}\n\nfunction filterOutFakeSelectionContainer( domChildList, fakeSelectionContainer ) {\n\tconst childList = Array.from( domChildList );\n\n\tif ( childList.length == 0 || !fakeSelectionContainer ) {\n\t\treturn childList;\n\t}\n\n\tconst last = childList[ childList.length - 1 ];\n\n\tif ( last == fakeSelectionContainer ) {\n\t\tchildList.pop();\n\t}\n\n\treturn childList;\n}\n\n// Creates a fake selection container for a given document.\n//\n// @private\n// @param {Document} domDocument\n// @returns {HTMLElement}\nfunction createFakeSelectionContainer( domDocument ) {\n\tconst container = domDocument.createElement( 'div' );\n\n\tObject.assign( container.style, {\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tleft: '-9999px',\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/752.\n\t\twidth: '42px'\n\t} );\n\n\t// Fill it with a text node so we can update it later.\n\tcontainer.textContent = '\\u00A0';\n\n\treturn container;\n}\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\nimport { isEqualWith } from 'lodash-es';\n\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class MutationObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Native mutation observer config.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {\n\t\t\tchildList: true,\n\t\t\tcharacterData: true,\n\t\t\tcharacterDataOldValue: true,\n\t\t\tsubtree: true\n\t\t};\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#_renderer}.\n\t\t *\n\t\t * @member {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis.renderer = view._renderer;\n\n\t\t/**\n\t\t * Observed DOM elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<HTMLElement>}\n\t\t */\n\t\tthis._domElements = [];\n\n\t\t/**\n\t\t * Native mutation observer.\n\t\t *\n\t\t * @private\n\t\t * @member {MutationObserver}\n\t\t */\n\t\tthis._mutationObserver = new window.MutationObserver( this._onMutations.bind( this ) );\n\t}\n\n\t/**\n\t * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n\t * At the same time empties the queue so mutations will not be fired twice.\n\t */\n\tflush() {\n\t\tthis._onMutations( this._mutationObserver.takeRecords() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tthis._domElements.push( domElement );\n\n\t\tif ( this.isEnabled ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tenable() {\n\t\tsuper.enable();\n\n\t\tfor ( const domElement of this._domElements ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisable() {\n\t\tsuper.disable();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n\t *\n\t * @private\n\t * @param {Array.<Object>} domMutations Array of native mutations.\n\t */\n\t_onMutations( domMutations ) {\n\t\t// As a result of this.flush() we can have an empty collection.\n\t\tif ( domMutations.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.domConverter;\n\n\t\t// Use map and set for deduplication.\n\t\tconst mutatedTexts = new Map();\n\t\tconst mutatedElements = new Set();\n\n\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n\t\t// element with changed structure anyway.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tif ( mutation.type === 'childList' ) {\n\t\t\t\tconst element = domConverter.mapDomToView( mutation.target );\n\n\t\t\t\t// Do not collect mutations from UIElements and RawElements.\n\t\t\t\tif ( element && ( element.is( 'uiElement' ) || element.is( 'rawElement' ) ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( element && !this._isBogusBrMutation( mutation ) ) {\n\t\t\t\t\tmutatedElements.add( element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tconst element = domConverter.mapDomToView( mutation.target );\n\n\t\t\t// Do not collect mutations from UIElements and RawElements.\n\t\t\tif ( element && ( element.is( 'uiElement' ) || element.is( 'rawElement' ) ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( mutation.type === 'characterData' ) {\n\t\t\t\tconst text = domConverter.findCorrespondingViewText( mutation.target );\n\n\t\t\t\tif ( text && !mutatedElements.has( text.parent ) ) {\n\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\n\t\t\t\t\t// we will have only one in the map.\n\t\t\t\t\tmutatedTexts.set( text, {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\toldText: text.data,\n\t\t\t\t\t\tnewText: getDataWithoutFiller( mutation.target ),\n\t\t\t\t\t\tnode: text\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\n\t\t\t\t// need to fire 'children' mutation instead of 'text'.\n\t\t\t\telse if ( !text && startsWithFiller( mutation.target ) ) {\n\t\t\t\t\tmutatedElements.add( domConverter.mapDomToView( mutation.target.parentNode ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n\t\t// same node multiple times in case of duplication.\n\n\t\t// List of mutations we will fire.\n\t\tconst viewMutations = [];\n\n\t\tfor ( const mutatedText of mutatedTexts.values() ) {\n\t\t\tthis.renderer.markToSync( 'text', mutatedText.node );\n\t\t\tviewMutations.push( mutatedText );\n\t\t}\n\n\t\tfor ( const viewElement of mutatedElements ) {\n\t\t\tconst domElement = domConverter.mapViewToDom( viewElement );\n\t\t\tconst viewChildren = Array.from( viewElement.getChildren() );\n\t\t\tconst newViewChildren = Array.from( domConverter.domChildrenToView( domElement, { withChildren: false } ) );\n\n\t\t\t// It may happen that as a result of many changes (sth was inserted and then removed),\n\t\t\t// both elements haven't really changed. #1031\n\t\t\tif ( !isEqualWith( viewChildren, newViewChildren, sameNodes ) ) {\n\t\t\t\tthis.renderer.markToSync( 'children', viewElement );\n\n\t\t\t\tviewMutations.push( {\n\t\t\t\t\ttype: 'children',\n\t\t\t\t\toldChildren: viewChildren,\n\t\t\t\t\tnewChildren: newViewChildren,\n\t\t\t\t\tnode: viewElement\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\n\t\tconst domSelection = domMutations[ 0 ].target.ownerDocument.getSelection();\n\n\t\tlet viewSelection = null;\n\n\t\tif ( domSelection && domSelection.anchorNode ) {\n\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n\t\t\t// be used by features handling mutations.\n\t\t\t// Only one range is supported.\n\n\t\t\tconst viewSelectionAnchor = domConverter.domPositionToView( domSelection.anchorNode, domSelection.anchorOffset );\n\t\t\tconst viewSelectionFocus = domConverter.domPositionToView( domSelection.focusNode, domSelection.focusOffset );\n\n\t\t\t// Anchor and focus has to be properly mapped to view.\n\t\t\tif ( viewSelectionAnchor && viewSelectionFocus ) {\n\t\t\t\tviewSelection = new ViewSelection( viewSelectionAnchor );\n\t\t\t\tviewSelection.setFocus( viewSelectionFocus );\n\t\t\t}\n\t\t}\n\n\t\t// In case only non-relevant mutations were recorded it skips the event and force render (#5600).\n\t\tif ( viewMutations.length ) {\n\t\t\tthis.document.fire( 'mutations', viewMutations, viewSelection );\n\n\t\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n\t\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\t\t\tthis.view.forceRender();\n\t\t}\n\n\t\tfunction sameNodes( child1, child2 ) {\n\t\t\t// First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n\t\t\tif ( Array.isArray( child1 ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Elements.\n\t\t\tif ( child1 === child2 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Texts.\n\t\t\telse if ( child1.is( '$text' ) && child2.is( '$text' ) ) {\n\t\t\t\treturn child1.data === child2.data;\n\t\t\t}\n\n\t\t\t// Not matching types.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n\t * Such mutations are generated while pressing space or performing native spellchecker correction\n\t * on the end of the block element in Firefox browser.\n\t *\n\t * @private\n\t * @param {Object} mutation Native mutation object.\n\t * @returns {Boolean}\n\t */\n\t_isBogusBrMutation( mutation ) {\n\t\tlet addedNode = null;\n\n\t\t// Check if mutation added only one node on the end of its parent.\n\t\tif ( mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1 ) {\n\t\t\taddedNode = this.domConverter.domToView( mutation.addedNodes[ 0 ], {\n\t\t\t\twithChildren: false\n\t\t\t} );\n\t\t}\n\n\t\treturn addedNode && addedNode.is( 'element', 'br' );\n\t}\n}\n\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Observer for events connected with pressing keyboard keys.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class KeyObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'keydown', 'keyup' ];\n\t}\n\n\tonDomEvent( domEvt ) {\n\t\tthis.fire( domEvt.type, domEvt, {\n\t\t\tkeyCode: domEvt.keyCode,\n\n\t\t\taltKey: domEvt.altKey,\n\t\t\tctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n\t\t\tshiftKey: domEvt.shiftKey,\n\n\t\t\tget keystroke() {\n\t\t\t\treturn getCode( this );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes, isArrowKeyCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class FakeSelectionObserver extends Observer {\n\t/**\n\t * Creates new FakeSelectionObserver instance.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'keydown', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && isArrowKeyCode( data.keyCode ) && this.isEnabled ) {\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n\t *\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t *\n\t * @private\n\t * @param {Number} keyCode\n\t * @fires module:engine/view/document~Document#event:selectionChange\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\n\t */\n\t_handleSelectionMove( keyCode ) {\n\t\tconst selection = this.document.selection;\n\t\tconst newSelection = new ViewSelection( selection.getRanges(), { backward: selection.isBackward, fake: false } );\n\n\t\t// Left or up arrow pressed - move selection to start.\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\n\t\t\tnewSelection.setTo( newSelection.getFirstPosition() );\n\t\t}\n\n\t\t// Right or down arrow pressed - move selection to end.\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\n\t\t\tnewSelection.setTo( newSelection.getLastPosition() );\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: selection,\n\t\t\tnewSelection,\n\t\t\tdomSelection: null\n\t\t};\n\n\t\t// Fire dummy selection change event.\n\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport { debounce } from 'lodash-es';\n\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class SelectionObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Instance of the mutation observer. Selection observer calls\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n\t\t */\n\t\tthis.mutationObserver = view.getObserver( MutationObserver );\n\n\t\t/**\n\t\t * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n\t\t * new selection with it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n\t\t */\n\t\tthis.selection = this.document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n\t\t */\n\t\t/* eslint-enable max-len */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n\t\t * document.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n\t\t */\n\t\tthis._documents = new WeakSet();\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\n\n\t\t/**\n\t\t * Private property to check if the code does not enter infinite loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n\t\t */\n\t\tthis._loopbackCounter = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\t// Add listener once per each document.\n\t\tif ( this._documents.has( domDocument ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.listenTo( domDocument, 'selectionchange', ( evt, domEvent ) => {\n\t\t\tthis._handleSelectionChange( domEvent, domDocument );\n\t\t} );\n\n\t\tthis._documents.add( domDocument );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tclearInterval( this._clearInfiniteLoopInterval );\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n\t * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n\t *\n\t * @private\n\t * @param {Event} domEvent DOM event.\n\t * @param {Document} domDocument DOM document.\n\t */\n\t_handleSelectionChange( domEvent, domDocument ) {\n\t\tif ( !this.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domSelection = domDocument.defaultView.getSelection();\n\n\t\tif ( this.checkShouldIgnoreEventFromTarget( domSelection.anchorNode ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\tthis.mutationObserver.flush();\n\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\n\t\t// will be updated, so selections will equal and event will not be fired, as expected.\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection );\n\n\t\t// Do not convert selection change if the new view selection has no ranges in it.\n\t\t//\n\t\t// It means that the DOM selection is in some way incorrect. Ranges that were in the DOM selection could not be\n\t\t// converted to the view. This happens when the DOM selection was moved outside of the editable element.\n\t\tif ( newViewSelection.rangeCount == 0 ) {\n\t\t\tthis.view.hasDomSelection = false;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.view.hasDomSelection = true;\n\n\t\tif ( this.selection.isEqual( newViewSelection ) && this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we are not in the infinite loop (#400).\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\tif ( ++this._loopbackCounter > 60 ) {\n\t\t\t// Selection change observer detected an infinite rendering loop.\n\t\t\t// Most probably you try to put the selection in the position which is not allowed\n\t\t\t// by the browser and browser fixes it automatically what causes `selectionchange` event on\n\t\t\t// which a loopback through a model tries to re-render the wrong selection and again.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Selection change observer detected an infinite rendering loop.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.selection.isSimilar( newViewSelection ) ) {\n\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n\t\t\t// Just re-render it, no need to fire any events, etc.\n\t\t\tthis.view.forceRender();\n\t\t} else {\n\t\t\tconst data = {\n\t\t\t\toldSelection: this.selection,\n\t\t\t\tnewSelection: newViewSelection,\n\t\t\t\tdomSelection\n\t\t\t};\n\n\t\t\t// Prepare data for new selection and fire appropriate events.\n\t\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t\t}\n\t}\n\n\t/**\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n\t *\n\t * @protected\n\t */\n\t_clearInfiniteLoop() {\n\t\tthis._loopbackCounter = 0;\n\t}\n}\n\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class FocusObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'focus', 'blur' ];\n\t\tthis.useCapture = true;\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'focus', () => {\n\t\t\tdocument.isFocused = true;\n\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n\t\t\t// overwrite new DOM selection with selection from the view.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n\t\t\t// Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\t\t\tthis._renderTimeoutId = setTimeout( () => view.forceRender(), 50 );\n\t\t} );\n\n\t\tdocument.on( 'blur', ( evt, data ) => {\n\t\t\tconst selectedEditable = document.selection.editableElement;\n\n\t\t\tif ( selectedEditable === null || selectedEditable === data.target ) {\n\t\t\t\tdocument.isFocused = false;\n\n\t\t\t\t// Re-render the document to update view elements.\n\t\t\t\tview.forceRender();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Identifier of the timeout currently used by focus listener to delay rendering execution.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_renderTimeoutId\n\t\t */\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._renderTimeoutId ) {\n\t\t\tclearTimeout( this._renderTimeoutId );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class CompositionObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'compositionstart', 'compositionupdate', 'compositionend' ];\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'compositionstart', () => {\n\t\t\tdocument.isComposing = true;\n\t\t} );\n\n\t\tdocument.on( 'compositionend', () => {\n\t\t\tdocument.isComposing = false;\n\t\t} );\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/inputobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Observer for events connected with data input.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class InputObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'beforeinput' ];\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired before browser inputs (or deletes) some data.\n *\n * This event is available only on browsers which support DOM `beforeinput` event.\n *\n * Introduced by {@link module:engine/view/observer/inputobserver~InputObserver}.\n *\n * Note that because {@link module:engine/view/observer/inputobserver~InputObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/inputobserver~InputObserver\n * @event module:engine/view/document~Document#event:beforeinput\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/scroll\n */\n\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\n\nconst utils = {};\n\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\nexport function scrollViewportToShowTarget( { target, viewportOffset = 0 } ) {\n\tconst targetWindow = getWindow( target );\n\tlet currentWindow = targetWindow;\n\tlet currentFrame = null;\n\n\t// Iterate over all windows, starting from target's parent window up to window#top.\n\twhile ( currentWindow ) {\n\t\tlet firstAncestorToScroll;\n\n\t\t// Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n\t\t// settled down, the algorithm can eventually scroll the viewport of the current window.\n\t\t//\n\t\t// Note: If the current window is target's **original** window (e.g. the first one),\n\t\t// start scrolling the closest parent of the target. If not, scroll the closest parent\n\t\t// of an iframe that resides in the current window.\n\t\tif ( currentWindow == targetWindow ) {\n\t\t\tfirstAncestorToScroll = getParentElement( target );\n\t\t} else {\n\t\t\tfirstAncestorToScroll = getParentElement( currentFrame );\n\t\t}\n\n\t\t// Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\t\tscrollAncestorsToShowRect( firstAncestorToScroll, () => {\n\t\t\t// Note: If the target does not belong to the current window **directly**,\n\t\t\t// i.e. it resides in an iframe belonging to the window, obtain the target's rect\n\t\t\t// in the coordinates of the current window. By default, a Rect returns geometry\n\t\t\t// relative to the current window's viewport. To make it work in a parent window,\n\t\t\t// it must be shifted.\n\t\t\treturn getRectRelativeToWindow( target, currentWindow );\n\t\t} );\n\n\t\t// Obtain the rect of the target after it has been scrolled within its ancestors.\n\t\t// It's time to scroll the viewport.\n\t\tconst targetRect = getRectRelativeToWindow( target, currentWindow );\n\n\t\tscrollWindowToShowRect( currentWindow, targetRect, viewportOffset );\n\n\t\tif ( currentWindow.parent != currentWindow ) {\n\t\t\t// Keep the reference to the <iframe> element the \"previous current window\" was\n\t\t\t// rendered within. It will be useful to re–calculate the rect of the target\n\t\t\t// in the parent window's relative geometry. The target's rect must be shifted\n\t\t\t// by it's iframe's position.\n\t\t\tcurrentFrame = currentWindow.frameElement;\n\t\t\tcurrentWindow = currentWindow.parent;\n\n\t\t\t// If the current window has some parent but frameElement is inaccessible, then they have\n\t\t\t// different domains/ports and, due to security reasons, accessing and scrolling\n\t\t\t// the parent window won't be possible.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/930.\n\t\t\tif ( !currentFrame ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentWindow = null;\n\t\t}\n\t}\n}\n\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\nexport function scrollAncestorsToShowTarget( target ) {\n\tconst targetParent = getParentElement( target );\n\n\tscrollAncestorsToShowRect( targetParent, () => {\n\t\treturn new Rect( target );\n\t} );\n}\n\n// TODO: Using a property value shorthand in the top of the file\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\nObject.assign( utils, {\n\tscrollViewportToShowTarget,\n\tscrollAncestorsToShowTarget\n} );\n\n// Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\nfunction scrollWindowToShowRect( window, rect, viewportOffset ) {\n\tconst targetShiftedDownRect = rect.clone().moveBy( 0, viewportOffset );\n\tconst targetShiftedUpRect = rect.clone().moveBy( 0, -viewportOffset );\n\tconst viewportRect = new Rect( window ).excludeScrollbarsAndBorders();\n\n\tconst rects = [ targetShiftedUpRect, targetShiftedDownRect ];\n\n\tif ( !rects.every( rect => viewportRect.contains( rect ) ) ) {\n\t\tlet { scrollX, scrollY } = window;\n\n\t\tif ( isAbove( targetShiftedUpRect, viewportRect ) ) {\n\t\t\tscrollY -= viewportRect.top - rect.top + viewportOffset;\n\t\t} else if ( isBelow( targetShiftedDownRect, viewportRect ) ) {\n\t\t\tscrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n\t\t}\n\n\t\t// TODO: Web browsers scroll natively to place the target in the middle\n\t\t// of the viewport. It's not a very popular case, though.\n\t\tif ( isLeftOf( rect, viewportRect ) ) {\n\t\t\tscrollX -= viewportRect.left - rect.left + viewportOffset;\n\t\t} else if ( isRightOf( rect, viewportRect ) ) {\n\t\t\tscrollX += rect.right - viewportRect.right + viewportOffset;\n\t\t}\n\n\t\twindow.scrollTo( scrollX, scrollY );\n\t}\n}\n\n// Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\nfunction scrollAncestorsToShowRect( parent, getRect ) {\n\tconst parentWindow = getWindow( parent );\n\tlet parentRect, targetRect;\n\n\twhile ( parent != parentWindow.document.body ) {\n\t\ttargetRect = getRect();\n\t\tparentRect = new Rect( parent ).excludeScrollbarsAndBorders();\n\n\t\tif ( !parentRect.contains( targetRect ) ) {\n\t\t\tif ( isAbove( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop -= parentRect.top - targetRect.top;\n\t\t\t} else if ( isBelow( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop += targetRect.bottom - parentRect.bottom;\n\t\t\t}\n\n\t\t\tif ( isLeftOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft -= parentRect.left - targetRect.left;\n\t\t\t} else if ( isRightOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft += targetRect.right - parentRect.right;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parentNode;\n\t}\n}\n\n// Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isBelow( firstRect, secondRect ) {\n\treturn firstRect.bottom > secondRect.bottom;\n}\n\n// Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isAbove( firstRect, secondRect ) {\n\treturn firstRect.top < secondRect.top;\n}\n\n// Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isLeftOf( firstRect, secondRect ) {\n\treturn firstRect.left < secondRect.left;\n}\n\n// Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isRightOf( firstRect, secondRect ) {\n\treturn firstRect.right > secondRect.right;\n}\n\n// Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {Window}\nfunction getWindow( elementOrRange ) {\n\tif ( isRange( elementOrRange ) ) {\n\t\treturn elementOrRange.startContainer.ownerDocument.defaultView;\n\t} else {\n\t\treturn elementOrRange.ownerDocument.defaultView;\n\t}\n}\n\n// Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {HTMLelement}\nfunction getParentElement( elementOrRange ) {\n\tif ( isRange( elementOrRange ) ) {\n\t\tlet parent = elementOrRange.commonAncestorContainer;\n\n\t\t// If a Range is attached to the Text, use the closest element ancestor.\n\t\tif ( isText( parent ) ) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn parent;\n\t} else {\n\t\treturn elementOrRange.parentNode;\n\t}\n}\n\n// Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\nfunction getRectRelativeToWindow( target, relativeWindow ) {\n\tconst targetWindow = getWindow( target );\n\tconst rect = new Rect( target );\n\n\tif ( targetWindow === relativeWindow ) {\n\t\treturn rect;\n\t} else {\n\t\tlet currentWindow = targetWindow;\n\n\t\twhile ( currentWindow != relativeWindow ) {\n\t\t\tconst frame = currentWindow.frameElement;\n\t\t\tconst frameRect = new Rect( frame ).excludeScrollbarsAndBorders();\n\n\t\t\trect.moveBy( frameRect.left, frameRect.top );\n\n\t\t\tcurrentWindow = currentWindow.parent;\n\t\t}\n\t}\n\n\treturn rect;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/view\n */\n\nimport Document from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport InputObserver from './observer/inputobserver';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\t/**\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( stylesProcessor ) {\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = new Document( stylesProcessor );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\n\t\t * {@link module:engine/view/view~View#_renderer renderer}\n\t\t * and {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = new DomConverter( this.document );\n\n\t\t/**\n\t\t * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Map.<String, HTMLElement>}\n\t\t */\n\t\tthis.domRoots = new Map();\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRenderingInProgress\n\t\t */\n\t\tthis.set( 'isRenderingInProgress', false );\n\n\t\t/**\n\t\t * Informs whether the DOM selection is inside any of the DOM roots managed by the view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #hasDomSelection\n\t\t */\n\t\tthis.set( 'hasDomSelection', false );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis._renderer = new Renderer( this.domConverter, this.document.selection );\n\t\tthis._renderer.bind( 'isFocused' ).to( this.document );\n\n\t\t/**\n\t\t * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\n\t\t * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\n\t\t * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\n\t\t * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap.<HTMLElement,Object>}\n\t\t */\n\t\tthis._initialDomRootAttributes = new WeakMap();\n\n\t\t/**\n\t\t * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\n\t\t */\n\t\tthis._observers = new Map();\n\n\t\t/**\n\t\t * Is set to `true` when {@link #change view changes} are currently in progress.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._ongoingChange = false;\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._postFixersInProgress = false;\n\n\t\t/**\n\t\t * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._renderingDisabled = false;\n\n\t\t/**\n\t\t * Internal flag that disables rendering when there are no changes since the last rendering.\n\t\t * It stores information about changed selection and changed elements from attached document roots.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasChangedSinceTheLastRendering = false;\n\n\t\t/**\n\t\t * DowncastWriter instance used in {@link #change change method} callbacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/view/downcastwriter~DowncastWriter}\n\t\t */\n\t\tthis._writer = new DowncastWriter( this.document );\n\n\t\t// Add default observers.\n\t\tthis.addObserver( MutationObserver );\n\t\tthis.addObserver( SelectionObserver );\n\t\tthis.addObserver( FocusObserver );\n\t\tthis.addObserver( KeyObserver );\n\t\tthis.addObserver( FakeSelectionObserver );\n\t\tthis.addObserver( CompositionObserver );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.addObserver( InputObserver );\n\t\t}\n\n\t\t// Inject quirks handlers.\n\t\tinjectQuirksHandling( this );\n\t\tinjectUiElementHandling( this );\n\n\t\t// Use 'normal' priority so that rendering is performed as first when using that priority.\n\t\tthis.on( 'render', () => {\n\t\t\tthis._render();\n\n\t\t\t// Informs that layout has changed after render.\n\t\t\tthis.document.fire( 'layoutChanged' );\n\n\t\t\t// Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\n\t\t\tthis._hasChangedSinceTheLastRendering = false;\n\t\t} );\n\n\t\t// Listen to the document selection changes directly.\n\t\tthis.listenTo( this.document.selection, 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches a DOM root element to the view element and enable all observers on that element.\n\t * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\n\t * with the view what means that all child nodes will be removed and replaced with content of the view root.\n\t *\n\t * This method also will change view element name as the same as tag name of given dom root.\n\t * Name is always transformed to lower case.\n\t *\n\t * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\n\t *\n\t * @param {Element} domRoot DOM root element.\n\t * @param {String} [name='main'] Name of the root.\n\t */\n\tattachDomRoot( domRoot, name = 'main' ) {\n\t\tconst viewRoot = this.document.getRoot( name );\n\n\t\t// Set view root name the same as DOM root tag name.\n\t\tviewRoot._name = domRoot.tagName.toLowerCase();\n\n\t\tconst initialDomRootAttributes = {};\n\n\t\t// 1. Copy and cache the attributes to remember the state of the element before attaching.\n\t\t//    The cached attributes will be restored in detachDomRoot() so the element goes to the\n\t\t//    clean state as if the editing view never used it.\n\t\t// 2. Apply the attributes using the view writer, so they all go under the control of the engine.\n\t\t//    The editing view takes over the attribute management completely because various\n\t\t//    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\n\t\t//    cannot be managed by the engine and the UI library at the same time.\n\t\tfor ( const { name, value } of Array.from( domRoot.attributes ) ) {\n\t\t\tinitialDomRootAttributes[ name ] = value;\n\n\t\t\t// Do not use writer.setAttribute() for the class attribute. The EditableUIView class\n\t\t\t// and its descendants could have already set some using the writer.addClass() on the view\n\t\t\t// document root. They haven't been rendered yet so they are not present in the DOM root.\n\t\t\t// Using writer.setAttribute( 'class', ... ) would override them completely.\n\t\t\tif ( name === 'class' ) {\n\t\t\t\tthis._writer.addClass( value.split( ' ' ), viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.setAttribute( name, value, viewRoot );\n\t\t\t}\n\t\t}\n\n\t\tthis._initialDomRootAttributes.set( domRoot, initialDomRootAttributes );\n\n\t\tconst updateContenteditableAttribute = () => {\n\t\t\tthis._writer.setAttribute( 'contenteditable', !viewRoot.isReadOnly, viewRoot );\n\n\t\t\tif ( viewRoot.isReadOnly ) {\n\t\t\t\tthis._writer.addClass( 'ck-read-only', viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.removeClass( 'ck-read-only', viewRoot );\n\t\t\t}\n\t\t};\n\n\t\t// Set initial value.\n\t\tupdateContenteditableAttribute();\n\n\t\tthis.domRoots.set( name, domRoot );\n\t\tthis.domConverter.bindElements( domRoot, viewRoot );\n\t\tthis._renderer.markToSync( 'children', viewRoot );\n\t\tthis._renderer.markToSync( 'attributes', viewRoot );\n\t\tthis._renderer.domDocuments.add( domRoot.ownerDocument );\n\n\t\tviewRoot.on( 'change:children', ( evt, node ) => this._renderer.markToSync( 'children', node ) );\n\t\tviewRoot.on( 'change:attributes', ( evt, node ) => this._renderer.markToSync( 'attributes', node ) );\n\t\tviewRoot.on( 'change:text', ( evt, node ) => this._renderer.markToSync( 'text', node ) );\n\t\tviewRoot.on( 'change:isReadOnly', () => this.change( updateContenteditableAttribute ) );\n\n\t\tviewRoot.on( 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.observe( domRoot, name );\n\t\t}\n\t}\n\n\t/**\n\t * Detaches a DOM root element from the view element and restores its attributes to the state before\n\t * {@link #attachDomRoot `attachDomRoot()`}.\n\t *\n\t * @param {String} name Name of the root to detach.\n\t */\n\tdetachDomRoot( name ) {\n\t\tconst domRoot = this.domRoots.get( name );\n\n\t\t// Remove all root attributes so the DOM element is \"bare\".\n\t\tArray.from( domRoot.attributes ).forEach( ( { name } ) => domRoot.removeAttribute( name ) );\n\n\t\tconst initialDomRootAttributes = this._initialDomRootAttributes.get( domRoot );\n\n\t\t// Revert all view root attributes back to the state before attachDomRoot was called.\n\t\tfor ( const attribute in initialDomRootAttributes ) {\n\t\t\tdomRoot.setAttribute( attribute, initialDomRootAttributes[ attribute ] );\n\t\t}\n\n\t\tthis.domRoots.delete( name );\n\t\tthis.domConverter.unbindDomElement( domRoot );\n\t}\n\n\t/**\n\t * Gets DOM root element.\n\t *\n\t * @param {String} [name='main']  Name of the root.\n\t * @returns {Element} DOM root element instance.\n\t */\n\tgetDomRoot( name = 'main' ) {\n\t\treturn this.domRoots.get( name );\n\t}\n\n\t/**\n\t * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n\t * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n\t * {@link #domRoots DOM roots}.\n\t *\n\t * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n\t * when registered for the first time. This means that features and other components can register a single observer\n\t * multiple times without caring whether it has been already added or not.\n\t *\n\t * @param {Function} Observer The constructor of an observer to add.\n\t * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n\t * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n\t */\n\taddObserver( Observer ) {\n\t\tlet observer = this._observers.get( Observer );\n\n\t\tif ( observer ) {\n\t\t\treturn observer;\n\t\t}\n\n\t\tobserver = new Observer( this );\n\n\t\tthis._observers.set( Observer, observer );\n\n\t\tfor ( const [ name, domElement ] of this.domRoots ) {\n\t\t\tobserver.observe( domElement, name );\n\t\t}\n\n\t\tobserver.enable();\n\n\t\treturn observer;\n\t}\n\n\t/**\n\t * Returns observer of the given type or `undefined` if such observer has not been added yet.\n\t *\n\t * @param {Function} Observer The constructor of an observer to get.\n\t * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n\t */\n\tgetObserver( Observer ) {\n\t\treturn this._observers.get( Observer );\n\t}\n\n\t/**\n\t * Disables all added observers.\n\t */\n\tdisableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.disable();\n\t\t}\n\t}\n\n\t/**\n\t * Enables all added observers.\n\t */\n\tenableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n\t * caret, if not already visible to the user.\n\t */\n\tscrollToTheSelection() {\n\t\tconst range = this.document.selection.getFirstRange();\n\n\t\tif ( range ) {\n\t\t\tscrollViewportToShowTarget( {\n\t\t\t\ttarget: this.domConverter.viewRangeToDom( range ),\n\t\t\t\tviewportOffset: 20\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n\t * that is currently having selection inside.\n\t */\n\tfocus() {\n\t\tif ( !this.document.isFocused ) {\n\t\t\tconst editable = this.document.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t\tthis.forceRender();\n\t\t\t} else {\n\t\t\t\t// Before focusing view document, selection should be placed inside one of the view's editables.\n\t\t\t\t// Normally its selection will be converted from model document (which have default selection), but\n\t\t\t\t// when using view document on its own, we need to manually place selection before focusing it.\n\t\t\t\t//\n\t\t\t\t// @if CK_DEBUG // console.warn( 'There is no selection in any editable to focus.' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n\t * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\n\t * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\n\t * to nest calls one inside another and still performs a single rendering after all those changes are made.\n\t * It also returns the return value of its callback.\n\t *\n\t *\t\tconst text = view.change( writer => {\n\t *\t\t\tconst newText = writer.createText( 'foo' );\n\t *\t\t\twriter.insert( position1, newText );\n\t *\n\t *\t\t\tview.change( writer => {\n\t *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.remove( range );\n\t *\n\t * \t\t\treturn newText;\n\t *\t\t} );\n\t *\n\t * When the outermost change block is done and rendering to the DOM is over the\n\t * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n\t *\n\t * This method throws a `applying-view-changes-on-rendering` error when\n\t * the change block is used after rendering to the DOM has started.\n\t *\n\t * @param {Function} callback Callback function which may modify the view.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tchange( callback ) {\n\t\tif ( this.isRenderingInProgress || this._postFixersInProgress ) {\n\t\t\t/**\n\t\t\t * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n\t\t\t * cause some unexpected behaviour and inconsistency between the DOM and the view.\n\t\t\t * This may be caused by:\n\t\t\t *\n\t\t\t * * calling {@link #change} or {@link #forceRender} during rendering process,\n\t\t\t * * calling {@link #change} or {@link #forceRender} inside of\n\t\t\t *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n\t\t\t *\n\t\t\t * @error cannot-change-view-tree\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'cannot-change-view-tree',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\t// Recursive call to view.change() method - execute listener immediately.\n\t\t\tif ( this._ongoingChange ) {\n\t\t\t\treturn callback( this._writer );\n\t\t\t}\n\n\t\t\t// This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n\t\t\t// event for all nested calls.\n\t\t\tthis._ongoingChange = true;\n\t\t\tconst callbackResult = callback( this._writer );\n\t\t\tthis._ongoingChange = false;\n\n\t\t\t// This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n\t\t\t// view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all\n\t\t\t// changes. Also, we don't need to render anything if there're no changes since last rendering.\n\t\t\tif ( !this._renderingDisabled && this._hasChangedSinceTheLastRendering ) {\n\t\t\t\tthis._postFixersInProgress = true;\n\t\t\t\tthis.document._callPostFixers( this._writer );\n\t\t\t\tthis._postFixersInProgress = false;\n\n\t\t\t\tthis.fire( 'render' );\n\t\t\t}\n\n\t\t\treturn callbackResult;\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n\t * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n\t *\n\t * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\n\t * block and the view will automatically check whether it needs to render DOM or not.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n\t * trying to re-render when rendering to DOM has already started.\n\t */\n\tforceRender() {\n\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\tthis.change( () => {} );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tdestroy() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.destroy();\n\t\t}\n\n\t\tthis.document.destroy();\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = view.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = view.createRange( start, end );\n\t *\t\tconst selection = view.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n\t *\t\tconst selection = view.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = view.createSelection();\n\t *\t\tconst selection = view.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = view.createPositionFromPath( root, path );\n\t *\t\tconst selection = view.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = view.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = view.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = view.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = view.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\n\t * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\n\t *\n\t * @protected\n\t * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\n\t */\n\t_disableRendering( flag ) {\n\t\tthis._renderingDisabled = flag;\n\n\t\tif ( flag == false ) {\n\t\t\t// Render when you stop blocking rendering.\n\t\t\tthis.change( () => {} );\n\t\t}\n\t}\n\n\t/**\n\t * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n\t * before rendering and re-enabled after that.\n\t *\n\t * @private\n\t */\n\t_render() {\n\t\tthis.isRenderingInProgress = true;\n\t\tthis.disableObservers();\n\t\tthis._renderer.render();\n\t\tthis.enableObservers();\n\t\tthis.isRenderingInProgress = false;\n\t}\n\n\t/**\n\t * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n\t *\n\t * Actual rendering is performed as a first listener on 'normal' priority.\n\t *\n\t *\t\tview.on( 'render', () => {\n\t *\t\t\t// Rendering to the DOM is complete.\n\t *\t\t} );\n\t *\n\t * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n\t * balloon panel. If you wants to change view structure use\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n\t *\n\t * @event module:engine/view/view~View#event:render\n\t */\n}\n\nmix( View, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/mapper\n */\n\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\n\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\n * {@link module:engine/model/model the model}.\n *\n * The instance of the Mapper used for the editing pipeline is available in\n * {@link module:engine/controller/editingcontroller~EditingController#mapper `editor.editing.mapper`}.\n *\n * Mapper uses bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\nexport default class Mapper {\n\t/**\n\t * Creates an instance of the mapper.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Model element to view element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._modelToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View element to model element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._viewToModelMapping = new WeakMap();\n\n\t\t/**\n\t\t * A map containing callbacks between view element names and functions evaluating length of view elements\n\t\t * in model.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._viewToModelLengthCallbacks = new Map();\n\n\t\t/**\n\t\t * Model marker name to view elements mapping.\n\t\t *\n\t\t * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\n\t\t * One marker (name) can be mapped to multiple elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._markerNameToElements = new Map();\n\n\t\t/**\n\t\t * View element to model marker names mapping.\n\t\t *\n\t\t * This is reverse to {@link ~Mapper#_markerNameToElements} map.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._elementToMarkerNames = new Map();\n\n\t\t/**\n\t\t * Stores marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\n\t\t * has been removed, moved or renamed).\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/markercollection~Marker>}\n\t\t */\n\t\tthis._unboundMarkerNames = new Set();\n\n\t\t// Default mapper algorithm for mapping model position to view position.\n\t\tthis.on( 'modelToViewPosition', ( evt, data ) => {\n\t\t\tif ( data.viewPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewContainer = this._modelToViewMapping.get( data.modelPosition.parent );\n\n\t\t\tdata.viewPosition = this.findPositionIn( viewContainer, data.modelPosition.offset );\n\t\t}, { priority: 'low' } );\n\n\t\t// Default mapper algorithm for mapping view position to model position.\n\t\tthis.on( 'viewToModelPosition', ( evt, data ) => {\n\t\t\tif ( data.modelPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewBlock = this.findMappedViewAncestor( data.viewPosition );\n\t\t\tconst modelParent = this._viewToModelMapping.get( viewBlock );\n\t\t\tconst modelOffset = this._toModelOffset( data.viewPosition.parent, data.viewPosition.offset, viewBlock );\n\n\t\t\tdata.modelPosition = ModelPosition._createAt( modelParent, modelOffset );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n\t * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n\t * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n\t * The information that elements are bound is also used to translate positions.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t */\n\tbindElements( modelElement, viewElement ) {\n\t\tthis._modelToViewMapping.set( modelElement, viewElement );\n\t\tthis._viewToModelMapping.set( viewElement, modelElement );\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n\t *\n\t * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\n\t * will be removed only if model element is still bound to passed `viewElement`.\n\t *\n\t * This behavior lets for re-binding model element to another view element without fear of losing the new binding\n\t * when the previously bound view element is unbound.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element to unbind.\n\t */\n\tunbindViewElement( viewElement ) {\n\t\tconst modelElement = this.toModelElement( viewElement );\n\n\t\tthis._viewToModelMapping.delete( viewElement );\n\n\t\tif ( this._elementToMarkerNames.has( viewElement ) ) {\n\t\t\tfor ( const markerName of this._elementToMarkerNames.get( viewElement ) ) {\n\t\t\t\tthis._unboundMarkerNames.add( markerName );\n\t\t\t}\n\t\t}\n\n\t\tif ( this._modelToViewMapping.get( modelElement ) == viewElement ) {\n\t\t\tthis._modelToViewMapping.delete( modelElement );\n\t\t}\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n\t *\n\t * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\n\t * will be removed only if view element is still bound to passed `modelElement`.\n\t *\n\t * This behavior lets for re-binding view element to another model element without fear of losing the new binding\n\t * when the previously bound model element is unbound.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n\t */\n\tunbindModelElement( modelElement ) {\n\t\tconst viewElement = this.toViewElement( modelElement );\n\n\t\tthis._modelToViewMapping.delete( modelElement );\n\n\t\tif ( this._viewToModelMapping.get( viewElement ) == modelElement ) {\n\t\t\tthis._viewToModelMapping.delete( viewElement );\n\t\t}\n\t}\n\n\t/**\n\t * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\n\t * will be added to the current set of elements bound with given marker name.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to bind.\n\t * @param {String} name Marker name.\n\t */\n\tbindElementToMarker( element, name ) {\n\t\tconst elements = this._markerNameToElements.get( name ) || new Set();\n\t\telements.add( element );\n\n\t\tconst names = this._elementToMarkerNames.get( element ) || new Set();\n\t\tnames.add( name );\n\n\t\tthis._markerNameToElements.set( name, elements );\n\t\tthis._elementToMarkerNames.set( element, names );\n\t}\n\n\t/**\n\t * Unbinds an element from given marker name.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to unbind.\n\t * @param {String} name Marker name.\n\t */\n\tunbindElementFromMarkerName( element, name ) {\n\t\tconst nameToElements = this._markerNameToElements.get( name );\n\n\t\tif ( nameToElements ) {\n\t\t\tnameToElements.delete( element );\n\n\t\t\tif ( nameToElements.size == 0 ) {\n\t\t\t\tthis._markerNameToElements.delete( name );\n\t\t\t}\n\t\t}\n\n\t\tconst elementToNames = this._elementToMarkerNames.get( element );\n\n\t\tif ( elementToNames ) {\n\t\t\telementToNames.delete( name );\n\n\t\t\tif ( elementToNames.size == 0 ) {\n\t\t\t\tthis._elementToMarkerNames.delete( element );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\n\t * has been removed, moved or renamed) since the last flush. After returning, the marker names list is cleared.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tflushUnboundMarkerNames() {\n\t\tconst markerNames = Array.from( this._unboundMarkerNames );\n\n\t\tthis._unboundMarkerNames.clear();\n\n\t\treturn markerNames;\n\t}\n\n\t/**\n\t * Removes all model to view and view to model bindings.\n\t */\n\tclearBindings() {\n\t\tthis._modelToViewMapping = new WeakMap();\n\t\tthis._viewToModelMapping = new WeakMap();\n\t\tthis._markerNameToElements = new Map();\n\t\tthis._elementToMarkerNames = new Map();\n\t\tthis._unboundMarkerNames = new Set();\n\t}\n\n\t/**\n\t * Gets the corresponding model element.\n\t *\n\t * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n\t */\n\ttoModelElement( viewElement ) {\n\t\treturn this._viewToModelMapping.get( viewElement );\n\t}\n\n\t/**\n\t * Gets the corresponding view element.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n\t */\n\ttoViewElement( modelElement ) {\n\t\treturn this._modelToViewMapping.get( modelElement );\n\t}\n\n\t/**\n\t * Gets the corresponding model range.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {module:engine/model/range~Range} Corresponding model range.\n\t */\n\ttoModelRange( viewRange ) {\n\t\treturn new ModelRange( this.toModelPosition( viewRange.start ), this.toModelPosition( viewRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding view range.\n\t *\n\t * @param {module:engine/model/range~Range} modelRange Model range.\n\t * @returns {module:engine/view/range~Range} Corresponding view range.\n\t */\n\ttoViewRange( modelRange ) {\n\t\treturn new ViewRange( this.toViewPosition( modelRange.start ), this.toViewPosition( modelRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding model position.\n\t *\n\t * @fires viewToModelPosition\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {module:engine/model/position~Position} Corresponding model position.\n\t */\n\ttoModelPosition( viewPosition ) {\n\t\tconst data = {\n\t\t\tviewPosition,\n\t\t\tmapper: this\n\t\t};\n\n\t\tthis.fire( 'viewToModelPosition', data );\n\n\t\treturn data.modelPosition;\n\t}\n\n\t/**\n\t * Gets the corresponding view position.\n\t *\n\t * @fires modelToViewPosition\n\t * @param {module:engine/model/position~Position} modelPosition Model position.\n\t * @param {Object} [options] Additional options for position mapping process.\n\t * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\n\t * in model tree which no longer exists. For example, it could be an end of a removed model range.\n\t * @returns {module:engine/view/position~Position} Corresponding view position.\n\t */\n\ttoViewPosition( modelPosition, options = { isPhantom: false } ) {\n\t\tconst data = {\n\t\t\tmodelPosition,\n\t\t\tmapper: this,\n\t\t\tisPhantom: options.isPhantom\n\t\t};\n\n\t\tthis.fire( 'modelToViewPosition', data );\n\n\t\treturn data.viewPosition;\n\t}\n\n\t/**\n\t * Gets all view elements bound to the given marker name.\n\t *\n\t * @param {String} name Marker name.\n\t * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\n\t * if no elements are bound to given marker name.\n\t */\n\tmarkerNameToElements( name ) {\n\t\tconst boundElements = this._markerNameToElements.get( name );\n\n\t\tif ( !boundElements ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements = new Set();\n\n\t\tfor ( const element of boundElements ) {\n\t\t\tif ( element.is( 'attributeElement' ) ) {\n\t\t\t\tfor ( const clone of element.getElementsWithSameId() ) {\n\t\t\t\t\telements.add( clone );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements.add( element );\n\t\t\t}\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Registers a callback that evaluates the length in the model of a view element with given name.\n\t *\n\t * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n\t * a number representing the length of view element in model.\n\t *\n\t *\t\t// List item in view may contain nested list, which have other list items. In model though,\n\t *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n\t *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n\t *\n\t *\t\tfunction getViewListItemLength( element ) {\n\t *\t\t\tlet length = 1;\n\t *\n\t *\t\t\tfor ( let child of element.getChildren() ) {\n\t *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n\t *\t\t\t\t\t\tlength += getViewListItemLength( item );\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn length;\n\t *\t\t}\n\t *\n\t *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t *\n\t * @param {String} viewElementName Name of view element for which callback is registered.\n\t * @param {Function} lengthCallback Function return a length of view element instance in model.\n\t */\n\tregisterViewToModelLength( viewElementName, lengthCallback ) {\n\t\tthis._viewToModelLengthCallbacks.set( viewElementName, lengthCallback );\n\t}\n\n\t/**\n\t * For given `viewPosition`, finds and returns the closest ancestor of this position that has a mapping to\n\t * the model.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition Position for which mapped ancestor should be found.\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tfindMappedViewAncestor( viewPosition ) {\n\t\tlet parent = viewPosition.parent;\n\n\t\twhile ( !this._viewToModelMapping.has( parent ) ) {\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Calculates model offset based on the view position and the block element.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n\t *\n\t * Is a sum of:\n\t *\n\t *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Position parent.\n\t * @param {Number} viewOffset Position offset.\n\t * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n\t * @returns {Number} Offset in the model.\n\t */\n\t_toModelOffset( viewParent, viewOffset, viewBlock ) {\n\t\tif ( viewBlock != viewParent ) {\n\t\t\t// See example.\n\t\t\tconst offsetToParentStart = this._toModelOffset( viewParent.parent, viewParent.index, viewBlock );\n\t\t\tconst offsetInParent = this._toModelOffset( viewParent, viewOffset, viewParent );\n\n\t\t\treturn offsetToParentStart + offsetInParent;\n\t\t}\n\n\t\t// viewBlock == viewParent, so we need to calculate the offset in the parent element.\n\n\t\t// If the position is a text it is simple (\"ba|r\" -> 2).\n\t\tif ( viewParent.is( '$text' ) ) {\n\t\t\treturn viewOffset;\n\t\t}\n\n\t\t// If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\t\tlet modelOffset = 0;\n\n\t\tfor ( let i = 0; i < viewOffset; i++ ) {\n\t\t\tmodelOffset += this.getModelLength( viewParent.getChild( i ) );\n\t\t}\n\n\t\treturn modelOffset;\n\t}\n\n\t/**\n\t * Gets the length of the view element in the model.\n\t *\n\t * The length is calculated as follows:\n\t * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n\t * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n\t * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n\t * {@link module:engine/view/text~Text#data data},\n\t * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n\t * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n\t * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n\t *\n\t * Examples:\n\t *\n\t *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n\t *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n\t *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n\t *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n\t *\n\t * @param {module:engine/view/element~Element} viewNode View node.\n\t * @returns {Number} Length of the node in the tree model.\n\t */\n\tgetModelLength( viewNode ) {\n\t\tif ( this._viewToModelLengthCallbacks.get( viewNode.name ) ) {\n\t\t\tconst callback = this._viewToModelLengthCallbacks.get( viewNode.name );\n\n\t\t\treturn callback( viewNode );\n\t\t} else if ( this._viewToModelMapping.has( viewNode ) ) {\n\t\t\treturn 1;\n\t\t} else if ( viewNode.is( '$text' ) ) {\n\t\t\treturn viewNode.data.length;\n\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tlet len = 0;\n\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tlen += this.getModelLength( child );\n\t\t\t}\n\n\t\t\treturn len;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the position in the view node (or its children) with the expected model offset.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n\t *\n\t *\t\tfindPositionIn( p, 4 ):\n\t *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n\t *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n\t *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n\t *\n\t *\t\tfindPositionIn( b, 4 - ( 5 - 3 ) ):\n\t *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n\t *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n\t *\n\t *\t\tfindPositionIn( bar, 2 - ( 3 - 3 ) ):\n\t *\t\tWe are in the text node so we can simple find the offset.\n\t *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n\t *\n\t * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n\t * @param {Number} expectedOffset Expected offset.\n\t * @returns {module:engine/view/position~Position} Found position.\n\t */\n\tfindPositionIn( viewParent, expectedOffset ) {\n\t\t// Last scanned view node.\n\t\tlet viewNode;\n\t\t// Length of the last scanned view node.\n\t\tlet lastLength = 0;\n\n\t\tlet modelOffset = 0;\n\t\tlet viewOffset = 0;\n\n\t\t// In the text node it is simple: offset in the model equals offset in the text.\n\t\tif ( viewParent.is( '$text' ) ) {\n\t\t\treturn new ViewPosition( viewParent, expectedOffset );\n\t\t}\n\n\t\t// In other cases we add lengths of child nodes to find the proper offset.\n\n\t\t// If it is smaller we add the length.\n\t\twhile ( modelOffset < expectedOffset ) {\n\t\t\tviewNode = viewParent.getChild( viewOffset );\n\t\t\tlastLength = this.getModelLength( viewNode );\n\t\t\tmodelOffset += lastLength;\n\t\t\tviewOffset++;\n\t\t}\n\n\t\t// If it equals we found the position.\n\t\tif ( modelOffset == expectedOffset ) {\n\t\t\treturn this._moveViewPositionToTextNode( new ViewPosition( viewParent, viewOffset ) );\n\t\t}\n\t\t// If it is higher we need to enter last child.\n\t\telse {\n\t\t\t// ( modelOffset - lastLength ) is the offset to the child we enter,\n\t\t\t// so we subtract it from the expected offset to fine the offset in the child.\n\t\t\treturn this.findPositionIn( viewNode, expectedOffset - ( modelOffset - lastLength ) );\n\t\t}\n\t}\n\n\t/**\n\t * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n\t * if it was next to it.\n\t *\n\t *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n\t *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n\t *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n\t * @returns {module:engine/view/position~Position} Position in text node if possible.\n\t */\n\t_moveViewPositionToTextNode( viewPosition ) {\n\t\t// If the position is just after text node, put it at the end of that text node.\n\t\t// If the position is just before text node, put it at the beginning of that text node.\n\t\tconst nodeBefore = viewPosition.nodeBefore;\n\t\tconst nodeAfter = viewPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeBefore, nodeBefore.data.length );\n\t\t} else if ( nodeAfter instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeAfter, 0 );\n\t\t}\n\n\t\t// Otherwise, just return the given position.\n\t\treturn viewPosition;\n\t}\n\n\t/**\n\t * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n\t * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n\t * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n\t * value in `data` object that is passed as one of parameters to the event callback.\n\t *\n\t * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n\t * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n\t * \t\t// <span> element.\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = modelPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n\t *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n\t *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n\t *\n\t *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n\t *\n\t *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\n\t * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\n\t * (it would point to a correct place in view when converted). One example of such situation is when a range is\n\t * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\n\t * handle such situation, check `data.isPhantom` flag:\n\t *\n\t * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\n\t * \t\t// to the inside of the view element bound to \"customElement\".\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tif ( data.isPhantom ) {\n\t *\t\t\t\treturn;\n\t *\t\t\t}\n\t *\n\t *\t\t\t// Below line might crash for phantom position that does not exist in model.\n\t *\t\t\tconst sibling = data.modelPosition.nodeBefore;\n\t *\n\t *\t\t\t// Check if this is the element we are interested in.\n\t *\t\t\tif ( !sibling.is( 'element', 'customElement' ) ) {\n\t *\t\t\t\treturn;\n\t *\t\t\t}\n\t *\n\t *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\n\t *\n\t *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\n\t *\n\t *\t\t\tevt.stop();\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event modelToViewPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n\n\t/**\n\t * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n\t *\n\t * \t\t// See example in `modelToViewPosition` event description.\n\t * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n\t *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = viewPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n\t *\t\t\t\tconst viewImg = positionParent.previousSibling;\n\t *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n\t *\n\t *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event viewToModelPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n}\n\nmix( Mapper, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\n\nimport TextProxy from '../model/textproxy';\n\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * gather consumable values, so there is no need to use\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/downcasthelpers default downcast converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\t\t\tconst viewWriter = conversionApi.writer;\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class ModelConsumable {\n\t/**\n\t * Creates an empty consumables list.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Contains list of consumable values.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n\t\t */\n\t\tthis._consumable = new Map();\n\n\t\t/**\n\t\t * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n\t\t * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n\t\t * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n\t\t * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n\t\t * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n\t\t * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n\t\t */\n\t\tthis._textProxyRegistry = new Map();\n\t}\n\n\t/**\n\t * Adds a consumable value to the consumables list and links it with given model item.\n\t *\n\t *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n\t *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n\t *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection that has the consumable.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t */\n\tadd( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( !this._consumable.has( item ) ) {\n\t\t\tthis._consumable.set( item, new Map() );\n\t\t}\n\n\t\tthis._consumable.get( item ).set( type, true );\n\t}\n\n\t/**\n\t * Removes given consumable value from given model item.\n\t *\n\t *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n\t *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n\t *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection from which consumable will be consumed.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n\t */\n\tconsume( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( this.test( item, type ) ) {\n\t\t\tthis._consumable.get( item ).set( type, false );\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Tests whether there is a consumable value of given type connected with given model item.\n\t *\n\t *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n\t *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n\t *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be tested.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n\t * already consumed or `true` if it was added and not consumed yet.\n\t */\n\ttest( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst itemConsumables = this._consumable.get( item );\n\n\t\tif ( itemConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = itemConsumables.get( type );\n\n\t\tif ( value === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Reverts consuming of consumable value.\n\t *\n\t *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n\t *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n\t *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be reverted.\n\t * @param {String} type Consumable type.\n\t * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n\t * never been added.\n\t */\n\trevert( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst test = this.test( item, type );\n\n\t\tif ( test === false ) {\n\t\t\tthis._consumable.get( item ).set( type, true );\n\n\t\t\treturn true;\n\t\t} else if ( test === true ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n\t * have same parent, same start index and same end index will get the same symbol.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n\t * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n\t */\n\t_getSymbolForTextProxy( textProxy ) {\n\t\tlet symbol = null;\n\n\t\tconst startMap = this._textProxyRegistry.get( textProxy.startOffset );\n\n\t\tif ( startMap ) {\n\t\t\tconst endMap = startMap.get( textProxy.endOffset );\n\n\t\t\tif ( endMap ) {\n\t\t\t\tsymbol = endMap.get( textProxy.parent );\n\t\t\t}\n\t\t}\n\n\t\tif ( !symbol ) {\n\t\t\tsymbol = this._addSymbolForTextProxy( textProxy.startOffset, textProxy.endOffset, textProxy.parent );\n\t\t}\n\n\t\treturn symbol;\n\t}\n\n\t/**\n\t * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {Number} startIndex Text proxy start index in it's parent.\n\t * @param {Number} endIndex Text proxy end index in it's parent.\n\t * @param {module:engine/model/element~Element} parent Text proxy parent.\n\t * @returns {Symbol} Symbol generated for given properties.\n\t */\n\t_addSymbolForTextProxy( start, end, parent ) {\n\t\tconst symbol = Symbol( 'textProxySymbol' );\n\t\tlet startMap, endMap;\n\n\t\tstartMap = this._textProxyRegistry.get( start );\n\n\t\tif ( !startMap ) {\n\t\t\tstartMap = new Map();\n\t\t\tthis._textProxyRegistry.set( start, startMap );\n\t\t}\n\n\t\tendMap = startMap.get( end );\n\n\t\tif ( !endMap ) {\n\t\t\tendMap = new Map();\n\t\t\tstartMap.set( end, endMap );\n\t\t}\n\n\t\tendMap.set( parent, symbol );\n\n\t\treturn symbol;\n\t}\n}\n\n// Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\n//\n// @param {String} type Consumable type.\n// @returns {String} Normalized consumable type.\nfunction _normalizeConsumableType( type ) {\n\tconst parts = type.split( ':' );\n\n\treturn parts.length > 1 ? parts[ 0 ] + ':' + parts[ 1 ] : parts[ 0 ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/downcastdispatcher\n */\n\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport Position, { getNodeAfterPosition, getTextNodeAtPosition } from '../model/position';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Downcast dispatcher is a central point of downcasting (conversion from the model to the view), which is a process of reacting to changes\n * in the model and firing a set of events. Callbacks listening to these events are called converters. The\n * converters' role is to convert the model changes to changes in view (for example, adding view nodes or\n * changing attributes on view elements).\n *\n * During the conversion process, downcast dispatcher fires events basing on the state of the model and prepares\n * data for these events. It is important to understand that the events are connected with the changes done on the model,\n * for example: \"a node has been inserted\" or \"an attribute has changed\". This is in contrary to upcasting (a view-to-model conversion)\n * where you convert the view state (view nodes) to a model tree.\n *\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\n * and then passes to the downcast dispatcher as a diff between the old model state and the new model state.\n *\n * Note that because the changes are converted, there is a need to have a mapping between the model structure and the view structure.\n * To map positions and elements during the downcast (a model-to-view conversion), use {@link module:engine/conversion/mapper~Mapper}.\n *\n * Downcast dispatcher fires the following events for model tree changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert`} &ndash;\n * If a range of nodes was inserted to the model tree.\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove `remove`} &ndash;\n * If a range of nodes was removed from the model tree.\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute`} &ndash;\n * If an attribute was added, changed or removed from a model node.\n *\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert`}\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute`},\n * downcast dispatcher generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\n * These are used to have control over which changes have already been consumed. It is useful when some converters\n * overwrite others or convert multiple changes (for example, it converts an insertion of an element and also converts that\n * element's attributes during the insertion).\n *\n * Additionally, downcast dispatcher fires events for {@link module:engine/model/markercollection~Marker marker} changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} &ndash; If a marker was added.\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} &ndash; If a marker was removed.\n *\n * Note that changing a marker is done through removing the marker from the old range and adding it on the new range,\n * so both events are fired.\n *\n * Finally, downcast dispatcher also handles firing events for the {@link module:engine/model/selection model selection}\n * conversion:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\n * &ndash; Converts the selection from the model to the view.\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\n * &ndash; Fired for every selection attribute.\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\n * &ndash; Fired for every marker that contains a selection.\n *\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\n *\n * When providing custom listeners for downcast dispatcher, remember to check whether a given change has not been\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\n *\n * When providing custom listeners for downcast dispatcher, keep in mind that any callback that has\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\n * converted the change should also stop the event (for efficiency purposes).\n *\n * When providing custom listeners for downcast dispatcher, remember to use the provided\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\n *\n * You can read more about conversion in the following guides:\n *\n * * {@glink framework/guides/deep-dive/conversion/conversion-introduction Advanced conversion concepts &mdash; attributes}\n * * {@glink framework/guides/deep-dive/conversion/conversion-extending-output Extending the editor output }\n * * {@glink framework/guides/deep-dive/conversion/custom-element-conversion Custom element conversion}\n *\n * An example of a custom converter for the downcast dispatcher:\n *\n *\t\t// You will convert inserting a \"paragraph\" model element into the model.\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Translate the position in the model to a position in the view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create a <p> element that will be inserted into the view at the `viewPosition`.\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to the model element so positions will map accordingly in the future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation.\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class DowncastDispatcher {\n\t/**\n\t * Creates a downcast dispatcher instance.\n\t *\n\t * @see module:engine/conversion/downcastdispatcher~DowncastConversionApi\n\t * @param {Object} conversionApi Additional properties for an interface that will be passed to events fired\n\t * by the downcast dispatcher.\n\t */\n\tconstructor( conversionApi ) {\n\t\t/**\n\t\t * An interface passed by the dispatcher to the event callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastConversionApi}\n\t\t */\n\t\tthis.conversionApi = Object.assign( { dispatcher: this }, conversionApi );\n\n\t\t/**\n\t\t * Maps conversion event names that will trigger element reconversion for given element name.\n\t\t *\n\t\t * @type {Map<String, String>}\n\t\t * @private\n\t\t */\n\t\tthis._reconversionEventsMapping = new Map();\n\t}\n\n\t/**\n\t * Takes a {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\n\t *\n\t * @param {module:engine/model/differ~Differ} differ The differ object with buffered changes.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with the converted model.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer that should be used to modify the view document.\n\t */\n\tconvertChanges( differ, markers, writer ) {\n\t\t// Before the view is updated, remove markers which have changed.\n\t\tfor ( const change of differ.getMarkersToRemove() ) {\n\t\t\tthis.convertMarkerRemove( change.name, change.range, writer );\n\t\t}\n\n\t\tconst changes = this._mapChangesWithAutomaticReconversion( differ );\n\n\t\t// Convert changes that happened on model tree.\n\t\tfor ( const entry of changes ) {\n\t\t\tif ( entry.type === 'insert' ) {\n\t\t\t\tthis.convertInsert( Range._createFromPositionAndShift( entry.position, entry.length ), writer );\n\t\t\t} else if ( entry.type === 'remove' ) {\n\t\t\t\tthis.convertRemove( entry.position, entry.length, entry.name, writer );\n\t\t\t} else if ( entry.type === 'reconvert' ) {\n\t\t\t\tthis.reconvertElement( entry.element, writer );\n\t\t\t} else {\n\t\t\t\t// Defaults to 'attribute' change.\n\t\t\t\tthis.convertAttribute( entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const markerName of this.conversionApi.mapper.flushUnboundMarkerNames() ) {\n\t\t\tconst markerRange = markers.get( markerName ).getRange();\n\n\t\t\tthis.convertMarkerRemove( markerName, markerRange, writer );\n\t\t\tthis.convertMarkerAdd( markerName, markerRange, writer );\n\t\t}\n\n\t\t// After the view is updated, convert markers which have changed.\n\t\tfor ( const change of differ.getMarkersToAdd() ) {\n\t\t\tthis.convertMarkerAdd( change.name, change.range, writer );\n\t\t}\n\t}\n\n\t/**\n\t * Starts a conversion of a range insertion.\n\t *\n\t * For each node in the range, {@link #event:insert `insert` event is fired}. For each attribute on each node,\n\t * {@link #event:attribute `attribute` event is fired}.\n\t *\n\t * @fires insert\n\t * @fires attribute\n\t * @param {module:engine/model/range~Range} range The inserted range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer that should be used to modify the view document.\n\t */\n\tconvertInsert( range, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\n\t\tthis.conversionApi.consumable = this._createInsertConsumable( range );\n\n\t\t// Fire a separate insert event for each node and text fragment contained in the range.\n\t\tfor ( const data of Array.from( range ).map( walkerValueToEventData ) ) {\n\t\t\tthis._convertInsertWithAttributes( data );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\n\t *\n\t * @param {module:engine/model/position~Position} position Position from which node was removed.\n\t * @param {Number} length Offset size of removed node.\n\t * @param {String} name Name of removed node.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertRemove( position, length, name, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\tthis.fire( 'remove:' + name, { position, length }, this.conversionApi );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts conversion of attribute change on given `range`.\n\t *\n\t * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\n\t *\n\t * @fires attribute\n\t * @param {module:engine/model/range~Range} range Changed range.\n\t * @param {String} key Key of the attribute that has changed.\n\t * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\n\t * @param {*} newValue New attribute value or `null` if the attribute has been removed.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertAttribute( range, key, oldValue, newValue, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list with attributes to consume.\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( range, `attribute:${ key }` );\n\n\t\t// Create a separate attribute event for each node in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\tattributeNewValue: newValue\n\t\t\t};\n\n\t\t\tthis._testAndFire( `attribute:${ key }`, data );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts a reconversion of an element. It will:\n\t *\n\t * * Fire a {@link #event:insert `insert` event} for the element to reconvert.\n\t * * Fire an {@link #event:attribute `attribute` event} for element attributes.\n\t *\n\t * This will not reconvert children of the element if they have existing (already converted) views. For newly inserted child elements\n\t * it will behave the same as {@link #convertInsert}.\n\t *\n\t * Element reconversion is defined by a `triggerBy` configuration for\n\t * {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`} conversion helper.\n\t *\n\t * @fires insert\n\t * @fires attribute\n\t * @param {module:engine/model/element~Element} element The element to be reconverted.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer that should be used to modify the view document.\n\t */\n\treconvertElement( element, writer ) {\n\t\tconst elementRange = Range._createOn( element );\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\n\t\tthis.conversionApi.consumable = this._createInsertConsumable( elementRange );\n\n\t\tconst mapper = this.conversionApi.mapper;\n\t\tconst currentView = mapper.toViewElement( element );\n\n\t\t// Remove the old view but do not remove mapper mappings - those will be used to revive existing elements.\n\t\twriter.remove( currentView );\n\n\t\t// Convert the element - without converting children.\n\t\tthis._convertInsertWithAttributes( {\n\t\t\titem: element,\n\t\t\trange: elementRange\n\t\t} );\n\n\t\tconst convertedViewElement = mapper.toViewElement( element );\n\n\t\t// Iterate over children of reconverted element in order to...\n\t\tfor ( const value of Range._createIn( element ) ) {\n\t\t\tconst { item } = value;\n\n\t\t\tconst view = elementOrTextProxyToView( item, mapper );\n\n\t\t\t// ...either bring back previously converted view...\n\t\t\tif ( view ) {\n\t\t\t\t// Do not move views that are already in converted element - those might be created by the main element converter in case\n\t\t\t\t// when main element converts also its direct children.\n\t\t\t\tif ( view.root !== convertedViewElement.root ) {\n\t\t\t\t\twriter.move(\n\t\t\t\t\t\twriter.createRangeOn( view ),\n\t\t\t\t\t\tmapper.toViewPosition( Position._createBefore( item ) )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ... or by converting newly inserted elements.\n\t\t\telse {\n\t\t\t\tthis._convertInsertWithAttributes( walkerValueToEventData( value ) );\n\t\t\t}\n\t\t}\n\n\t\t// After reconversion is done we can unbind the old view.\n\t\tmapper.unbindViewElement( currentView );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts model selection conversion.\n\t *\n\t * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n\t *\n\t * @fires selection\n\t * @fires addMarker\n\t * @fires attribute\n\t * @param {module:engine/model/selection~Selection} selection Selection to convert.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertSelection( selection, markers, writer ) {\n\t\tconst markersAtSelection = Array.from( markers.getMarkersAtPosition( selection.getFirstPosition() ) );\n\n\t\tthis.conversionApi.writer = writer;\n\t\tthis.conversionApi.consumable = this._createSelectionConsumable( selection, markersAtSelection );\n\n\t\tthis.fire( 'selection', { selection }, this.conversionApi );\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const marker of markersAtSelection ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tif ( !shouldMarkerChangeBeConverted( selection.getFirstPosition(), marker, this.conversionApi.mapper ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\titem: selection,\n\t\t\t\tmarkerName: marker.name,\n\t\t\t\tmarkerRange\n\t\t\t};\n\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'addMarker:' + marker.name ) ) {\n\t\t\t\tthis.fire( 'addMarker:' + marker.name, data, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconst data = {\n\t\t\t\titem: selection,\n\t\t\t\trange: selection.getFirstRange(),\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: null,\n\t\t\t\tattributeNewValue: selection.getAttribute( key )\n\t\t\t};\n\n\t\t\t// Do not fire event if the attribute has been consumed.\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'attribute:' + data.attributeKey ) ) {\n\t\t\t\tthis.fire( 'attribute:' + data.attributeKey + ':$text', data, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\n\t * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\n\t *\n\t * @fires addMarker\n\t * @param {String} markerName Marker name.\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertMarkerAdd( markerName, markerRange, writer ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// In markers' case, event name == consumable name.\n\t\tconst eventName = 'addMarker:' + markerName;\n\n\t\t//\n\t\t// First, fire an event for the whole marker.\n\t\t//\n\t\tconst consumable = new Consumable();\n\t\tconsumable.add( markerRange, eventName );\n\n\t\tthis.conversionApi.consumable = consumable;\n\n\t\tthis.fire( eventName, { markerName, markerRange }, this.conversionApi );\n\n\t\t//\n\t\t// Do not fire events for each item inside the range if the range got consumed.\n\t\t//\n\t\tif ( !consumable.test( markerRange, eventName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\n\t\t// Then, fire an event for each item inside the marker range.\n\t\t//\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( markerRange, eventName );\n\n\t\tfor ( const item of markerRange.getItems() ) {\n\t\t\t// Do not fire event for already consumed items.\n\t\t\tif ( !this.conversionApi.consumable.test( item, eventName ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = { item, range: Range._createOn( item ), markerName, markerRange };\n\n\t\t\tthis.fire( eventName, data, this.conversionApi );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\n\t *\n\t * @fires removeMarker\n\t * @param {String} markerName Marker name.\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertMarkerRemove( markerName, markerRange, writer ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\tthis.fire( 'removeMarker:' + markerName, { markerName, markerRange }, this.conversionApi );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Maps model element \"insert\" reconversion for given event names. The event names must be fully specified:\n\t *\n\t * * For \"attribute\" change event it should include main element name, ie: `'attribute:attributeName:elementName'`.\n\t * * For child nodes change events, those should use child event name as well, ie:\n\t *     * For adding a node: `'insert:childElementName'`.\n\t *     * For removing a node: `'remove:childElementName'`.\n\t *\n\t * **Note**: This method should not be used directly. A reconversion is defined by `triggerBy` configuration of the `elementToElement()`\n\t * conversion helper.\n\t *\n\t * @protected\n\t * @param {String} modelName Main model element name for which events will trigger reconversion.\n\t * @param {String} eventName Name of an event that would trigger conversion for given model element.\n\t */\n\t_mapReconversionTriggerEvent( modelName, eventName ) {\n\t\tthis._reconversionEventsMapping.set( eventName, modelName );\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\n\t * assuming that the range has just been inserted to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createInsertConsumable( range ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\n\t\t\tconsumable.add( item, 'insert' );\n\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tconsumable.add( item, 'attribute:' + key );\n\t\t\t}\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Affected range.\n\t * @param {String} type Consumable type.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createConsumableForRange( range, type ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tconsumable.add( item, type );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n\t *\n\t * @private\n\t * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n\t * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createSelectionConsumable( selection, markers ) {\n\t\tconst consumable = new Consumable();\n\n\t\tconsumable.add( selection, 'selection' );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tconsumable.add( selection, 'addMarker:' + marker.name );\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconsumable.add( selection, 'attribute:' + key );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n\t *\n\t * @private\n\t * @fires insert\n\t * @fires attribute\n\t * @param {String} type Event type.\n\t * @param {Object} data Event data.\n\t */\n\t_testAndFire( type, data ) {\n\t\tif ( !this.conversionApi.consumable.test( data.item, type ) ) {\n\t\t\t// Do not fire event if the item was consumed.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fire( getEventName( type, data ), data, this.conversionApi );\n\t}\n\n\t/**\n\t * Clears conversion API object.\n\t *\n\t * @private\n\t */\n\t_clearConversionApi() {\n\t\tdelete this.conversionApi.writer;\n\t\tdelete this.conversionApi.consumable;\n\t}\n\n\t/**\n\t * Internal method for converting element insert. It will fire events for the inserted element and events for its attributes.\n\t *\n\t * @private\n\t * @fires insert\n\t * @fires attribute\n\t * @param {Object} data Event data.\n\t */\n\t_convertInsertWithAttributes( data ) {\n\t\tthis._testAndFire( 'insert', data );\n\n\t\t// Fire a separate addAttribute event for each attribute that was set on inserted items.\n\t\t// This is important because most attributes converters will listen only to add/change/removeAttribute events.\n\t\t// If we would not add this part, attributes on inserted nodes would not be converted.\n\t\tfor ( const key of data.item.getAttributeKeys() ) {\n\t\t\tdata.attributeKey = key;\n\t\t\tdata.attributeOldValue = null;\n\t\t\tdata.attributeNewValue = data.item.getAttribute( key );\n\n\t\t\tthis._testAndFire( `attribute:${ key }`, data );\n\t\t}\n\t}\n\n\t/**\n\t * Returns differ changes together with added \"reconvert\" type changes for {@link #reconvertElement}. Those are defined by\n\t * a `triggerBy` configuration for\n\t * {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`} conversion helper.\n\t *\n\t * This method will remove every mapped insert or remove change with a single \"reconvert\" changes.\n\t *\n\t * For instance: Having a `triggerBy` configuration defined for `<complex>` element that issues this element reconversion on\n\t * `foo` and `bar` attributes change, and a set of changes for this element:\n\t *\n\t *\t\tconst differChanges = [\n\t *\t\t\t{ type: 'attribute', attributeKey: 'foo', ... },\n\t *\t\t\t{ type: 'attribute', attributeKey: 'bar', ... },\n\t *\t\t\t{ type: 'attribute', attributeKey: 'baz', ... }\n\t *\t\t];\n\t *\n\t * This method will return:\n\t *\n\t *\t\tconst updatedChanges = [\n\t *\t\t\t{ type: 'reconvert', element: complexElementInstance },\n\t *\t\t\t{ type: 'attribute', attributeKey: 'baz', ... }\n\t *\t\t];\n\t *\n\t * In the example above the `'baz'` attribute change will fire an {@link #event:attribute attribute event}\n\t *\n\t * @param {module:engine/model/differ~Differ} differ The differ object with buffered changes.\n\t * @returns {Array.<Object>} Updated set of changes.\n\t * @private\n\t */\n\t_mapChangesWithAutomaticReconversion( differ ) {\n\t\tconst itemsToReconvert = new Set();\n\t\tconst updated = [];\n\n\t\tfor ( const entry of differ.getChanges() ) {\n\t\t\tconst position = entry.position || entry.range.start;\n\t\t\t// Cached parent - just in case. See https://github.com/ckeditor/ckeditor5/issues/6579.\n\t\t\tconst positionParent = position.parent;\n\t\t\tconst textNode = getTextNodeAtPosition( position, positionParent );\n\n\t\t\t// Reconversion is done only on elements so skip text changes.\n\t\t\tif ( textNode ) {\n\t\t\t\tupdated.push( entry );\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst element = entry.type === 'attribute' ? getNodeAfterPosition( position, positionParent, null ) : positionParent;\n\n\t\t\t// Case of text node set directly in root. For now used only in tests but can be possible when enabled in paragraph-like roots.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/762.\n\t\t\tif ( element.is( '$text' ) ) {\n\t\t\t\tupdated.push( entry );\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet eventName;\n\n\t\t\tif ( entry.type === 'attribute' ) {\n\t\t\t\teventName = `attribute:${ entry.attributeKey }:${ element.name }`;\n\t\t\t} else {\n\t\t\t\teventName = `${ entry.type }:${ entry.name }`;\n\t\t\t}\n\n\t\t\tif ( this._isReconvertTriggerEvent( eventName, element.name ) ) {\n\t\t\t\tif ( itemsToReconvert.has( element ) ) {\n\t\t\t\t\t// Element is already reconverted, so skip this change.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\titemsToReconvert.add( element );\n\n\t\t\t\t// Add special \"reconvert\" change.\n\t\t\t\tupdated.push( { type: 'reconvert', element } );\n\t\t\t} else {\n\t\t\t\tupdated.push( entry );\n\t\t\t}\n\t\t}\n\n\t\treturn updated;\n\t}\n\n\t/**\n\t * Checks if resulting change should trigger element reconversion.\n\t *\n\t * Those are defined by a `triggerBy` configuration for\n\t * {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`} conversion helper.\n\t *\n\t * @private\n\t * @param {String} eventName Event name to check.\n\t * @param {String} elementName Element name to check.\n\t * @returns {Boolean}\n\t */\n\t_isReconvertTriggerEvent( eventName, elementName ) {\n\t\treturn this._reconversionEventsMapping.get( eventName ) === elementName;\n\t}\n\n\t/**\n\t * Fired for inserted nodes.\n\t *\n\t * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\n\t * or {@link module:engine/model/element~Element#name name} of inserted element.\n\t *\n\t * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n\t *\n\t * @event insert\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Inserted item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for removed nodes.\n\t *\n\t * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\n\t * or the {@link module:engine/model/element~Element#name name} of removed element.\n\t *\n\t * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n\t *\n\t * @event remove\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\n\t * @param {Number} data.length Offset size of the removed node.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired in the following cases:\n\t *\n\t * * when an attribute has been added, changed, or removed from a node,\n\t * * when a node with an attribute is inserted,\n\t * * when collapsed model selection attribute is converted.\n\t *\n\t * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\n\t * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\n\t * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\n\t *\n\t * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\n\t *\n\t * @event attribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\n\t * or converted selection.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\n\t * @param {String} data.attributeKey Attribute key.\n\t * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\n\t * @param {*} data.attributeNewValue New attribute value.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for {@link module:engine/model/selection~Selection selection} changes.\n\t *\n\t * @event selection\n\t * @param {module:engine/model/selection~Selection} selection Selection that is converted.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside a marker is converted.\n\t *\n\t * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n\t * `addMarker:foo:bar` events.\n\t *\n\t * If the marker range is not collapsed:\n\t *\n\t * * the event is fired for each item in the marker range one by one,\n\t * * `conversionApi.consumable` includes each item of the marker range and the consumable value is same as event name.\n\t *\n\t * If the marker range is collapsed:\n\t *\n\t * * there is only one event,\n\t * * `conversionApi.consumable` includes marker range with event name.\n\t *\n\t * If selection inside a marker is converted:\n\t *\n\t * * there is only one event,\n\t * * `conversionApi.consumable` includes selection instance with event name.\n\t *\n\t * @event addMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\n\t * the selection that is being converted.\n\t * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\n\t * the marker range was not collapsed.\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\n\t * @param {String} data.markerName Marker name.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when marker is removed from the model.\n\t *\n\t * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n\t * `removeMarker:foo:bar` events.\n\t *\n\t * @event removeMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\n\t * @param {String} data.markerName Marker name.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n}\n\nmix( DowncastDispatcher, EmitterMixin );\n\n// Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\n// converted if they happen inside an element with custom conversion method.\n//\n// @param {module:engine/model/position~Position} modelPosition\n// @param {module:engine/model/markercollection~Marker} marker\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\nfunction shouldMarkerChangeBeConverted( modelPosition, marker, mapper ) {\n\tconst range = marker.getRange();\n\tconst ancestors = Array.from( modelPosition.getAncestors() );\n\tancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\n\tancestors.reverse();\n\n\tconst hasCustomHandling = ancestors.some( element => {\n\t\tif ( range.containsItem( element ) ) {\n\t\t\tconst viewElement = mapper.toViewElement( element );\n\n\t\t\treturn !!viewElement.getCustomProperty( 'addHighlight' );\n\t\t}\n\t} );\n\n\treturn !hasCustomHandling;\n}\n\nfunction getEventName( type, data ) {\n\tconst name = data.item.name || '$text';\n\n\treturn `${ type }:${ name }`;\n}\n\nfunction walkerValueToEventData( value ) {\n\tconst item = value.item;\n\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\n\n\treturn {\n\t\titem,\n\t\trange: itemRange\n\t};\n}\n\nfunction elementOrTextProxyToView( item, mapper ) {\n\tif ( item.is( 'textProxy' ) ) {\n\t\tconst mappedPosition = mapper.toViewPosition( Position._createBefore( item ) );\n\t\tconst positionParent = mappedPosition.parent;\n\n\t\treturn positionParent.is( '$text' ) ? positionParent : null;\n\t}\n\n\treturn mapper.toViewElement( item );\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher dispatcher}\n * fires its events.\n *\n * @interface module:engine/conversion/downcastdispatcher~DowncastConversionApi\n */\n\n/**\n * The {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} instance.\n *\n * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #dispatcher\n */\n\n/**\n * Stores information about what parts of processed model item are still waiting to be handled. After a piece of model item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/modelconsumable~ModelConsumable} #consumable\n */\n\n/**\n * The {@link module:engine/conversion/mapper~Mapper} instance.\n *\n * @member {module:engine/conversion/mapper~Mapper} #mapper\n */\n\n/**\n * The {@link module:engine/model/schema~Schema} instance set for the model that is downcast.\n *\n * @member {module:engine/model/schema~Schema} #schema\n */\n\n/**\n * The {@link module:engine/view/downcastwriter~DowncastWriter} instance used to manipulate data during conversion.\n *\n * @member {module:engine/view/downcastwriter~DowncastWriter} #writer\n */\n\n/**\n * An object with an additional configuration which can be used during conversion process. Available only for data downcast conversion.\n *\n * @member {Object} #options\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/selection\n */\n\nimport Position from './position';\nimport Node from './node';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\n * should have those attributes – e.g. whether you type a bolded text).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Selection {\n\t/**\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n\t * or creates an empty selection if no arguments were passed.\n\t *\n\t *\t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\tconst selection = writer.createSelection( documentSelection );\n\t *\n\t *\t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates selection at the given offset in the given element.\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tconstructor( selectable, placeOrOffset, options ) {\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Stores selection ranges.\n\t\t *\n\t\t * @protected\n\t\t * @type {Array.<module:engine/model/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * List of attributes set on current selection.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<String,*>}\n\t\t */\n\t\tthis._attrs = new Map();\n\n\t\tif ( selectable ) {\n\t\t\tthis.setTo( selectable, placeOrOffset, options );\n\t\t}\n\t}\n\n\t/**\n\t * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\n\t * by dragging the mouse, the anchor is where the user pressed the mouse button (the beginning of the selection).\n\t *\n\t * Anchor and {@link #focus} define the direction of the selection, which is important\n\t * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\n\t *\n\t * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\n\t * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\n\t *\n\t * May be set to `null` if there are no ranges in the selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.end : range.start;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Selection focus. Focus is the position where the selection ends. If a user is making a selection\n\t * by dragging the mouse, the focus is where the mouse cursor is.\n\t *\n\t * May be set to `null` if there are no ranges in the selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.start : range.end;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\n\t * and it is collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\tif ( length === 1 ) {\n\t\t\treturn this._ranges[ 0 ].isCollapsed;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the number of ranges in the selection.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\n\t * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns an iterable object that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterable.<module:engine/model/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield new Range( range.start, range.end );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? new Range( first.start, first.end ) : null;\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? new Range( last.start, last.end ) : null;\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst first = this.getFirstRange();\n\n\t\treturn first ? first.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable}.\n\t *\n\t *\t\t// Removes all selection's ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( ranges );\n\t *\n\t *\t\t// Sets selection to other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t\t// Sets selection to the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = new DocumentSelection( doc );\n\t *\t\tselection.setTo( documentSelection );\n\t *\n\t *\t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\n\t *\n\t *\t\t// Sets backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tsetTo( selectable, placeOrOffset, options ) {\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t} else if ( selectable instanceof Selection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t} else if ( selectable && typeof selectable.getRanges == 'function' ) {\n\t\t\t// We assume that the selectable is a DocumentSelection.\n\t\t\t// It can't be imported here, because it would lead to circular imports.\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], !!placeOrOffset && !!placeOrOffset.backward );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else if ( placeOrOffset !== undefined ) {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-setto-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'model-selection-setto-required-second-parameter', [ this, selectable ] );\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\tthis._setRanges( selectable, placeOrOffset && !!placeOrOffset.backward );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set the selection to the given place.\n\t\t\t *\n\t\t\t * Invalid parameters were specified when setting the selection. Common issues:\n\t\t\t *\n\t\t\t * * A {@link module:engine/model/textproxy~TextProxy} instance was passed instead of\n\t\t\t * a real {@link module:engine/model/text~Text}.\n\t\t\t * * View nodes were passed instead of model nodes.\n\t\t\t * * `null`/`undefined` was passed.\n\t\t\t *\n\t\t\t * @error model-selection-setto-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-selection-setto-not-selectable', [ this, selectable ] );\n\t\t}\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n\t * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\n\t *\n\t * @protected\n\t * @fires change:range\n\t * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n\t * or backward - from end to start (`true`).\n\t */\n\t_setRanges( newRanges, isLastBackward = false ) {\n\t\tnewRanges = Array.from( newRanges );\n\n\t\t// Check whether there is any range in new ranges set that is different than all already added ranges.\n\t\tconst anyNewRange = newRanges.some( newRange => {\n\t\t\tif ( !( newRange instanceof Range ) ) {\n\t\t\t\t/**\n\t\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\n\t\t\t\t *\n\t\t\t\t * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\n\t\t\t\t * Common mistakes leading to this error are:\n\t\t\t\t *\n\t\t\t\t * * using DOM `Range` object,\n\t\t\t\t * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-set-ranges-not-range\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-set-ranges-not-range',\n\t\t\t\t\t[ this, newRanges ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this._ranges.every( oldRange => {\n\t\t\t\treturn !oldRange.isEqual( newRange );\n\t\t\t} );\n\t\t} );\n\n\t\t// Don't do anything if nothing changed.\n\t\tif ( newRanges.length === this._ranges.length && !anyNewRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._removeAllRanges();\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._pushRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error model-selection-setfocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-selection-setfocus-no-ranges', [ this, itemOrPosition ] );\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tif ( this._ranges.length ) {\n\t\t\tthis._popRange();\n\t\t}\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._pushRange( new Range( newFocus, anchor ) );\n\t\t\tthis._lastRangeBackward = true;\n\t\t} else {\n\t\t\tthis._pushRange( new Range( anchor, newFocus ) );\n\t\t\tthis._lastRangeBackward = false;\n\t\t}\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t *\n\t * If given attribute was set on the selection, fires the {@link #event:change:range} event with\n\t * removed attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to remove.\n\t */\n\tremoveAttribute( key ) {\n\t\tif ( this.hasAttribute( key ) ) {\n\t\t\tthis._attrs.delete( key );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * If the attribute value has changed, fires the {@link #event:change:range} event with\n\t * the attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\tsetAttribute( key, value ) {\n\t\tif ( this.getAttribute( key ) !== value ) {\n\t\t\tthis._attrs.set( key, value );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getFirstRange().getContainedElement();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'model:selection' ); // -> true\n\t *\n\t *\t\tselection.is( 'view:selection' ); // -> false\n\t *\t\tselection.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' || type === 'model:selection';\n\t}\n\n\t/**\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\n\t * but will not return blocks nested in other blocks.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<blockQuote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</blockQuote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\n\t *\n\t *\t\t[<blockA></blockA>\n\t *\t\t<blockB>\n\t *\t\t\t<blockC></blockC>\n\t *\t\t\t<blockD></blockD>\n\t *\t\t</blockB>\n\t *\t\t<blockE></blockE>]\n\t *\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\n\t *\n\t * \t\t<block>\n\t *\t\t\t<blockA>[a</blockA>\n\t * \t\t\t<blockB>b]</blockB>\n\t * \t\t</block>\n\t *\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<paragraph>b</paragraph>\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\n\t *\n\t * @returns {Iterable.<module:engine/model/element~Element>}\n\t */\n\t* getSelectedBlocks() {\n\t\tconst visited = new WeakSet();\n\n\t\tfor ( const range of this.getRanges() ) {\n\t\t\t// Get start block of range in case of a collapsed range.\n\t\t\tconst startBlock = getParentBlock( range.start, visited );\n\n\t\t\tif ( startBlock && isTopBlockInRange( startBlock, range ) ) {\n\t\t\t\tyield startBlock;\n\t\t\t}\n\n\t\t\tfor ( const value of range.getWalker() ) {\n\t\t\t\tconst block = value.item;\n\n\t\t\t\tif ( value.type == 'elementEnd' && isUnvisitedTopBlock( block, visited, range ) ) {\n\t\t\t\t\tyield block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endBlock = getParentBlock( range.end, visited );\n\n\t\t\t// #984. Don't return the end block if the range ends right at its beginning.\n\t\t\tif ( endBlock && !range.end.isTouching( Position._createAt( endBlock, 0 ) ) && isTopBlockInRange( endBlock, range ) ) {\n\t\t\t\tyield endBlock;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n\t * touching the element's end.\n\t *\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n\t *\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\n\t * @returns {Boolean}\n\t */\n\tcontainsEntireContent( element = this.anchor.root ) {\n\t\tconst limitStartPosition = Position._createAt( element, 0 );\n\t\tconst limitEndPosition = Position._createAt( element, 'end' );\n\n\t\treturn limitStartPosition.isTouching( this.getFirstPosition() ) &&\n\t\t\tlimitEndPosition.isTouching( this.getLastPosition() );\n\t}\n\n\t/**\n\t * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n\t * if given range is intersecting with any range that is already stored in this selection.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to add.\n\t */\n\t_pushRange( range ) {\n\t\tthis._checkRange( range );\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to check.\n\t */\n\t_checkRange( range ) {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tif ( range.isIntersecting( this._ranges[ i ] ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range in the selection.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-range-intersects\n\t\t\t\t * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-range-intersects',\n\t\t\t\t\t[ this, range ],\n\t\t\t\t\t{ addedRange: range, intersectingRange: this._ranges[ i ] }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n\t * ensure proper ranges removal.\n\t *\n\t * @protected\n\t */\n\t_removeAllRanges() {\n\t\twhile ( this._ranges.length > 0 ) {\n\t\t\tthis._popRange();\n\t\t}\n\t}\n\n\t/**\n\t * Removes most recently added range from the selection.\n\t *\n\t * @protected\n\t */\n\t_popRange() {\n\t\tthis._ranges.pop();\n\t}\n\n\t/**\n\t * Fired when selection range(s) changed.\n\t *\n\t * @event change:range\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n\t * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n\t * changed because the structure of the model has been changed (which means an indirect change).\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n\t * which mean that they are not updated once the document changes.\n\t */\n\n\t/**\n\t * Fired when selection attribute changed.\n\t *\n\t * @event change:attribute\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n\t * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n\t * changed in the model and its attributes were refreshed (which means an indirect change).\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n\t * which mean that they are not updated once the document changes.\n\t * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n// Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\nfunction isUnvisitedBlock( element, visited ) {\n\tif ( visited.has( element ) ) {\n\t\treturn false;\n\t}\n\n\tvisited.add( element );\n\n\treturn element.root.document.model.schema.isBlock( element ) && element.parent;\n}\n\n// Checks if the given element is a $block was not previously visited and is a top block in a range.\nfunction isUnvisitedTopBlock( element, visited, range ) {\n\treturn isUnvisitedBlock( element, visited ) && isTopBlockInRange( element, range );\n}\n\n// Finds the lowest element in position's ancestors which is a block.\n// It will search until first ancestor that is a limit element.\n// Marks all ancestors as already visited to not include any of them later on.\nfunction getParentBlock( position, visited ) {\n\tconst element = position.parent;\n\tconst schema = element.root.document.model.schema;\n\n\tconst ancestors = position.parent.getAncestors( { parentFirst: true, includeSelf: true } );\n\n\tlet hasParentLimit = false;\n\n\tconst block = ancestors.find( element => {\n\t\t// Stop searching after first parent node that is limit element.\n\t\tif ( hasParentLimit ) {\n\t\t\treturn false;\n\t\t}\n\n\t\thasParentLimit = schema.isLimit( element );\n\n\t\treturn !hasParentLimit && isUnvisitedBlock( element, visited );\n\t} );\n\n\t// Mark all ancestors of this position's parent, because find() might've stopped early and\n\t// the found block may be a child of another block.\n\tancestors.forEach( element => visited.add( element ) );\n\n\treturn block;\n}\n\n// Checks if the blocks is not nested in other block inside a range.\n//\n// @param {module:engine/model/element~Element} block Block to check.\n// @param {module:engine/model/range~Range} range Range to check.\nfunction isTopBlockInRange( block, range ) {\n\tconst parentBlock = findAncestorBlock( block );\n\n\tif ( !parentBlock ) {\n\t\treturn true;\n\t}\n\n\t// Add loose flag to check as parentRange can be equal to range.\n\tconst isParentInRange = range.containsRange( Range._createOn( parentBlock ), true );\n\n\treturn !isParentInRange;\n}\n\n// Returns first ancestor block of a node.\n//\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/node~Node|undefined}\nfunction findAncestorBlock( node ) {\n\tconst schema = node.root.document.model.schema;\n\n\tlet parent = node.parent;\n\n\twhile ( parent ) {\n\t\tif ( schema.isBlock( parent ) ) {\n\t\t\treturn parent;\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n}\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/model/selection~Selection#setTo}\n *\n * @typedef {\n *     module:engine/model/selection~Selection|\n *     module:engine/model/documentselection~DocumentSelection|\n *     module:engine/model/position~Position|\n *     module:engine/model/range~Range|\n *     module:engine/model/node~Node|\n *     Iterable.<module:engine/model/range~Range>|\n *     null\n * } module:engine/model/selection~Selectable\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/documentselection\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\nimport Selection from './selection';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nconst storePrefix = 'selection:';\n\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class DocumentSelection {\n\t/**\n\t * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t *\n\t * @param {module:engine/model/document~Document} doc Document which owns this selection.\n\t */\n\tconstructor( doc ) {\n\t\t/**\n\t\t * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tthis._selection = new LiveSelection( doc );\n\n\t\tthis._selection.delegate( 'change:range' ).to( this );\n\t\tthis._selection.delegate( 'change:attribute' ).to( this );\n\t\tthis._selection.delegate( 'change:marker' ).to( this );\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n\t * Together with {@link #focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\n\t * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget hasOwnRange() {\n\t\treturn this._selection.hasOwnRange;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus}\n\t * precedes {@link #anchor}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\n\t *\n\t * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\n\t *\n\t * @readonly\n\t * @returns {Boolean}\n\t */\n\tget isGravityOverridden() {\n\t\treturn this._selection.isGravityOverridden;\n\t}\n\n\t/**\n\t * A collection of selection markers.\n\t * Marker is a selection marker when selection range is inside the marker range.\n\t *\n\t * @readonly\n\t * @type {module:utils/collection~Collection.<module:engine/model/markercollection~Marker>}\n\t */\n\tget markers() {\n\t\treturn this._selection.markers;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tget _ranges() {\n\t\treturn this._selection._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterable.<module:engine/model/range~Range>}\n\t */\n\tgetRanges() {\n\t\treturn this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\n\t * but will not return blocks nested in other blocks.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<blockQuote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</blockQuote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\n\t *\n\t *\t\t[<blockA></blockA>\n\t *\t\t<blockB>\n\t *\t\t\t<blockC></blockC>\n\t *\t\t\t<blockD></blockD>\n\t *\t\t</blockB>\n\t *\t\t<blockE></blockE>]\n\t *\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\n\t *\n\t * \t\t<block>\n\t *\t\t\t<blockA>[a</blockA>\n\t * \t\t\t<blockB>b]</blockB>\n\t * \t\t</block>\n\t *\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<paragraph>b</paragraph>\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\n\t *\n\t * @returns {Iterable.<module:engine/model/element~Element>}\n\t */\n\tgetSelectedBlocks() {\n\t\treturn this._selection.getSelectedBlocks();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n\t * touching the element's end.\n\t *\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n\t *\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\n\t * @returns {Boolean}\n\t */\n\tcontainsEntireContent( element ) {\n\t\treturn this._selection.containsEntireContent( element );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by document selection.\n\t */\n\tdestroy() {\n\t\tthis._selection.destroy();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._selection.getAttributeKeys();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._selection.getAttributes();\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._selection.getAttribute( key );\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._selection.hasAttribute( key );\n\t}\n\n\t/**\n\t * Refreshes selection attributes and markers according to the current position in the model.\n\t */\n\trefresh() {\n\t\tthis._selection._updateMarkers();\n\t\tthis._selection._updateAttributes( false );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'documentSelection' ); // -> true\n\t *\t\tselection.is( 'model:selection' ); // -> true\n\t *\t\tselection.is( 'model:documentSelection' ); // -> true\n\t *\n\t *\t\tselection.is( 'view:selection' ); // -> false\n\t *\t\tselection.is( 'element' ); // -> false\n\t *\t\tselection.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' ||\n\t\t\ttype == 'model:selection' ||\n\t\t\ttype == 'documentSelection' ||\n\t\t\ttype == 'model:documentSelection';\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelectionFocus\n\t * @protected\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\t_setFocus( itemOrPosition, offset ) {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable}.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelection\n\t * @protected\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\t_setTo( selectable, placeOrOffset, options ) {\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelectionAttribute\n\t * @protected\n\t * @param {String} key Key of the attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_setAttribute( key, value ) {\n\t\tthis._selection.setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\n\t * event with removed attribute key.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\n\t *\n\t * @see module:engine/model/writer~Writer#removeSelectionAttribute\n\t * @protected\n\t * @param {String} key Key of the attribute to remove.\n\t */\n\t_removeAttribute( key ) {\n\t\tthis._selection.removeAttribute( key );\n\t}\n\n\t/**\n\t * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n\t *\n\t * @protected\n\t * @returns {Iterable.<*>}\n\t */\n\t_getStoredAttributes() {\n\t\treturn this._selection._getStoredAttributes();\n\t}\n\n\t/**\n\t * Temporarily changes the gravity of the selection from the left to the right.\n\t *\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left\n\t * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\n\t *\n\t * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n\t * of the process.\n\t *\n\t * @see module:engine/model/writer~Writer#overrideSelectionGravity\n\t * @protected\n\t * @returns {String} The unique id which allows restoring the gravity.\n\t */\n\t_overrideGravity() {\n\t\treturn this._selection.overrideGravity();\n\t}\n\n\t/**\n\t * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\n\t *\n\t * Restoring the gravity is only possible using the unique identifier returned by\n\t * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\n\t * the same number of times it was overridden.\n\t *\n\t * @see module:engine/model/writer~Writer#restoreSelectionGravity\n\t * @protected\n\t * @param {String} uid The unique id returned by {@link #_overrideGravity}.\n\t */\n\t_restoreGravity( uid ) {\n\t\tthis._selection.restoreGravity( uid );\n\t}\n\n\t/**\n\t * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n\t *\n\t * @protected\n\t * @param {String} key Attribute key to convert.\n\t * @returns {String} Converted attribute key, applicable for selection store.\n\t */\n\tstatic _getStoreAttributeKey( key ) {\n\t\treturn storePrefix + key;\n\t}\n\n\t/**\n\t * Checks whether the given attribute key is an attribute stored on an element.\n\t *\n\t * @protected\n\t * @param {String} key\n\t * @returns {Boolean}\n\t */\n\tstatic _isStoreAttributeKey( key ) {\n\t\treturn key.startsWith( storePrefix );\n\t}\n}\n\nmix( DocumentSelection, EmitterMixin );\n\n/**\n * Fired when selection range(s) changed.\n *\n * @event change:range\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed because the structure of the model has been changed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n */\n\n/**\n * Fired when selection attribute changed.\n *\n * @event change:attribute\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed in the model and its attributes were refreshed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n */\n\n/**\n * Fired when selection marker(s) changed.\n *\n * @event change:marker\n * @param {Boolean} directChange This is always set to `false` in case of `change:marker` event as there is no possibility\n * to change markers directly through {@link module:engine/model/documentselection~DocumentSelection} API.\n * See also {@link module:engine/model/documentselection~DocumentSelection#event:change:range} and\n * {@link module:engine/model/documentselection~DocumentSelection#event:change:attribute}.\n * @param {Array.<module:engine/model/markercollection~Marker>} oldMarkers Markers in which the selection was before the change.\n */\n\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\n//\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n//\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\n// present in the selection,\n// * ranges added to this selection updates automatically when the document changes,\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\n//\n// @extends module:engine/model/selection~Selection\n//\nclass LiveSelection extends Selection {\n\t// Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t// @param {module:engine/model/document~Document} doc Document which owns this selection.\n\tconstructor( doc ) {\n\t\tsuper();\n\n\t\t// List of selection markers.\n\t\t// Marker is a selection marker when selection range is inside the marker range.\n\t\t//\n\t\t// @type {module:utils/collection~Collection}\n\t\tthis.markers = new Collection( { idProperty: 'name' } );\n\n\t\t// Document which owns this selection.\n\t\t//\n\t\t// @protected\n\t\t// @member {module:engine/model/model~Model}\n\t\tthis._model = doc.model;\n\n\t\t// Document which owns this selection.\n\t\t//\n\t\t// @protected\n\t\t// @member {module:engine/model/document~Document}\n\t\tthis._document = doc;\n\n\t\t// Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n\t\t// last time. Possible values of priority are: `'low'` and `'normal'`.\n\t\t//\n\t\t// Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n\t\t// attributes API are set with `'normal'` priority.\n\t\t//\n\t\t// @private\n\t\t// @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\t\tthis._attributePriority = new Map();\n\n\t\t// Position to which the selection should be set if the last selection range was moved to the graveyard.\n\t\t// @private\n\t\t// @member {module:engine/model/position~Position} module:engine/model/liveselection~LiveSelection#_selectionRestorePosition\n\t\tthis._selectionRestorePosition = null;\n\n\t\t// Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\n\t\t// @private\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\n\t\tthis._hasChangedRange = false;\n\n\t\t// Each overriding gravity adds an UID to the set and each removal removes it.\n\t\t// Gravity is overridden when there's at least one UID in the set.\n\t\t// Gravity is restored when the set is empty.\n\t\t// This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\n\t\t// @private\n\t\t// @type {Set}\n\t\tthis._overriddenGravityRegister = new Set();\n\n\t\t// Ensure selection is correct after each operation.\n\t\tthis.listenTo( this._model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation || operation.type == 'marker' || operation.type == 'rename' || operation.type == 'noop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix selection if the last range was removed from it and we have a position to which we can restore the selection.\n\t\t\tif ( this._ranges.length == 0 && this._selectionRestorePosition ) {\n\t\t\t\tthis._fixGraveyardSelection( this._selectionRestorePosition );\n\t\t\t}\n\n\t\t\t// \"Forget\" the restore position even if it was not \"used\".\n\t\t\tthis._selectionRestorePosition = null;\n\n\t\t\tif ( this._hasChangedRange ) {\n\t\t\t\tthis._hasChangedRange = false;\n\t\t\t\tthis.fire( 'change:range', { directChange: false } );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Ensure selection is correct and up to date after each range change.\n\t\tthis.on( 'change:range', () => {\n\t\t\tfor ( const range of this.getRanges() ) {\n\t\t\t\tif ( !this._document._validateSelectionRange( range ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\n\t\t\t\t\t * starts or ends at incorrect position.\n\t\t\t\t\t *\n\t\t\t\t\t * @error document-selection-wrong-position\n\t\t\t\t\t * @param {module:engine/model/range~Range} range\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'document-selection-wrong-position',\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t{ range }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Update markers data stored by the selection after each marker change.\n\t\tthis.listenTo( this._model.markers, 'update', () => this._updateMarkers() );\n\n\t\t// Ensure selection is up to date after each change block.\n\t\tthis.listenTo( this._document, 'change', ( evt, batch ) => {\n\t\t\tclearAttributesStoredInElement( this._model, batch );\n\t\t} );\n\t}\n\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\treturn length === 0 ? this._document._getDefaultRange().isCollapsed : super.isCollapsed;\n\t}\n\n\tget anchor() {\n\t\treturn super.anchor || this._document._getDefaultRange().start;\n\t}\n\n\tget focus() {\n\t\treturn super.focus || this._document._getDefaultRange().end;\n\t}\n\n\tget rangeCount() {\n\t\treturn this._ranges.length ? this._ranges.length : 1;\n\t}\n\n\t// Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\n\t// {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n\t//\n\t// @readonly\n\t// @type {Boolean}\n\tget hasOwnRange() {\n\t\treturn this._ranges.length > 0;\n\t}\n\n\t// When set to `true` then selection attributes on node before the caret won't be taken\n\t// into consideration while updating selection attributes.\n\t//\n\t// @protected\n\t// @type {Boolean}\n\tget isGravityOverridden() {\n\t\treturn !!this._overriddenGravityRegister.size;\n\t}\n\n\t// Unbinds all events previously bound by live selection.\n\tdestroy() {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tthis._ranges[ i ].detach();\n\t\t}\n\n\t\tthis.stopListening();\n\t}\n\n\t* getRanges() {\n\t\tif ( this._ranges.length ) {\n\t\t\tyield* super.getRanges();\n\t\t} else {\n\t\t\tyield this._document._getDefaultRange();\n\t\t}\n\t}\n\n\tgetFirstRange() {\n\t\treturn super.getFirstRange() || this._document._getDefaultRange();\n\t}\n\n\tgetLastRange() {\n\t\treturn super.getLastRange() || this._document._getDefaultRange();\n\t}\n\n\tsetTo( selectable, optionsOrPlaceOrOffset, options ) {\n\t\tsuper.setTo( selectable, optionsOrPlaceOrOffset, options );\n\t\tthis._updateAttributes( true );\n\t\tthis._updateMarkers();\n\t}\n\n\tsetFocus( itemOrPosition, offset ) {\n\t\tsuper.setFocus( itemOrPosition, offset );\n\t\tthis._updateAttributes( true );\n\t\tthis._updateMarkers();\n\t}\n\n\tsetAttribute( key, value ) {\n\t\tif ( this._setAttribute( key, value ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\tremoveAttribute( key ) {\n\t\tif ( this._removeAttribute( key ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\toverrideGravity() {\n\t\tconst overrideUid = uid();\n\n\t\t// Remember that another overriding has been requested. It will need to be removed\n\t\t// before the gravity is to be restored.\n\t\tthis._overriddenGravityRegister.add( overrideUid );\n\n\t\tif ( this._overriddenGravityRegister.size === 1 ) {\n\t\t\tthis._updateAttributes( true );\n\t\t}\n\n\t\treturn overrideUid;\n\t}\n\n\trestoreGravity( uid ) {\n\t\tif ( !this._overriddenGravityRegister.has( uid ) ) {\n\t\t\t/**\n\t\t\t * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\n\t\t\t * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\n\t\t\t *\n\t\t\t * @error document-selection-gravity-wrong-restore\n\t\t\t * @param {String} uid The unique identifier returned by\n\t\t\t * {@link module:engine/model/documentselection~DocumentSelection#_overrideGravity}.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'document-selection-gravity-wrong-restore',\n\t\t\t\tthis,\n\t\t\t\t{ uid }\n\t\t\t);\n\t\t}\n\n\t\tthis._overriddenGravityRegister.delete( uid );\n\n\t\t// Restore gravity only when all overriding have been restored.\n\t\tif ( !this.isGravityOverridden ) {\n\t\t\tthis._updateAttributes( true );\n\t\t}\n\t}\n\n\t_popRange() {\n\t\tthis._ranges.pop().detach();\n\t}\n\n\t_pushRange( range ) {\n\t\tconst liveRange = this._prepareRange( range );\n\n\t\t// `undefined` is returned when given `range` is in graveyard root.\n\t\tif ( liveRange ) {\n\t\t\tthis._ranges.push( liveRange );\n\t\t}\n\t}\n\n\t// Prepares given range to be added to selection. Checks if it is correct,\n\t// converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n\t// and sets listeners listening to the range's change event.\n\t//\n\t// @private\n\t// @param {module:engine/model/range~Range} range\n\t_prepareRange( range ) {\n\t\tthis._checkRange( range );\n\n\t\tif ( range.root == this._document.graveyard ) {\n\t\t\t// @if CK_DEBUG // console.warn( 'Trying to add a Range that is in the graveyard root. Range rejected.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst liveRange = LiveRange.fromRange( range );\n\n\t\t// If selection range is moved to the graveyard remove it from the selection object.\n\t\t// Also, save some data that can be used to restore selection later, on `Model#applyOperation` event.\n\t\tliveRange.on( 'change:range', ( evt, oldRange, data ) => {\n\t\t\tthis._hasChangedRange = true;\n\n\t\t\tif ( liveRange.root == this._document.graveyard ) {\n\t\t\t\tthis._selectionRestorePosition = data.deletionPosition;\n\n\t\t\t\tconst index = this._ranges.indexOf( liveRange );\n\t\t\t\tthis._ranges.splice( index, 1 );\n\t\t\t\tliveRange.detach();\n\t\t\t}\n\t\t} );\n\n\t\treturn liveRange;\n\t}\n\n\t_updateMarkers() {\n\t\tconst markers = [];\n\t\tlet changed = false;\n\n\t\tfor ( const marker of this._model.markers ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tfor ( const selectionRange of this.getRanges() ) {\n\t\t\t\tif ( markerRange.containsRange( selectionRange, !selectionRange.isCollapsed ) ) {\n\t\t\t\t\tmarkers.push( marker );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst oldMarkers = Array.from( this.markers );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tif ( !this.markers.has( marker ) ) {\n\t\t\t\tthis.markers.add( marker );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\tfor ( const marker of Array.from( this.markers ) ) {\n\t\t\tif ( !markers.includes( marker ) ) {\n\t\t\t\tthis.markers.remove( marker );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( changed ) {\n\t\t\tthis.fire( 'change:marker', { oldMarkers, directChange: false } );\n\t\t}\n\t}\n\n\t// Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n\t//\n\t// @protected\n\t// @param {Boolean} clearAll\n\t// @fires change:attribute\n\t_updateAttributes( clearAll ) {\n\t\tconst newAttributes = toMap( this._getSurroundingAttributes() );\n\t\tconst oldAttributes = toMap( this.getAttributes() );\n\n\t\tif ( clearAll ) {\n\t\t\t// If `clearAll` remove all attributes and reset priorities.\n\t\t\tthis._attributePriority = new Map();\n\t\t\tthis._attrs = new Map();\n\t\t} else {\n\t\t\t// If not, remove only attributes added with `low` priority.\n\t\t\tfor ( const [ key, priority ] of this._attributePriority ) {\n\t\t\t\tif ( priority == 'low' ) {\n\t\t\t\t\tthis._attrs.delete( key );\n\t\t\t\t\tthis._attributePriority.delete( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._setAttributesTo( newAttributes );\n\n\t\t// Let's evaluate which attributes really changed.\n\t\tconst changed = [];\n\n\t\t// First, loop through all attributes that are set on selection right now.\n\t\t// Check which of them are different than old attributes.\n\t\tfor ( const [ newKey, newValue ] of this.getAttributes() ) {\n\t\t\tif ( !oldAttributes.has( newKey ) || oldAttributes.get( newKey ) !== newValue ) {\n\t\t\t\tchanged.push( newKey );\n\t\t\t}\n\t\t}\n\n\t\t// Then, check which of old attributes got removed.\n\t\tfor ( const [ oldKey ] of oldAttributes ) {\n\t\t\tif ( !this.hasAttribute( oldKey ) ) {\n\t\t\t\tchanged.push( oldKey );\n\t\t\t}\n\t\t}\n\n\t\t// Fire event with exact data (fire only if anything changed).\n\t\tif ( changed.length > 0 ) {\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: changed, directChange: false } );\n\t\t}\n\t}\n\n\t// Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t// parameter).\n\t//\n\t// @private\n\t// @param {String} key Attribute key.\n\t// @param {*} value Attribute value.\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t// is caused by `Batch` API.\n\t// @returns {Boolean} Whether value has changed.\n\t_setAttribute( key, value, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldValue = super.getAttribute( key );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( oldValue === value ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.set( key, value );\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\treturn true;\n\t}\n\n\t// Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t// parameter).\n\t//\n\t// NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\n\t// be changed according to `directChange` parameter.\n\t//\n\t// @private\n\t// @param {String} key Attribute key.\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t// is caused by `Batch` API.\n\t// @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n\t// existing attribute had higher priority.\n\t_removeAttribute( key, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( !super.hasAttribute( key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.delete( key );\n\n\t\treturn true;\n\t}\n\n\t// Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n\t// `directChange` parameter).\n\t//\n\t// @private\n\t// @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\n\t// @returns {Set.<String>} Changed attribute keys.\n\t_setAttributesTo( attrs ) {\n\t\tconst changed = new Set();\n\n\t\tfor ( const [ oldKey, oldValue ] of this.getAttributes() ) {\n\t\t\t// Do not remove attribute if attribute with same key and value is about to be set.\n\t\t\tif ( attrs.get( oldKey ) === oldValue ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// All rest attributes will be removed so changed attributes won't change .\n\t\t\tthis._removeAttribute( oldKey, false );\n\t\t}\n\n\t\tfor ( const [ key, value ] of attrs ) {\n\t\t\t// Attribute may not be set because of attributes or because same key/value is already added.\n\t\t\tconst gotAdded = this._setAttribute( key, value, false );\n\n\t\t\tif ( gotAdded ) {\n\t\t\t\tchanged.add( key );\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t// Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n\t//\n\t// @protected\n\t// @returns {Iterable.<*>}\n\t* _getStoredAttributes() {\n\t\tconst selectionParent = this.getFirstPosition().parent;\n\n\t\tif ( this.isCollapsed && selectionParent.isEmpty ) {\n\t\t\tfor ( const key of selectionParent.getAttributeKeys() ) {\n\t\t\t\tif ( key.startsWith( storePrefix ) ) {\n\t\t\t\t\tconst realKey = key.substr( storePrefix.length );\n\n\t\t\t\t\tyield [ realKey, selectionParent.getAttribute( key ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Checks model text nodes that are closest to the selection's first position and returns attributes of first\n\t// found element. If there are no text nodes in selection's first position parent, it returns selection\n\t// attributes stored in that parent.\n\t//\n\t// @private\n\t// @returns {Iterable.<*>} Collection of attributes.\n\t_getSurroundingAttributes() {\n\t\tconst position = this.getFirstPosition();\n\t\tconst schema = this._model.schema;\n\n\t\tlet attrs = null;\n\n\t\tif ( !this.isCollapsed ) {\n\t\t\t// 1. If selection is a range...\n\t\t\tconst range = this.getFirstRange();\n\n\t\t\t// ...look for a first character node in that range and take attributes from it.\n\t\t\tfor ( const value of range ) {\n\t\t\t\t// If the item is an object, we don't want to get attributes from its children.\n\t\t\t\tif ( value.item.is( 'element' ) && schema.isObject( value.item ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( value.type == 'text' ) {\n\t\t\t\t\tattrs = value.item.getAttributes();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// 2. If the selection is a caret or the range does not contain a character node...\n\n\t\t\tconst nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n\t\t\tconst nodeAfter = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\t\t// When gravity is overridden then don't take node before into consideration.\n\t\t\tif ( !this.isGravityOverridden ) {\n\t\t\t\t// ...look at the node before caret and take attributes from it if it is a character node.\n\t\t\t\tattrs = getAttrsIfCharacter( nodeBefore );\n\t\t\t}\n\n\t\t\t// 3. If not, look at the node after caret...\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = getAttrsIfCharacter( nodeAfter );\n\t\t\t}\n\n\t\t\t// 4. If not, try to find the first character on the left, that is in the same node.\n\t\t\t// When gravity is overridden then don't take node before into consideration.\n\t\t\tif ( !this.isGravityOverridden && !attrs ) {\n\t\t\t\tlet node = nodeBefore;\n\n\t\t\t\twhile ( node && !schema.isInline( node ) && !attrs ) {\n\t\t\t\t\tnode = node.previousSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 5. If not found, try to find the first character on the right, that is in the same node.\n\t\t\tif ( !attrs ) {\n\t\t\t\tlet node = nodeAfter;\n\n\t\t\t\twhile ( node && !schema.isInline( node ) && !attrs ) {\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 6. If not found, selection should retrieve attributes from parent.\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = this._getStoredAttributes();\n\t\t\t}\n\t\t}\n\n\t\treturn attrs;\n\t}\n\n\t// Fixes the selection after all its ranges got removed.\n\t//\n\t// @private\n\t// @param {module:engine/model/position~Position} deletionPosition Position where the deletion happened.\n\t_fixGraveyardSelection( deletionPosition ) {\n\t\t// Find a range that is a correct selection range and is closest to the position where the deletion happened.\n\t\tconst selectionRange = this._model.schema.getNearestSelectionRange( deletionPosition );\n\n\t\t// If nearest valid selection range has been found - add it in the place of old range.\n\t\tif ( selectionRange ) {\n\t\t\t// Check the range, convert it to live range, bind events, etc.\n\t\t\tthis._pushRange( selectionRange );\n\t\t}\n\t\t// If nearest valid selection range cannot be found don't add any range. Selection will be set to the default range.\n\t}\n}\n\n// Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\nfunction getAttrsIfCharacter( node ) {\n\tif ( node instanceof TextProxy || node instanceof Text ) {\n\t\treturn node.getAttributes();\n\t}\n\n\treturn null;\n}\n\n// Removes selection attributes from element which is not empty anymore.\n//\n// @param {module:engine/model/model~Model} model\n// @param {module:engine/model/batch~Batch} batch\nfunction clearAttributesStoredInElement( model, batch ) {\n\tconst differ = model.document.differ;\n\n\tfor ( const entry of differ.getChanges() ) {\n\t\tif ( entry.type != 'insert' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst changeParent = entry.position.parent;\n\t\tconst isNoLongerEmpty = entry.length === changeParent.maxOffset;\n\n\t\tif ( isNoLongerEmpty ) {\n\t\t\tmodel.enqueueChange( batch, writer => {\n\t\t\t\tconst storedAttributes = Array.from( changeParent.getAttributeKeys() )\n\t\t\t\t\t.filter( key => key.startsWith( storePrefix ) );\n\n\t\t\t\tfor ( const key of storedAttributes ) {\n\t\t\t\t\twriter.removeAttribute( key, changeParent );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversionhelpers\n */\n\n/**\n * Base class for conversion helpers.\n */\nexport default class ConversionHelpers {\n\t/**\n\t * Creates a conversion helpers instance.\n\t *\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\n\t */\n\tconstructor( dispatchers ) {\n\t\tthis._dispatchers = dispatchers;\n\t}\n\n\t/**\n\t * Registers a conversion helper.\n\t *\n\t * **Note**: See full usage example in the `{@link module:engine/conversion/conversion~Conversion#for conversion.for()}`\n\t * method description.\n\t *\n\t * @param {Function} conversionHelper The function to be called on event.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tadd( conversionHelper ) {\n\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\tconversionHelper( dispatcher );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\n *\n * @module engine/conversion/downcasthelpers\n */\n\nimport ModelRange from '../model/range';\nimport ModelSelection from '../model/selection';\nimport ModelElement from '../model/element';\n\nimport ViewAttributeElement from '../view/attributeelement';\nimport DocumentSelection from '../model/documentselection';\nimport ConversionHelpers from './conversionhelpers';\n\nimport { cloneDeep } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Downcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\nexport default class DowncastHelpers extends ConversionHelpers {\n\t/**\n\t * Model element to view element conversion helper.\n\t *\n\t * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'p'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'div',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'fancyParagraph',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'heading',\n\t *\t\t\tview: ( modelElement, conversionApi ) => {\n\t *\t\t\t\tconst { writer } = conversionApi;\n\t *\n\t *\t\t\t\treturn writer.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The element-to-element conversion supports a reconversion mechanism. This is helpful in conversion to complex view structures where\n\t * multiple atomic element-to-element and attribute-to-attribute or attribute-to-element could be used. By specifying `triggerBy`\n\t * events you can trigger reconverting model to a full view tree structures at once.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'complex',\n\t *\t\t\tview: ( modelElement, conversionApi ) => createComplexViewFromModel( modelElement, conversionApi ),\n\t *\t\t\ttriggerBy: {\n\t *\t\t\t\tattributes: [ 'foo', 'bar' ],\n\t *\t\t\t\tchildren: [ 'slot' ]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * You can read more about element-to-element conversion in the\n\t * {@glink framework/guides/deep-dive/conversion/custom-element-conversion Custom element conversion} guide.\n\t *\n\t * @method #elementToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model element to convert.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n\t * that takes the model element and {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API}\n\t * as parameters and returns a view container element.\n\t * @param {Object} [config.triggerBy] Re-conversion triggers. At least one trigger must be defined.\n\t * @param {Array.<String>} config.triggerBy.attributes Name of element's attributes which change will trigger element reconversion.\n\t * @param {Array.<String>} config.triggerBy.children Name of direct children that adding or removing will trigger element reconversion.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\telementToElement( config ) {\n\t\treturn this.add( downcastElementToElement( config ) );\n\t}\n\n\t/**\n\t * Model attribute to view element conversion helper.\n\t *\n\t * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\n\t * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'strong'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'b',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'invert',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tbig: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '1.2em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '0.8em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: ( modelAttributeValue, conversionApi ) => {\n\t *\t\t\t\tconst { writer } = conversionApi;\n\t *\n\t *\t\t\t\treturn writer.createAttributeElement( 'span', {\n\t *\t\t\t\t\tstyle: 'font-weight:' + modelAttributeValue\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'color',\n\t *\t\t\t\tname: '$text'\n\t *\t\t\t},\n\t *\t\t\tview: ( modelAttributeValue, conversionApi ) => {\n\t *\t\t\t\tconst { writer } = conversionApi;\n\t *\n\t *\t\t\t\treturn writer.createAttributeElement( 'span', {\n\t *\t\t\t\t\tstyle: 'color:' + modelAttributeValue\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n\t * of `String`s with possible values if the model attribute is an enumerable.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n\t * that takes the model attribute value and\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API} as parameters and returns a view\n\t * attribute element. If `config.model.values` is given, `config.view` should be an object assigning values from `config.model.values`\n\t * to view element definitions or functions.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tattributeToElement( config ) {\n\t\treturn this.add( downcastAttributeToElement( config ) );\n\t}\n\n\t/**\n\t * Model attribute to view attribute conversion helper.\n\t *\n\t * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\n\t * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tview: 'src'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tview: 'href',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'source'\n\t *\t\t\t},\n\t *\t\t\tview: 'src'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'styled',\n\t *\t\t\t\tvalues: [ 'dark', 'light' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tdark: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\n\t *\t\t\t\t},\n\t *\t\t\t\tlight: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'styled',\n\t *\t\t\tview: modelAttributeValue => ( {\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: 'styled-' + modelAttributeValue\n\t *\t\t\t} )\n\t *\t\t} );\n\t *\n\t * **Note**: Downcasting to a style property requires providing `value` as an object:\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'lineHeight',\n\t *\t\t\tview: modelAttributeValue => ( {\n\t *\t\t\t\tkey: 'style',\n\t *\t\t\t\tvalue: {\n\t *\t\t\t\t\t'line-height': modelAttributeValue,\n\t *\t\t\t\t\t'border-bottom': '1px dotted #ba2'\n\t *\t\t\t\t}\n\t *\t\t\t} )\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n\t * the attribute key, possible values and, optionally, an element name to convert from.\n\t * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n\t * the model attribute value and {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API}\n\t * as parameters and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n\t * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n\t * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n\t * `{ key, value }` objects or a functions.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tattributeToAttribute( config ) {\n\t\treturn this.add( downcastAttributeToAttribute( config ) );\n\t}\n\n\t/**\n\t * Model marker to view element conversion helper.\n\t *\n\t * **Note**: This method should be used only for editing downcast. For data downcast, use\n\t * {@link #markerToData `#markerToData()`} that produces valid HTML data.\n\t *\n\t * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\n\t * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\n\t * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: 'marker-search'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: 'search-result',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tattributes: {\n\t *\t\t\t\t\t'data-marker': 'search'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: ( markerData, conversionApi ) => {\n\t *\t\t\t\tconst { writer } = conversionApi;\n\t *\n\t *\t\t\t\treturn writer.createUIElement( 'span', {\n\t *\t\t\t\t\t'data-marker': 'search',\n\t *\t\t\t\t\t'data-start': markerData.isOpening\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\n\t * receives the `data` object and {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API}\n\t * as a parameters and should return an instance of the\n\t * {@link module:engine/view/uielement~UIElement view UI element}. The `data` object and\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi `conversionApi`} are passed from\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\n\t * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\n\t * the marker end boundary element.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function that\n\t * takes the model marker data and {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API}\n\t * as a parameters and returns a view UI element.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToElement( config ) {\n\t\treturn this.add( downcastMarkerToElement( config ) );\n\t}\n\n\t/**\n\t * Model marker to highlight conversion helper.\n\t *\n\t * This conversion results in creating a highlight on view nodes. For this kind of conversion,\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} should be provided.\n\t *\n\t * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\n\t * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\n\t * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\n\t *\n\t * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\n\t * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\n\t * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\n\t * in the view.\n\t *\n\t * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\n\t * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\n\t * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n\t *\t\t\tmodel: 'comment',\n\t *\t\t\tview: { classes: 'new-comment' },\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n\t *\t\t\tmodel: 'comment',\n\t *\t\t\tview: ( data, converstionApi ) => {\n\t *\t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\n\t *\t\t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\n\t *\n\t *\t\t\t\treturn {\n\t *\t\t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\n\t *\t\t\t\t};\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\n\t * receives the `data` object and {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API}\n\t * as a parameters and should return a\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor}.\n\t * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToHighlight\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n\t * that will be used for highlighting or a function that takes the model marker data and\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API} as a parameters\n\t * and returns a highlight descriptor.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToHighlight( config ) {\n\t\treturn this.add( downcastMarkerToHighlight( config ) );\n\t}\n\n\t/**\n\t * Model marker converter for data downcast.\n\t *\n\t * This conversion creates a representation for model marker boundaries in the view:\n\t *\n\t * * If the marker boundary is at a position where text nodes are allowed, then a view element with the specified tag name\n\t * and `name` attribute is added at this position.\n\t * * In other cases, a specified attribute is set on a view element that is before or after the marker boundary.\n\t *\n\t * Typically, marker names use the `group:uniqueId:otherData` convention. For example: `comment:e34zfk9k2n459df53sjl34:zx32c`.\n\t * The default configuration for this conversion is that the first part is the `group` part and the rest of\n\t * the marker name becomes the `name` part.\n\t *\n\t * Tag and attribute names and values are generated from the marker name:\n\t *\n\t * * Templates for attributes are `data-[group]-start-before=\"[name]\"`, `data-[group]-start-after=\"[name]\"`,\n\t * `data-[group]-end-before=\"[name]\"` and `data-[group]-end-after=\"[name]\"`.\n\t * * Templates for view elements are `<[group]-start name=\"[name]\">` and `<[group]-end name=\"[name]\">`.\n\t *\n\t * Attributes mark whether the given marker's start or end boundary is before or after the given element.\n\t * Attributes `data-[group]-start-before` and `data-[group]-end-after` are favored.\n\t * The other two are used when the former two cannot be used.\n\t *\n\t * The conversion configuration can take a function that will generate different group and name parts.\n\t * If such function is set as the `config.view` parameter, it is passed a marker name and it is expected to return an object with two\n\t * properties: `group` and `name`. If the function returns a falsy value, the conversion will not take place.\n\t *\n\t * Basic usage:\n\t *\n\t *\t\t// Using the default conversion.\n\t *\t\t// In this case, all markers whose name starts with 'comment:' will be converted.\n\t *\t\t// The `group` parameter will be set to `comment`.\n\t *\t\t// The `name` parameter will be the rest of the marker name (without `:`).\n\t *\t\teditor.conversion.for( 'dataDowncast' ).markerToData( {\n\t *\t\t\tmodel: 'comment'\n\t *\t\t} );\n\t *\n\t * An example of a view that may be generated by this conversion (assuming a marker with the name `comment:commentId:uid` marked\n\t * by `[]`):\n\t *\n\t *\t\t// Model:\n\t *\t\t<paragraph>Foo[bar</paragraph>\n\t *\t\t<image src=\"abc.jpg\"></image>]\n\t *\n\t *\t\t// View:\n\t *\t\t<p>Foo<comment-start name=\"commentId:uid\"></comment-start>bar</p>\n\t *\t\t<figure data-comment-end-after=\"commentId:uid\" class=\"image\"><img src=\"abc.jpg\" /></figure>\n\t *\n\t * In the example above, the comment starts before \"bar\" and ends after the image.\n\t *\n\t * If the `name` part is empty, the following view may be generated:\n\t *\n\t *\t\t<p>Foo <myMarker-start></myMarker-start>bar</p>\n\t *\t\t<figure data-myMarker-end-after=\"\" class=\"image\"><img src=\"abc.jpg\" /></figure>\n\t *\n\t * **Note:** A situation where some markers have the `name` part and some do not have it is incorrect and should be avoided.\n\t *\n\t * Examples where `data-group-start-after` and `data-group-end-before` are used:\n\t *\n\t *\t\t// Model:\n\t *\t\t<blockQuote>[]<paragraph>Foo</paragraph></blockQuote>\n\t *\n\t * \t\t// View:\n\t *\t\t<blockquote><p data-group-end-before=\"name\" data-group-start-before=\"name\">Foo</p></blockquote>\n\t *\n\t * Similarly, when a marker is collapsed after the last element:\n\t *\n\t *\t\t// Model:\n\t *\t\t<blockQuote><paragraph>Foo</paragraph>[]</blockQuote>\n\t *\n\t *\t\t// View:\n\t *\t\t<blockquote><p data-group-end-after=\"name\" data-group-start-after=\"name\">Foo</p></blockquote>\n\t *\n\t * When there are multiple markers from the same group stored in the same attribute of the same element, their\n\t * name parts are put together in the attribute value, for example: `data-group-start-before=\"name1,name2,name3\"`.\n\t *\n\t * Other examples of usage:\n\t *\n\t *\t\t// Using a custom function which is the same as the default conversion:\n\t *\t\teditor.conversion.for( 'dataDowncast' ).markerToData( {\n\t *\t\t\tmodel: 'comment'\n\t *\t\t\tview: markerName => ( {\n\t *\t\t\t\tgroup: 'comment',\n\t *\t\t\t\tname: markerName.substr( 8 ) // Removes 'comment:' part.\n\t *\t\t\t} )\n\t *\t\t} );\n\t *\n\t *\t\t// Using the converter priority:\n\t *\t\teditor.conversion.for( 'dataDowncast' ).markerToData( {\n\t *\t\t\tmodel: 'comment'\n\t *\t\t\tview: markerName => ( {\n\t *\t\t\t\tgroup: 'comment',\n\t *\t\t\t\tname: markerName.substr( 8 ) // Removes 'comment:' part.\n\t *\t\t\t} ),\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToData\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {Function} [config.view] A function that takes the model marker name and\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi downcast conversion API} as a parameters\n\t * and returns an object with the `group` and `name` properties.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToData( config ) {\n\t\treturn this.add( downcastMarkerToData( config ) );\n\t}\n}\n\n/**\n * Function factory that creates a default downcast converter for text insertion changes.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\nexport function insertText() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\t\tconst viewText = viewWriter.createText( data.item.data );\n\n\t\tviewWriter.insert( viewPosition, viewText );\n\t};\n}\n\n/**\n * Function factory that creates a default downcast converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\nexport function remove() {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Find view range start position by mapping model position at which the remove happened.\n\t\tconst viewStart = conversionApi.mapper.toViewPosition( data.position );\n\n\t\tconst modelEnd = data.position.getShiftedBy( data.length );\n\t\tconst viewEnd = conversionApi.mapper.toViewPosition( modelEnd, { isPhantom: true } );\n\n\t\tconst viewRange = conversionApi.writer.createRange( viewStart, viewEnd );\n\n\t\t// Trim the range to remove in case some UI elements are on the view range boundaries.\n\t\tconst removed = conversionApi.writer.remove( viewRange.getTrimmed() );\n\n\t\t// After the range is removed, unbind all view elements from the model.\n\t\t// Range inside view document fragment is used to unbind deeply.\n\t\tfor ( const child of conversionApi.writer.createRangeIn( removed ).getItems() ) {\n\t\t\tconversionApi.mapper.unbindViewElement( child );\n\t\t}\n\t};\n}\n\n/**\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\n * provided by the {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor} object. If a priority\n * is not provided in the descriptor, the default priority will be used.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createViewElementFromHighlightDescriptor( writer, descriptor ) {\n\tconst viewElement = writer.createAttributeElement( 'span', descriptor.attributes );\n\n\tif ( descriptor.classes ) {\n\t\tviewElement._addClass( descriptor.classes );\n\t}\n\n\tif ( descriptor.priority ) {\n\t\tviewElement._priority = descriptor.priority;\n\t}\n\n\tviewElement._id = descriptor.id;\n\n\treturn viewElement;\n}\n\n/**\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object and maps model positions from the selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\nexport function convertRangeSelection() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRanges = [];\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( range );\n\t\t\tviewRanges.push( viewRange );\n\t\t}\n\n\t\tconversionApi.writer.setSelection( viewRanges, { backward: selection.isBackward } );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object, maps the model selection position to the view position and breaks\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * An example of the view state before and after converting the collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\n * with different, appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/downcasthelpers~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\nexport function convertCollapsedSelection() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst modelPosition = selection.getFirstPosition();\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( modelPosition );\n\t\tconst brokenPosition = viewWriter.breakAttributes( viewPosition );\n\n\t\tviewWriter.setSelection( brokenPosition );\n\t};\n}\n\n/**\n * Function factory that creates a converter which clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/downcasthelpers~convertCollapsedSelection}\n * which does the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\nexport function clearAttributes() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tfor ( const range of viewSelection.getRanges() ) {\n\t\t\t// Not collapsed selection should not have artifacts.\n\t\t\tif ( range.isCollapsed ) {\n\t\t\t\t// Position might be in the node removed by the view writer.\n\t\t\t\tif ( range.end.parent.isAttached() ) {\n\t\t\t\t\tconversionApi.writer.mergeAttributes( range.start );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tviewWriter.setSelection( null );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\n * selection will be put inside it.\n *\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\n * but are represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When the provided `Function` does not return any element, no conversion will take place.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:bold', wrap( ( modelAttributeValue, { writer } ) => {\n *\t\t\treturn writer.createAttributeElement( 'strong' );\n *\t\t} );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\nexport function wrap( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\n\t\t// or the attribute was removed.\n\t\tconst oldViewElement = elementCreator( data.attributeOldValue, conversionApi );\n\n\t\t// Create node to wrap with.\n\t\tconst newViewElement = elementCreator( data.attributeNewValue, conversionApi );\n\n\t\tif ( !oldViewElement && !newViewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\n\t\t\t// Selection attribute conversion.\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), newViewElement );\n\t\t} else {\n\t\t\t// Node attribute conversion.\n\t\t\tlet viewRange = conversionApi.mapper.toViewRange( data.range );\n\n\t\t\t// First, unwrap the range from current wrapper.\n\t\t\tif ( data.attributeOldValue !== null && oldViewElement ) {\n\t\t\t\tviewRange = viewWriter.unwrap( viewRange, oldViewElement );\n\t\t\t}\n\n\t\t\tif ( data.attributeNewValue !== null && newViewElement ) {\n\t\t\t\tviewWriter.wrap( viewRange, newViewElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\n * The function passed will be provided with all the parameters of the dispatcher's\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be inserted into the view.\n *\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\n *\n *\t\tdowncastDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( modelItem, { writer } ) => {\n *\t\t\t\tconst text = writer.createText( 'myText' );\n *\t\t\t\tconst myElem = writer.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\n *\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertElement( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewElement = elementCreator( data.item, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n\t\tconversionApi.writer.insert( viewPosition, viewElement );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts marker adding change to the\n * {@link module:engine/view/uielement~UIElement view UI element}.\n *\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n *\n * @protected\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\n * that will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertUIElement( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Create two view elements. One will be inserted at the beginning of marker, one at the end.\n\t\t// If marker is collapsed, only \"opening\" element will be inserted.\n\t\tdata.isOpening = true;\n\t\tconst viewStartElement = elementCreator( data, conversionApi );\n\n\t\tdata.isOpening = false;\n\t\tconst viewEndElement = elementCreator( data, conversionApi );\n\n\t\tif ( !viewStartElement || !viewEndElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst markerRange = data.markerRange;\n\n\t\t// Marker that is collapsed has consumable build differently that non-collapsed one.\n\t\t// For more information see `addMarker` event description.\n\t\t// If marker's range is collapsed - check if it can be consumed.\n\t\tif ( markerRange.isCollapsed && !conversionApi.consumable.consume( markerRange, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If marker's range is not collapsed - consume all items inside.\n\t\tfor ( const value of markerRange ) {\n\t\t\tif ( !conversionApi.consumable.consume( value.item, evt.name ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst mapper = conversionApi.mapper;\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// Add \"opening\" element.\n\t\tviewWriter.insert( mapper.toViewPosition( markerRange.start ), viewStartElement );\n\t\tconversionApi.mapper.bindElementToMarker( viewStartElement, data.markerName );\n\n\t\t// Add \"closing\" element only if range is not collapsed.\n\t\tif ( !markerRange.isCollapsed ) {\n\t\t\tviewWriter.insert( mapper.toViewPosition( markerRange.end ), viewEndElement );\n\t\t\tconversionApi.mapper.bindElementToMarker( viewEndElement, data.markerName );\n\t\t}\n\n\t\tevt.stop();\n\t};\n}\n\n// Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\n// based on marker remove change.\n//\n// This converter unbinds elements from the marker name.\n//\n// @returns {Function} Removed UI element converter.\nfunction removeUIElement() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\t\t\tconversionApi.writer.clear( conversionApi.writer.createRangeOn( element ), element );\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\t};\n}\n\n// Function factory that creates a default converter for model markers.\n//\n// See {@link DowncastHelpers#markerToData} for more information what type of view is generated.\n//\n// This converter binds created UI elements and affected view elements with the marker name\n// using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n//\n// @returns {Function} Add marker converter.\nfunction insertMarkerData( viewCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewMarkerData = viewCreator( data.markerName, conversionApi );\n\n\t\tif ( !viewMarkerData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst markerRange = data.markerRange;\n\n\t\tif ( !conversionApi.consumable.consume( markerRange, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Adding closing data first to keep the proper order in the view.\n\t\thandleMarkerBoundary( markerRange, false, conversionApi, data, viewMarkerData );\n\t\thandleMarkerBoundary( markerRange, true, conversionApi, data, viewMarkerData );\n\n\t\tevt.stop();\n\t};\n}\n\n// Helper function for `insertMarkerData()` that marks a marker boundary at the beginning or end of given `range`.\nfunction handleMarkerBoundary( range, isStart, conversionApi, data, viewMarkerData ) {\n\tconst modelPosition = isStart ? range.start : range.end;\n\tconst canInsertElement = conversionApi.schema.checkChild( modelPosition, '$text' );\n\n\tif ( canInsertElement ) {\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( modelPosition );\n\n\t\tinsertMarkerAsElement( viewPosition, isStart, conversionApi, data, viewMarkerData );\n\t} else {\n\t\tlet modelElement;\n\t\tlet isBefore;\n\n\t\t// If possible, we want to add `data-group-start-before` and `data-group-end-after` attributes.\n\t\t// Below `if` is constructed in a way that will favor adding these attributes.\n\t\t//\n\t\t// Also, I assume that there will be always an element either after or before the position.\n\t\t// If not, then it is a case when we are not in a position where text is allowed and also there are no elements around...\n\t\tif ( isStart && modelPosition.nodeAfter || !isStart && !modelPosition.nodeBefore ) {\n\t\t\tmodelElement = modelPosition.nodeAfter;\n\t\t\tisBefore = true;\n\t\t} else {\n\t\t\tmodelElement = modelPosition.nodeBefore;\n\t\t\tisBefore = false;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( modelElement );\n\n\t\tinsertMarkerAsAttribute( viewElement, isStart, isBefore, conversionApi, data, viewMarkerData );\n\t}\n}\n\n// Helper function for `insertMarkerData()` that marks a marker boundary in the view as an attribute on a view element.\nfunction insertMarkerAsAttribute( viewElement, isStart, isBefore, conversionApi, data, viewMarkerData ) {\n\tconst attributeName = `data-${ viewMarkerData.group }-${ isStart ? 'start' : 'end' }-${ isBefore ? 'before' : 'after' }`;\n\n\tconst markerNames = viewElement.hasAttribute( attributeName ) ? viewElement.getAttribute( attributeName ).split( ',' ) : [];\n\n\t// Adding marker name at the beginning to have the same order in the attribute as there is with marker elements.\n\tmarkerNames.unshift( viewMarkerData.name );\n\n\tconversionApi.writer.setAttribute( attributeName, markerNames.join( ',' ), viewElement );\n\tconversionApi.mapper.bindElementToMarker( viewElement, data.markerName );\n}\n\n// Helper function for `insertMarkerData()` that marks a marker boundary in the view as a separate view ui element.\nfunction insertMarkerAsElement( position, isStart, conversionApi, data, viewMarkerData ) {\n\tconst viewElementName = `${ viewMarkerData.group }-${ isStart ? 'start' : 'end' }`;\n\n\tconst attrs = viewMarkerData.name ? { 'name': viewMarkerData.name } : null;\n\tconst viewElement = conversionApi.writer.createUIElement( viewElementName, attrs );\n\n\tconversionApi.writer.insert( position, viewElement );\n\tconversionApi.mapper.bindElementToMarker( viewElement, data.markerName );\n}\n\n// Function factory that creates a converter for removing a model marker data added by the {@link #insertMarkerData} converter.\n//\n// @returns {Function} Remove marker converter.\nfunction removeMarkerData( viewCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewData = viewCreator( data.markerName, conversionApi );\n\n\t\tif ( !viewData ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\n\t\t\tif ( element.is( 'containerElement' ) ) {\n\t\t\t\tremoveMarkerFromAttribute( `data-${ viewData.group }-start-before`, element );\n\t\t\t\tremoveMarkerFromAttribute( `data-${ viewData.group }-start-after`, element );\n\t\t\t\tremoveMarkerFromAttribute( `data-${ viewData.group }-end-before`, element );\n\t\t\t\tremoveMarkerFromAttribute( `data-${ viewData.group }-end-after`, element );\n\t\t\t} else {\n\t\t\t\tconversionApi.writer.clear( conversionApi.writer.createRangeOn( element ), element );\n\t\t\t}\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\n\t\tfunction removeMarkerFromAttribute( attributeName, element ) {\n\t\t\tif ( element.hasAttribute( attributeName ) ) {\n\t\t\t\tconst markerNames = new Set( element.getAttribute( attributeName ).split( ',' ) );\n\t\t\t\tmarkerNames.delete( viewData.name );\n\n\t\t\t\tif ( markerNames.size == 0 ) {\n\t\t\t\t\tconversionApi.writer.removeAttribute( attributeName, element );\n\t\t\t\t} else {\n\t\t\t\t\tconversionApi.writer.setAttribute( attributeName, Array.from( markerNames ).join( ',' ), element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n//\n// Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\n// a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\n// attributes on a one-to-one basis.\n//\n// *Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\n//\n// The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n// {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n//\n//\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\n//\t\t\t// Change attribute key from `customAttr` to `class` in the view.\n//\t\t\tconst key = 'class';\n//\t\t\tlet value = data.attributeNewValue;\n//\n//\t\t\t// Force attribute value to 'empty' if the model element is empty.\n//\t\t\tif ( data.item.childCount === 0 ) {\n//\t\t\t\tvalue = 'empty';\n//\t\t\t}\n//\n//\t\t\t// Return the key-value pair.\n//\t\t\treturn { key, value };\n//\t\t} ) );\n//\n// @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n// represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n// The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\n// @returns {Function} Set/change attribute converter.\nfunction changeAttribute( attributeCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst oldAttribute = attributeCreator( data.attributeOldValue, conversionApi );\n\t\tconst newAttribute = attributeCreator( data.attributeNewValue, conversionApi );\n\n\t\tif ( !oldAttribute && !newAttribute ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\n\t\t// Only elements can have attributes in a view so do not proceed for anything else (#1587).\n\t\tif ( !viewElement ) {\n\t\t\t/**\n\t\t\t * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\n\t\t\t * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\n\t\t\t * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\n\t\t\t *\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t\t\t *\t\t\tmodel: 'attribute-name',\n\t\t\t *\t\t\tview: 'attribute-name'\n\t\t\t *\t\t} ) );\n\t\t\t *\n\t\t\t * and given attribute is used on text node, for example:\n\t\t\t *\n\t\t\t *\t\tmodel.change( writer => {\n\t\t\t *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\n\t\t\t *\t\t} );\n\t\t\t *\n\t\t\t * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\n\t\t\t * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\n\t\t\t * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\n\t\t\t * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\n\t\t\t *\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\t *\t\t\tmodel: {\n\t\t\t *\t\t\t\tkey: 'attribute-name',\n\t\t\t *\t\t\t\tname: '$text'\n\t\t\t *\t\t\t},\n\t\t\t *\t\t\tview: ( value, { writer } ) => {\n\t\t\t *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\n\t\t\t *\t\t\t},\n\t\t\t *\t\t\tconverterPriority: 'high'\n\t\t\t *\t\t} ) );\n\t\t\t *\n\t\t\t * @error conversion-attribute-to-attribute-on-text\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'conversion-attribute-to-attribute-on-text',\n\t\t\t\t[ data, conversionApi ]\n\t\t\t);\n\t\t}\n\n\t\t// First remove the old attribute if there was one.\n\t\tif ( data.attributeOldValue !== null && oldAttribute ) {\n\t\t\tif ( oldAttribute.key == 'class' ) {\n\t\t\t\tconst classes = Array.isArray( oldAttribute.value ) ? oldAttribute.value : [ oldAttribute.value ];\n\n\t\t\t\tfor ( const className of classes ) {\n\t\t\t\t\tviewWriter.removeClass( className, viewElement );\n\t\t\t\t}\n\t\t\t} else if ( oldAttribute.key == 'style' ) {\n\t\t\t\tconst keys = Object.keys( oldAttribute.value );\n\n\t\t\t\tfor ( const key of keys ) {\n\t\t\t\t\tviewWriter.removeStyle( key, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewWriter.removeAttribute( oldAttribute.key, viewElement );\n\t\t\t}\n\t\t}\n\n\t\t// Then set the new attribute.\n\t\tif ( data.attributeNewValue !== null && newAttribute ) {\n\t\t\tif ( newAttribute.key == 'class' ) {\n\t\t\t\tconst classes = Array.isArray( newAttribute.value ) ? newAttribute.value : [ newAttribute.value ];\n\n\t\t\t\tfor ( const className of classes ) {\n\t\t\t\t\tviewWriter.addClass( className, viewElement );\n\t\t\t\t}\n\t\t\t} else if ( newAttribute.key == 'style' ) {\n\t\t\t\tconst keys = Object.keys( newAttribute.value );\n\n\t\t\t\tfor ( const key of keys ) {\n\t\t\t\t\tviewWriter.setStyle( key, newAttribute.value[ key ], viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewWriter.setAttribute( newAttribute.key, newAttribute.value, viewElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\n// {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\n// See {link module:engine/conversion/downcasthelpers~createViewElementFromHighlightDescriptor}.\n//\n// It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\n// created and the selection will be put inside it.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\n// using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction highlightText( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) && !data.item.is( '$textProxy' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewElement = createViewElementFromHighlightDescriptor( viewWriter, descriptor );\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement, viewSelection );\n\t\t} else {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\t\t\tconst rangeAfterWrap = viewWriter.wrap( viewRange, viewElement );\n\n\t\t\tfor ( const element of rangeAfterWrap.getItems() ) {\n\t\t\t\tif ( element.is( 'attributeElement' ) && element.isSimilar( viewElement ) ) {\n\t\t\t\t\tconversionApi.mapper.bindElementToMarker( element, data.markerName );\n\n\t\t\t\t\t// One attribute element is enough, because all of them are bound together by the view writer.\n\t\t\t\t\t// Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\n//\n// The converter checks if an element has the `addHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\n// In such case the converter will consume all element's children, assuming that they were handled by the element itself.\n//\n// When the `addHighlight` custom property is not present, the element is not converted in any special way.\n// This means that converters will proceed to convert the element's child nodes.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\n// the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction highlightElement( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( data.item instanceof ModelElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.test( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\n\t\tif ( viewElement && viewElement.getCustomProperty( 'addHighlight' ) ) {\n\t\t\t// Consume element itself.\n\t\t\tconversionApi.consumable.consume( data.item, evt.name );\n\n\t\t\t// Consume all children nodes.\n\t\t\tfor ( const value of ModelRange._createIn( data.item ) ) {\n\t\t\t\tconversionApi.consumable.consume( value.item, evt.name );\n\t\t\t}\n\n\t\t\tviewElement.getCustomProperty( 'addHighlight' )( viewElement, descriptor, conversionApi.writer );\n\n\t\t\tconversionApi.mapper.bindElementToMarker( viewElement, data.markerName );\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts the removing model marker to the view.\n//\n// Both text nodes and elements are handled by this converter but they are handled a bit differently.\n//\n// Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\n// provided highlight descriptor. See {link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n//\n// For elements, the converter checks if an element has the `removeHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\n// In such case, the children of that element will not be converted.\n//\n// When `removeHighlight` is not present, the element is not converted in any special way.\n// The converter will proceed to convert the element's child nodes instead.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter unbinds elements from the marker name.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction removeHighlight( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// This conversion makes sense only for non-collapsed range.\n\t\tif ( data.markerRange.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// View element that will be used to unwrap `AttributeElement`s.\n\t\tconst viewHighlightElement = createViewElementFromHighlightDescriptor( conversionApi.writer, descriptor );\n\n\t\t// Get all elements bound with given marker name.\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\n\t\t\tif ( element.is( 'attributeElement' ) ) {\n\t\t\t\tconversionApi.writer.unwrap( conversionApi.writer.createRangeOn( element ), viewHighlightElement );\n\t\t\t} else {\n\t\t\t\t// if element.is( 'containerElement' ).\n\t\t\t\telement.getCustomProperty( 'removeHighlight' )( element, descriptor.id, conversionApi.writer );\n\t\t\t}\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\t};\n}\n\n// Model element to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#elementToElement `.elementToElement()` downcast helper} for examples and config params description.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view\n// @param {Object} [config.triggerBy]\n// @param {Array.<String>} [config.triggerBy.attributes]\n// @param {Array.<String>} [config.triggerBy.children]\n// @returns {Function} Conversion helper.\nfunction downcastElementToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconfig.view = normalizeToElementConfig( config.view, 'container' );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'insert:' + config.model, insertElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\n\t\tif ( config.triggerBy ) {\n\t\t\tif ( config.triggerBy.attributes ) {\n\t\t\t\tfor ( const attributeKey of config.triggerBy.attributes ) {\n\t\t\t\t\tdispatcher._mapReconversionTriggerEvent( config.model, `attribute:${ attributeKey }:${ config.model }` );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( config.triggerBy.children ) {\n\t\t\t\tfor ( const childName of config.triggerBy.children ) {\n\t\t\t\t\tdispatcher._mapReconversionTriggerEvent( config.model, `insert:${ childName }` );\n\t\t\t\t\tdispatcher._mapReconversionTriggerEvent( config.model, `remove:${ childName }` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Model attribute to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToElement `.attributeToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n// of `String`s with possible values if the model attribute is an enumerable.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n// that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view attribute element. If `config.model.values` is\n// given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastAttributeToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst modelKey = config.model.key ? config.model.key : config.model;\n\tlet eventName = 'attribute:' + modelKey;\n\n\tif ( config.model.name ) {\n\t\teventName += ':' + config.model.name;\n\t}\n\n\tif ( config.model.values ) {\n\t\tfor ( const modelValue of config.model.values ) {\n\t\t\tconfig.view[ modelValue ] = normalizeToElementConfig( config.view[ modelValue ], 'attribute' );\n\t\t}\n\t} else {\n\t\tconfig.view = normalizeToElementConfig( config.view, 'attribute' );\n\t}\n\n\tconst elementCreator = getFromAttributeCreator( config );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, wrap( elementCreator ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model attribute to view attribute conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToAttribute `.attributeToAttribute()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n// the attribute key, possible values and, optionally, an element name to convert from.\n// @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n// the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n// array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n// If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n// `{ key, value }` objects or a functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastAttributeToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst modelKey = config.model.key ? config.model.key : config.model;\n\tlet eventName = 'attribute:' + modelKey;\n\n\tif ( config.model.name ) {\n\t\teventName += ':' + config.model.name;\n\t}\n\n\tif ( config.model.values ) {\n\t\tfor ( const modelValue of config.model.values ) {\n\t\t\tconfig.view[ modelValue ] = normalizeToAttributeConfig( config.view[ modelValue ] );\n\t\t}\n\t} else {\n\t\tconfig.view = normalizeToAttributeConfig( config.view );\n\t}\n\n\tconst elementCreator = getFromAttributeCreator( config );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, changeAttribute( elementCreator ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model marker data as a parameter and returns a view UI element.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconfig.view = normalizeToElementConfig( config.view, 'ui' );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + config.model, insertUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to view data conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToData `markerToData()` downcast helper} to learn more.\n//\n// @param {Object} config\n// @param {String} config.model\n// @param {Function} [config.view]\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal']\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToData( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst group = config.model;\n\n\t// Default conversion.\n\tif ( !config.view ) {\n\t\tconfig.view = markerName => ( {\n\t\t\tgroup,\n\t\t\tname: markerName.substr( config.model.length + 1 )\n\t\t} );\n\t}\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + group, insertMarkerData( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + group, removeMarkerData( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to highlight conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n// that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToHighlight( config ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightText( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeHighlight( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\n// to a function (because lower level converters accept only element creator functions).\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\n// @returns {Function} Element creator function to use in lower level converters.\nfunction normalizeToElementConfig( view, viewElementType ) {\n\tif ( typeof view == 'function' ) {\n\t\t// If `view` is already a function, don't do anything.\n\t\treturn view;\n\t}\n\n\treturn ( modelData, conversionApi ) => createViewElementFromDefinition( view, conversionApi, viewElementType );\n}\n\n// Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {'container'|'attribute'|'ui'} viewElementType\n// @returns {module:engine/view/element~Element}\nfunction createViewElementFromDefinition( viewElementDefinition, conversionApi, viewElementType ) {\n\tif ( typeof viewElementDefinition == 'string' ) {\n\t\t// If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\n\t\tviewElementDefinition = { name: viewElementDefinition };\n\t}\n\n\tlet element;\n\tconst viewWriter = conversionApi.writer;\n\tconst attributes = Object.assign( {}, viewElementDefinition.attributes );\n\n\tif ( viewElementType == 'container' ) {\n\t\telement = viewWriter.createContainerElement( viewElementDefinition.name, attributes );\n\t} else if ( viewElementType == 'attribute' ) {\n\t\tconst options = {\n\t\t\tpriority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\n\t\t};\n\n\t\telement = viewWriter.createAttributeElement( viewElementDefinition.name, attributes, options );\n\t} else {\n\t\t// 'ui'.\n\t\telement = viewWriter.createUIElement( viewElementDefinition.name, attributes );\n\t}\n\n\tif ( viewElementDefinition.styles ) {\n\t\tconst keys = Object.keys( viewElementDefinition.styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tviewWriter.setStyle( key, viewElementDefinition.styles[ key ], element );\n\t\t}\n\t}\n\n\tif ( viewElementDefinition.classes ) {\n\t\tconst classes = viewElementDefinition.classes;\n\n\t\tif ( typeof classes == 'string' ) {\n\t\t\tviewWriter.addClass( classes, element );\n\t\t} else {\n\t\t\tfor ( const className of classes ) {\n\t\t\t\tviewWriter.addClass( className, element );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction getFromAttributeCreator( config ) {\n\tif ( config.model.values ) {\n\t\treturn ( modelAttributeValue, conversionApi ) => {\n\t\t\tconst view = config.view[ modelAttributeValue ];\n\n\t\t\tif ( view ) {\n\t\t\t\treturn view( modelAttributeValue, conversionApi );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t} else {\n\t\treturn config.view;\n\t}\n}\n\n// Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\n// for generating a view attribute.\n//\n// @param {Object} view View configuration.\nfunction normalizeToAttributeConfig( view ) {\n\tif ( typeof view == 'string' ) {\n\t\treturn modelAttributeValue => ( { key: view, value: modelAttributeValue } );\n\t} else if ( typeof view == 'object' ) {\n\t\t// { key, value, ... }\n\t\tif ( view.value ) {\n\t\t\treturn () => view;\n\t\t}\n\t\t// { key, ... }\n\t\telse {\n\t\t\treturn modelAttributeValue => ( { key: view.key, value: modelAttributeValue } );\n\t\t}\n\t} else {\n\t\t// function.\n\t\treturn view;\n\t}\n}\n\n// Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\nfunction prepareDescriptor( highlightDescriptor, data, conversionApi ) {\n\t// If passed descriptor is a creator function, call it. If not, just use passed value.\n\tconst descriptor = typeof highlightDescriptor == 'function' ?\n\t\thighlightDescriptor( data, conversionApi ) :\n\t\thighlightDescriptor;\n\n\tif ( !descriptor ) {\n\t\treturn null;\n\t}\n\n\t// Apply default descriptor priority.\n\tif ( !descriptor.priority ) {\n\t\tdescriptor.priority = 10;\n\t}\n\n\t// Default descriptor id is marker name.\n\tif ( !descriptor.id ) {\n\t\tdescriptor.id = data.markerName;\n\t}\n\n\treturn descriptor;\n}\n\n/**\n * An object describing how the marker highlight should be represented in the view.\n *\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\n * described by this object.\n *\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\n *\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\n *  the element.\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\n *  given ID from the element.\n *\n * @typedef {Object} module:engine/conversion/downcasthelpers~HighlightDescriptor\n *\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n *\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\n *\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\n * the priority will be used to determine which descriptor is more important.\n *\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/autoparagraphing\n */\n\n/**\n * Fixes all empty roots.\n *\n * @protected\n * @param {module:engine/model/writer~Writer} writer The model writer.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\nexport function autoParagraphEmptyRoots( writer ) {\n\tconst { schema, document } = writer.model;\n\n\tfor ( const rootName of document.getRootNames() ) {\n\t\tconst root = document.getRoot( rootName );\n\n\t\tif ( root.isEmpty && !schema.checkChild( root, '$text' ) ) {\n\t\t\t// If paragraph element is allowed in the root, create paragraph element.\n\t\t\tif ( schema.checkChild( root, 'paragraph' ) ) {\n\t\t\t\twriter.insertElement( 'paragraph', root );\n\n\t\t\t\t// Other roots will get fixed in the next post-fixer round. Those will be triggered\n\t\t\t\t// in the same batch no matter if this method was triggered by the post-fixing or not\n\t\t\t\t// (the above insertElement call will trigger the post-fixers).\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if the given node wrapped with a paragraph would be accepted by the schema in the given position.\n *\n * @protected\n * @param {module:engine/model/position~Position} position The position at which to check.\n * @param {module:engine/model/node~Node|String} nodeOrType The child node or child type to check.\n * @param {module:engine/model/schema~Schema} schema A schema instance used for element validation.\n */\nexport function isParagraphable( position, nodeOrType, schema ) {\n\tconst context = schema.createContext( position );\n\n\t// When paragraph is allowed in this context...\n\tif ( !schema.checkChild( context, 'paragraph' ) ) {\n\t\treturn false;\n\t}\n\n\t// And a node would be allowed in this paragraph...\n\tif ( !schema.checkChild( context.push( 'paragraph' ), nodeOrType ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/**\n * Inserts a new paragraph at the given position and returns a position inside that paragraph.\n *\n * @protected\n * @param {module:engine/model/position~Position} position The position where a paragraph should be inserted.\n * @param {module:engine/model/writer~Writer} writer The model writer.\n * @returns {module:engine/model/position~Position} Position inside the created paragraph.\n */\nexport function wrapInParagraph( position, writer ) {\n\tconst paragraph = writer.createElement( 'paragraph' );\n\n\twriter.insert( paragraph, position );\n\n\treturn writer.createPositionAt( paragraph, 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Matcher from '../view/matcher';\nimport ConversionHelpers from './conversionhelpers';\n\nimport { cloneDeep } from 'lodash-es';\nimport { logWarning } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\nimport { isParagraphable, wrapInParagraph } from '../model/utils/autoparagraphing';\n\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\n *\n * @module engine/conversion/upcasthelpers\n */\n\n/**\n * Upcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\nexport default class UpcastHelpers extends ConversionHelpers {\n\t/**\n\t * View element to model element conversion helper.\n\t *\n\t * This conversion results in creating a model element. For example,\n\t * view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\n\t *\n\t * Keep in mind that the element will be inserted only if it is allowed\n\t * by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: 'p',\n\t *\t\t\tmodel: 'paragraph'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: 'p',\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t},\n\t *\t\t\tmodel: 'fancyParagraph'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t * \t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'heading'\n\t * \t\t\t},\n\t * \t\t\tmodel: ( viewElement, conversionApi ) => {\n\t * \t\t\t\tconst modelWriter = conversionApi.writer;\n\t *\n\t * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\n\t * \t\t\t}\n\t * \t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n\t * set, the converter will fire for every view element.\n\t * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element instance or a\n\t * function that takes a view element and {@link module:engine/conversion/upcastdispatcher~UpcastConversionApi upcast conversion API}\n\t * and returns a model element. The model element will be inserted in the model.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToElement( config ) {\n\t\treturn this.add( upcastElementToElement( config ) );\n\t}\n\n\t/**\n\t * View element to model attribute conversion helper.\n\t *\n\t * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\n\t * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\n\t *\n\t * This helper is meant to set a model attribute on all the elements that are inside the converted element:\n\t *\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n\t *\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute} for comparison.\n\t *\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: 'strong',\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: 'strong',\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: 'bold'\n\t *\t\t\t},\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled',\n\t *\t\t\t\tvalue: 'dark'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * \t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'font-size': /[\\s\\S]+/\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalue: ( viewElement, conversionApi ) => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\n\t *\n\t *\t\t\t\t\tif ( value <= 10 ) {\n\t *\t\t\t\t\t\treturn 'small';\n\t *\t\t\t\t\t} else if ( value > 12 ) {\n\t *\t\t\t\t\t\treturn 'big';\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n\t * the model attribute. `value` property may be set as a function that takes a view element and\n\t * {@link module:engine/conversion/upcastdispatcher~UpcastConversionApi upcast conversion API} and returns the value.\n\t * If `String` is given, the model attribute value will be set to `true`.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToAttribute( config ) {\n\t\treturn this.add( upcastElementToAttribute( config ) );\n\t}\n\n\t/**\n\t * View attribute to model attribute conversion helper.\n\t *\n\t * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\n\t * `<image source=\"foo.jpg\"></image>` in the model.\n\t *\n\t * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\n\t * is set only on the corresponding model node:\n\t *\n\t *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\n\t *\n\t * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute} which sets attributes for\n\t * all the children in the model:\n\t *\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n\t *\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\n\t *\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: 'src',\n\t *\t\t\tmodel: 'source'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: { key: 'src' },\n\t *\t\t\tmodel: 'source'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: { key: 'src' },\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tconverterPriority: 'normal'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tkey: 'data-style',\n\t *\t\t\t\tvalue: /[\\s\\S]+/\n\t *\t\t\t},\n\t *\t\t\tmodel: 'styled'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'img',\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: 'styled-dark'\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled',\n\t *\t\t\t\tvalue: 'dark'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: /styled-[\\S]+/\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled'\n\t *\t\t\t\tvalue: ( viewElement, conversionApi ) => {\n\t *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\n\t *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\n\t *\n\t *\t\t\t\t\treturn match[ 1 ];\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Converting styles works a bit differently as it requires `view.styles` to be an object and by default\n\t * a model attribute will be set to `true` by such a converter. You can set the model attribute to any value by providing the `value`\n\t * callback that returns the desired value.\n\t *\n\t *\t\t// Default conversion of font-weight style will result in setting bold attribute to true.\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'font-weight': 'bold'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\t// This converter will pass any style value to the `lineHeight` model attribute.\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'line-height': /[\\s\\S]+/\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'lineHeight',\n\t *\t\t\t\tvalue: ( viewElement, conversionApi ) => viewElement.getStyle( 'line-height' )\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n\t * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n\t * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n\t * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n\t * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n\t * the model attribute. `value` property may be set as a function that takes a view element and\n\t * {@link module:engine/conversion/upcastdispatcher~UpcastConversionApi upcast conversion API} and returns the value.\n\t * If `String` is given, the model attribute value will be same as view attribute value.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tattributeToAttribute( config ) {\n\t\treturn this.add( upcastAttributeToAttribute( config ) );\n\t}\n\n\t/**\n\t * View element to model marker conversion helper.\n\t *\n\t * **Note**: This method was deprecated. Please use {@link #dataToMarker} instead.\n\t *\n\t * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\n\t * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\n\t * after the conversion is done, the marker will be available in\n\t * {@link module:engine/model/model~Model#markers model document markers}.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: 'search'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: ( viewElement, conversionApi ) => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tattributes: {\n\t *\t\t\t\t\t'data-marker': 'search'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: 'search'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @deprecated\n\t * @method #elementToMarker\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n\t * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n\t * a model marker name.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToMarker( config ) {\n\t\t/**\n\t\t * The {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `UpcastHelpers#elementToMarker()`}\n\t\t * method was deprecated and will be removed in the near future.\n\t\t * Please use {@link module:engine/conversion/upcasthelpers~UpcastHelpers#dataToMarker `UpcastHelpers#dataToMarker()`} instead.\n\t\t *\n\t\t * @error upcast-helpers-element-to-marker-deprecated\n\t\t */\n\t\tlogWarning( 'upcast-helpers-element-to-marker-deprecated' );\n\n\t\treturn this.add( upcastElementToMarker( config ) );\n\t}\n\n\t/**\n\t * View-to-model marker conversion helper.\n\t *\n\t * Converts view data created by {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToData `#markerToData()`}\n\t * back to a model marker.\n\t *\n\t * This converter looks for specific view elements and view attributes that mark marker boundaries. See\n\t * {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToData `#markerToData()`} to learn what view data\n\t * is expected by this converter.\n\t *\n\t * The `config.view` property is equal to the marker group name to convert.\n\t *\n\t * By default, this converter creates markers with the `group:name` name convention (to match the default `markerToData` conversion).\n\t *\n\t * The conversion configuration can take a function that will generate a marker name.\n\t * If such function is set as the `config.model` parameter, it is passed the `name` part from the view element or attribute and it is\n\t * expected to return a string with the marker name.\n\t *\n\t * Basic usage:\n\t *\n\t *\t\t// Using the default conversion.\n\t *\t\t// In this case, all markers from the `comment` group will be converted.\n\t *\t\t// The conversion will look for `<comment-start>` and `<comment-end>` tags and\n\t *\t\t// `data-comment-start-before`, `data-comment-start-after`,\n\t *\t\t// `data-comment-end-before` and `data-comment-end-after` attributes.\n\t *\t\teditor.conversion.for( 'upcast' ).dataToMarker( {\n\t *\t\t\tview: 'comment'\n\t *\t\t} );\n\t *\n\t * An example of a model that may be generated by this conversion:\n\t *\n\t *\t\t// View:\n\t *\t\t<p>Foo<comment-start name=\"commentId:uid\"></comment-start>bar</p>\n\t *\t\t<figure data-comment-end-after=\"commentId:uid\" class=\"image\"><img src=\"abc.jpg\" /></figure>\n\t *\n\t *\t\t// Model:\n\t *\t\t<paragraph>Foo[bar</paragraph>\n\t *\t\t<image src=\"abc.jpg\"></image>]\n\t *\n\t * Where `[]` are boundaries of a marker that will receive the `comment:commentId:uid` name.\n\t *\n\t * Other examples of usage:\n\t *\n\t *\t\t// Using a custom function which is the same as the default conversion:\n\t *\t\teditor.conversion.for( 'upcast' ).dataToMarker( {\n\t *\t\t\tview: 'comment',\n\t *\t\t\tmodel: ( name, conversionApi ) => 'comment:' + name,\n\t *\t\t} );\n\t *\n\t *\t\t// Using the converter priority:\n\t *\t\teditor.conversion.for( 'upcast' ).dataToMarker( {\n\t *\t\t\tview: 'comment',\n\t *\t\t\tmodel: ( name, conversionApi ) => 'comment:' + name,\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #dataToMarker\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.view The marker group name to convert.\n\t * @param {Function} [config.model] A function that takes the `name` part from the view element or attribute and\n\t * {@link module:engine/conversion/upcastdispatcher~UpcastConversionApi upcast conversion API} and returns the marker name.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tdataToMarker( config ) {\n\t\treturn this.add( upcastDataToMarker( config ) );\n\t}\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\nexport function convertToModelFragment() {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n\t\tif ( !data.modelRange && conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\n\t\t\tconst { modelRange, modelCursor } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n\n\t\t\tdata.modelRange = modelRange;\n\t\t\tdata.modelCursor = modelCursor;\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\nexport function convertText() {\n\treturn ( evt, data, { schema, consumable, writer } ) => {\n\t\tlet position = data.modelCursor;\n\n\t\t// When node is already converted then do nothing.\n\t\tif ( !consumable.test( data.viewItem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !schema.checkChild( position, '$text' ) ) {\n\t\t\tif ( !isParagraphable( position, '$text', schema ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tposition = wrapInParagraph( position, writer );\n\t\t}\n\n\t\tconsumable.consume( data.viewItem );\n\n\t\tconst text = writer.createText( data.viewItem.data );\n\n\t\twriter.insert( text, position );\n\n\t\tdata.modelRange = writer.createRange(\n\t\t\tposition,\n\t\t\tposition.getShiftedBy( text.offsetSize )\n\t\t);\n\t\tdata.modelCursor = data.modelRange.end;\n\t};\n}\n\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/model~Model} model Data model.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\nexport function convertSelectionChange( model, mapper ) {\n\treturn ( evt, data ) => {\n\t\tconst viewSelection = data.newSelection;\n\n\t\tconst ranges = [];\n\n\t\tfor ( const viewRange of viewSelection.getRanges() ) {\n\t\t\tranges.push( mapper.toModelRange( viewRange ) );\n\t\t}\n\n\t\tconst modelSelection = model.createSelection( ranges, { backward: viewSelection.isBackward } );\n\n\t\tif ( !modelSelection.isEqual( model.document.selection ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( modelSelection );\n\t\t\t} );\n\t\t}\n\t};\n}\n\n// View element to model element conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToElement `.elementToElement()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n// set, the converter will fire for every view element.\n// @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n// instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst converter = prepareToElementConverter( config );\n\n\tconst elementName = getViewElementNameFromConfig( config.view );\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// View element to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToAttribute `.elementToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be set to `true`.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tnormalizeModelAttributeConfig( config );\n\n\tconst converter = prepareToAttributeConverter( config, false );\n\n\tconst elementName = getViewElementNameFromConfig( config.view );\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'low' } );\n\t};\n}\n\n// View attribute to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#attributeToAttribute `.attributeToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n// attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n// specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n// property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n// a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be same as view attribute value.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastAttributeToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tlet viewKey = null;\n\n\tif ( typeof config.view == 'string' || config.view.key ) {\n\t\tviewKey = normalizeViewAttributeKeyValueConfig( config );\n\t}\n\n\tnormalizeModelAttributeConfig( config, viewKey );\n\n\tconst converter = prepareToAttributeConverter( config, true );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element', converter, { priority: config.converterPriority || 'low' } );\n\t};\n}\n\n// View element to model marker conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToMarker `.elementToMarker()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n// a model marker name.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToMarker( config ) {\n\tconfig = cloneDeep( config );\n\n\tnormalizeElementToMarkerConfig( config );\n\n\treturn upcastElementToElement( config );\n}\n\n// View data to model marker conversion helper.\n//\n// See {@link ~UpcastHelpers#dataToMarker} to learn more.\n//\n// @param {Object} config\n// @param {String} config.view\n// @param {Function} [config.model]\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal']\n// @returns {Function} Conversion helper.\nfunction upcastDataToMarker( config ) {\n\tconfig = cloneDeep( config );\n\n\t// Default conversion.\n\tif ( !config.model ) {\n\t\tconfig.model = name => {\n\t\t\treturn name ? config.view + ':' + name : config.view;\n\t\t};\n\t}\n\n\tconst converterStart = prepareToElementConverter( normalizeDataToMarkerConfig( config, 'start' ) );\n\tconst converterEnd = prepareToElementConverter( normalizeDataToMarkerConfig( config, 'end' ) );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:' + config.view + '-start', converterStart, { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'element:' + config.view + '-end', converterEnd, { priority: config.converterPriority || 'normal' } );\n\n\t\t// Below is a hack that is needed to properly handle `converterPriority` for both elements and attributes.\n\t\t// Attribute conversion needs to be performed *after* element conversion.\n\t\t// This converter handles both element conversion and attribute conversion, which means that if a single\n\t\t// `config.converterPriority` is used, it will lead to problems. For example, if `'high'` priority is used,\n\t\t// then attribute conversion will be performed before a lot of element upcast converters.\n\t\t// On the other hand we want to support `config.converterPriority` and overwriting conveters.\n\t\t//\n\t\t// To have it work, we need to do some extra processing for priority for attribute converter.\n\t\t// Priority `'low'` value should be the base value and then we will change it depending on `config.converterPriority` value.\n\t\t//\n\t\t// This hack probably would not be needed if attributes are upcasted separately.\n\t\t//\n\t\tconst basePriority = priorities.get( 'low' );\n\t\tconst maxPriority = priorities.get( 'highest' );\n\t\tconst priorityFactor = priorities.get( config.converterPriority ) / maxPriority; // Number in range [ -1, 1 ].\n\n\t\tdispatcher.on( 'element', upcastAttributeToMarker( config ), { priority: basePriority + priorityFactor } );\n\t};\n}\n\n// Function factory, returns a callback function which converts view attributes to a model marker.\n//\n// The converter looks for elements with `data-group-start-before`, `data-group-start-after`, `data-group-end-before`\n// and `data-group-end-after` attributes and inserts `$marker` model elements before/after those elements.\n// `group` part is specified in `config.view`.\n//\n// @param {Object} config\n// @param {String} config.view\n// @param {Function} [config.model]\n// @returns {Function} Marker converter.\nfunction upcastAttributeToMarker( config ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst attrName = `data-${ config.view }`;\n\n\t\t// This converter wants to add a model element, marking a marker, before/after an element (or maybe even group of elements).\n\t\t// To do that, we can use `data.modelRange` which is set on an element (or a group of elements) that has been upcasted.\n\t\t// But, if the processed view element has not been upcasted yet (it does not have been converted), we need to\n\t\t// fire conversion for its children first, then we will have `data.modelRange` available.\n\t\tif ( !data.modelRange ) {\n\t\t\tdata = Object.assign( data, conversionApi.convertChildren( data.viewItem, data.modelCursor ) );\n\t\t}\n\n\t\tif ( conversionApi.consumable.consume( data.viewItem, { attributes: attrName + '-end-after' } ) ) {\n\t\t\taddMarkerElements( data.modelRange.end, data.viewItem.getAttribute( attrName + '-end-after' ).split( ',' ) );\n\t\t}\n\n\t\tif ( conversionApi.consumable.consume( data.viewItem, { attributes: attrName + '-start-after' } ) ) {\n\t\t\taddMarkerElements( data.modelRange.end, data.viewItem.getAttribute( attrName + '-start-after' ).split( ',' ) );\n\t\t}\n\n\t\tif ( conversionApi.consumable.consume( data.viewItem, { attributes: attrName + '-end-before' } ) ) {\n\t\t\taddMarkerElements( data.modelRange.start, data.viewItem.getAttribute( attrName + '-end-before' ).split( ',' ) );\n\t\t}\n\n\t\tif ( conversionApi.consumable.consume( data.viewItem, { attributes: attrName + '-start-before' } ) ) {\n\t\t\taddMarkerElements( data.modelRange.start, data.viewItem.getAttribute( attrName + '-start-before' ).split( ',' ) );\n\t\t}\n\n\t\tfunction addMarkerElements( position, markerViewNames ) {\n\t\t\tfor ( const markerViewName of markerViewNames ) {\n\t\t\t\tconst markerName = config.model( markerViewName, conversionApi );\n\t\t\t\tconst element = conversionApi.writer.createElement( '$marker', { 'data-name': markerName } );\n\n\t\t\t\tconversionApi.writer.insert( element, position );\n\n\t\t\t\tif ( data.modelCursor.isEqual( position ) ) {\n\t\t\t\t\tdata.modelCursor = data.modelCursor.getShiftedBy( 1 );\n\t\t\t\t} else {\n\t\t\t\t\tdata.modelCursor = data.modelCursor._getTransformedByInsertion( position, 1 );\n\t\t\t\t}\n\n\t\t\t\tdata.modelRange = data.modelRange._getTransformedByInsertion( position, 1 )[ 0 ];\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\n// and if so, returns it.\n//\n// @param {Object} config Conversion view config.\n// @returns {String|null} View element name or `null` if name is not directly set.\nfunction getViewElementNameFromConfig( viewConfig ) {\n\tif ( typeof viewConfig == 'string' ) {\n\t\treturn viewConfig;\n\t}\n\n\tif ( typeof viewConfig == 'object' && typeof viewConfig.name == 'string' ) {\n\t\treturn viewConfig.name;\n\t}\n\n\treturn null;\n}\n\n// Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\n//\n// @param {Object} config Conversion configuration.\n// @returns {Function} View to model converter.\nfunction prepareToElementConverter( config ) {\n\tconst matcher = new Matcher( config.view );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst matcherResult = matcher.match( data.viewItem );\n\n\t\tif ( !matcherResult ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = matcherResult.match;\n\n\t\t// Force consuming element's name.\n\t\tmatch.name = true;\n\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelElement = getModelElement( config.model, data.viewItem, conversionApi );\n\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.safeInsert( modelElement, data.modelCursor ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.consumable.consume( data.viewItem, match );\n\t\tconversionApi.convertChildren( data.viewItem, modelElement );\n\t\tconversionApi.updateConversionResult( modelElement, data );\n\t};\n}\n\n// Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\n// and a writer instance and returns a model element instance to be inserted in the model.\n//\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\n// @param {module:engine/view/node~Node} input The converted view node.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi The upcast conversion API.\nfunction getModelElement( model, input, conversionApi ) {\n\tif ( model instanceof Function ) {\n\t\treturn model( input, conversionApi );\n\t} else {\n\t\treturn conversionApi.writer.createElement( model );\n\t}\n}\n\n// Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\n// {@link module:engine/view/matcher~MatcherPattern}.\n//\n// @param {Object} config Conversion config.\n// @returns {String} Key of the converted view attribute.\nfunction normalizeViewAttributeKeyValueConfig( config ) {\n\tif ( typeof config.view == 'string' ) {\n\t\tconfig.view = { key: config.view };\n\t}\n\n\tconst key = config.view.key;\n\tlet normalized;\n\n\tif ( key == 'class' || key == 'style' ) {\n\t\tconst keyName = key == 'class' ? 'classes' : 'styles';\n\n\t\tnormalized = {\n\t\t\t[ keyName ]: config.view.value\n\t\t};\n\t} else {\n\t\tconst value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\n\n\t\tnormalized = {\n\t\t\tattributes: {\n\t\t\t\t[ key ]: value\n\t\t\t}\n\t\t};\n\t}\n\n\tif ( config.view.name ) {\n\t\tnormalized.name = config.view.name;\n\t}\n\n\tconfig.view = normalized;\n\n\treturn key;\n}\n\n// Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\n// `config.model` is an `Object` with `key` and `value` properties.\n//\n// @param {Object} config Conversion config.\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\n// will be equal to view attribute value.\nfunction normalizeModelAttributeConfig( config, viewAttributeKeyToCopy = null ) {\n\tconst defaultModelValue = viewAttributeKeyToCopy === null ? true : viewElement => viewElement.getAttribute( viewAttributeKeyToCopy );\n\n\tconst key = typeof config.model != 'object' ? config.model : config.model.key;\n\tconst value = typeof config.model != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\n\n\tconfig.model = { key, value };\n}\n\n// Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\n// a proper converter function.\n//\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\nfunction prepareToAttributeConverter( config, shallow ) {\n\tconst matcher = new Matcher( config.view );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst match = matcher.match( data.viewItem );\n\n\t\t// If there is no match, this callback should not do anything.\n\t\tif ( !match ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelKey = config.model.key;\n\t\tconst modelValue = typeof config.model.value == 'function' ?\n\t\t\tconfig.model.value( data.viewItem, conversionApi ) : config.model.value;\n\n\t\t// Do not convert if attribute building function returned falsy value.\n\t\tif ( modelValue === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onlyViewNameIsDefined( config.view, data.viewItem ) ) {\n\t\t\tmatch.match.name = true;\n\t\t} else {\n\t\t\t// Do not test or consume `name` consumable.\n\t\t\tdelete match.match.name;\n\t\t}\n\n\t\t// Try to consume appropriate values from consumable values list.\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match.match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Since we are converting to attribute we need an range on which we will set the attribute.\n\t\t// If the range is not created yet, we will create it.\n\t\tif ( !data.modelRange ) {\n\t\t\t// Convert children and set conversion result as a current data.\n\t\t\tdata = Object.assign( data, conversionApi.convertChildren( data.viewItem, data.modelCursor ) );\n\t\t}\n\n\t\t// Set attribute on current `output`. `Schema` is checked inside this helper function.\n\t\tconst attributeWasSet = setAttributeOn( data.modelRange, { key: modelKey, value: modelValue }, shallow, conversionApi );\n\n\t\tif ( attributeWasSet ) {\n\t\t\tconversionApi.consumable.consume( data.viewItem, match.match );\n\t\t}\n\t};\n}\n\n// Helper function that checks if element name should be consumed in attribute converters.\n//\n// @param {Object} config Conversion view config.\n// @returns {Boolean}\nfunction onlyViewNameIsDefined( viewConfig, viewItem ) {\n\t// https://github.com/ckeditor/ckeditor5-engine/issues/1786\n\tconst configToTest = typeof viewConfig == 'function' ? viewConfig( viewItem ) : viewConfig;\n\n\tif ( typeof configToTest == 'object' && !getViewElementNameFromConfig( configToTest ) ) {\n\t\treturn false;\n\t}\n\n\treturn !configToTest.classes && !configToTest.attributes && !configToTest.styles;\n}\n\n// Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\n// to ensure proper model structure.\n//\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\n// @param {Object} modelAttribute Model attribute to set.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion API.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\nfunction setAttributeOn( modelRange, modelAttribute, shallow, conversionApi ) {\n\tlet result = false;\n\n\t// Set attribute on each item in range according to Schema.\n\tfor ( const node of Array.from( modelRange.getItems( { shallow } ) ) ) {\n\t\tif ( conversionApi.schema.checkAttribute( node, modelAttribute.key ) ) {\n\t\t\tconversionApi.writer.setAttribute( modelAttribute.key, modelAttribute.value, node );\n\n\t\t\tresult = true;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\n// function and converts it to a format that is supported by `upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\nfunction normalizeElementToMarkerConfig( config ) {\n\tconst oldModel = config.model;\n\n\tconfig.model = ( viewElement, conversionApi ) => {\n\t\tconst markerName = typeof oldModel == 'string' ? oldModel : oldModel( viewElement, conversionApi );\n\n\t\treturn conversionApi.writer.createElement( '$marker', { 'data-name': markerName } );\n\t};\n}\n\n// Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastDataToMarker()`\n// function and converts it to a format that is supported by `upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\nfunction normalizeDataToMarkerConfig( config, type ) {\n\tconst configForElements = {};\n\n\t// Upcast <markerGroup-start> and <markerGroup-end> elements.\n\tconfigForElements.view = config.view + '-' + type;\n\n\tconfigForElements.model = ( viewElement, conversionApi ) => {\n\t\tconst viewName = viewElement.getAttribute( 'name' );\n\t\tconst markerName = config.model( viewName, conversionApi );\n\n\t\treturn conversionApi.writer.createElement( '$marker', { 'data-name': markerName } );\n\t};\n\n\treturn configForElements;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\n\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees, initDocumentDumping } = require( '../dev-utils/utils' );\n\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditingController {\n\t/**\n\t * Creates an editing controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Editing model.\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( model, stylesProcessor ) {\n\t\t/**\n\t\t * Editor model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Editing view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = new View( stylesProcessor );\n\n\t\t/**\n\t\t * Mapper which describes the model-view binding.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper,\n\t\t\tschema: model.schema\n\t\t} );\n\n\t\tconst doc = this.model.document;\n\t\tconst selection = doc.selection;\n\t\tconst markers = this.model.markers;\n\n\t\t// When plugins listen on model changes (on selection change, post fixers, etc.) and change the view as a result of\n\t\t// model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n\t\t// is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n\t\t//\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\t\tthis.listenTo( this.model, '_beforeChanges', () => {\n\t\t\tthis.view._disableRendering( true );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this.model, '_afterChanges', () => {\n\t\t\tthis.view._disableRendering( false );\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n\t\t// Do it on 'low' priority, so changes are converted after other listeners did their job.\n\t\t// Also convert model selection.\n\t\tthis.listenTo( doc, 'change', () => {\n\t\t\tthis.view.change( writer => {\n\t\t\t\tthis.downcastDispatcher.convertChanges( doc.differ, markers, writer );\n\t\t\t\tthis.downcastDispatcher.convertSelection( selection, markers, writer );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\n\t\t// Convert selection from the view to the model when it changes in the view.\n\t\tthis.listenTo( this.view.document, 'selectionChange', convertSelectionChange( this.model, this.mapper ) );\n\n\t\t// Attach default model converters.\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\t\tthis.downcastDispatcher.on( 'remove', remove(), { priority: 'low' } );\n\n\t\t// Attach default model selection converters.\n\t\tthis.downcastDispatcher.on( 'selection', clearAttributes(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertRangeSelection(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertCollapsedSelection(), { priority: 'low' } );\n\n\t\t// Binds {@link module:engine/view/document~Document#roots view roots collection} to\n\t\t// {@link module:engine/model/document~Document#roots model roots collection} so creating\n\t\t// model root automatically creates corresponding view root.\n\t\tthis.view.document.roots.bindTo( this.model.document.roots ).using( root => {\n\t\t\t// $graveyard is a special root that has no reflection in the view.\n\t\t\tif ( root.rootName == '$graveyard' ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewRoot = new RootEditableElement( this.view.document, root.name );\n\n\t\t\tviewRoot.rootName = root.rootName;\n\t\t\tthis.mapper.bindElements( root, viewRoot );\n\n\t\t\treturn viewRoot;\n\t\t} );\n\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.model.document );\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.view.document );\n\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.model.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.view.document, this.model.document.version );\n\n\t\t// @if CK_DEBUG_ENGINE // this.model.document.on( 'change', () => {\n\t\t// @if CK_DEBUG_ENGINE //\tdumpTrees( this.view.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n\t * by `EditingController` that need to be destroyed.\n\t */\n\tdestroy() {\n\t\tthis.view.destroy();\n\t\tthis.stopListening();\n\t}\n}\n\nmix( EditingController, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/commandcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\nexport default class CommandCollection {\n\t/**\n\t * Creates collection instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Command map.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._commands = new Map();\n\t}\n\n\t/**\n\t * Registers a new command.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @param {module:core/command~Command} command\n\t */\n\tadd( commandName, command ) {\n\t\tthis._commands.set( commandName, command );\n\t}\n\n\t/**\n\t * Retrieves a command from the collection.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @returns {module:core/command~Command}\n\t */\n\tget( commandName ) {\n\t\treturn this._commands.get( commandName );\n\t}\n\n\t/**\n\t * Executes a command.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @param {*} [...commandParams] Command parameters.\n\t * @returns {*} The value returned by the {@link module:core/command~Command#execute `command.execute()`}.\n\t */\n\texecute( commandName, ...args ) {\n\t\tconst command = this.get( commandName );\n\n\t\tif ( !command ) {\n\t\t\t/**\n\t\t\t * Command does not exist.\n\t\t\t *\n\t\t\t * @error commandcollection-command-not-found\n\t\t\t * @param {String} commandName Name of the command.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'commandcollection-command-not-found', this, { commandName } );\n\t\t}\n\n\t\treturn command.execute( ...args );\n\t}\n\n\t/**\n\t * Returns iterator of command names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tyield* this._commands.keys();\n\t}\n\n\t/**\n\t * Returns iterator of command instances.\n\t *\n\t * @returns {Iterable.<module:core/command~Command>}\n\t */\n\t* commands() {\n\t\tyield* this._commands.values();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Returns `[ commandName, commandInstance ]` pairs.\n\t *\n\t * @returns {Iterable.<Array>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._commands[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Destroys all collection commands.\n\t */\n\tdestroy() {\n\t\tfor ( const command of this.commands() ) {\n\t\t\tcommand.destroy();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\n\nimport { isArray } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\nexport default class ViewConsumable {\n\t/**\n\t * Creates new ViewConsumable.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n\t\t * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n\t\t * For {@link module:engine/view/text~Text text nodes} and\n\t\t * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n\t\t*/\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n\t *\n\t *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n\t *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\n\t *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\n\t *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\n\t *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n\t *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n\t *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing actual style/class.\n\t *\n\t *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t */\n\tadd( element, consumables ) {\n\t\tlet elementConsumables;\n\n\t\t// For text nodes and document fragments just mark them as consumable.\n\t\tif ( element.is( '$text' ) || element.is( 'documentFragment' ) ) {\n\t\t\tthis._consumables.set( element, true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// For elements create new ViewElementConsumables or update already existing one.\n\t\tif ( !this._consumables.has( element ) ) {\n\t\t\telementConsumables = new ViewElementConsumables( element );\n\t\t\tthis._consumables.set( element, elementConsumables );\n\t\t} else {\n\t\t\telementConsumables = this._consumables.get( element );\n\t\t}\n\n\t\telementConsumables.add( consumables );\n\t}\n\n\t/**\n\t * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n\t * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n\t * first already consumed item is found and `null` when first non-consumable item is found.\n\t *\n\t *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n\t *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\n\t *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\n\t *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\n\t *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\n\t *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n\t *\t\tviewConsumable.test( textNode ); // Tests text node.\n\t *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n\t *\n\t * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\n\t *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n\t * when first already consumed item is found and `null` when first non-consumable item is found.\n\t */\n\ttest( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// For text nodes and document fragments return stored boolean value.\n\t\tif ( element.is( '$text' ) || element.is( 'documentFragment' ) ) {\n\t\t\treturn elementConsumables;\n\t\t}\n\n\t\t// For elements test consumables object.\n\t\treturn elementConsumables.test( consumables );\n\t}\n\n\t/**\n\t * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n\t *\n\t *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n\t *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\n\t *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\n\t *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\n\t *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\n\t *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n\t *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n\t *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n\t *\n\t * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\n\t *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n\t * otherwise returns `false`.\n\t */\n\tconsume( element, consumables ) {\n\t\tif ( this.test( element, consumables ) ) {\n\t\t\tif ( element.is( '$text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments set value to false.\n\t\t\t\tthis._consumables.set( element, false );\n\t\t\t} else {\n\t\t\t\t// For elements - consume consumables object.\n\t\t\t\tthis._consumables.get( element ).consume( consumables );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n\t * Method does not revert items that were never previously added for consumption, even if they are included in\n\t * method's call.\n\t *\n\t *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n\t *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\n\t *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\n\t *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\n\t *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\n\t *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n\t *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n\t *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n\t *\n\t * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n\t * consumption.\n\t *\n\t *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\n\t *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t */\n\trevert( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables !== undefined ) {\n\t\t\tif ( element.is( '$text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments - set consumable to true.\n\t\t\t\tthis._consumables.set( element, true );\n\t\t\t} else {\n\t\t\t\t// For elements - revert items from consumables object.\n\t\t\t\telementConsumables.revert( consumables );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n\t * element's name and all its attributes, classes and styles.\n\t *\n\t * @static\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Object} consumables\n\t */\n\tstatic consumablesFromElement( element ) {\n\t\tconst consumables = {\n\t\t\telement,\n\t\t\tname: true,\n\t\t\tattributes: [],\n\t\t\tclasses: [],\n\t\t\tstyles: []\n\t\t};\n\n\t\tconst attributes = element.getAttributeKeys();\n\n\t\tfor ( const attribute of attributes ) {\n\t\t\t// Skip classes and styles - will be added separately.\n\t\t\tif ( attribute == 'style' || attribute == 'class' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconsumables.attributes.push( attribute );\n\t\t}\n\n\t\tconst classes = element.getClassNames();\n\n\t\tfor ( const className of classes ) {\n\t\t\tconsumables.classes.push( className );\n\t\t}\n\n\t\tconst styles = element.getStyleNames();\n\n\t\tfor ( const style of styles ) {\n\t\t\tconsumables.styles.push( style );\n\t\t}\n\n\t\treturn consumables;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n\t * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n\t *\n\t * @static\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n\t * from which `ViewConsumable` will be created.\n\t * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n\t * to add all consumables. It will be returned instead of a new instance.\n\t */\n\tstatic createFrom( from, instance ) {\n\t\tif ( !instance ) {\n\t\t\tinstance = new ViewConsumable( from );\n\t\t}\n\n\t\tif ( from.is( '$text' ) ) {\n\t\t\tinstance.add( from );\n\n\t\t\treturn instance;\n\t\t}\n\n\t\t// Add `from` itself, if it is an element.\n\t\tif ( from.is( 'element' ) ) {\n\t\t\tinstance.add( from, ViewConsumable.consumablesFromElement( from ) );\n\t\t}\n\n\t\tif ( from.is( 'documentFragment' ) ) {\n\t\t\tinstance.add( from );\n\t\t}\n\n\t\tfor ( const child of from.getChildren() ) {\n\t\t\tinstance = ViewConsumable.createFrom( child, instance );\n\t\t}\n\n\t\treturn instance;\n\t}\n}\n\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\nclass ViewElementConsumables {\n\t/**\n\t * Creates ViewElementConsumables instance.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n\t * from which `ViewElementConsumables` is being created.\n\t */\n\tconstructor( from ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t */\n\t\tthis.element = from;\n\n\t\t/**\n\t\t * Flag indicating if name of the element can be consumed.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._canConsumeName = null;\n\n\t\t/**\n\t\t * Contains maps of element's consumables: attributes, classes and styles.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._consumables = {\n\t\t\tattributes: new Map(),\n\t\t\tstyles: new Map(),\n\t\t\tclasses: new Map()\n\t\t};\n\t}\n\n\t/**\n\t * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n\t * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n\t * styles still could be consumed):\n\t *\n\t *\t\tconsumables.add( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n\t *\n\t * @param {Object} consumables Object describing which parts of the element can be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\n\t */\n\tadd( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._add( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n\t *\n\t * Element's name can be tested:\n\t *\n\t *\t\tconsumables.test( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be tested.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\n\t * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n\t * was never marked for consumption and `false` when even one of the items was already consumed.\n\t */\n\ttest( consumables ) {\n\t\t// Check if name can be consumed.\n\t\tif ( consumables.name && !this._canConsumeName ) {\n\t\t\treturn this._canConsumeName;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tconst value = this._test( type, consumables[ type ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return true only if all can be consumed.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n\t * is already consumed - it consumes all consumable items provided.\n\t * Element's name can be consumed:\n\t *\n\t *\t\tconsumables.consume( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\n\t */\n\tconsume( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = false;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._consume( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n\t * Element's name can be reverted:\n\t *\n\t *\t\tconsumables.revert( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be reverted.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\n\t */\n\trevert( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._revert( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that adds consumables of a given type: attribute, class or style.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * type is provided - it should be handled separately by providing actual style/class type.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_add( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Class and style attributes should be handled separately in\n\t\t\t\t * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\n\t\t\t\t *\n\t\t\t\t * What you have done is trying to use:\n\t\t\t\t *\n\t\t\t\t *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\n\t\t\t\t *\n\t\t\t\t * While each class and style should be registered separately:\n\t\t\t\t *\n\t\t\t\t *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\n\t\t\t\t *\n\t\t\t\t * @error viewconsumable-invalid-attribute\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'viewconsumable-invalid-attribute', this );\n\t\t\t}\n\n\t\t\tconsumables.set( name, true );\n\n\t\t\tif ( type === 'styles' ) {\n\t\t\t\tfor ( const alsoName of this.element.document.stylesProcessor.getRelatedStyles( name ) ) {\n\t\t\t\t\tconsumables.set( alsoName, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that tests consumables of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n\t * consumed and `false` when one of the items is already consumed.\n\t */\n\t_test( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// Check all classes/styles if class/style attribute is tested.\n\t\t\t\tconst value = this._test( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\t\t\t\t// Return null if attribute is not found.\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper method that consumes items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_consume( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// If class or style is provided for consumption - consume them all.\n\t\t\t\tthis._consume( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconsumables.set( name, false );\n\n\t\t\t\tif ( type == 'styles' ) {\n\t\t\t\t\tfor ( const toConsume of this.element.document.stylesProcessor.getRelatedStyles( name ) ) {\n\t\t\t\t\t\tconsumables.set( toConsume, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that reverts items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_revert( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// If class or style is provided for reverting - revert them all.\n\t\t\t\tthis._revert( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\n\t\t\t\tif ( value === false ) {\n\t\t\t\t\tconsumables.set( name, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/schema\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\nimport Range from './range';\nimport Position from './position';\nimport Element from './element';\nimport Text from './text';\nimport TreeWalker from './treewalker';\n\n/**\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\n * The schema is usually defined by features and based on them the editing framework and features\n * make decisions how to change and process the model.\n *\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\n *\n * Read more about the schema in:\n *\n * * {@glink framework/guides/architecture/editing-engine#schema Schema} section of the\n * {@glink framework/guides/architecture/editing-engine Introduction to the Editing engine architecture}.\n * * {@glink framework/guides/deep-dive/schema Schema deep dive} guide.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Schema {\n\t/**\n\t * Creates schema instance.\n\t */\n\tconstructor() {\n\t\tthis._sourceDefinitions = {};\n\n\t\t/**\n\t\t * A dictionary containing attribute properties.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>}\n\t\t */\n\t\tthis._attributeProperties = {};\n\n\t\tthis.decorate( 'checkChild' );\n\t\tthis.decorate( 'checkAttribute' );\n\n\t\tthis.on( 'checkAttribute', ( evt, args ) => {\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.on( 'checkChild', ( evt, args ) => {\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\n\t\t\targs[ 1 ] = this.getDefinition( args[ 1 ] );\n\t\t}, { priority: 'highest' } );\n\t}\n\n\t/**\n\t * Registers schema item. Can only be called once for every item name.\n\t *\n\t *\t\tschema.register( 'paragraph', {\n\t *\t\t\tinheritAllFrom: '$block'\n\t *\t\t} );\n\t *\n\t * @param {String} itemName\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\n\t */\n\tregister( itemName, definition ) {\n\t\tif ( this._sourceDefinitions[ itemName ] ) {\n\t\t\t/**\n\t\t\t * A single item cannot be registered twice in the schema.\n\t\t\t *\n\t\t\t * This situation may happen when:\n\t\t\t *\n\t\t\t * * Two or more plugins called {@link #register `register()`} with the same name. This will usually mean that\n\t\t\t * there is a collision between plugins which try to use the same element in the model. Unfortunately,\n\t\t\t * the only way to solve this is by modifying one of these plugins to use a unique model element name.\n\t\t\t * * A single plugin was loaded twice. This happens when it is installed by npm/yarn in two versions\n\t\t\t * and usually means one or more of the following issues:\n\t\t\t *     * a version mismatch (two of your dependencies require two different versions of this plugin),\n\t\t\t *     * incorrect imports (this plugin is somehow imported twice in a way which confuses webpack),\n\t\t\t *     * mess in `node_modules/` (`rm -rf node_modules/` may help).\n\t\t\t *\n\t\t\t * **Note:** Check the logged `itemName` to better understand which plugin was duplicated/conflicting.\n\t\t\t *\n\t\t\t * @param itemName The name of the model element that is being registered twice.\n\t\t\t * @error schema-cannot-register-item-twice\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'schema-cannot-register-item-twice',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\titemName\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis._sourceDefinitions[ itemName ] = [\n\t\t\tObject.assign( {}, definition )\n\t\t];\n\n\t\tthis._clearCache();\n\t}\n\n\t/**\n\t * Extends a {@link #register registered} item's definition.\n\t *\n\t * Extending properties such as `allowIn` will add more items to the existing properties,\n\t * while redefining properties such as `isBlock` will override the previously defined ones.\n\t *\n\t *\t\tschema.register( 'foo', {\n\t *\t\t\tallowIn: '$root',\n\t *\t\t\tisBlock: true;\n\t *\t\t} );\n\t *\t\tschema.extend( 'foo', {\n\t *\t\t\tallowIn: 'blockQuote',\n\t *\t\t\tisBlock: false\n\t *\t\t} );\n\t *\n\t *\t\tschema.getDefinition( 'foo' );\n\t *\t\t//\t{\n\t *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\n\t *\t\t// \t\tisBlock: false\n\t *\t\t//\t}\n\t *\n\t * @param {String} itemName\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\n\t */\n\textend( itemName, definition ) {\n\t\tif ( !this._sourceDefinitions[ itemName ] ) {\n\t\t\t/**\n\t\t\t * Cannot extend an item which was not registered yet.\n\t\t\t *\n\t\t\t * This error happens when a plugin tries to extend the schema definition of an item which was not\n\t\t\t * {@link #register registered} yet.\n\t\t\t *\n\t\t\t * @param itemName The name of the model element which is being extended.\n\t\t\t * @error schema-cannot-extend-missing-item\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'schema-cannot-extend-missing-item', this, {\n\t\t\t\titemName\n\t\t\t} );\n\t\t}\n\n\t\tthis._sourceDefinitions[ itemName ].push( Object.assign( {}, definition ) );\n\n\t\tthis._clearCache();\n\t}\n\n\t/**\n\t * Returns data of all registered items.\n\t *\n\t * This method should normally be used for reflection purposes (e.g. defining a clone of a certain element,\n\t * checking a list of all block elements, etc).\n\t * Use specific methods (such as {@link #checkChild `checkChild()`} or {@link #isLimit `isLimit()`})\n\t * in other cases.\n\t *\n\t * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\n\t */\n\tgetDefinitions() {\n\t\tif ( !this._compiledDefinitions ) {\n\t\t\tthis._compile();\n\t\t}\n\n\t\treturn this._compiledDefinitions;\n\t}\n\n\t/**\n\t * Returns a definition of the given item or `undefined` if an item is not registered.\n\t *\n\t * This method should normally be used for reflection purposes (e.g. defining a clone of a certain element,\n\t * checking a list of all block elements, etc).\n\t * Use specific methods (such as {@link #checkChild `checkChild()`} or {@link #isLimit `isLimit()`})\n\t * in other cases.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\n\t */\n\tgetDefinition( item ) {\n\t\tlet itemName;\n\n\t\tif ( typeof item == 'string' ) {\n\t\t\titemName = item;\n\t\t} else if ( item.is && ( item.is( '$text' ) || item.is( '$textProxy' ) ) ) {\n\t\t\titemName = '$text';\n\t\t}\n\t\t// Element or module:engine/model/schema~SchemaContextItem.\n\t\telse {\n\t\t\titemName = item.name;\n\t\t}\n\n\t\treturn this.getDefinitions()[ itemName ];\n\t}\n\n\t/**\n\t * Returns `true` if the given item is registered in the schema.\n\t *\n\t *\t\tschema.isRegistered( 'paragraph' ); // -> true\n\t *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\n\t *\t\tschema.isRegistered( 'foo' ); // -> false\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisRegistered( item ) {\n\t\treturn !!this.getDefinition( item );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * a block by the {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\n\t *\n\t *\t\tschema.isBlock( 'paragraph' ); // -> true\n\t *\t\tschema.isBlock( '$root' ); // -> false\n\t *\n\t *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\n\t *\t\tschema.isBlock( paragraphElement ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#block-elements Block elements} section of the Schema deep dive\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisBlock( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isBlock );\n\t}\n\n\t/**\n\t * Returns `true` if the given item should be treated as a limit element.\n\t *\n\t * It considers an item to be a limit element if its\n\t * {@link module:engine/model/schema~SchemaItemDefinition}'s\n\t * {@link module:engine/model/schema~SchemaItemDefinition#isLimit `isLimit`} or\n\t * {@link module:engine/model/schema~SchemaItemDefinition#isObject `isObject`} property\n\t * was set to `true`.\n\t *\n\t *\t\tschema.isLimit( 'paragraph' ); // -> false\n\t *\t\tschema.isLimit( '$root' ); // -> true\n\t *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\n\t *\t\tschema.isLimit( 'image' ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#limit-elements Limit elements} section of the Schema deep dive\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisLimit( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!( def.isLimit || def.isObject );\n\t}\n\n\t/**\n\t * Returns `true` if the given item should be treated as an object element.\n\t *\n\t * It considers an item to be an object element if its\n\t * {@link module:engine/model/schema~SchemaItemDefinition}'s\n\t * {@link module:engine/model/schema~SchemaItemDefinition#isObject `isObject`} property\n\t * was set to `true`.\n\t *\n\t *\t\tschema.isObject( 'paragraph' ); // -> false\n\t *\t\tschema.isObject( 'image' ); // -> true\n\t *\n\t *\t\tconst imageElement = writer.createElement( 'image' );\n\t *\t\tschema.isObject( imageElement ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#object-elements Object elements} section of the Schema deep dive\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisObject( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Note: Check out the implementation of #isLimit(), #isSelectable(), and #isContent()\n\t\t// to understand why these three constitute an object.\n\t\treturn !!( def.isObject || ( def.isLimit && def.isSelectable && def.isContent ) );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * an inline element by the {@link module:engine/model/schema~SchemaItemDefinition}'s `isInline` property.\n\t *\n\t *\t\tschema.isInline( 'paragraph' ); // -> false\n\t *\t\tschema.isInline( 'softBreak' ); // -> true\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\tschema.isInline( text ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#inline-elements Inline elements} section of the Schema deep dive\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisInline( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isInline );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * a selectable element by the {@link module:engine/model/schema~SchemaItemDefinition}'s `isSelectable` property.\n\t *\n\t *\t\tschema.isSelectable( 'paragraph' ); // -> false\n\t *\t\tschema.isSelectable( 'heading1' ); // -> false\n\t *\t\tschema.isSelectable( 'image' ); // -> true\n\t *\t\tschema.isSelectable( 'tableCell' ); // -> true\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\tschema.isSelectable( text ); // -> false\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#selectable-elements Selectable elements} section of the Schema deep dive}\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisSelectable( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!( def.isSelectable || def.isObject );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * a content by the {@link module:engine/model/schema~SchemaItemDefinition}'s `isContent` property.\n\t *\n\t *\t\tschema.isContent( 'paragraph' ); // -> false\n\t *\t\tschema.isContent( 'heading1' ); // -> false\n\t *\t\tschema.isContent( 'image' ); // -> true\n\t *\t\tschema.isContent( 'horizontalLine' ); // -> true\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\tschema.isContent( text ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#content-elements Content elements} section of the Schema deep dive}\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisContent( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!( def.isContent || def.isObject );\n\t}\n\n\t/**\n\t * Checks whether the given node (`child`) can be a child of the given context.\n\t *\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\n\t *\n\t *\t\tschema.register( 'paragraph', {\n\t *\t\t\tallowIn: '$root'\n\t *\t\t} );\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\n\t *\n\t * Note: When verifying whether the given node can be a child of the given context, the\n\t * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\n\t * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\n\t * It happens if one of the context's elements does not allow its child.\n\t *\n\t * @fires checkChild\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\n\t * @param {module:engine/model/node~Node|String} def The child to check.\n\t */\n\tcheckChild( context, def ) {\n\t\t// Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._checkContextMatch( def, context );\n\t}\n\n\t/**\n\t * Checks whether the given attribute can be applied in the given context (on the last\n\t * item of the context).\n\t *\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\n\t *\n\t *\t\tschema.extend( '$text', {\n\t *\t\t\tallowAttributes: 'bold'\n\t *\t\t} );\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\n\t *\n\t * @fires checkAttribute\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\n\t * @param {String} attributeName\n\t */\n\tcheckAttribute( context, attributeName ) {\n\t\tconst def = this.getDefinition( context.last );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn def.allowAttributes.includes( attributeName );\n\t}\n\n\t/**\n\t * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\n\t *\n\t * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\n\t *\n\t * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\n\t * will be valid.\n\t *\n\t * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\n\t * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\n\t *\n\t * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\n\t * element to which the `elementToMerge` will be merged.\n\t * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\n\t * @returns {Boolean}\n\t */\n\tcheckMerge( positionOrBaseElement, elementToMerge = null ) {\n\t\tif ( positionOrBaseElement instanceof Position ) {\n\t\t\tconst nodeBefore = positionOrBaseElement.nodeBefore;\n\t\t\tconst nodeAfter = positionOrBaseElement.nodeAfter;\n\n\t\t\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t\t\t/**\n\t\t\t\t * The node before the merge position must be an element.\n\t\t\t\t *\n\t\t\t\t * @error schema-check-merge-no-element-before\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'schema-check-merge-no-element-before',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t\t\t/**\n\t\t\t\t * The node after the merge position must be an element.\n\t\t\t\t *\n\t\t\t\t * @error schema-check-merge-no-element-after\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'schema-check-merge-no-element-after',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.checkMerge( nodeBefore, nodeAfter );\n\t\t}\n\n\t\tfor ( const child of elementToMerge.getChildren() ) {\n\t\t\tif ( !this.checkChild( positionOrBaseElement, child ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Allows registering a callback to the {@link #checkChild} method calls.\n\t *\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n\t * For example, by using this method you can disallow elements in specific contexts.\n\t *\n\t * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\n\t * you can use that event instead.\n\t *\n\t * Example:\n\t *\n\t *\t\t// Disallow heading1 directly inside a blockQuote.\n\t *\t\tschema.addChildCheck( ( context, childDefinition ) => {\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Which translates to:\n\t *\n\t *\t\tschema.on( 'checkChild', ( evt, args ) => {\n\t *\t\t\tconst context = args[ 0 ];\n\t *\t\t\tconst childDefinition = args[ 1 ];\n\t *\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n\t *\t\t\t\t// Prevent next listeners from being called.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t\t// Set the checkChild()'s return value.\n\t *\t\t\t\tevt.return = false;\n\t *\t\t\t}\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and\n\t * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\n\t * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\n\t */\n\taddChildCheck( callback ) {\n\t\tthis.on( 'checkChild', ( evt, [ ctx, childDef ] ) => {\n\t\t\t// checkChild() was called with a non-registered child.\n\t\t\t// In 99% cases such check should return false, so not to overcomplicate all callbacks\n\t\t\t// don't even execute them.\n\t\t\tif ( !childDef ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst retValue = callback( ctx, childDef );\n\n\t\t\tif ( typeof retValue == 'boolean' ) {\n\t\t\t\tevt.stop();\n\t\t\t\tevt.return = retValue;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Allows registering a callback to the {@link #checkAttribute} method calls.\n\t *\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n\t * For example, by using this method you can disallow attribute if node to which it is applied\n\t * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\n\t *\n\t * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\n\t * you can use that event instead.\n\t *\n\t * Example:\n\t *\n\t *\t\t// Disallow bold on $text inside heading1.\n\t *\t\tschema.addAttributeCheck( ( context, attributeName ) => {\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Which translates to:\n\t *\n\t *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n\t *\t\t\tconst context = args[ 0 ];\n\t *\t\t\tconst attributeName = args[ 1 ];\n\t *\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n\t *\t\t\t\t// Prevent next listeners from being called.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t\t// Set the checkAttribute()'s return value.\n\t *\t\t\t\tevt.return = false;\n\t *\t\t\t}\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\n\t * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\n\t */\n\taddAttributeCheck( callback ) {\n\t\tthis.on( 'checkAttribute', ( evt, [ ctx, attributeName ] ) => {\n\t\t\tconst retValue = callback( ctx, attributeName );\n\n\t\t\tif ( typeof retValue == 'boolean' ) {\n\t\t\t\tevt.stop();\n\t\t\t\tevt.return = retValue;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * This method allows assigning additional metadata to the model attributes. For example,\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties#isFormatting` property} is\n\t * used to mark formatting attributes (like `bold` or `italic`).\n\t *\n\t *\t\t// Mark bold as a formatting attribute.\n\t *\t\tschema.setAttributeProperties( 'bold', {\n\t *\t\t\tisFormatting: true\n\t *\t\t} );\n\t *\n\t *\t\t// Override code not to be considered a formatting markup.\n\t *\t\tschema.setAttributeProperties( 'code', {\n\t *\t\t\tisFormatting: false\n\t *\t\t} );\n\t *\n\t * Properties are not limited to members defined in the\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties` type} and you can also use custom properties:\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\tcustomProperty: 'value'\n\t *\t\t} );\n\t *\n\t * Subsequent calls with the same attribute will extend its custom properties:\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\tone: 1\n\t *\t\t} );\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\ttwo: 2\n\t *\t\t} );\n\t *\n\t *\t\tconsole.log( schema.getAttributeProperties( 'blockQuote' ) );\n\t *\t\t// Logs: { one: 1, two: 2 }\n\t *\n\t * @param {String} attributeName A name of the attribute to receive the properties.\n\t * @param {module:engine/model/schema~AttributeProperties} properties A dictionary of properties.\n\t */\n\tsetAttributeProperties( attributeName, properties ) {\n\t\tthis._attributeProperties[ attributeName ] = Object.assign( this.getAttributeProperties( attributeName ), properties );\n\t}\n\n\t/**\n\t * Returns properties associated with a given model attribute. See {@link #setAttributeProperties `setAttributeProperties()`}.\n\t *\n\t * @param {String} attributeName A name of the attribute.\n\t * @returns {module:engine/model/schema~AttributeProperties}\n\t */\n\tgetAttributeProperties( attributeName ) {\n\t\treturn this._attributeProperties[ attributeName ] || {};\n\t}\n\n\t/**\n\t * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\n\t * selection/range/position or the root otherwise.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n\t * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\n\t * The selection/range/position to check.\n\t * @returns {module:engine/model/element~Element} The lowest limit element containing\n\t * the entire `selectionOrRangeOrPosition`.\n\t */\n\tgetLimitElement( selectionOrRangeOrPosition ) {\n\t\tlet element;\n\n\t\tif ( selectionOrRangeOrPosition instanceof Position ) {\n\t\t\telement = selectionOrRangeOrPosition.parent;\n\t\t} else {\n\t\t\tconst ranges = selectionOrRangeOrPosition instanceof Range ?\n\t\t\t\t[ selectionOrRangeOrPosition ] :\n\t\t\t\tArray.from( selectionOrRangeOrPosition.getRanges() );\n\n\t\t\t// Find the common ancestor for all selection's ranges.\n\t\t\telement = ranges\n\t\t\t\t.reduce( ( element, range ) => {\n\t\t\t\t\tconst rangeCommonAncestor = range.getCommonAncestor();\n\n\t\t\t\t\tif ( !element ) {\n\t\t\t\t\t\treturn rangeCommonAncestor;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn element.getCommonAncestor( rangeCommonAncestor, { includeSelf: true } );\n\t\t\t\t}, null );\n\t\t}\n\n\t\twhile ( !this.isLimit( element ) ) {\n\t\t\tif ( element.parent ) {\n\t\t\t\telement = element.parent;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn element;\n\t}\n\n\t/**\n\t * Checks whether the attribute is allowed in selection:\n\t *\n\t * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n\t * * if the selection is collapsed, then checks if on the selection position there's a text with the\n\t * specified attribute allowed.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * Selection which will be checked.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Boolean}\n\t */\n\tcheckAttributeInSelection( selection, attribute ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\t\t\tconst context = [\n\t\t\t\t...firstPosition.getAncestors(),\n\t\t\t\tnew Text( '', selection.getAttributes() )\n\t\t\t];\n\n\t\t\t// Check whether schema allows for a text with the attribute in the selection.\n\t\t\treturn this.checkAttribute( context, attribute );\n\t\t} else {\n\t\t\tconst ranges = selection.getRanges();\n\n\t\t\t// For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tfor ( const value of range ) {\n\t\t\t\t\tif ( this.checkAttribute( value.item, attribute ) ) {\n\t\t\t\t\t\t// If we found a node that is allowed to have the attribute, return true.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we haven't found such node, return false.\n\t\treturn false;\n\t}\n\n\t/**\n\t * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n\t */\n\t* getValidRanges( ranges, attribute ) {\n\t\tranges = convertToMinimalFlatRanges( ranges );\n\n\t\tfor ( const range of ranges ) {\n\t\t\tyield* this._getValidRangesForRange( range, attribute );\n\t\t}\n\t}\n\n\t/**\n\t * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\n\t * nearest to that `position` and is a correct range for selection.\n\t *\n\t * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\n\t * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\n\t * the {@link module:engine/model/schema~Schema schema}.\n\t *\n\t * Direction of searching for the nearest correct selection range can be specified as:\n\t *\n\t * * `both` - searching will be performed in both ways,\n\t * * `forward` - searching will be performed only forward,\n\t * * `backward` - searching will be performed only backward.\n\t *\n\t * When valid selection range cannot be found, `null` is returned.\n\t *\n\t * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n\t * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n\t * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n\t */\n\tgetNearestSelectionRange( position, direction = 'both' ) {\n\t\t// Return collapsed range if provided position is valid.\n\t\tif ( this.checkChild( position, '$text' ) ) {\n\t\t\treturn new Range( position );\n\t\t}\n\n\t\tlet backwardWalker, forwardWalker;\n\n\t\t// Never leave a limit element.\n\t\tconst limitElement = position.getAncestors().reverse().find( item => this.isLimit( item ) ) || position.root;\n\n\t\tif ( direction == 'both' || direction == 'backward' ) {\n\t\t\tbackwardWalker = new TreeWalker( {\n\t\t\t\tboundaries: Range._createIn( limitElement ),\n\t\t\t\tstartPosition: position,\n\t\t\t\tdirection: 'backward'\n\t\t\t} );\n\t\t}\n\n\t\tif ( direction == 'both' || direction == 'forward' ) {\n\t\t\tforwardWalker = new TreeWalker( {\n\t\t\t\tboundaries: Range._createIn( limitElement ),\n\t\t\t\tstartPosition: position\n\t\t\t} );\n\t\t}\n\n\t\tfor ( const data of combineWalkers( backwardWalker, forwardWalker ) ) {\n\t\t\tconst type = ( data.walker == backwardWalker ? 'elementEnd' : 'elementStart' );\n\t\t\tconst value = data.value;\n\n\t\t\tif ( value.type == type && this.isObject( value.item ) ) {\n\t\t\t\treturn Range._createOn( value.item );\n\t\t\t}\n\n\t\t\tif ( this.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\t\treturn new Range( value.nextPosition );\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Tries to find position ancestors that allow to insert a given node.\n\t * It starts searching from the given position and goes node by node to the top of the model tree\n\t * as long as a {@link module:engine/model/schema~Schema#isLimit limit element}, an\n\t * {@link module:engine/model/schema~Schema#isObject object element} or a topmost ancestor is not reached.\n\t *\n\t * @param {module:engine/model/position~Position} position The position that the search will start from.\n\t * @param {module:engine/model/node~Node|String} node The node for which an allowed parent should be found or its name.\n\t * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\n\t */\n\tfindAllowedParent( position, node ) {\n\t\tlet parent = position.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( this.checkChild( parent, node ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\t// Do not split limit elements.\n\t\t\tif ( this.isLimit( parent ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes attributes disallowed by the schema.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n\tremoveDisallowedAttributes( nodes, writer ) {\n\t\tfor ( const node of nodes ) {\n\t\t\t// When node is a `Text` it has no children, so just filter it out.\n\t\t\tif ( node.is( '$text' ) ) {\n\t\t\t\tremoveDisallowedAttributeFromNode( this, node, writer );\n\t\t\t}\n\t\t\t// In a case of `Element` iterates through positions between nodes inside this element\n\t\t\t// and filter out node before the current position, or position parent when position\n\t\t\t// is at start of an element. Using positions prevent from omitting merged nodes\n\t\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/1789.\n\t\t\telse {\n\t\t\t\tconst rangeInNode = Range._createIn( node );\n\t\t\t\tconst positionsInRange = rangeInNode.getPositions();\n\n\t\t\t\tfor ( const position of positionsInRange ) {\n\t\t\t\t\tconst item = position.nodeBefore || position.parent;\n\n\t\t\t\t\tremoveDisallowedAttributeFromNode( this, item, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an instance of the schema context.\n\t *\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\n\t * @returns {module:engine/model/schema~SchemaContext}\n\t */\n\tcreateContext( context ) {\n\t\treturn new SchemaContext( context );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_clearCache() {\n\t\tthis._compiledDefinitions = null;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_compile() {\n\t\tconst compiledDefinitions = {};\n\t\tconst sourceRules = this._sourceDefinitions;\n\t\tconst itemNames = Object.keys( sourceRules );\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompiledDefinitions[ itemName ] = compileBaseItemRule( sourceRules[ itemName ], itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowContentOf( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowWhere( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowAttributesOf( compiledDefinitions, itemName );\n\t\t\tcompileInheritPropertiesFrom( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcleanUpAllowIn( compiledDefinitions, itemName );\n\t\t\tcleanUpAllowAttributes( compiledDefinitions, itemName );\n\t\t}\n\n\t\tthis._compiledDefinitions = compiledDefinitions;\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\n\t * @param {module:engine/model/schema~SchemaContext} context\n\t * @param {Number} contextItemIndex\n\t */\n\t_checkContextMatch( def, context, contextItemIndex = context.length - 1 ) {\n\t\tconst contextItem = context.getItem( contextItemIndex );\n\n\t\tif ( def.allowIn.includes( contextItem.name ) ) {\n\t\t\tif ( contextItemIndex == 0 ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst parentRule = this.getDefinition( contextItem );\n\n\t\t\t\treturn this._checkContextMatch( parentRule, context, contextItemIndex - 1 );\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\n\t * inside the given range on which the attribute can be applied.\n\t *\n\t * This is a helper function for {@link ~Schema#getValidRanges}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range The range to process.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n\t */\n\t* _getValidRangesForRange( range, attribute ) {\n\t\tlet start = range.start;\n\t\tlet end = range.start;\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\tyield* this._getValidRangesForRange( Range._createIn( item ), attribute );\n\t\t\t}\n\n\t\t\tif ( !this.checkAttribute( item, attribute ) ) {\n\t\t\t\tif ( !start.isEqual( end ) ) {\n\t\t\t\t\tyield new Range( start, end );\n\t\t\t\t}\n\n\t\t\t\tstart = Position._createAfter( item );\n\t\t\t}\n\n\t\t\tend = Position._createAfter( item );\n\t\t}\n\n\t\tif ( !start.isEqual( end ) ) {\n\t\t\tyield new Range( start, end );\n\t\t}\n\t}\n}\n\nmix( Schema, ObservableMixin );\n\n/**\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\n * additional behavior, for example implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkChild} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in various ways, but the most important use case is overriding standard behavior of the\n * `checkChild()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you do not have to worry about\n * the various ways how `context` and `child` may be passed to `checkChild()`.\n *\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\n *\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\", you can add such a listener:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing elements in specific contexts will be a far less common use case, because it is normally handled by the\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition}. But if you have a complex scenario\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkChild\n * @param {Array} args The `checkChild()`'s arguments.\n */\n\n/**\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\n * additional behavior, for example implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkAttribute} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in various ways, but the most important use case is overriding the standard behavior of the\n * `checkAttribute()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you do not have to worry about\n * the various ways how `context` may be passed to `checkAttribute()`.\n *\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1`, you can add such a listener:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing attributes in specific contexts will be a far less common use case, because it is normally handled by the\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition}. But if you have a complex scenario\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkAttribute\n * @param {Array} args The `checkAttribute()`'s arguments.\n */\n\n/**\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\n *\n * You can define the following rules:\n *\n * * {@link ~SchemaItemDefinition#allowIn `allowIn`} &ndash; Defines in which other items this item will be allowed.\n * * {@link ~SchemaItemDefinition#allowAttributes `allowAttributes`} &ndash; Defines allowed attributes of the given item.\n * * {@link ~SchemaItemDefinition#allowContentOf `allowContentOf`} &ndash; Inherits \"allowed children\" from other items.\n * * {@link ~SchemaItemDefinition#allowWhere `allowWhere`} &ndash; Inherits \"allowed in\" from other items.\n * * {@link ~SchemaItemDefinition#allowAttributesOf `allowAttributesOf`} &ndash; Inherits attributes from other items.\n * * {@link ~SchemaItemDefinition#inheritTypesFrom `inheritTypesFrom`} &ndash; Inherits `is*` properties of other items.\n * * {@link ~SchemaItemDefinition#inheritAllFrom `inheritAllFrom`} &ndash;\n * A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n *\n * # The `is*` properties\n *\n * There are a couple commonly used `is*` properties. Their role is to assign additional semantics to schema items.\n * You can define more properties but you will also need to implement support for them in the existing editor features.\n *\n * * {@link ~SchemaItemDefinition#isBlock `isBlock`} &ndash; Whether this item is paragraph-like.\n * Generally speaking, content is usually made out of blocks like paragraphs, list items, images, headings, etc.\n * * {@link ~SchemaItemDefinition#isInline `isInline`} &ndash; Whether an item is \"text-like\" and should be treated as an inline node.\n * Examples of inline elements: `$text`, `softBreak` (`<br>`), etc.\n * * {@link ~SchemaItemDefinition#isLimit `isLimit`} &ndash; It can be understood as whether this element\n * should not be split by <kbd>Enter</kbd>. Examples of limit elements: `$root`, table cell, image caption, etc.\n * In other words, all actions that happen inside a limit element are limited to its content.\n * All objects are treated as limit elements, too.\n * * {@link ~SchemaItemDefinition#isObject `isObject`} &ndash; Whether an item is \"self-contained\" and should be treated as a whole.\n * Examples of object elements: `image`, `table`, `video`, etc. An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n *\n * Read more about the meaning of these types in the\n * {@glink framework/guides/deep-dive/schema#defining-additional-semantics dedicated section of the Schema deep dive} guide.\n *\n * # Generic items\n *\n * There are three basic generic items: `$root`, `$block` and `$text`.\n * They are defined as follows:\n *\n *\t\tthis.schema.register( '$root', {\n *\t\t\tisLimit: true\n *\t\t} );\n *\t\tthis.schema.register( '$block', {\n *\t\t\tallowIn: '$root',\n *\t\t\tisBlock: true\n *\t\t} );\n *\t\tthis.schema.register( '$text', {\n *\t\t\tallowIn: '$block',\n *\t\t\tisInline: true\n *\t\t} );\n *\n * They reflect typical editor content that is contained within one root, consists of several blocks\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\n *\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\n * Read more about generic types in the {@glink framework/guides/deep-dive/schema Schema deep dive} guide.\n *\n * # Example definitions\n *\n * Allow `paragraph` in roots and block quotes:\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Make `image` a block object, which is allowed everywhere where `$block` is.\n * Also, allow `src` and `alt` attributes in it:\n *\n *\t\tschema.register( 'image', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\n *\t\t\tisBlock: true,\n *\t\t\tisObject: true\n *\t\t} );\n *\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\n * Also, mark it as a limit element so it cannot be split:\n *\n *\t\tschema.register( 'caption', {\n *\t\t\tallowIn: 'image',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tisLimit: true\n *\t\t} );\n *\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tinheritAllFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * Which translates to:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tallowAttributesOf: '$block',\n *\t\t\tinheritTypesFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * # Tips\n *\n * * Check schema definitions of existing features to see how they are defined.\n * * If you want to publish your feature so other developers can use it, try to use\n * generic items as much as possible.\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\n * * Remember about defining the `is*` properties. They do not affect the allowed structures, but they can\n * affect how the editor features treat your elements.\n *\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\n *\n * @property {String|Array.<String>} allowIn Defines in which other items this item will be allowed.\n * @property {String|Array.<String>} allowAttributes Defines allowed attributes of the given item.\n * @property {String|Array.<String>} allowContentOf Inherits \"allowed children\" from other items.\n * @property {String|Array.<String>} allowWhere Inherits \"allowed in\" from other items.\n * @property {String|Array.<String>} allowAttributesOf Inherits attributes from other items.\n * @property {String|Array.<String>} inheritTypesFrom Inherits `is*` properties of other items.\n * @property {String} inheritAllFrom A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n *\n * @property {Boolean} isBlock\n * Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\n *\n * Read more about the block elements in the\n * {@glink framework/guides/deep-dive/schema#block-elements Block elements} section of the Schema deep dive} guide.\n *\n * @property {Boolean} isInline\n * Whether an item is \"text-like\" and should be treated as an inline node. Examples of inline elements:\n * `$text`, `softBreak` (`<br>`), etc.\n *\n * Read more about the inline elements in the\n * {@glink framework/guides/deep-dive/schema#inline-elements Inline elements} section of the Schema deep dive} guide.\n *\n * @property {Boolean} isLimit\n * It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\n * a limit element are limited to its content.\n *\n * Read more about the limit elements in the\n * {@glink framework/guides/deep-dive/schema#limit-elements Limit elements} section of the Schema deep dive} guide.\n *\n * @property {Boolean} isObject\n * Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\n * `image`, `table`, `video`, etc.\n *\n * **Note:** An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n *\n * Read more about the object elements in the\n * {@glink framework/guides/deep-dive/schema#object-elements Object elements} section of the Schema deep dive} guide.\n *\n * @property {Boolean} isSelectable\n * `true` when an element should be selectable as a whole by the user. Examples of selectable elements: `image`, `table`, `tableCell`, etc.\n *\n * **Note:** An object is also a selectable element, so\n * {@link module:engine/model/schema~Schema#isSelectable `isSelectable()`} returns `true` for object elements automatically.\n *\n * Read more about selectable elements in the\n * {@glink framework/guides/deep-dive/schema#selectable-elements Selectable elements} section of the Schema deep dive} guide.\n *\n * @property {Boolean} isContent\n * An item is a content when it always finds its way to the editor data output regardless of the number and type of its descendants.\n * Examples of content elements: `$text`, `image`, `table`, etc. (but not `paragraph`, `heading1` or `tableCell`).\n *\n * **Note:** An object is also a content element, so\n * {@link module:engine/model/schema~Schema#isContent `isContent()`} returns `true` for object elements automatically.\n *\n * Read more about content elements in the\n * {@glink framework/guides/deep-dive/schema#content-elements Content elements} section of the Schema deep dive} guide.\n */\n\n/**\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\n * compilation by the {@link module:engine/model/schema~Schema schema}.\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\n * Later on, they are compiled to `SchemaCompiledItemDefinition` so when you use e.g.\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\n *\n * The compiled version contains only the following properties:\n *\n * * The `name` property,\n * * The `is*` properties,\n * * The `allowIn` array,\n * * The `allowAttributes` array.\n *\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\n */\n\n/**\n * A schema context &mdash; a list of ancestors of a given position in the document.\n *\n * Considering such position:\n *\n *\t\t<$root>\n *\t\t\t<blockQuote>\n *\t\t\t\t<paragraph>\n *\t\t\t\t\t^\n *\t\t\t\t</paragraph>\n *\t\t\t</blockQuote>\n *\t\t</$root>\n *\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\n *\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\n *\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\n */\nexport class SchemaContext {\n\t/**\n\t * Creates an instance of the context.\n\t *\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\n\t */\n\tconstructor( context ) {\n\t\tif ( context instanceof SchemaContext ) {\n\t\t\treturn context;\n\t\t}\n\n\t\tif ( typeof context == 'string' ) {\n\t\t\tcontext = [ context ];\n\t\t} else if ( !Array.isArray( context ) ) {\n\t\t\t// `context` is item or position.\n\t\t\t// Position#getAncestors() doesn't accept any parameters but it works just fine here.\n\t\t\tcontext = context.getAncestors( { includeSelf: true } );\n\t\t}\n\n\t\tif ( context[ 0 ] && typeof context[ 0 ] != 'string' && context[ 0 ].is( 'documentFragment' ) ) {\n\t\t\tcontext.shift();\n\t\t}\n\n\t\tthis._items = context.map( mapContextItem );\n\t}\n\n\t/**\n\t * The number of items.\n\t *\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * The last item (the lowest node).\n\t *\n\t * @type {module:engine/model/schema~SchemaContextItem}\n\t */\n\tget last() {\n\t\treturn this._items[ this._items.length - 1 ];\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all context items.\n\t *\n\t * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns a new schema context instance with an additional item.\n\t *\n\t * Item can be added as:\n\t *\n\t * \t\tconst context = new SchemaContext( [ '$root' ] );\n\t *\n\t * \t\t// An element.\n\t * \t\tconst fooElement = writer.createElement( 'fooElement' );\n\t * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\n\t *\n\t * \t\t// A text node.\n\t * \t\tconst text = writer.createText( 'foobar' );\n\t * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\n\t *\n\t * \t\t// A string (element name).\n\t * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\n\t *\n\t * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\n\t * (without ancestors).\n\t *\n\t * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\n\t * to the current context.\n\t * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\n\t */\n\tpush( item ) {\n\t\tconst ctx = new SchemaContext( [ item ] );\n\n\t\tctx._items = [ ...this._items, ...ctx._items ];\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Gets an item on the given index.\n\t *\n\t * @returns {module:engine/model/schema~SchemaContextItem}\n\t */\n\tgetItem( index ) {\n\t\treturn this._items[ index ];\n\t}\n\n\t/**\n\t * Returns the names of items.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* getNames() {\n\t\tyield* this._items.map( item => item.name );\n\t}\n\n\t/**\n\t * Checks whether the context ends with the given nodes.\n\t *\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n\t *\n\t *\t\tctx.endsWith( '$text' ); // -> true\n\t *\t\tctx.endsWith( 'paragraph $text' ); // -> true\n\t *\t\tctx.endsWith( '$root' ); // -> false\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\n\t *\n\t * @param {String} query\n\t * @returns {Boolean}\n\t */\n\tendsWith( query ) {\n\t\treturn Array.from( this.getNames() ).join( ' ' ).endsWith( query );\n\t}\n\n\t/**\n\t * Checks whether the context starts with the given nodes.\n\t *\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n\t *\n\t *\t\tctx.endsWith( '$root' ); // -> true\n\t *\t\tctx.endsWith( '$root paragraph' ); // -> true\n\t *\t\tctx.endsWith( '$text' ); // -> false\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\n\t *\n\t * @param {String} query\n\t * @returns {Boolean}\n\t */\n\tstartsWith( query ) {\n\t\treturn Array.from( this.getNames() ).join( ' ' ).startsWith( query );\n\t}\n}\n\n/**\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * Contexts can be created in multiple ways:\n *\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\n * * By defining a **position** in the document – in this case all its ancestors will be used.\n * * By defining an **array of nodes** – in this case this array defines the entire context.\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\n * way to define the context (e.g. when checking some hypothetical situation).\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\n * but it is possible to create a path.\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\n * will be return.\n *\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\n * method:\n *\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\n *\t\t// will check node 'foo' in the following context:\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\n *\t\tconst contextDefinition = paragraphElement;\n * \t\tconst childToCheck = 'foo';\n *\t\tschema.checkChild( contextDefinition, childToCheck );\n *\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\n *\n *\t\t// Check in [ rootElement, paragraphElement ].\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\n *\n *\t\t// Check only fakeParagraphElement.\n *\t\tschema.checkChild( 'paragraph', 'foo' );\n *\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\n *\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\n *\t\t} );\n *\n * Which will log the following:\n *\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\n *\t\t[ '$root', 'paragraph' ]\n *\t\t[ '$root', 'bar', 'paragraph' ]\n *\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\n * correct way to define a context so you can do this:\n *\n *\t\tschema.checkAttribute( textNode, 'bold' );\n *\n * But sometimes you want to check whether a text at a given position might've had some attribute,\n * in which case you can create a context by missing an array of elements with a `'$text'` string:\n *\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\n */\n\n/**\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * It contains 3 properties:\n *\n * * `name` – the name of this item,\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\n * * `getAttribute( keyName )` – a method to get attribute values.\n *\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\n * node's attributes).\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\t\t\tconst firstItem = ctx.getItem( 0 );\n *\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\n *\t\t} );\n *\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\n */\n\n/**\n * A structure containing additional metadata describing the attribute.\n *\n * See {@link module:engine/model/schema~Schema#setAttributeProperties `Schema#setAttributeProperties()`} for usage examples.\n *\n * @typedef {Object} module:engine/model/schema~AttributeProperties\n * @property {Boolean} [isFormatting] Indicates that the attribute should be considered as a visual formatting, like `bold`, `italic` or\n * `fontSize` rather than semantic attribute (such as `src`, `listType`, etc.). For example, it is used by the \"Remove format\" feature.\n * @property {Boolean} [copyOnEnter] Indicates that given text attribute should be copied to the next block when enter is pressed.\n */\n\nfunction compileBaseItemRule( sourceItemRules, itemName ) {\n\tconst itemRule = {\n\t\tname: itemName,\n\n\t\tallowIn: [],\n\t\tallowContentOf: [],\n\t\tallowWhere: [],\n\n\t\tallowAttributes: [],\n\t\tallowAttributesOf: [],\n\n\t\tinheritTypesFrom: []\n\t};\n\n\tcopyTypes( sourceItemRules, itemRule );\n\n\tcopyProperty( sourceItemRules, itemRule, 'allowIn' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowContentOf' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowWhere' );\n\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributes' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributesOf' );\n\n\tcopyProperty( sourceItemRules, itemRule, 'inheritTypesFrom' );\n\n\tmakeInheritAllWork( sourceItemRules, itemRule );\n\n\treturn itemRule;\n}\n\nfunction compileAllowContentOf( compiledDefinitions, itemName ) {\n\tfor ( const allowContentOfItemName of compiledDefinitions[ itemName ].allowContentOf ) {\n\t\t// The allowContentOf property may point to an unregistered element.\n\t\tif ( compiledDefinitions[ allowContentOfItemName ] ) {\n\t\t\tconst allowedChildren = getAllowedChildren( compiledDefinitions, allowContentOfItemName );\n\n\t\t\tallowedChildren.forEach( allowedItem => {\n\t\t\t\tallowedItem.allowIn.push( itemName );\n\t\t\t} );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowContentOf;\n}\n\nfunction compileAllowWhere( compiledDefinitions, itemName ) {\n\tfor ( const allowWhereItemName of compiledDefinitions[ itemName ].allowWhere ) {\n\t\tconst inheritFrom = compiledDefinitions[ allowWhereItemName ];\n\n\t\t// The allowWhere property may point to an unregistered element.\n\t\tif ( inheritFrom ) {\n\t\t\tconst allowedIn = inheritFrom.allowIn;\n\n\t\t\tcompiledDefinitions[ itemName ].allowIn.push( ...allowedIn );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowWhere;\n}\n\nfunction compileAllowAttributesOf( compiledDefinitions, itemName ) {\n\tfor ( const allowAttributeOfItem of compiledDefinitions[ itemName ].allowAttributesOf ) {\n\t\tconst inheritFrom = compiledDefinitions[ allowAttributeOfItem ];\n\n\t\tif ( inheritFrom ) {\n\t\t\tconst inheritAttributes = inheritFrom.allowAttributes;\n\n\t\t\tcompiledDefinitions[ itemName ].allowAttributes.push( ...inheritAttributes );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowAttributesOf;\n}\n\nfunction compileInheritPropertiesFrom( compiledDefinitions, itemName ) {\n\tconst item = compiledDefinitions[ itemName ];\n\n\tfor ( const inheritPropertiesOfItem of item.inheritTypesFrom ) {\n\t\tconst inheritFrom = compiledDefinitions[ inheritPropertiesOfItem ];\n\n\t\tif ( inheritFrom ) {\n\t\t\tconst typeNames = Object.keys( inheritFrom ).filter( name => name.startsWith( 'is' ) );\n\n\t\t\tfor ( const name of typeNames ) {\n\t\t\t\tif ( !( name in item ) ) {\n\t\t\t\t\titem[ name ] = inheritFrom[ name ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete item.inheritTypesFrom;\n}\n\n// Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\n// Make sure allowIn doesn't contain repeated values.\nfunction cleanUpAllowIn( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\tconst existingItems = itemRule.allowIn.filter( itemToCheck => compiledDefinitions[ itemToCheck ] );\n\n\titemRule.allowIn = Array.from( new Set( existingItems ) );\n}\n\nfunction cleanUpAllowAttributes( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\n\titemRule.allowAttributes = Array.from( new Set( itemRule.allowAttributes ) );\n}\n\nfunction copyTypes( sourceItemRules, itemRule ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tconst typeNames = Object.keys( sourceItemRule ).filter( name => name.startsWith( 'is' ) );\n\n\t\tfor ( const name of typeNames ) {\n\t\t\titemRule[ name ] = sourceItemRule[ name ];\n\t\t}\n\t}\n}\n\nfunction copyProperty( sourceItemRules, itemRule, propertyName ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tif ( typeof sourceItemRule[ propertyName ] == 'string' ) {\n\t\t\titemRule[ propertyName ].push( sourceItemRule[ propertyName ] );\n\t\t} else if ( Array.isArray( sourceItemRule[ propertyName ] ) ) {\n\t\t\titemRule[ propertyName ].push( ...sourceItemRule[ propertyName ] );\n\t\t}\n\t}\n}\n\nfunction makeInheritAllWork( sourceItemRules, itemRule ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tconst inheritFrom = sourceItemRule.inheritAllFrom;\n\n\t\tif ( inheritFrom ) {\n\t\t\titemRule.allowContentOf.push( inheritFrom );\n\t\t\titemRule.allowWhere.push( inheritFrom );\n\t\t\titemRule.allowAttributesOf.push( inheritFrom );\n\t\t\titemRule.inheritTypesFrom.push( inheritFrom );\n\t\t}\n\t}\n}\n\nfunction getAllowedChildren( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\n\treturn getValues( compiledDefinitions ).filter( def => def.allowIn.includes( itemRule.name ) );\n}\n\nfunction getValues( obj ) {\n\treturn Object.keys( obj ).map( key => obj[ key ] );\n}\n\nfunction mapContextItem( ctxItem ) {\n\tif ( typeof ctxItem == 'string' ) {\n\t\treturn {\n\t\t\tname: ctxItem,\n\n\t\t\t* getAttributeKeys() {},\n\n\t\t\tgetAttribute() {}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\t// '$text' means text nodes and text proxies.\n\t\t\tname: ctxItem.is( 'element' ) ? ctxItem.name : '$text',\n\n\t\t\t* getAttributeKeys() {\n\t\t\t\tyield* ctxItem.getAttributeKeys();\n\t\t\t},\n\n\t\t\tgetAttribute( key ) {\n\t\t\t\treturn ctxItem.getAttribute( key );\n\t\t\t}\n\t\t};\n\t}\n}\n\n// Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\nfunction* combineWalkers( backward, forward ) {\n\tlet done = false;\n\n\twhile ( !done ) {\n\t\tdone = true;\n\n\t\tif ( backward ) {\n\t\t\tconst step = backward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield {\n\t\t\t\t\twalker: backward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( forward ) {\n\t\t\tconst step = forward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield {\n\t\t\t\t\twalker: forward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\n// all those minimal flat ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\n// @returns {Iterable.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\nfunction* convertToMinimalFlatRanges( ranges ) {\n\tfor ( const range of ranges ) {\n\t\tyield* range.getMinimalFlatRanges();\n\t}\n}\n\nfunction removeDisallowedAttributeFromNode( schema, node, writer ) {\n\tfor ( const attribute of node.getAttributeKeys() ) {\n\t\tif ( !schema.checkAttribute( node, attribute ) ) {\n\t\t\twriter.removeAttribute( attribute, node );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/upcastdispatcher\n */\n\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport { SchemaContext } from '../model/schema';\nimport { isParagraphable, wrapInParagraph } from '../model/utils/autoparagraphing';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Upcast dispatcher is a central point of the view-to-model conversion, which is a process of\n * converting a given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element view element} into a correct model structure.\n *\n * During the conversion process, the dispatcher fires events for all {@link module:engine/view/node~Node view nodes}\n * from the converted view document fragment.\n * Special callbacks called \"converters\" should listen to these events in order to convert the view nodes.\n *\n * The second parameter of the callback is the `data` object with the following properties:\n *\n * * `data.viewItem` contains a {@link module:engine/view/node~Node view node} or a\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback.\n * * `data.modelRange` is used to point to the result\n * of the current conversion (e.g. the element that is being inserted)\n * and is always a {@link module:engine/model/range~Range} when the conversion succeeds.\n * * `data.modelCursor` is a {@link module:engine/model/position~Position position} on which the converter should insert\n * the newly created items.\n *\n * The third parameter of the callback is an instance of {@link module:engine/conversion/upcastdispatcher~UpcastConversionApi}\n * which provides additional tools for converters.\n *\n * You can read more about conversion in the following guides:\n *\n * * {@glink framework/guides/deep-dive/conversion/conversion-introduction Advanced conversion concepts &mdash; attributes}\n * * {@glink framework/guides/deep-dive/conversion/custom-element-conversion Custom element conversion}\n *\n * Examples of event-based converters:\n *\n *\t\t// A converter for links (<a>).\n *\t\teditor.data.upcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// The <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why you need to convert only children.\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Convert <p> element's font-size style.\n *\t\t// Note: You should use a low-priority observer in order to ensure that\n *\t\t// it is executed after the element-to-element converter.\n *\t\teditor.data.upcastDispatcher.on( 'element:p', ( evt, data, conversionApi ) => {\n *\t\t\tconst { consumable, schema, writer } = conversionApi;\n *\n *\t\t\tif ( !consumable.consume( data.viewItem, { style: 'font-size' } ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\tconst fontSize = data.viewItem.getStyle( 'font-size' );\n *\n *\t\t\t// Do not go for the model element after data.modelCursor because it might happen\n *\t\t\t// that a single view element was converted to multiple model elements. Get all of them.\n *\t\t\tfor ( const item of data.modelRange.getItems( { shallow: true } ) ) {\n *\t\t\t\tif ( schema.checkAttribute( item, 'fontSize' ) ) {\n *\t\t\t\t\twriter.setAttribute( 'fontSize', fontSize, item );\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}, { priority: 'low' } );\n *\n *\t\t// Convert all elements which have no custom converter into a paragraph (autoparagraphing).\n *\t\teditor.data.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\n *\t\t\t// Check if an element can be converted.\n *\t\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n *\t\t\t\t// When an element is already consumed by higher priority converters, do nothing.\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n *\n *\t\t\t// Try to safely insert a paragraph at the model cursor - it will find an allowed parent for the current element.\n *\t\t\tif ( !conversionApi.safeInsert( paragraph, data.modelCursor ) ) {\n *\t\t\t\t// When an element was not inserted, it means that you cannot insert a paragraph at this position.\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Consume the inserted element.\n *\t\t\tconversionApi.consumable.consume( data.viewItem, { name: data.viewItem.name } ) );\n *\n *\t\t\t// Convert the children to a paragraph.\n *\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem,  paragraph ) );\n *\n *\t\t\t// Update `modelRange` and `modelCursor` in the `data` as a conversion result.\n *\t\t\tconversionApi.updateConversionResult( paragraph, data );\n *\t\t}, { priority: 'low' } );\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\nexport default class UpcastDispatcher {\n\t/**\n\t * Creates an upcast dispatcher that operates using the passed API.\n\t *\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi\n\t * @param {Object} [conversionApi] Additional properties for an interface that will be passed to events fired\n\t * by the upcast dispatcher.\n\t */\n\tconstructor( conversionApi = {} ) {\n\t\t/**\n\t\t * The list of elements that were created during splitting.\n\t\t *\n\t\t * After the conversion process the list is cleared.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\n\t\t */\n\t\tthis._splitParts = new Map();\n\n\t\t/**\n\t\t * The list of cursor parent elements that were created during splitting.\n\t\t *\n\t\t * After the conversion process the list is cleared.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\n\t\t */\n\t\tthis._cursorParents = new Map();\n\n\t\t/**\n\t\t * The position in the temporary structure where the converted content is inserted. The structure reflects the context of\n\t\t * the target position where the content will be inserted. This property is built based on the context parameter of the\n\t\t * convert method.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/position~Position|null}\n\t\t */\n\t\tthis._modelCursor = null;\n\n\t\t/**\n\t\t * An interface passed by the dispatcher to the event callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastConversionApi}\n\t\t */\n\t\tthis.conversionApi = Object.assign( {}, conversionApi );\n\n\t\t// The below methods are bound to this `UpcastDispatcher` instance and set on `conversionApi`.\n\t\t// This way only a part of `UpcastDispatcher` API is exposed.\n\t\tthis.conversionApi.convertItem = this._convertItem.bind( this );\n\t\tthis.conversionApi.convertChildren = this._convertChildren.bind( this );\n\t\tthis.conversionApi.safeInsert = this._safeInsert.bind( this );\n\t\tthis.conversionApi.updateConversionResult = this._updateConversionResult.bind( this );\n\t\t// Advanced API - use only if custom position handling is needed.\n\t\tthis.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind( this );\n\t\tthis.conversionApi.getSplitParts = this._getSplitParts.bind( this );\n\t}\n\n\t/**\n\t * Starts the conversion process. The entry point for the conversion.\n\t *\n\t * @fires element\n\t * @fires text\n\t * @fires documentFragment\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n\t * The part of the view to be converted.\n\t * @param {module:engine/model/writer~Writer} writer An instance of the model writer.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is the result of the conversion process\n\t * wrapped in `DocumentFragment`. Converted marker elements will be set as the document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t */\n\tconvert( viewItem, writer, context = [ '$root' ] ) {\n\t\tthis.fire( 'viewCleanup', viewItem );\n\n\t\t// Create context tree and set position in the top element.\n\t\t// Items will be converted according to this position.\n\t\tthis._modelCursor = createContextTree( context, writer );\n\n\t\t// Store writer in conversion as a conversion API\n\t\t// to be sure that conversion process will use the same batch.\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create consumable values list for conversion process.\n\t\tthis.conversionApi.consumable = ViewConsumable.createFrom( viewItem );\n\n\t\t// Custom data stored by converter for conversion process.\n\t\tthis.conversionApi.store = {};\n\n\t\t// Do the conversion.\n\t\tconst { modelRange } = this._convertItem( viewItem, this._modelCursor );\n\n\t\t// Conversion result is always a document fragment so let's create it.\n\t\tconst documentFragment = writer.createDocumentFragment();\n\n\t\t// When there is a conversion result.\n\t\tif ( modelRange ) {\n\t\t\t// Remove all empty elements that were create while splitting.\n\t\t\tthis._removeEmptyElements();\n\n\t\t\t// Move all items that were converted in context tree to the document fragment.\n\t\t\tfor ( const item of Array.from( this._modelCursor.parent.getChildren() ) ) {\n\t\t\t\twriter.append( item, documentFragment );\n\t\t\t}\n\n\t\t\t// Extract temporary markers elements from model and set as static markers collection.\n\t\t\tdocumentFragment.markers = extractMarkersFromModelFragment( documentFragment, writer );\n\t\t}\n\n\t\t// Clear context position.\n\t\tthis._modelCursor = null;\n\n\t\t// Clear split elements & parents lists.\n\t\tthis._splitParts.clear();\n\t\tthis._cursorParents.clear();\n\n\t\t// Clear conversion API.\n\t\tthis.conversionApi.writer = null;\n\t\tthis.conversionApi.store = null;\n\n\t\t// Return fragment as conversion result.\n\t\treturn documentFragment;\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertItem\n\t */\n\t_convertItem( viewItem, modelCursor ) {\n\t\tconst data = Object.assign( { viewItem, modelCursor, modelRange: null } );\n\n\t\tif ( viewItem.is( 'element' ) ) {\n\t\t\tthis.fire( 'element:' + viewItem.name, data, this.conversionApi );\n\t\t} else if ( viewItem.is( '$text' ) ) {\n\t\t\tthis.fire( 'text', data, this.conversionApi );\n\t\t} else {\n\t\t\tthis.fire( 'documentFragment', data, this.conversionApi );\n\t\t}\n\n\t\t// Handle incorrect conversion result.\n\t\tif ( data.modelRange && !( data.modelRange instanceof ModelRange ) ) {\n\t\t\t/**\n\t\t\t * Incorrect conversion result was dropped.\n\t\t\t *\n\t\t\t * {@link module:engine/model/range~Range Model range} should be a conversion result.\n\t\t\t *\n\t\t\t * @error view-conversion-dispatcher-incorrect-result\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-conversion-dispatcher-incorrect-result', this );\n\t\t}\n\n\t\treturn { modelRange: data.modelRange, modelCursor: data.modelCursor };\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertChildren\n\t */\n\t_convertChildren( viewItem, elementOrModelCursor ) {\n\t\tlet nextModelCursor = elementOrModelCursor.is( 'position' ) ?\n\t\t\telementOrModelCursor : ModelPosition._createAt( elementOrModelCursor, 0 );\n\n\t\tconst modelRange = new ModelRange( nextModelCursor );\n\n\t\tfor ( const viewChild of Array.from( viewItem.getChildren() ) ) {\n\t\t\tconst result = this._convertItem( viewChild, nextModelCursor );\n\n\t\t\tif ( result.modelRange instanceof ModelRange ) {\n\t\t\t\tmodelRange.end = result.modelRange.end;\n\t\t\t\tnextModelCursor = result.modelCursor;\n\t\t\t}\n\t\t}\n\n\t\treturn { modelRange, modelCursor: nextModelCursor };\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#safeInsert\n\t */\n\t_safeInsert( modelElement, position ) {\n\t\t// Find allowed parent for element that we are going to insert.\n\t\t// If current parent does not allow to insert element but one of the ancestors does\n\t\t// then split nodes to allowed parent.\n\t\tconst splitResult = this._splitToAllowedParent( modelElement, position );\n\n\t\t// When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\t\tif ( !splitResult ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Insert element on allowed position.\n\t\tthis.conversionApi.writer.insert( modelElement, splitResult.position );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#updateConversionResult\n\t */\n\t_updateConversionResult( modelElement, data ) {\n\t\tconst parts = this._getSplitParts( modelElement );\n\n\t\tconst writer = this.conversionApi.writer;\n\n\t\t// Set conversion result range - only if not set already.\n\t\tif ( !data.modelRange ) {\n\t\t\tdata.modelRange = writer.createRange(\n\t\t\t\twriter.createPositionBefore( modelElement ),\n\t\t\t\twriter.createPositionAfter( parts[ parts.length - 1 ] )\n\t\t\t);\n\t\t}\n\n\t\tconst savedCursorParent = this._cursorParents.get( modelElement );\n\n\t\t// Now we need to check where the `modelCursor` should be.\n\t\tif ( savedCursorParent ) {\n\t\t\t// If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n\t\t\t//\n\t\t\t// before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n\t\t\t// after:  <allowed><notAllowed>foo</notAllowed> <converted></converted> <notAllowed>[]</notAllowed></allowed>\n\n\t\t\tdata.modelCursor = writer.createPositionAt( savedCursorParent, 0 );\n\t\t} else {\n\t\t\t// Otherwise just continue after inserted element.\n\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#splitToAllowedParent\n\t */\n\t_splitToAllowedParent( node, modelCursor ) {\n\t\tconst { schema, writer } = this.conversionApi;\n\n\t\t// Try to find allowed parent.\n\t\tlet allowedParent = schema.findAllowedParent( modelCursor, node );\n\n\t\tif ( allowedParent ) {\n\t\t\t// When current position parent allows to insert node then return this position.\n\t\t\tif ( allowedParent === modelCursor.parent ) {\n\t\t\t\treturn { position: modelCursor };\n\t\t\t}\n\n\t\t\t// When allowed parent is in context tree (it's outside the converted tree).\n\t\t\tif ( this._modelCursor.parent.getAncestors().includes( allowedParent ) ) {\n\t\t\t\tallowedParent = null;\n\t\t\t}\n\t\t}\n\n\t\tif ( !allowedParent ) {\n\t\t\t// Check if the node wrapped with a paragraph would be accepted by the schema.\n\t\t\tif ( !isParagraphable( modelCursor, node, schema ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tposition: wrapInParagraph( modelCursor, writer )\n\t\t\t};\n\t\t}\n\n\t\t// Split element to allowed parent.\n\t\tconst splitResult = this.conversionApi.writer.split( modelCursor, allowedParent );\n\n\t\t// Using the range returned by `model.Writer#split`, we will pair original elements with their split parts.\n\t\t//\n\t\t// The range returned from the writer spans \"over the split\" or, precisely saying, from the end of the original element (the one\n\t\t// that got split) to the beginning of the other part of that element:\n\t\t//\n\t\t// <limit><a><b><c>X[]Y</c></b><a></limit> ->\n\t\t// <limit><a><b><c>X[</c></b></a><a><b><c>]Y</c></b></a>\n\t\t//\n\t\t// After the split there cannot be any full node between the positions in `splitRange`. The positions are touching.\n\t\t// Also, because of how splitting works, it is easy to notice, that \"closing tags\" are in the reverse order than \"opening tags\".\n\t\t// Also, since we split all those elements, each of them has to have the other part.\n\t\t//\n\t\t// With those observations in mind, we will pair the original elements with their split parts by saving \"closing tags\" and matching\n\t\t// them with \"opening tags\" in the reverse order. For that we can use a stack.\n\t\tconst stack = [];\n\n\t\tfor ( const treeWalkerValue of splitResult.range.getWalker() ) {\n\t\t\tif ( treeWalkerValue.type == 'elementEnd' ) {\n\t\t\t\tstack.push( treeWalkerValue.item );\n\t\t\t} else {\n\t\t\t\t// There should not be any text nodes after the element is split, so the only other value is `elementStart`.\n\t\t\t\tconst originalPart = stack.pop();\n\t\t\t\tconst splitPart = treeWalkerValue.item;\n\n\t\t\t\tthis._registerSplitPair( originalPart, splitPart );\n\t\t\t}\n\t\t}\n\n\t\tconst cursorParent = splitResult.range.end.parent;\n\t\tthis._cursorParents.set( node, cursorParent );\n\n\t\treturn {\n\t\t\tposition: splitResult.position,\n\t\t\tcursorParent\n\t\t};\n\t}\n\n\t/**\n\t * Registers that a `splitPart` element is a split part of the `originalPart` element.\n\t *\n\t * The data set by this method is used by {@link #_getSplitParts} and {@link #_removeEmptyElements}.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} originalPart\n\t * @param {module:engine/model/element~Element} splitPart\n\t */\n\t_registerSplitPair( originalPart, splitPart ) {\n\t\tif ( !this._splitParts.has( originalPart ) ) {\n\t\t\tthis._splitParts.set( originalPart, [ originalPart ] );\n\t\t}\n\n\t\tconst list = this._splitParts.get( originalPart );\n\n\t\tthis._splitParts.set( splitPart, list );\n\t\tlist.push( splitPart );\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#getSplitParts\n\t */\n\t_getSplitParts( element ) {\n\t\tlet parts;\n\n\t\tif ( !this._splitParts.has( element ) ) {\n\t\t\tparts = [ element ];\n\t\t} else {\n\t\t\tparts = this._splitParts.get( element );\n\t\t}\n\n\t\treturn parts;\n\t}\n\n\t/**\n\t * Checks if there are any empty elements created while splitting and removes them.\n\t *\n\t * This method works recursively to re-check empty elements again after at least one element was removed in the initial call,\n\t * as some elements might have become empty after other empty elements were removed from them.\n\t *\n\t * @private\n\t */\n\t_removeEmptyElements() {\n\t\tlet anyRemoved = false;\n\n\t\tfor ( const element of this._splitParts.keys() ) {\n\t\t\tif ( element.isEmpty ) {\n\t\t\t\tthis.conversionApi.writer.remove( element );\n\t\t\t\tthis._splitParts.delete( element );\n\n\t\t\t\tanyRemoved = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( anyRemoved ) {\n\t\t\tthis._removeEmptyElements();\n\t\t}\n\t}\n\n\t/**\n\t * Fired before the first conversion event, at the beginning of the upcast (view-to-model conversion) process.\n\t *\n\t * @event viewCleanup\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n\t * viewItem A part of the view to be converted.\n\t */\n\n\t/**\n\t * Fired when an {@link module:engine/view/element~Element} is converted.\n\t *\n\t * `element` is a namespace event for a class of events. Names of actually called events follow the pattern of\n\t * `element:<elementName>` where `elementName` is the name of the converted element. This way listeners may listen to\n\t * a conversion of all or just specific elements.\n\t *\n\t * @event element\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastConversionData} data The conversion data. Keep in mind that this object is\n\t * shared by reference between all callbacks that will be called. This means that callbacks can override values if needed, and these\n\t * values will be available in other callbacks.\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by the\n\t * callback.\n\t */\n\n\t/**\n\t * Fired when a {@link module:engine/view/text~Text} is converted.\n\t *\n\t * @event text\n\t * @see #event:element\n\t */\n\n\t/**\n\t * Fired when a {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n\t *\n\t * @event documentFragment\n\t * @see #event:element\n\t */\n}\n\nmix( UpcastDispatcher, EmitterMixin );\n\n// Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\nfunction extractMarkersFromModelFragment( modelItem, writer ) {\n\tconst markerElements = new Set();\n\tconst markers = new Map();\n\n\t// Create ModelTreeWalker.\n\tconst range = ModelRange._createIn( modelItem ).getItems();\n\n\t// Walk through DocumentFragment and collect marker elements.\n\tfor ( const item of range ) {\n\t\t// Check if current element is a marker.\n\t\tif ( item.name == '$marker' ) {\n\t\t\tmarkerElements.add( item );\n\t\t}\n\t}\n\n\t// Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\tfor ( const markerElement of markerElements ) {\n\t\tconst markerName = markerElement.getAttribute( 'data-name' );\n\t\tconst currentPosition = writer.createPositionBefore( markerElement );\n\n\t\t// When marker of given name is not stored it means that we have found the beginning of the range.\n\t\tif ( !markers.has( markerName ) ) {\n\t\t\tmarkers.set( markerName, new ModelRange( currentPosition.clone() ) );\n\t\t// Otherwise is means that we have found end of the marker range.\n\t\t} else {\n\t\t\tmarkers.get( markerName ).end = currentPosition.clone();\n\t\t}\n\n\t\t// Remove marker element from DocumentFragment.\n\t\twriter.remove( markerElement );\n\t}\n\n\treturn markers;\n}\n\n// Creates model fragment according to given context and returns position in the bottom (the deepest) element.\nfunction createContextTree( contextDefinition, writer ) {\n\tlet position;\n\n\tfor ( const item of new SchemaContext( contextDefinition ) ) {\n\t\tconst attributes = {};\n\n\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\tattributes[ key ] = item.getAttribute( key );\n\t\t}\n\n\t\tconst current = writer.createElement( item.name, attributes );\n\n\t\tif ( position ) {\n\t\t\twriter.append( current, position );\n\t\t}\n\n\t\tposition = ModelPosition._createAt( current, 0 );\n\t}\n\n\treturn position;\n}\n\n/**\n * A set of conversion utilities available as the third parameter of the\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher upcast dispatcher}'s events.\n *\n * @interface module:engine/conversion/upcastdispatcher~UpcastConversionApi\n */\n\n/**\n * Starts the conversion of a given item by firing an appropriate event.\n *\n * Every fired event is passed (as the first parameter) an object with the `modelRange` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of the `modelRange` property is returned by this method.\n * The `modelRange` must be a {@link module:engine/model/range~Range model range} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor The conversion position.\n * @returns {Object} result The conversion result.\n * @returns {module:engine/model/range~Range|null} result.modelRange The model range containing the result of the item conversion,\n * created and modified by callbacks attached to the fired event, or `null` if the conversion result was incorrect.\n * @returns {module:engine/model/position~Position} result.modelCursor The position where the conversion should be continued.\n */\n\n/**\n * Starts the conversion of all children of a given item by firing appropriate events for all the children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem An element whose children should be converted.\n * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrElement A position or an element of\n * the conversion.\n * @returns {Object} result The conversion result.\n * @returns {module:engine/model/range~Range} result.modelRange The model range containing the results of the conversion of all children\n * of the given item. When no child was converted, the range is collapsed.\n * @returns {module:engine/model/position~Position} result.modelCursor The position where the conversion should be continued.\n */\n\n/**\n * Safely inserts an element to the document, checking the {@link module:engine/model/schema~Schema schema} to find an allowed parent for\n * an element that you are going to insert, starting from the given position. If the current parent does not allow to insert the element\n * but one of the ancestors does, then splits the nodes to allowed parent.\n *\n * If the schema allows to insert the node in a given position, nothing is split.\n *\n * If it was not possible to find an allowed parent, `false` is returned and nothing is split.\n *\n * Otherwise, ancestors are split.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *\t\t-> safe insert for `<image>` will split ->\n *\n *\t\t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * Example usage:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\tif ( !conversionApi.safeInsert( myElement, data.modelCursor ) ) {\n *\t\t\treturn;\n *\t\t}\n *\n * The split result is saved and {@link #updateConversionResult} should be used to update the\n * {@link module:engine/conversion/upcastdispatcher~UpcastConversionData conversion data}.\n *\n * @method #safeInsert\n * @param {module:engine/model/node~Node} node The node to insert.\n * @param {module:engine/model/position~Position} position The position where an element is going to be inserted.\n * @returns {Boolean} The split result. If it was not possible to find an allowed position, `false` is returned.\n */\n\n/**\n * Updates the conversion result and sets a proper {@link module:engine/conversion/upcastdispatcher~UpcastConversionData#modelRange} and\n * the next {@link module:engine/conversion/upcastdispatcher~UpcastConversionData#modelCursor} after the conversion.\n * Used together with {@link #safeInsert}, it enables you to easily convert elements without worrying if the node was split\n * during the conversion of its children.\n *\n * A usage example in converter code:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\tif ( !conversionApi.safeInsert( myElement, data.modelCursor ) ) {\n *\t\t\treturn;\n *\t\t}\n *\n *\t\t// Children conversion may split `myElement`.\n *\t\tconversionApi.convertChildren( data.viewItem, myElement );\n *\n *\t\tconversionApi.updateConversionResult( myElement, data );\n *\n * @method #updateConversionResult\n * @param {module:engine/model/element~Element} element\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionData} data Conversion data.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by the callback.\n */\n\n/**\n * Checks the {@link module:engine/model/schema~Schema schema} to find an allowed parent for an element that is going to be inserted\n * starting from the given position. If the current parent does not allow inserting an element but one of the ancestors does, the method\n * splits nodes to allowed parent.\n *\n * If the schema allows inserting the node in the given position, nothing is split and an object with that position is returned.\n *\n * If it was not possible to find an allowed parent, `null` is returned and nothing is split.\n *\n * Otherwise, ancestors are split and an object with a position and the copy of the split element is returned.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *\t\t-> split for `<image>` ->\n *\n *\t\t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * In the example above, the position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\n * as `cursorParent`.\n *\n * **Note:** This is an advanced method. For most cases {@link #safeInsert} and {@link #updateConversionResult} should be used.\n *\n * @method #splitToAllowedParent\n * @param {module:engine/model/position~Position} position The position where the element is going to be inserted.\n * @param {module:engine/model/node~Node} node The node to insert.\n * @returns {Object|null} The split result. If it was not possible to find an allowed position, `null` is returned.\n * @returns {module:engine/model/position~Position} The position between split elements.\n * @returns {module:engine/model/element~Element} [cursorParent] The element inside which the cursor should be placed to\n * continue the conversion. When the element is not defined it means that there was no split.\n */\n\n/**\n * Returns all the split parts of the given `element` that were created during upcasting through using {@link #splitToAllowedParent}.\n * It enables you to easily track these elements and continue processing them after they are split during the conversion of their children.\n *\n *\t\t<paragraph>Foo<image />bar<image />baz</paragraph> ->\n *\t\t<paragraph>Foo</paragraph><image /><paragraph>bar</paragraph><image /><paragraph>baz</paragraph>\n *\n * For a reference to any of above paragraphs, the function will return all three paragraphs (the original element included),\n * sorted in the order of their creation (the original element is the first one).\n *\n * If the given `element` was not split, an array with a single element is returned.\n *\n * A usage example in the converter code:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\t// Children conversion may split `myElement`.\n *\t\tconversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\tconst splitParts = conversionApi.getSplitParts( myElement );\n *\t\tconst lastSplitPart = splitParts[ splitParts.length - 1 ];\n *\n *\t\t// Setting `data.modelRange` basing on split parts:\n *\t\tdata.modelRange = conversionApi.writer.createRange(\n *\t\t\tconversionApi.writer.createPositionBefore( myElement ),\n *\t\t\tconversionApi.writer.createPositionAfter( lastSplitPart )\n *\t\t);\n *\n *\t\t// Setting `data.modelCursor` to continue after the last split element:\n *\t\tdata.modelCursor = conversionApi.writer.createPositionAfter( lastSplitPart );\n *\n * **Tip:** If you are unable to get a reference to the original element (for example because the code is split into multiple converters\n * or even classes) but it has already been converted, you may want to check the first element in `data.modelRange`. This is a common\n * situation if an attribute converter is separated from an element converter.\n *\n * **Note:** This is an advanced method. For most cases {@link #safeInsert} and {@link #updateConversionResult} should be used.\n *\n * @method #getSplitParts\n * @param {module:engine/model/element~Element} element\n * @returns {Array.<module:engine/model/element~Element>}\n */\n\n/**\n * Stores information about what parts of the processed view item are still waiting to be handled. After a piece of view item\n * was converted, an appropriate consumable value should be\n * {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/viewconsumable~ViewConsumable} #consumable\n */\n\n/**\n * Custom data stored by converters for the conversion process. Custom properties of this object can be defined and use to\n * pass parameters between converters.\n *\n * The difference between this property and the `data` parameter of\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that the `data` parameters allow you\n * to pass parameters within a single event and `store` within the whole conversion.\n *\n * @member {Object} #store\n */\n\n/**\n * The model's schema instance.\n *\n * @member {module:engine/model/schema~Schema} #schema\n */\n\n/**\n * The {@link module:engine/model/writer~Writer} instance used to manipulate the data during conversion.\n *\n * @member {module:engine/model/writer~Writer} #writer\n */\n\n/**\n * Conversion data.\n *\n * **Note:** Keep in mind that this object is shared by reference between all conversion callbacks that will be called.\n * This means that callbacks can override values if needed, and these values will be available in other callbacks.\n *\n * @typedef {Object} module:engine/conversion/upcastdispatcher~UpcastConversionData\n *\n * @property {module:engine/view/item~Item} viewItem The converted item.\n * @property {module:engine/model/position~Position} modelCursor The position where the converter should start changes.\n * Change this value for the next converter to tell where the conversion should continue.\n * @property {module:engine/model/range~Range} [modelRange] The current state of conversion result. Every change to\n * the converted element should be reflected by setting or modifying this property.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/datacontroller\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport Mapper from '../conversion/mapper';\n\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText } from '../conversion/downcasthelpers';\n\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/upcasthelpers';\n\nimport ViewDocumentFragment from '../view/documentfragment';\nimport ViewDocument from '../view/document';\nimport ViewDowncastWriter from '../view/downcastwriter';\n\nimport ModelRange from '../model/range';\nimport { autoParagraphEmptyRoots } from '../model/utils/autoparagraphing';\n\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * downcast converters,\n * * upcast converters.\n *\n * An instance of the data controller is always available in the {@link module:core/editor/editor~Editor#data `editor.data`}\n * property:\n *\n *\t\teditor.data.get( { rootName: 'customRoot' } ); // -> '<p>Hello!</p>'\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class DataController {\n\t/**\n\t * Creates a data controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Data model.\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( model, stylesProcessor ) {\n\t\t/**\n\t\t * Data model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Styles processor used during the conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis.stylesProcessor = stylesProcessor;\n\n\t\t/**\n\t\t * Data processor used during the conversion.\n\t\t *\n\t\t * @member {module:engine/dataprocessor/dataprocessor~DataProcessor} #processor\n\t\t */\n\t\tthis.processor = undefined;\n\n\t\t/**\n\t\t * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n\t\t * cleared directly after the data are converted. However, the mapper is defined as a class property, because\n\t\t * it needs to be passed to the `DowncastDispatcher` as a conversion API.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper,\n\t\t\tschema: model.schema\n\t\t} );\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\n\t\t/**\n\t\t * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n\t\t */\n\t\tthis.upcastDispatcher = new UpcastDispatcher( {\n\t\t\tschema: model.schema\n\t\t} );\n\n\t\t/**\n\t\t * The view document used by the data controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.viewDocument = new ViewDocument( stylesProcessor );\n\n\t\t/**\n\t\t * The view downcast writer just for data conversion purposes, i.e. to modify\n\t\t * the {@link #viewDocument}.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @member {module:engine/view/downcastwriter~DowncastWriter}\n\t\t */\n\t\tthis._viewWriter = new ViewDowncastWriter( this.viewDocument );\n\n\t\t// Define default converters for text and elements.\n\t\t//\n\t\t// Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n\t\t// converted to nothing. We therefore add `convertToModelFragment` as a last converter so it converts children of that\n\t\t// element to the document fragment and so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\t\tthis.upcastDispatcher.on( 'text', convertText(), { priority: 'lowest' } );\n\t\tthis.upcastDispatcher.on( 'element', convertToModelFragment(), { priority: 'lowest' } );\n\t\tthis.upcastDispatcher.on( 'documentFragment', convertToModelFragment(), { priority: 'lowest' } );\n\n\t\tthis.decorate( 'init' );\n\t\tthis.decorate( 'set' );\n\n\t\t// Fire the `ready` event when the initialization has completed. Such low-level listener gives possibility\n\t\t// to plug into the initialization pipeline without interrupting the initialization flow.\n\t\tthis.on( 'init', () => {\n\t\t\tthis.fire( 'ready' );\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Fix empty roots after DataController is 'ready' (note that init method could be decorated and stopped).\n\t\t// We need to handle this event because initial data could be empty and post-fixer would not get triggered.\n\t\tthis.on( 'ready', () => {\n\t\t\tthis.model.enqueueChange( 'transparent', autoParagraphEmptyRoots );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\n\t * formatted by the {@link #processor data processor}.\n\t *\n\t * @param {Object} [options] Additional configuration for the retrieved data. `DataController` provides two optional\n\t * properties: `rootName` and `trim`. Other properties of this object are specified by various editor features.\n\t * @param {String} [options.rootName='main'] Root name.\n\t * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `empty` by default,\n\t * which means whenever editor content is considered empty, an empty string will be returned. To turn off trimming completely\n\t * use `'none'`. In such cases exact content will be returned (for example `<p>&nbsp;</p>` for an empty editor).\n\t * @returns {String} Output data.\n\t */\n\tget( options = {} ) {\n\t\tconst { rootName = 'main', trim = 'empty' } = options;\n\n\t\tif ( !this._checkIfRootsExists( [ rootName ] ) ) {\n\t\t\t/**\n\t\t\t * Cannot get data from a non-existing root. This error is thrown when {@link #get DataController#get() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #get} like:\n\t\t\t *\n\t\t\t *\t\tdata.get( { rootName: 'root2' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-get-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-get-non-existent-root', this );\n\t\t}\n\n\t\tconst root = this.model.document.getRoot( rootName );\n\n\t\tif ( trim === 'empty' && !this.model.hasContent( root, { ignoreWhitespaces: true } ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.stringify( root, options );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\n\t * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element whose content will be stringified.\n\t * @param {Object} [options] Additional configuration passed to the conversion process.\n\t * @returns {String} Output data.\n\t */\n\tstringify( modelElementOrFragment, options ) {\n\t\t// Model -> view.\n\t\tconst viewDocumentFragment = this.toView( modelElementOrFragment, options );\n\n\t\t// View -> data.\n\t\treturn this.processor.toData( viewDocumentFragment );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\n\t * converters attached to {@link #downcastDispatcher} to a\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element or document fragment whose content will be converted.\n\t * @param {Object} [options] Additional configuration that will be available through\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi#options} during the conversion process.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n\t */\n\ttoView( modelElementOrFragment, options ) {\n\t\tconst viewDocument = this.viewDocument;\n\t\tconst viewWriter = this._viewWriter;\n\n\t\t// Clear bindings so the call to this method gives correct results.\n\t\tthis.mapper.clearBindings();\n\n\t\t// First, convert elements.\n\t\tconst modelRange = ModelRange._createIn( modelElementOrFragment );\n\t\tconst viewDocumentFragment = new ViewDocumentFragment( viewDocument );\n\n\t\tthis.mapper.bindElements( modelElementOrFragment, viewDocumentFragment );\n\n\t\t// Make additional options available during conversion process through `conversionApi`.\n\t\tthis.downcastDispatcher.conversionApi.options = options;\n\n\t\t// We have no view controller and rendering to DOM in DataController so view.change() block is not used here.\n\t\tthis.downcastDispatcher.convertInsert( modelRange, viewWriter );\n\n\t\tif ( !modelElementOrFragment.is( 'documentFragment' ) ) {\n\t\t\t// Then, if a document element is converted, convert markers.\n\t\t\t// From all document markers, get those, which \"intersect\" with the converter element.\n\t\t\tconst markers = _getMarkersRelativeToElement( modelElementOrFragment );\n\n\t\t\tfor ( const [ name, range ] of markers ) {\n\t\t\t\tthis.downcastDispatcher.convertMarkerAdd( name, range, viewWriter );\n\t\t\t}\n\t\t}\n\n\t\t// Clean `conversionApi`.\n\t\tdelete this.downcastDispatcher.conversionApi.options;\n\n\t\treturn viewDocumentFragment;\n\t}\n\n\t/**\n\t * Sets initial input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\n\t * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\n\t *\n\t * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\n\t * used by e.g. collaborative editing plugin that syncs remote data on init.\n\t *\n\t * When data is passed as a string it is initialized on a default `main` root:\n\t *\n\t *\t\tdataController.init( '<p>Foo</p>' ); // Initializes data on the `main` root.\n\t *\n\t * To initialize data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n\t *\n\t *\t\tdataController.init( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Initializes data on the `main` and `title` roots.\n\t *\n\t * @fires init\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n\t * pairs to initialize data on multiple roots at once.\n\t * @returns {Promise} Promise that is resolved after the data is set on the editor.\n\t */\n\tinit( data ) {\n\t\tif ( this.model.document.version ) {\n\t\t\t/**\n\t\t\t * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\n\t\t\t * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\n\t\t\t * when the {@link module:engine/model/document~Document#version} is equal 0.\n\t\t\t *\n\t\t\t * @error datacontroller-init-document-not-empty\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-init-document-not-empty', this );\n\t\t}\n\n\t\tlet initialData = {};\n\t\tif ( typeof data === 'string' ) {\n\t\t\tinitialData.main = data; // Default root is 'main'. To initiate data on a different root, object should be passed.\n\t\t} else {\n\t\t\tinitialData = data;\n\t\t}\n\n\t\tif ( !this._checkIfRootsExists( Object.keys( initialData ) ) ) {\n\t\t\t/**\n\t\t\t * Cannot init data on a non-existing root. This error is thrown when {@link #init DataController#init() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #init} like:\n\t\t\t *\n\t\t\t * \t\tdata.init( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-init-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-init-non-existent-root', this );\n\t\t}\n\n\t\tthis.model.enqueueChange( 'transparent', writer => {\n\t\t\tfor ( const rootName of Object.keys( initialData ) ) {\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\n\t\t\t\twriter.insert( this.parse( initialData[ rootName ], modelRoot ), modelRoot, 0 );\n\t\t\t}\n\t\t} );\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sets input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\n\t * This method can be used any time to replace existing editor data by the new one without clearing the\n\t * {@link module:engine/model/document~Document#history document history}.\n\t *\n\t * This method also creates a batch with all the changes applied. If all you need is to parse data, use\n\t * the {@link #parse} method.\n\t *\n\t * When data is passed as a string it is set on a default `main` root:\n\t *\n\t *\t\tdataController.set( '<p>Foo</p>' ); // Sets data on the `main` root.\n\t *\n\t * To set data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n\t *\n\t *\t\tdataController.set( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Sets data on the `main` and `title` roots.\n\t *\n\t * @fires set\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n\t * pairs to set data on multiple roots at once.\n\t */\n\tset( data ) {\n\t\tlet newData = {};\n\n\t\tif ( typeof data === 'string' ) {\n\t\t\tnewData.main = data; // Default root is 'main'. To set data on a different root, object should be passed.\n\t\t} else {\n\t\t\tnewData = data;\n\t\t}\n\n\t\tif ( !this._checkIfRootsExists( Object.keys( newData ) ) ) {\n\t\t\t/**\n\t\t\t * Cannot set data on a non-existing root. This error is thrown when {@link #set DataController#set() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #set} like:\n\t\t\t *\n\t\t\t * \t\tdata.set( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-set-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-set-non-existent-root', this );\n\t\t}\n\n\t\tthis.model.enqueueChange( 'transparent', writer => {\n\t\t\twriter.setSelection( null );\n\t\t\twriter.removeSelectionAttribute( this.model.document.selection.getAttributeKeys() );\n\n\t\t\tfor ( const rootName of Object.keys( newData ) ) {\n\t\t\t\t// Save to model.\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\n\n\t\t\t\twriter.remove( writer.createRangeIn( modelRoot ) );\n\t\t\t\twriter.insert( this.parse( newData[ rootName ], modelRoot ), modelRoot, 0 );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\n\t * attached to the {@link #upcastDispatcher}.\n\t *\n\t * @see #set\n\t * @param {String} data Data to parse.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n\t */\n\tparse( data, context = '$root' ) {\n\t\t// data -> view\n\t\tconst viewDocumentFragment = this.processor.toView( data );\n\n\t\t// view -> model\n\t\treturn this.toModel( viewDocumentFragment, context );\n\t}\n\n\t/**\n\t * Returns the result of the given {@link module:engine/view/element~Element view element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n\t * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\n\t *\n\t * When marker elements were converted during the conversion process, it will be set as a document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n\t * Element or document fragment whose content will be converted.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n\t */\n\ttoModel( viewElementOrFragment, context = '$root' ) {\n\t\treturn this.model.change( writer => {\n\t\t\treturn this.upcastDispatcher.convert( viewElementOrFragment, writer, context );\n\t\t} );\n\t}\n\n\t/**\n\t * Adds a style processor normalization rules.\n\t *\n\t * You can implement your own rules as well as use one of the available processor rules:\n\t *\n\t * * background: {@link module:engine/view/styles/background~addBackgroundRules}\n\t * * border: {@link module:engine/view/styles/border~addBorderRules}\n\t * * margin: {@link module:engine/view/styles/margin~addMarginRules}\n\t * * padding: {@link module:engine/view/styles/padding~addPaddingRules}\n\t *\n\t * @param {Function} callback\n\t */\n\taddStyleProcessorRules( callback ) {\n\t\tcallback( this.stylesProcessor );\n\t}\n\n\t/**\n\t * Removes all event listeners set by the DataController.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks if all provided root names are existing editor roots.\n\t *\n\t * @private\n\t * @param {Array.<String>} rootNames Root names to check.\n\t * @returns {Boolean} Whether all provided root names are existing editor roots.\n\t */\n\t_checkIfRootsExists( rootNames ) {\n\t\tfor ( const rootName of rootNames ) {\n\t\t\tif ( !this.model.document.getRootNames().includes( rootName ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Event fired once the data initialization has finished.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Event fired after the {@link #init `init()` method} was run. It can be {@link #listenTo listened to} in order to adjust or modify\n\t * the initialization flow. However, if the `init` event is stopped or prevented, the {@link #event:ready `ready` event}\n\t * should be fired manually.\n\t *\n\t * The `init` event is fired by the decorated {@link #init} method.\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event init\n\t */\n\n\t/**\n\t * Event fired after {@link #set set() method} has been run.\n\t *\n\t * The `set` event is fired by decorated {@link #set} method.\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event set\n\t */\n}\n\nmix( DataController, ObservableMixin );\n\n// Helper function for downcast conversion.\n//\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\nfunction _getMarkersRelativeToElement( element ) {\n\tconst result = [];\n\tconst doc = element.root.document;\n\n\tif ( !doc ) {\n\t\treturn [];\n\t}\n\n\tconst elementRange = ModelRange._createIn( element );\n\n\tfor ( const marker of doc.model.markers ) {\n\t\tconst intersection = elementRange.getIntersection( marker.getRange() );\n\n\t\tif ( intersection ) {\n\t\t\tresult.push( [ marker.name, intersection ] );\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversion\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport UpcastHelpers from './upcasthelpers';\nimport DowncastHelpers from './downcasthelpers';\n\n/**\n * A utility class that helps add converters to upcast and downcast dispatchers.\n *\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\n * understand the core concepts of the conversion mechanisms.\n *\n * An instance of the conversion manager is available in the\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\n *\n * * `downcast` (editing and data downcasts)\n * * `editingDowncast`\n * * `dataDowncast`\n * * `upcast`\n *\n * # One-way converters\n *\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\n * method:\n *\n *\t\t// Add a converter to editing downcast and data downcast.\n *\t\teditor.conversion.for( 'downcast' ).elementToElement( config ) );\n *\n *\t\t// Add a converter to the data pipepline only:\n *\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( dataConversionConfig ) );\n *\n *\t\t// And a slightly different one for the editing pipeline:\n *\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( editingConversionConfig ) );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `for()`} method documentation to learn more about\n * available conversion helpers and how to use your custom ones.\n *\n * # Two-way converters\n *\n * Besides using one-way converters via the `for()` method, you can also use other methods available in this\n * class to add two-way converters (upcast and downcast):\n *\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\n * Model element to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\n * Model attribute to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\n * Model attribute to view element and vice versa.\n */\nexport default class Conversion {\n\t/**\n\t * Creates a new conversion instance.\n\t *\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher>} downcastDispatchers\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastDispatcher|\n\t * Array.<module:engine/conversion/upcastdispatcher~UpcastDispatcher>} upcastDispatchers\n\t */\n\tconstructor( downcastDispatchers, upcastDispatchers ) {\n\t\t/**\n\t\t * Maps dispatchers group name to ConversionHelpers instances.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,module:engine/conversion/conversionhelpers~ConversionHelpers>}\n\t\t */\n\t\tthis._helpers = new Map();\n\n\t\t// Define default 'downcast' & 'upcast' dispatchers groups. Those groups are always available as two-way converters needs them.\n\t\tthis._downcast = Array.isArray( downcastDispatchers ) ? downcastDispatchers : [ downcastDispatchers ];\n\t\tthis._createConversionHelpers( { name: 'downcast', dispatchers: this._downcast, isDowncast: true } );\n\n\t\tthis._upcast = Array.isArray( upcastDispatchers ) ? upcastDispatchers : [ upcastDispatchers ];\n\t\tthis._createConversionHelpers( { name: 'upcast', dispatchers: this._upcast, isDowncast: false } );\n\t}\n\n\t/**\n\t * Define an alias for registered dispatcher.\n\t *\n\t *\t\tconst conversion = new Conversion(\n\t *\t\t\t[ dataDowncastDispatcher, editingDowncastDispatcher ],\n\t *\t\t\tupcastDispatcher\n\t *\t\t);\n\t *\n\t *\t\tconversion.addAlias( 'dataDowncast', dataDowncastDispatcher );\n\t *\n\t * @param {String} alias An alias of a dispatcher.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher} dispatcher Dispatcher which should have an alias.\n\t */\n\taddAlias( alias, dispatcher ) {\n\t\tconst isDowncast = this._downcast.includes( dispatcher );\n\t\tconst isUpcast = this._upcast.includes( dispatcher );\n\n\t\tif ( !isUpcast && !isDowncast ) {\n\t\t\t/**\n\t\t\t * Trying to register and alias for a dispatcher that nas not been registered.\n\t\t\t *\n\t\t\t * @error conversion-add-alias-dispatcher-not-registered\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'conversion-add-alias-dispatcher-not-registered',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._createConversionHelpers( { name: alias, dispatchers: [ dispatcher ], isDowncast } );\n\t}\n\n\t/**\n\t * Provides a chainable API to assign converters to conversion dispatchers group.\n\t *\n\t * If the given group name has not been registered, the\n\t * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\n\t *\n\t * You can use conversion helpers available directly in the `for()` chain or your custom ones via\n\t * the {@link module:engine/conversion/conversionhelpers~ConversionHelpers#add `add()`} method.\n\t *\n\t * # Using bulit-in conversion helpers\n\t *\n\t * The `for()` chain comes with a set of conversion helpers which you can use like this:\n\t *\n\t *\t\teditor.conversion.for( 'downcast' )\n\t *\t\t\t.elementToElement( config1 )        // Adds an element-to-element downcast converter.\n\t *\t\t\t.attributeToElement( config2 );     // Adds an attribute-to-element downcast converter.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' )\n\t *\t\t\t.elementToAttribute( config3 );     // Adds an element-to-attribute upcast converter.\n\t *\n\t * Refer to the documentation of built-in conversion helpers to learn about their configuration options.\n\t *\n\t * * downcast (model-to-view) conversion helpers:\n\t *\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`},\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement `attributeToElement()`},\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToAttribute `attributeToAttribute()`}.\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToElement `markerToElement()`}.\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToHighlight `markerToHighlight()`}.\n\t *\n\t * * upcast (view-to-model) conversion helpers:\n\t *\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToElement `elementToElement()`},\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute `elementToAttribute()`},\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute `attributeToAttribute()`}.\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `elementToMarker()`}.\n\t *\n\t * # Using custom conversion helpers\n\t *\n\t * If you need to implement a nontypical converter, you can do so by calling:\n\t *\n\t *\t\teditor.conversion.for( direction ).add( customHelper );\n\t *\n\t * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\n\t * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\n\t *\n\t * Example:\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).add( dispatcher => {\n\t *\t\t\tdispatcher.on( 'element:a',  ( evt, data, conversionApi ) => {\n\t *\t\t\t\t// Do something with a view <a> element.\n\t *\t\t\t} );\n\t *\t\t} );\n\t *\n\t * Refer to the documentation of {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n\t * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} to learn how to write\n\t * custom converters.\n\t *\n\t * @param {String} groupName The name of dispatchers group to add the converters to.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tfor( groupName ) {\n\t\tif ( !this._helpers.has( groupName ) ) {\n\t\t\t/**\n\t\t\t * Trying to add a converter to an unknown dispatchers group.\n\t\t\t *\n\t\t\t * @error conversion-for-unknown-group\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'conversion-for-unknown-group', this );\n\t\t}\n\n\t\treturn this._helpers.get( groupName );\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\n\t * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\n\t *\n\t *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\t *\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n\t *\n\t *\t\t// View specified as an object instead of a string.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'fancyParagraph',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'p',\n\t *\t\t\tupcastAlso: [\n\t *\t\t\t\t'div',\n\t *\t\t\t\t{\n\t *\t\t\t\t\t// Any element with the `display: block` style.\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\tdisplay: 'block'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'heading',\n\t *\t\t\tview: 'h2',\n\t *\t\t\t// Convert \"headling-like\" paragraphs to headings.\n\t *\t\t\tupcastAlso: viewElement => {\n\t *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\tif ( size > 26 ) {\n\t *\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * `definition.model` is a `String` with a model element name to convert from or to.\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n\t *\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n\t */\n\telementToElement( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).elementToElement( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.elementToElement( {\n\t\t\t\t\tmodel,\n\t\t\t\t\tview,\n\t\t\t\t\tconverterPriority: definition.converterPriority\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\n\t * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\n\t *\n\t *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'strong' } );\n\t *\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n\t *\n\t *\t\t// View specified as an object instead of a string.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: 'bold'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\n\t *\t\t// The same attribute on different elements may then be handled by a different converter.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'textDecoration',\n\t *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\n\t *\t\t\t\tname: '$text'\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tunderline: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-decoration': 'underline'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tlineThrough: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-decoration': 'line-through'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'strong',\n\t *\t\t\tupcastAlso: [\n\t *\t\t\t\t'b',\n\t *\t\t\t\t{\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tclasses: 'bold'\n\t *\t\t\t\t},\n\t *\t\t\t\t{\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-weight': 'bold'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tviewElement => {\n\t *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'element', 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn {\n\t *\t\t\t\t\t\t\tname: true,\n\t *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n\t *\t\t\t\t\t\t};\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tbig: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '1.2em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '0.8em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tupcastAlso: {\n\t *\t\t\t\tbig: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'element', 'span' ) && size > 10 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'element', 'span' ) && size < 10 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\n\t * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n\t *\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n\t */\n\tattributeToElement( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).attributeToElement( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.elementToAttribute( {\n\t\t\t\t\tview,\n\t\t\t\t\tmodel,\n\t\t\t\t\tconverterPriority: definition.converterPriority\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\n\t * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\n\t * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\n\t * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\n\t * should be set up.\n\t *\n\t *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\n\t *\t\teditor.conversion.attributeToAttribute( { model: 'source', view: 'src' } );\n\t *\n\t *\t\t// Attribute values are strictly specified.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'aside',\n\t *\t\t\t\tvalues: [ 'aside' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\taside: {\n\t *\t\t\t\t\tname: 'img',\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Set the style attribute.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'aside',\n\t *\t\t\t\tvalues: [ 'aside' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\taside: {\n\t *\t\t\t\t\tname: 'img',\n\t *\t\t\t\t\tkey: 'style',\n\t *\t\t\t\t\tvalue: {\n\t *\t\t\t\t\t\tfloat: 'right',\n\t *\t\t\t\t\t\twidth: '50%',\n\t *\t\t\t\t\t\tmargin: '5px'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'align',\n\t *\t\t\t\tvalues: [ 'right', 'center' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tright: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: 'align-right'\n\t *\t\t\t\t},\n\t *\t\t\t\tcenter: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: 'align-center'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tupcastAlso: {\n\t *\t\t\t\tright: {\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-align': 'right'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tcenter: {\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-align': 'center'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The `definition.model` parameter specifies which model attribute should be converted from and to.\n\t * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\n\t * The `key` property is the model attribute key to convert from and to.\n\t * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\n\t * view attribute value.\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\n\t *\n\t * The `definition.view` parameter specifies which view attribute should be converted from and to.\n\t * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\n\t * The `key` property is the view attribute key to convert from and to.\n\t * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\n\t * the same as the model attribute value.\n\t * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\n\t * If `key` is `'style'`, `value` is an object with key-value pairs.\n\t * In other cases, `value` is a `String`.\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\n\t * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\n\t * to `{ key, value, [ name ] }` objects.\n\t *\n\t * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\n\t * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\n\t * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\n\t *\n\t * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\n\t * be given in both parameters.\n\t *\n\t * @param {Object} definition The converter definition.\n\t * @param {String|Object} definition.model The model attribute to convert from and to.\n\t * @param {String|Object} definition.view The view attribute to convert from and to.\n\t * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\n\t * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\n\t * is used only if `config.model.values` is specified.\n\t */\n\tattributeToAttribute( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).attributeToAttribute( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.attributeToAttribute( {\n\t\t\t\t\tview,\n\t\t\t\t\tmodel\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and caches conversion helpers for given dispatchers group.\n\t *\n\t * @private\n\t * @param {Object} options\n\t * @param {String} options.name Group name.\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} options.dispatchers\n\t * @param {Boolean} options.isDowncast\n\t */\n\t_createConversionHelpers( { name, dispatchers, isDowncast } ) {\n\t\tif ( this._helpers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Trying to register a group name that has already been registered.\n\t\t\t *\n\t\t\t * @error conversion-group-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'conversion-group-exists', this );\n\t\t}\n\n\t\tconst helpers = isDowncast ? new DowncastHelpers( dispatchers ) : new UpcastHelpers( dispatchers );\n\n\t\tthis._helpers.set( name, helpers );\n\t}\n}\n\n/**\n * Defines how the model should be converted from and to the view.\n *\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\n *\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\n * (`view` object values).\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\n * (`upcastAlso` object values).\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\n */\n\n// Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\n// `definition.upcastAlso`.\n//\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\n// @returns {Array} Array containing view definitions.\nfunction* _getAllUpcastDefinitions( definition ) {\n\tif ( definition.model.values ) {\n\t\tfor ( const value of definition.model.values ) {\n\t\t\tconst model = { key: definition.model.key, value };\n\t\t\tconst view = definition.view[ value ];\n\t\t\tconst upcastAlso = definition.upcastAlso ? definition.upcastAlso[ value ] : undefined;\n\n\t\t\tyield* _getUpcastDefinition( model, view, upcastAlso );\n\t\t}\n\t} else {\n\t\tyield* _getUpcastDefinition( definition.model, definition.view, definition.upcastAlso );\n\t}\n}\n\nfunction* _getUpcastDefinition( model, view, upcastAlso ) {\n\tyield { model, view };\n\n\tif ( upcastAlso ) {\n\t\tupcastAlso = Array.isArray( upcastAlso ) ? upcastAlso : [ upcastAlso ];\n\n\t\tfor ( const upcastAlsoItem of upcastAlso ) {\n\t\t\tyield { model, view: upcastAlsoItem };\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nexport default class Batch {\n\t/**\n\t * Creates a batch instance.\n\t *\n\t * @see module:engine/model/model~Model#enqueueChange\n\t * @see module:engine/model/model~Model#change\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t */\n\tconstructor( type = 'default' ) {\n\t\t/**\n\t\t * An array of operations that compose this batch.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Array.<module:engine/model/operation/operation~Operation>}\n\t\t */\n\t\tthis.operations = [];\n\n\t\t/**\n\t\t * The type of the batch.\n\t\t *\n\t\t * It can be one of the following values:\n\t\t * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n\t\t * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n\t\t * changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {'transparent'|'default'}\n\t\t */\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n\t * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\tfor ( const op of this.operations ) {\n\t\t\tif ( op.baseVersion !== null ) {\n\t\t\t\treturn op.baseVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds an operation to the batch instance.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n\t * @returns {module:engine/model/operation/operation~Operation} The added operation.\n\t */\n\taddOperation( operation ) {\n\t\toperation.batch = this;\n\t\tthis.operations.push( operation );\n\n\t\treturn operation;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/detachoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class DetachOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t */\n\tconstructor( sourcePosition, howMany ) {\n\t\tsuper( null );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to detach.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} #howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'detach';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( this.sourcePosition.root.document ) {\n\t\t\t/**\n\t\t\t * Cannot detach document node.\n\t\t\t *\n\t\t\t * @error detach-operation-on-document-node\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'detach-operation-on-document-node', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_remove( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'DetachOperation';\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // const range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\t// @if CK_DEBUG_ENGINE //\tconst nodes = Array.from( range.getItems() );\n\t// @if CK_DEBUG_ENGINE //\tconst nodeString = nodes.length > 1 ? `[ ${ nodes.length } ]` : nodes[ 0 ];\n\n\t// @if CK_DEBUG_ENGINE //\treturn `DetachOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ range }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/rootelement\n */\n\nimport Element from './element';\n\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\nexport default class RootElement extends Element {\n\t/**\n\t * Creates root element.\n\t *\n\t * @param {module:engine/model/document~Document} document Document that is an owner of this root.\n\t * @param {String} name Node name.\n\t * @param {String} [rootName='main'] Unique root name used to identify this root\n\t * element by {@link module:engine/model/document~Document}.\n\t */\n\tconstructor( document, name, rootName = 'main' ) {\n\t\tsuper( name );\n\n\t\t/**\n\t\t * Document that is an owner of this root.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis._document = document;\n\n\t\t/**\n\t\t * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = rootName;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns this root element.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this._document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootElement.is( 'rootElement' ); // -> true\n\t *\t\trootElement.is( 'element' ); // -> true\n\t *\t\trootElement.is( 'node' ); // -> true\n\t *\t\trootElement.is( 'model:rootElement' ); // -> true\n\t *\t\trootElement.is( 'model:element' ); // -> true\n\t *\t\trootElement.is( 'model:node' ); // -> true\n\t *\n\t *\t\trootElement.is( 'view:element' ); // -> false\n\t *\t\trootElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/model/element~Element#name name}:\n\t *\n\t *\t\trootElement.is( 'rootElement', '$root' ); // -> same as above\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'rootElement' || type === 'model:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'model:element' ||\n\t\t\t\ttype === 'node' || type === 'model:node';\n\t\t}\n\n\t\treturn name === this.name && (\n\t\t\ttype === 'rootElement' || type === 'model:rootElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'model:element'\n\t\t);\n\t}\n\n\t/**\n\t * Converts `RootElement` instance to `String` containing it's name.\n\t *\n\t * @returns {String} `RootElement` instance converted to `String`.\n\t */\n\ttoJSON() {\n\t\treturn this.rootName;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn this.rootName;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelRootElement: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/writer\n */\n\nimport AttributeOperation from './operation/attributeoperation';\nimport DetachOperation from './operation/detachoperation';\nimport InsertOperation from './operation/insertoperation';\nimport MarkerOperation from './operation/markeroperation';\nimport MoveOperation from './operation/moveoperation';\nimport RenameOperation from './operation/renameoperation';\nimport RootAttributeOperation from './operation/rootattributeoperation';\nimport SplitOperation from './operation/splitoperation';\nimport MergeOperation from './operation/mergeoperation';\n\nimport DocumentFragment from './documentfragment';\nimport Text from './text';\nimport Element from './element';\nimport RootElement from './rootelement';\nimport Position from './position';\nimport Range from './range.js';\nimport DocumentSelection from './documentselection';\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\n * child nodes, attributes or text, set the selection's position and its attributes.\n *\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\n *\n *\t\tmodel.change( writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * Note that the writer should never be stored and used outside of the `change()` and\n * `enqueueChange()` blocks.\n *\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\n * to create incorrect model structures by using the writer. Read more about in\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\n *\n * @see module:engine/model/model~Model#change\n * @see module:engine/model/model~Model#enqueueChange\n */\nexport default class Writer {\n\t/**\n\t * Creates a writer instance.\n\t *\n\t * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\n\t * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/model~Model} model\n\t * @param {module:engine/model/batch~Batch} batch\n\t */\n\tconstructor( model, batch ) {\n\t\t/**\n\t\t * Instance of the model on which this writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The batch to which this writer will add changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/batch~Batch}\n\t\t */\n\t\tthis.batch = batch;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\t\twriter.createText( 'foo', { bold: true } );\n\t *\n\t * @param {String} data Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @returns {module:engine/model/text~Text} Created text node.\n\t */\n\tcreateText( data, attributes ) {\n\t\treturn new Text( data, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/element~Element element}.\n\t *\n\t *\t\twriter.createElement( 'paragraph' );\n\t *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/model/element~Element} Created element.\n\t */\n\tcreateElement( name, attributes ) {\n\t\treturn new Element( name, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\n\t */\n\tcreateDocumentFragment() {\n\t\treturn new DocumentFragment();\n\t}\n\n\t/**\n\t * Creates a copy of the element and returns it. Created element has the same name and attributes as the original element.\n\t * If clone is deep, the original element's children are also cloned. If not, then empty element is returned.\n\t *\n\t * @param {module:engine/model/element~Element} element The element to clone.\n\t * @param {Boolean} [deep=true] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any child.\n\t */\n\tcloneElement( element, deep = true ) {\n\t\treturn element._clone( deep );\n\t}\n\n\t/**\n\t * Inserts item on given position.\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.insert( paragraph, position );\n\t *\n\t * Instead of using position you can use parent and offset:\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\twriter.insert( text, paragraph, 5 );\n\t *\n\t * You can also use `end` instead of the offset to insert at the end:\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\twriter.insert( text, paragraph, 'end' );\n\t *\n\t * Or insert before or after another element:\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * Note that if the item already has parent it will be removed from the previous parent.\n\t *\n\t * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\n\t * `model-writer-insert-forbidden-move` is thrown.\n\t *\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n\t *\n\t * **Note:** For a paste-like content insertion mechanism see\n\t * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\n\t * fragment to insert.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsert( item, itemOrPosition, offset = 0 ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( item instanceof Text && item.data == '' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = Position._createAt( itemOrPosition, offset );\n\n\t\t// If item has a parent already.\n\t\tif ( item.parent ) {\n\t\t\t// We need to check if item is going to be inserted within the same document.\n\t\t\tif ( isSameTree( item.root, position.root ) ) {\n\t\t\t\t// If it's we just need to move it.\n\t\t\t\tthis.move( Range._createOn( item ), position );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If it isn't the same root.\n\t\t\telse {\n\t\t\t\tif ( item.root.document ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Cannot move a node from a document to a different tree.\n\t\t\t\t\t * It is forbidden to move a node that was already in a document outside of it.\n\t\t\t\t\t *\n\t\t\t\t\t * @error model-writer-insert-forbidden-move\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'model-writer-insert-forbidden-move',\n\t\t\t\t\t\tthis\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Move between two different document fragments or from document fragment to a document is possible.\n\t\t\t\t\t// In that case, remove the item from it's original parent.\n\t\t\t\t\tthis.remove( item );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst version = position.root.document ? position.root.document.version : null;\n\n\t\tconst insert = new InsertOperation( position, item, version );\n\n\t\tif ( item instanceof Text ) {\n\t\t\tinsert.shouldReceiveAttributes = true;\n\t\t}\n\n\t\tthis.batch.addOperation( insert );\n\t\tthis.model.applyOperation( insert );\n\n\t\t// When element is a DocumentFragment we need to move its markers to Document#markers.\n\t\tif ( item instanceof DocumentFragment ) {\n\t\t\tfor ( const [ markerName, markerRange ] of item.markers ) {\n\t\t\t\t// We need to migrate marker range from DocumentFragment to Document.\n\t\t\t\tconst rangeRootPosition = Position._createAt( markerRange.root, 0 );\n\t\t\t\tconst range = new Range(\n\t\t\t\t\tmarkerRange.start._getCombined( rangeRootPosition, position ),\n\t\t\t\t\tmarkerRange.end._getCombined( rangeRootPosition, position )\n\t\t\t\t);\n\n\t\t\t\tconst options = { range, usingOperation: true, affectsData: true };\n\n\t\t\t\tif ( this.model.markers.has( markerName ) ) {\n\t\t\t\t\tthis.updateMarker( markerName, options );\n\t\t\t\t} else {\n\t\t\t\t\tthis.addMarker( markerName, options );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates and inserts text on given position. You can optionally set text attributes:\n\t *\n\t *\t\twriter.insertText( 'foo', position );\n\t *\t\twriter.insertText( 'foo', { bold: true }, position );\n\t *\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\n\t * or before or after other node:\n\t *\n\t *\t\t// Inserts 'foo' in paragraph, at offset 5:\n\t *\t\twriter.insertText( 'foo', paragraph, 5 );\n\t *\t\t// Inserts 'foo' at the end of a paragraph:\n\t *\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t// Inserts 'foo' after an image:\n\t *\t\twriter.insertText( 'foo', image, 'after' );\n\t *\n\t * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * @param {String} data Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsertText( text, attributes, itemOrPosition, offset ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\n\t\t\tthis.insert( this.createText( text ), attributes, itemOrPosition );\n\t\t} else {\n\t\t\tthis.insert( this.createText( text, attributes ), itemOrPosition, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and inserts element on given position. You can optionally set attributes:\n\t *\n\t *\t\twriter.insertElement( 'paragraph', position );\n\t *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\n\t *\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\n\t * or before or after other node:\n\t *\n\t *\t\t// Inserts paragraph in the root at offset 5:\n\t *\t\twriter.insertElement( 'paragraph', root, 5 );\n\t *\t\t// Inserts paragraph at the end of a blockquote:\n\t *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\n\t *\t\t// Inserts after an image:\n\t *\t\twriter.insertElement( 'paragraph', image, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsertElement( name, attributes, itemOrPosition, offset ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\n\t\t\tthis.insert( this.createElement( name ), attributes, itemOrPosition );\n\t\t} else {\n\t\t\tthis.insert( this.createElement( name, attributes ), itemOrPosition, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Inserts item at the end of the given parent.\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.append( paragraph, root );\n\t *\n\t * Note that if the item already has parent it will be removed from the previous parent.\n\t *\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\n\t * item Item or document fragment to insert.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappend( item, parent ) {\n\t\tthis.insert( item, parent, 'end' );\n\t}\n\n\t/**\n\t * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\n\t *\n\t *\t\twriter.appendText( 'foo', paragraph );\n\t *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\n\t *\n\t * @param {String} text Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappendText( text, attributes, parent ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\n\t\t\tthis.insert( this.createText( text ), attributes, 'end' );\n\t\t} else {\n\t\t\tthis.insert( this.createText( text, attributes ), parent, 'end' );\n\t\t}\n\t}\n\n\t/**\n\t * Creates element and inserts it at the end of the parent. You can optionally set attributes:\n\t *\n\t *\t\twriter.appendElement( 'paragraph', root );\n\t *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappendElement( name, attributes, parent ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\n\t\t\tthis.insert( this.createElement( name ), attributes, 'end' );\n\t\t} else {\n\t\t\tthis.insert( this.createElement( name, attributes ), parent, 'end' );\n\t\t}\n\t}\n\n\t/**\n\t * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n\t * or on a {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {*} value Attribute new value.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range on which the attribute will be set.\n\t */\n\tsetAttribute( key, value, itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( itemOrRange instanceof Range ) {\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\n\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tsetAttributeOnRange( this, key, value, range );\n\t\t\t}\n\t\t} else {\n\t\t\tsetAttributeOnItem( this, key, value, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Sets values of attributes on a {@link module:engine/model/item~Item model item}\n\t * or on a {@link module:engine/model/range~Range range}.\n\t *\n\t *\t\twriter.setAttributes( {\n\t *\t\t\tbold: true,\n\t *\t\t\titalic: true\n\t *\t\t}, range );\n\t *\n\t * @param {Object} attributes Attributes keys and values.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range on which the attributes will be set.\n\t */\n\tsetAttributes( attributes, itemOrRange ) {\n\t\tfor ( const [ key, val ] of toMap( attributes ) ) {\n\t\t\tthis.setAttribute( key, val, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n\t * or from a {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range from which the attribute will be removed.\n\t */\n\tremoveAttribute( key, itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( itemOrRange instanceof Range ) {\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\n\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tsetAttributeOnRange( this, key, null, range );\n\t\t\t}\n\t\t} else {\n\t\t\tsetAttributeOnItem( this, key, null, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Removes all attributes from all elements in the range or from the given item.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range from which all attributes will be removed.\n\t */\n\tclearAttributes( itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst removeAttributesFromItem = item => {\n\t\t\tfor ( const attribute of item.getAttributeKeys() ) {\n\t\t\t\tthis.removeAttribute( attribute, item );\n\t\t\t}\n\t\t};\n\n\t\tif ( !( itemOrRange instanceof Range ) ) {\n\t\t\tremoveAttributesFromItem( itemOrRange );\n\t\t} else {\n\t\t\tfor ( const item of itemOrRange.getItems() ) {\n\t\t\t\tremoveAttributesFromItem( item );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves all items in the source range to the target position.\n\t *\n\t *\t\twriter.move( sourceRange, targetPosition );\n\t *\n\t * Instead of the target position you can use parent and offset or define that range should be moved to the end\n\t * or before or after chosen item:\n\t *\n\t *\t\t// Moves all items in the range to the paragraph at offset 5:\n\t *\t\twriter.move( sourceRange, paragraph, 5 );\n\t *\t\t// Moves all items in the range to the end of a blockquote:\n\t *\t\twriter.move( sourceRange, blockquote, 'end' );\n\t *\t\t// Moves all items in the range to a position after an image:\n\t *\t\twriter.move( sourceRange, image, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * Note that items can be moved only within the same tree. It means that you can move items within the same root\n\t * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\n\t * but you can not move items from document fragment to the document or from one detached element to another. Use\n\t * {@link module:engine/model/writer~Writer#insert} in such cases.\n\t *\n\t * @param {module:engine/model/range~Range} range Source range.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tmove( range, itemOrPosition, offset ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Invalid range to move.\n\t\t\t *\n\t\t\t * @error writer-move-invalid-range\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-invalid-range', this );\n\t\t}\n\n\t\tif ( !range.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to move is not flat.\n\t\t\t *\n\t\t\t * @error writer-move-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-range-not-flat', this );\n\t\t}\n\n\t\tconst position = Position._createAt( itemOrPosition, offset );\n\n\t\t// Do not move anything if the move target is same as moved range start.\n\t\tif ( position.isEqual( range.start ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\tthis._addOperationForAffectedMarkers( 'move', range );\n\n\t\tif ( !isSameTree( range.root, position.root ) ) {\n\t\t\t/**\n\t\t\t * Range is going to be moved within not the same document. Please use\n\t\t\t * {@link module:engine/model/writer~Writer#insert insert} instead.\n\t\t\t *\n\t\t\t * @error writer-move-different-document\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-different-document', this );\n\t\t}\n\n\t\tconst version = range.root.document ? range.root.document.version : null;\n\t\tconst operation = new MoveOperation( range.start, range.end.offset - range.start.offset, position, version );\n\n\t\tthis.batch.addOperation( operation );\n\t\tthis.model.applyOperation( operation );\n\t}\n\n\t/**\n\t * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n\t */\n\tremove( itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst rangeToRemove = itemOrRange instanceof Range ? itemOrRange : Range._createOn( itemOrRange );\n\t\tconst ranges = rangeToRemove.getMinimalFlatRanges().reverse();\n\n\t\tfor ( const flat of ranges ) {\n\t\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\t\tthis._addOperationForAffectedMarkers( 'move', flat );\n\n\t\t\tapplyRemoveOperation( flat.start, flat.end.offset - flat.start.offset, this.batch, this.model );\n\t\t}\n\t}\n\n\t/**\n\t * Merges two siblings at the given position.\n\t *\n\t * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\n\t * `writer-merge-no-element-after` error will be thrown.\n\t *\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\tmerge( position ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst nodeBefore = position.nodeBefore;\n\t\tconst nodeAfter = position.nodeAfter;\n\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\tthis._addOperationForAffectedMarkers( 'merge', position );\n\n\t\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Node before merge position must be an element.\n\t\t\t *\n\t\t\t * @error writer-merge-no-element-before\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-before', this );\n\t\t}\n\n\t\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Node after merge position must be an element.\n\t\t\t *\n\t\t\t * @error writer-merge-no-element-after\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-after', this );\n\t\t}\n\n\t\tif ( !position.root.document ) {\n\t\t\tthis._mergeDetached( position );\n\t\t} else {\n\t\t\tthis._merge( position );\n\t\t}\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionFromPath( root, path, stickiness ) {\n\t\treturn this.model.createPositionFromPath( root, path, stickiness );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn this.model.createPositionAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn this.model.createPositionAfter( item );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn this.model.createPositionBefore( item );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn this.model.createRange( start, end );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn this.model.createRangeIn( element );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeOn( element ) {\n\t\treturn this.model.createRangeOn( element );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @returns {module:engine/model/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn this.model.createSelection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Performs merge action in a detached tree.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\t_mergeDetached( position ) {\n\t\tconst nodeBefore = position.nodeBefore;\n\t\tconst nodeAfter = position.nodeAfter;\n\n\t\tthis.move( Range._createIn( nodeAfter ), Position._createAt( nodeBefore, 'end' ) );\n\t\tthis.remove( nodeAfter );\n\t}\n\n\t/**\n\t * Performs merge action in a non-detached tree.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\t_merge( position ) {\n\t\tconst targetPosition = Position._createAt( position.nodeBefore, 'end' );\n\t\tconst sourcePosition = Position._createAt( position.nodeAfter, 0 );\n\n\t\tconst graveyard = position.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\n\n\t\tconst version = position.root.document.version;\n\n\t\tconst merge = new MergeOperation( sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version );\n\n\t\tthis.batch.addOperation( merge );\n\t\tthis.model.applyOperation( merge );\n\t}\n\n\t/**\n\t * Renames the given element.\n\t *\n\t * @param {module:engine/model/element~Element} element The element to rename.\n\t * @param {String} newName New element name.\n\t */\n\trename( element, newName ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Trying to rename an object which is not an instance of Element.\n\t\t\t *\n\t\t\t * @error writer-rename-not-element-instance\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-rename-not-element-instance',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst version = element.root.document ? element.root.document.version : null;\n\t\tconst renameOperation = new RenameOperation( Position._createBefore( element ), element.name, newName, version );\n\n\t\tthis.batch.addOperation( renameOperation );\n\t\tthis.model.applyOperation( renameOperation );\n\t}\n\n\t/**\n\t * Splits elements starting from the given position and going to the top of the model tree as long as given\n\t * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\n\t *\n\t * The element needs to have a parent. It cannot be a root element nor a document fragment.\n\t * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of split.\n\t * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\n\t * @returns {Object} result Split result.\n\t * @returns {module:engine/model/position~Position} result.position Position between split elements.\n\t * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ends\n\t * at the beginning of the first copy element.\n\t */\n\tsplit( position, limitElement ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tlet splitElement = position.parent;\n\n\t\tif ( !splitElement.parent ) {\n\t\t\t/**\n\t\t\t * Element with no parent can not be split.\n\t\t\t *\n\t\t\t * @error writer-split-element-no-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-split-element-no-parent', this );\n\t\t}\n\n\t\t// When limit element is not defined lets set splitElement parent as limit.\n\t\tif ( !limitElement ) {\n\t\t\tlimitElement = splitElement.parent;\n\t\t}\n\n\t\tif ( !position.parent.getAncestors( { includeSelf: true } ).includes( limitElement ) ) {\n\t\t\t/**\n\t\t\t * Limit element is not a position ancestor.\n\t\t\t *\n\t\t\t * @error writer-split-invalid-limit-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-split-invalid-limit-element', this );\n\t\t}\n\n\t\t// We need to cache elements that will be created as a result of the first split because\n\t\t// we need to create a range from the end of the first split element to the beginning of the\n\t\t// first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\n\t\tlet firstSplitElement, firstCopyElement;\n\n\t\tdo {\n\t\t\tconst version = splitElement.root.document ? splitElement.root.document.version : null;\n\t\t\tconst howMany = splitElement.maxOffset - position.offset;\n\t\t\tconst split = new SplitOperation( position, howMany, null, version );\n\n\t\t\tthis.batch.addOperation( split );\n\t\t\tthis.model.applyOperation( split );\n\n\t\t\t// Cache result of the first split.\n\t\t\tif ( !firstSplitElement && !firstCopyElement ) {\n\t\t\t\tfirstSplitElement = splitElement;\n\t\t\t\tfirstCopyElement = position.parent.nextSibling;\n\t\t\t}\n\n\t\t\tposition = this.createPositionAfter( position.parent );\n\t\t\tsplitElement = position.parent;\n\t\t} while ( splitElement !== limitElement );\n\n\t\treturn {\n\t\t\tposition,\n\t\t\trange: new Range( Position._createAt( firstSplitElement, 'end' ), Position._createAt( firstCopyElement, 0 ) )\n\t\t};\n\t}\n\n\t/**\n\t * Wraps the given range with the given element or with a new element (if a string was passed).\n\t *\n\t * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\n\t * If not, an error will be thrown.\n\t *\n\t * @param {module:engine/model/range~Range} range Range to wrap.\n\t * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n\t */\n\twrap( range, elementOrString ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !range.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to wrap is not flat.\n\t\t\t *\n\t\t\t * @error writer-wrap-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-range-not-flat', this );\n\t\t}\n\n\t\tconst element = elementOrString instanceof Element ? elementOrString : new Element( elementOrString );\n\n\t\tif ( element.childCount > 0 ) {\n\t\t\t/**\n\t\t\t * Element to wrap with is not empty.\n\t\t\t *\n\t\t\t * @error writer-wrap-element-not-empty\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-not-empty', this );\n\t\t}\n\n\t\tif ( element.parent !== null ) {\n\t\t\t/**\n\t\t\t * Element to wrap with is already attached to a tree model.\n\t\t\t *\n\t\t\t * @error writer-wrap-element-attached\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-attached', this );\n\t\t}\n\n\t\tthis.insert( element, range.start );\n\n\t\t// Shift the range-to-wrap because we just inserted an element before that range.\n\t\tconst shiftedRange = new Range( range.start.getShiftedBy( 1 ), range.end.getShiftedBy( 1 ) );\n\n\t\tthis.move( shiftedRange, Position._createAt( element, 0 ) );\n\t}\n\n\t/**\n\t * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n\t * Throws error if you try to unwrap an element which does not have a parent.\n\t *\n\t * @param {module:engine/model/element~Element} element Element to unwrap.\n\t */\n\tunwrap( element ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( element.parent === null ) {\n\t\t\t/**\n\t\t\t * Trying to unwrap an element which has no parent.\n\t\t\t *\n\t\t\t * @error writer-unwrap-element-no-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-unwrap-element-no-parent', this );\n\t\t}\n\n\t\tthis.move( Range._createIn( element ), this.createPositionAfter( element ) );\n\t\tthis.remove( element );\n\t}\n\n\t/**\n\t * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n\t * changes in the document and updates its range automatically, when model tree changes.\n\t *\n\t * As the first parameter you can set marker name.\n\t *\n\t * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n\t * markers managed by operations and not-managed by operations.\n\t *\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n\t * `true` when the marker change changes the data returned by the\n\t * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n\t *\n\t * Create marker directly base on marker's name:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: false } );\n\t *\n\t * Create marker using operation:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: true } );\n\t *\n\t * Create marker that affects the editor data:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\n\t *\n\t * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\n\t *\n\t * @see module:engine/model/markercollection~Marker\n\t * @param {String} name Name of a marker to create - must be unique.\n\t * @param {Object} options\n\t * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n\t * @param {module:engine/model/range~Range} options.range Marker range.\n\t * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\n\t * @returns {module:engine/model/markercollection~Marker} Marker that was set.\n\t */\n\taddMarker( name, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !options || typeof options.usingOperation != 'boolean' ) {\n\t\t\t/**\n\t\t\t * The `options.usingOperation` parameter is required when adding a new marker.\n\t\t\t *\n\t\t\t * @error writer-addmarker-no-usingoperation\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-addmarker-no-usingoperation', this );\n\t\t}\n\n\t\tconst usingOperation = options.usingOperation;\n\t\tconst range = options.range;\n\t\tconst affectsData = options.affectsData === undefined ? false : options.affectsData;\n\n\t\tif ( this.model.markers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Marker with provided name already exists.\n\t\t\t *\n\t\t\t * @error writer-addmarker-marker-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-addmarker-marker-exists', this );\n\t\t}\n\n\t\tif ( !range ) {\n\t\t\t/**\n\t\t\t * Range parameter is required when adding a new marker.\n\t\t\t *\n\t\t\t * @error writer-addmarker-no-range\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-addmarker-no-range', this );\n\t\t}\n\n\t\tif ( !usingOperation ) {\n\t\t\treturn this.model.markers._set( name, range, usingOperation, affectsData );\n\t\t}\n\n\t\tapplyMarkerOperation( this, name, null, range, affectsData );\n\n\t\treturn this.model.markers.get( name );\n\t}\n\n\t/**\n\t * Adds, updates or refreshes a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n\t * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\n\t * marker's range directly using this method.\n\t *\n\t * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\n\t * name is created and returned.\n\t *\n\t * As the second parameter you can set the new marker data or leave this parameter as empty which will just refresh\n\t * the marker by triggering downcast conversion for it. Refreshing the marker is useful when you want to change\n\t * the marker {@link module:engine/view/element~Element view element} without changing any marker data.\n\t *\n\t * \t\tlet isCommentActive = false;\n\t *\n\t * \t\tmodel.conversion.markerToHighlight( {\n\t * \t\t\tmodel: 'comment',\n\t *\t\t\tview: data => {\n\t *\t\t\t\tconst classes = [ 'comment-marker' ];\n\t *\n\t *\t\t\t\tif ( isCommentActive ) {\n\t *\t\t\t\t\tclasses.push( 'comment-marker--active' );\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn { classes };\n\t *\t\t\t}\n\t * \t\t} );\n\t *\n\t * \t\t// Change the property that indicates if marker is displayed as active or not.\n\t * \t\tisCommentActive = true;\n\t *\n\t * \t\t// And refresh the marker to convert it with additional class.\n\t * \t\tmodel.change( writer => writer.updateMarker( 'comment' ) );\n\t *\n\t * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n\t * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\n\t *\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n\t * `true` when the marker change changes the data returned by\n\t * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n\t *\n\t * Update marker directly base on marker's name:\n\t *\n\t *\t\tupdateMarker( markerName, { range } );\n\t *\n\t * Update marker using operation:\n\t *\n\t *\t\tupdateMarker( marker, { range, usingOperation: true } );\n\t *\t\tupdateMarker( markerName, { range, usingOperation: true } );\n\t *\n\t * Change marker's option (start using operations to manage it):\n\t *\n\t *\t\tupdateMarker( marker, { usingOperation: true } );\n\t *\n\t * Change marker's option (inform the engine, that the marker does not affect the data anymore):\n\t *\n\t *\t\tupdateMarker( markerName, { affectsData: false } );\n\t *\n\t * @see module:engine/model/markercollection~Marker\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of a marker to update, or a marker instance.\n\t * @param {Object} [options] If options object is not defined then marker will be refreshed by triggering\n\t * downcast conversion for this marker with the same data.\n\t * @param {module:engine/model/range~Range} [options.range] Marker range to update.\n\t * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n\t * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\n\t */\n\tupdateMarker( markerOrName, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\t\tconst currentMarker = this.model.markers.get( markerName );\n\n\t\tif ( !currentMarker ) {\n\t\t\t/**\n\t\t\t * Marker with provided name does not exists.\n\t\t\t *\n\t\t\t * @error writer-updatemarker-marker-not-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-updatemarker-marker-not-exists', this );\n\t\t}\n\n\t\tif ( !options ) {\n\t\t\tthis.model.markers._refresh( currentMarker );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\n\t\tconst affectsDataDefined = typeof options.affectsData == 'boolean';\n\n\t\t// Use previously defined marker's affectsData if the property is not provided.\n\t\tconst affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\n\n\t\tif ( !hasUsingOperationDefined && !options.range && !affectsDataDefined ) {\n\t\t\t/**\n\t\t\t * One of the options is required - provide range, usingOperations or affectsData.\n\t\t\t *\n\t\t\t * @error writer-updatemarker-wrong-options\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-updatemarker-wrong-options', this );\n\t\t}\n\n\t\tconst currentRange = currentMarker.getRange();\n\t\tconst updatedRange = options.range ? options.range : currentRange;\n\n\t\tif ( hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations ) {\n\t\t\t// The marker type is changed so it's necessary to create proper operations.\n\t\t\tif ( options.usingOperation ) {\n\t\t\t\t// If marker changes to a managed one treat this as synchronizing existing marker.\n\t\t\t\t// Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n\t\t\t\tapplyMarkerOperation( this, markerName, null, updatedRange, affectsData );\n\t\t\t} else {\n\t\t\t\t// If marker changes to a marker that do not use operations then we need to create additional operation\n\t\t\t\t// that removes that marker first.\n\t\t\t\tapplyMarkerOperation( this, markerName, currentRange, null, affectsData );\n\n\t\t\t\t// Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\n\t\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Marker's type doesn't change so update it accordingly.\n\t\tif ( currentMarker.managedUsingOperations ) {\n\t\t\tapplyMarkerOperation( this, markerName, currentRange, updatedRange, affectsData );\n\t\t} else {\n\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n\t * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\n\t * it will be destroyed using operation.\n\t *\n\t * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n\t */\n\tremoveMarker( markerOrName ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n\t\tif ( !this.model.markers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove marker which does not exist.\n\t\t\t *\n\t\t\t * @error writer-removemarker-no-marker\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-removemarker-no-marker', this );\n\t\t}\n\n\t\tconst marker = this.model.markers.get( name );\n\n\t\tif ( !marker.managedUsingOperations ) {\n\t\t\tthis.model.markers._remove( name );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldRange = marker.getRange();\n\n\t\tapplyMarkerOperation( this, name, oldRange, null, marker.affectsData );\n\t}\n\n\t/**\n\t * Sets the document's selection (ranges and direction) to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable} or creates an empty selection if no arguments were passed.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\twriter.setSelection( ranges );\n\t *\n\t *\t\t// Sets selection to other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t *\t\t// Sets selection to the given document selection.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\twriter.setSelection( documentSelection );\n\t *\n\t *\t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPosition( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t *\t\t// Removes all selection's ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tsetSelection( selectable, placeOrOffset, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tthis.model.document.selection._setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link #createPositionAt `writer.createPositionAt()`} parameters.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetSelectionFocus( itemOrPosition, offset ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tthis.model.document.selection._setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * Using key and value pair:\n\t *\n\t * \twriter.setSelectionAttribute( 'italic', true );\n\t *\n\t * Using key-value object:\n\t *\n\t * \twriter.setSelectionAttribute( { italic: true, bold: false } );\n\t *\n\t * Using iterable object:\n\t *\n\t * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\n\t *\n\t * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\n\t * or object / iterable of key => value attribute pairs.\n\t * @param {*} [value] Attribute value.\n\t */\n\tsetSelectionAttribute( keyOrObjectOrIterable, value ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( typeof keyOrObjectOrIterable === 'string' ) {\n\t\t\tthis._setSelectionAttribute( keyOrObjectOrIterable, value );\n\t\t} else {\n\t\t\tfor ( const [ key, value ] of toMap( keyOrObjectOrIterable ) ) {\n\t\t\t\tthis._setSelectionAttribute( key, value );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute(s) with given key(s) from the selection.\n\t *\n\t * Remove one attribute:\n\t *\n\t *\t\twriter.removeSelectionAttribute( 'italic' );\n\t *\n\t * Remove multiple attributes:\n\t *\n\t *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\n\t *\n\t * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\n\t */\n\tremoveSelectionAttribute( keyOrIterableOfKeys ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( typeof keyOrIterableOfKeys === 'string' ) {\n\t\t\tthis._removeSelectionAttribute( keyOrIterableOfKeys );\n\t\t} else {\n\t\t\tfor ( const key of keyOrIterableOfKeys ) {\n\t\t\t\tthis._removeSelectionAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\n\t * of the selection from left to right.\n\t *\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\n\t * then the selection (after being moved by the user) inherits attributes from its left-hand side.\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\n\t *\n\t * For the following model fragment:\n\t *\n\t *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\n\t *\n\t * * Default gravity: selection will have the `bold` and `linkHref` attributes.\n\t * * Overridden gravity: selection will have `bold` attribute.\n\t *\n\t * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n\t * of the process.\n\t *\n\t * @returns {String} The unique id which allows restoring the gravity.\n\t */\n\toverrideSelectionGravity() {\n\t\treturn this.model.document.selection._overrideGravity();\n\t}\n\n\t/**\n\t * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\n\t *\n\t * Restoring the gravity is only possible using the unique identifier returned by\n\t * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\n\t * the same number of times it was overridden.\n\t *\n\t * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\n\t */\n\trestoreSelectionGravity( uid ) {\n\t\tthis.model.document.selection._restoreGravity( uid );\n\t}\n\n\t/**\n\t * @private\n\t * @param {String} key Key of the attribute to remove.\n\t * @param {*} value Attribute value.\n\t */\n\t_setSelectionAttribute( key, value ) {\n\t\tconst selection = this.model.document.selection;\n\n\t\t// Store attribute in parent element if the selection is collapsed in an empty node.\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\n\n\t\t\tthis.setAttribute( storeKey, value, selection.anchor.parent );\n\t\t}\n\n\t\tselection._setAttribute( key, value );\n\t}\n\n\t/**\n\t * @private\n\t * @param {String} key Key of the attribute to remove.\n\t */\n\t_removeSelectionAttribute( key ) {\n\t\tconst selection = this.model.document.selection;\n\n\t\t// Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\n\n\t\t\tthis.removeAttribute( storeKey, selection.anchor.parent );\n\t\t}\n\n\t\tselection._removeAttribute( key );\n\t}\n\n\t/**\n\t * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\n\t *\n\t * @private\n\t */\n\t_assertWriterUsedCorrectly() {\n\t\t/**\n\t\t * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()`} or\n\t\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\n\t\t *\n\t\t * The writer can only be used inside these blocks which ensures that the model\n\t\t * can only be changed during such \"sessions\".\n\t\t *\n\t\t * @error writer-incorrect-use\n\t\t */\n\t\tif ( this.model._currentWriter !== this ) {\n\t\t\tthrow new CKEditorError( 'writer-incorrect-use', this );\n\t\t}\n\t}\n\n\t/**\n\t * For given action `type` and `positionOrRange` where the action happens, this function finds all affected markers\n\t * and applies a marker operation with the new marker range equal to the current range. Thanks to this, the marker range\n\t * can be later correctly processed during undo.\n\t *\n\t * @private\n\t * @param {'move'|'merge'} type Writer action type.\n\t * @param {module:engine/model/position~Position|module:engine/model/range~Range} positionOrRange Position or range\n\t * where the writer action happens.\n\t */\n\t_addOperationForAffectedMarkers( type, positionOrRange ) {\n\t\tfor ( const marker of this.model.markers ) {\n\t\t\tif ( !marker.managedUsingOperations ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst markerRange = marker.getRange();\n\t\t\tlet isAffected = false;\n\n\t\t\tif ( type === 'move' ) {\n\t\t\t\tisAffected =\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.start ) ||\n\t\t\t\t\tpositionOrRange.start.isEqual( markerRange.start ) ||\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.end ) ||\n\t\t\t\t\tpositionOrRange.end.isEqual( markerRange.end );\n\t\t\t} else {\n\t\t\t\t// if type === 'merge'.\n\t\t\t\tconst elementBefore = positionOrRange.nodeBefore;\n\t\t\t\tconst elementAfter = positionOrRange.nodeAfter;\n\n\t\t\t\t//               Start:  <p>Foo[</p><p>Bar]</p>\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedInLeftElement = markerRange.start.parent == elementBefore && markerRange.start.isAtEnd;\n\n\t\t\t\t//               Start:  <p>[Foo</p><p>]Bar</p>\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedInRightElement = markerRange.end.parent == elementAfter && markerRange.end.offset == 0;\n\n\t\t\t\t//               Start:  <p>[Foo</p>]<p>Bar</p>\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedAfterLeftElement = markerRange.end.nodeAfter == elementAfter;\n\n\t\t\t\t//               Start:  <p>Foo</p>[<p>Bar]</p>\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedBeforeRightElement = markerRange.start.nodeAfter == elementAfter;\n\n\t\t\t\tisAffected = affectedInLeftElement || affectedInRightElement || affectedAfterLeftElement || affectedBeforeRightElement;\n\t\t\t}\n\n\t\t\tif ( isAffected ) {\n\t\t\t\tthis.updateMarker( marker.name, { range: markerRange } );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\n//\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\n// the range into smaller parts.\n//\n// Given `range` must be flat.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\nfunction setAttributeOnRange( writer, key, value, range ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\n\t// Position of the last split, the beginning of the new range.\n\tlet lastSplitPosition = range.start;\n\n\t// Currently position in the scanning range. Because we need value after the position, it is not a current\n\t// position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\tlet position;\n\n\t// Value before the currently position.\n\tlet valueBefore;\n\n\t// Value after the currently position.\n\tlet valueAfter;\n\n\tfor ( const val of range.getWalker( { shallow: true } ) ) {\n\t\tvalueAfter = val.item.getAttribute( key );\n\n\t\t// At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\n\t\t// because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\n\t\tif ( position && valueBefore != valueAfter ) {\n\t\t\t// if valueBefore == value there is nothing to change, so we add operation only if these values are different.\n\t\t\tif ( valueBefore != value ) {\n\t\t\t\taddOperation();\n\t\t\t}\n\n\t\t\tlastSplitPosition = position;\n\t\t}\n\n\t\tposition = val.nextPosition;\n\t\tvalueBefore = valueAfter;\n\t}\n\n\t// Because position in the loop is not the iterator position (see let position comment), the last position in\n\t// the while loop will be last but one position in the range. We need to check the last position manually.\n\tif ( position instanceof Position && position != lastSplitPosition && valueBefore != value ) {\n\t\taddOperation();\n\t}\n\n\tfunction addOperation() {\n\t\tconst range = new Range( lastSplitPosition, position );\n\t\tconst version = range.root.document ? doc.version : null;\n\t\tconst operation = new AttributeOperation( range, key, valueBefore, value, version );\n\n\t\twriter.batch.addOperation( operation );\n\t\tmodel.applyOperation( operation );\n\t}\n}\n\n// Sets given attribute to the given node. When attribute value is null then attribute will be removed.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\nfunction setAttributeOnItem( writer, key, value, item ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\tconst previousValue = item.getAttribute( key );\n\tlet range, operation;\n\n\tif ( previousValue != value ) {\n\t\tconst isRootChanged = item.root === item;\n\n\t\tif ( isRootChanged ) {\n\t\t\t// If we change attributes of root element, we have to use `RootAttributeOperation`.\n\t\t\tconst version = item.document ? doc.version : null;\n\n\t\t\toperation = new RootAttributeOperation( item, key, previousValue, value, version );\n\t\t} else {\n\t\t\trange = new Range( Position._createBefore( item ), writer.createPositionAfter( item ) );\n\n\t\t\tconst version = range.root.document ? doc.version : null;\n\n\t\t\toperation = new AttributeOperation( range, key, previousValue, value, version );\n\t\t}\n\n\t\twriter.batch.addOperation( operation );\n\t\tmodel.applyOperation( operation );\n\t}\n}\n\n// Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} name Marker name.\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\n// @param {Boolean} affectsData\nfunction applyMarkerOperation( writer, name, oldRange, newRange, affectsData ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\n\tconst operation = new MarkerOperation( name, oldRange, newRange, model.markers, affectsData, doc.version );\n\n\twriter.batch.addOperation( operation );\n\tmodel.applyOperation( operation );\n}\n\n// Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\n// The operation will be applied on given model instance and added to given operation instance.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\n// @param {Number} howMany Number of nodes to remove.\n// @param {Batch} batch Batch to which the operation will be added.\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\nfunction applyRemoveOperation( position, howMany, batch, model ) {\n\tlet operation;\n\n\tif ( position.root.document ) {\n\t\tconst doc = model.document;\n\t\tconst graveyardPosition = new Position( doc.graveyard, [ 0 ] );\n\n\t\toperation = new MoveOperation( position, howMany, graveyardPosition, doc.version );\n\t} else {\n\t\toperation = new DetachOperation( position, howMany );\n\t}\n\n\tbatch.addOperation( operation );\n\tmodel.applyOperation( operation );\n}\n\n// Returns `true` if both root elements are the same element or both are documents root elements.\n//\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\n// unexpected `move` operation.\nfunction isSameTree( rootA, rootB ) {\n\t// If it is the same root this is the same tree.\n\tif ( rootA === rootB ) {\n\t\treturn true;\n\t}\n\n\t// If both roots are documents root it is operation within the document what we still treat as the same tree.\n\tif ( rootA instanceof RootElement && rootB instanceof RootElement ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/differ\n */\n\nimport Position from './position';\nimport Range from './range';\n\n/**\n * Calculates the difference between two model states.\n *\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\n * elements and new ones and returns a change set.\n */\nexport default class Differ {\n\t/**\n\t * Creates a `Differ` instance.\n\t *\n\t * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\n\t */\n\tconstructor( markerCollection ) {\n\t\t/**\n\t\t * Reference to the model's marker collection.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markerCollection = markerCollection;\n\n\t\t/**\n\t\t * A map that stores changes that happened in a given element.\n\t\t *\n\t\t * The keys of the map are references to the model elements.\n\t\t * The values of the map are arrays with changes that were done on this element.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._changesInElement = new Map();\n\n\t\t/**\n\t\t * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\n\t\t * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\n\t\t * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._elementSnapshots = new Map();\n\n\t\t/**\n\t\t * A map that stores all changed markers.\n\t\t *\n\t\t * The keys of the map are marker names.\n\t\t * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\n\t\t * state before and after the change.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._changedMarkers = new Map();\n\n\t\t/**\n\t\t * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\n\t\t * when changes are sorted.\n\t\t *\n\t\t * @private\n\t\t * @type {Number}\n\t\t */\n\t\tthis._changeCount = 0;\n\n\t\t/**\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\n\t\t * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n\t\t * return the cached value instead of calculating it again.\n\t\t *\n\t\t * This property stores those changes that did not take place in graveyard root.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Object>|null}\n\t\t */\n\t\tthis._cachedChanges = null;\n\n\t\t/**\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\n\t\t * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n\t\t * return the cached value instead of calculating it again.\n\t\t *\n\t\t * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Object>|null}\n\t\t */\n\t\tthis._cachedChangesWithGraveyard = null;\n\t}\n\n\t/**\n\t * Informs whether there are any changes buffered in `Differ`.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._changesInElement.size == 0 && this._changedMarkers.size == 0;\n\t}\n\n\t/**\n\t * Marks given `item` in differ to be \"refreshed\". It means that the item will be marked as removed and inserted in the differ changes\n\t * set, so it will be effectively re-converted when differ changes will be handled by a dispatcher.\n\t *\n\t * @param {module:engine/model/item~Item} item Item to refresh.\n\t */\n\trefreshItem( item ) {\n\t\tif ( this._isInInsertedElement( item.parent ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._markRemove( item.parent, item.startOffset, item.offsetSize );\n\t\tthis._markInsert( item.parent, item.startOffset, item.offsetSize );\n\n\t\tconst range = Range._createOn( item );\n\n\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\n\t\t}\n\n\t\t// Clear cache after each buffered operation as it is no longer valid.\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Buffers the given operation. An operation has to be buffered before it is executed.\n\t *\n\t * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\n\t * in the state before the operation is executed.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\n\t */\n\tbufferOperation( operation ) {\n\t\t// Below we take an operation, check its type, then use its parameters in marking (private) methods.\n\t\t// The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\n\t\t// Marking changes in them would cause a \"double\" changing then.\n\t\t//\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert': {\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, operation.nodes.maxOffset );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'addAttribute':\n\t\t\tcase 'removeAttribute':\n\t\t\tcase 'changeAttribute': {\n\t\t\t\tfor ( const item of operation.range.getItems( { shallow: true } ) ) {\n\t\t\t\t\tif ( this._isInInsertedElement( item.parent ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._markAttribute( item );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'remove':\n\t\t\tcase 'move':\n\t\t\tcase 'reinsert': {\n\t\t\t\t// When range is moved to the same position then not mark it as a change.\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1664.\n\t\t\t\tif (\n\t\t\t\t\toperation.sourcePosition.isEqual( operation.targetPosition ) ||\n\t\t\t\t\toperation.sourcePosition.getShiftedBy( operation.howMany ).isEqual( operation.targetPosition )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceParentInserted = this._isInInsertedElement( operation.sourcePosition.parent );\n\t\t\t\tconst targetParentInserted = this._isInInsertedElement( operation.targetPosition.parent );\n\n\t\t\t\tif ( !sourceParentInserted ) {\n\t\t\t\t\tthis._markRemove( operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\tif ( !targetParentInserted ) {\n\t\t\t\t\tthis._markInsert( operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'rename': {\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._markRemove( operation.position.parent, operation.position.offset, 1 );\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, 1 );\n\n\t\t\t\tconst range = Range._createFromPositionAndShift( operation.position, 1 );\n\n\t\t\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\n\t\t\t\t\tconst markerRange = marker.getRange();\n\n\t\t\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'split': {\n\t\t\t\tconst splitElement = operation.splitPosition.parent;\n\n\t\t\t\t// Mark that children of the split element were removed.\n\t\t\t\tif ( !this._isInInsertedElement( splitElement ) ) {\n\t\t\t\t\tthis._markRemove( splitElement, operation.splitPosition.offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\t// Mark that the new element (split copy) was inserted.\n\t\t\t\tif ( !this._isInInsertedElement( operation.insertionPosition.parent ) ) {\n\t\t\t\t\tthis._markInsert( operation.insertionPosition.parent, operation.insertionPosition.offset, 1 );\n\t\t\t\t}\n\n\t\t\t\t// If the split took the element from the graveyard, mark that the element from the graveyard was removed.\n\t\t\t\tif ( operation.graveyardPosition ) {\n\t\t\t\t\tthis._markRemove( operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1 );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'merge': {\n\t\t\t\t// Mark that the merged element was removed.\n\t\t\t\tconst mergedElement = operation.sourcePosition.parent;\n\n\t\t\t\tif ( !this._isInInsertedElement( mergedElement.parent ) ) {\n\t\t\t\t\tthis._markRemove( mergedElement.parent, mergedElement.startOffset, 1 );\n\t\t\t\t}\n\n\t\t\t\t// Mark that the merged element was inserted into graveyard.\n\t\t\t\tconst graveyardParent = operation.graveyardPosition.parent;\n\n\t\t\t\tthis._markInsert( graveyardParent, operation.graveyardPosition.offset, 1 );\n\n\t\t\t\t// Mark that children of merged element were inserted at new parent.\n\t\t\t\tconst mergedIntoElement = operation.targetPosition.parent;\n\n\t\t\t\tif ( !this._isInInsertedElement( mergedIntoElement ) ) {\n\t\t\t\t\tthis._markInsert( mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Clear cache after each buffered operation as it is no longer valid.\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Buffers a marker change.\n\t *\n\t * @param {String} markerName The name of the marker that changed.\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\n\t * been created.\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\n\t * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\n\t */\n\tbufferMarkerChange( markerName, oldRange, newRange, affectsData ) {\n\t\tconst buffered = this._changedMarkers.get( markerName );\n\n\t\tif ( !buffered ) {\n\t\t\tthis._changedMarkers.set( markerName, {\n\t\t\t\toldRange,\n\t\t\t\tnewRange,\n\t\t\t\taffectsData\n\t\t\t} );\n\t\t} else {\n\t\t\tbuffered.newRange = newRange;\n\t\t\tbuffered.affectsData = affectsData;\n\n\t\t\tif ( buffered.oldRange == null && buffered.newRange == null ) {\n\t\t\t\t// The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\n\t\t\t\t// (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\n\t\t\t\tthis._changedMarkers.delete( markerName );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all markers that should be removed as a result of buffered changes.\n\t *\n\t * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\n\t */\n\tgetMarkersToRemove() {\n\t\tconst result = [];\n\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\n\t\t\tif ( change.oldRange != null ) {\n\t\t\t\tresult.push( { name, range: change.oldRange } );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns all markers which should be added as a result of buffered changes.\n\t *\n\t * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\n\t */\n\tgetMarkersToAdd() {\n\t\tconst result = [];\n\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\n\t\t\tif ( change.newRange != null ) {\n\t\t\t\tresult.push( { name, range: change.newRange } );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns all markers which changed.\n\t *\n\t * @returns {Array.<Object>}\n\t */\n\tgetChangedMarkers() {\n\t\treturn Array.from( this._changedMarkers ).map( item => (\n\t\t\t{\n\t\t\t\tname: item[ 0 ],\n\t\t\t\tdata: {\n\t\t\t\t\toldRange: item[ 1 ].oldRange,\n\t\t\t\t\tnewRange: item[ 1 ].newRange\n\t\t\t\t}\n\t\t\t}\n\t\t) );\n\t}\n\n\t/**\n\t * Checks whether some of the buffered changes affect the editor data.\n\t *\n\t * Types of changes which affect the editor data:\n\t *\n\t * * model structure changes,\n\t * * attribute changes,\n\t * * changes of markers which were defined as `affectingData`.\n\t *\n\t * @returns {Boolean}\n\t */\n\thasDataChanges() {\n\t\tfor ( const [ , change ] of this._changedMarkers ) {\n\t\t\tif ( change.affectsData ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// If markers do not affect the data, check whether there are some changes in elements.\n\t\treturn this._changesInElement.size > 0;\n\t}\n\n\t/**\n\t * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\n\t * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\n\t *\n\t * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\n\t * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\n\t * another one, it will be on an earlier index in the diff set.\n\t *\n\t * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\n\t * previous {@link #getChanges} call, the next call will return the cached value.\n\t *\n\t * @param {Object} options Additional options.\n\t * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\n\t * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\n\t * @returns {Array.<Object>} Diff between the old and the new model tree state.\n\t */\n\tgetChanges( options = { includeChangesInGraveyard: false } ) {\n\t\t// If there are cached changes, just return them instead of calculating changes again.\n\t\tif ( this._cachedChanges ) {\n\t\t\tif ( options.includeChangesInGraveyard ) {\n\t\t\t\treturn this._cachedChangesWithGraveyard.slice();\n\t\t\t} else {\n\t\t\t\treturn this._cachedChanges.slice();\n\t\t\t}\n\t\t}\n\n\t\t// Will contain returned results.\n\t\tconst diffSet = [];\n\n\t\t// Check all changed elements.\n\t\tfor ( const element of this._changesInElement.keys() ) {\n\t\t\t// Get changes for this element and sort them.\n\t\t\tconst changes = this._changesInElement.get( element ).sort( ( a, b ) => {\n\t\t\t\tif ( a.offset === b.offset ) {\n\t\t\t\t\tif ( a.type != b.type ) {\n\t\t\t\t\t\t// If there are multiple changes at the same position, \"remove\" change should be first.\n\t\t\t\t\t\t// If the order is different, for example, we would first add some nodes and then removed them\n\t\t\t\t\t\t// (instead of the nodes that we should remove).\n\t\t\t\t\t\treturn a.type == 'remove' ? -1 : 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn a.offset < b.offset ? -1 : 1;\n\t\t\t} );\n\n\t\t\t// Get children of this element before any change was applied on it.\n\t\t\tconst snapshotChildren = this._elementSnapshots.get( element );\n\t\t\t// Get snapshot of current element's children.\n\t\t\tconst elementChildren = _getChildrenSnapshot( element.getChildren() );\n\n\t\t\t// Generate actions basing on changes done on element.\n\t\t\tconst actions = _generateActionsFromChanges( snapshotChildren.length, changes );\n\n\t\t\tlet i = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\n\t\t\tlet j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\n\n\t\t\t// Process every action.\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'i' ) {\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\n\t\t\t\t\tdiffSet.push( this._getInsertDiff( element, i, elementChildren[ i ].name ) );\n\n\t\t\t\t\ti++;\n\t\t\t\t} else if ( action === 'r' ) {\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\n\t\t\t\t\tdiffSet.push( this._getRemoveDiff( element, i, snapshotChildren[ j ].name ) );\n\n\t\t\t\t\tj++;\n\t\t\t\t} else if ( action === 'a' ) {\n\t\t\t\t\t// Take attributes from saved and current children.\n\t\t\t\t\tconst elementAttributes = elementChildren[ i ].attributes;\n\t\t\t\t\tconst snapshotAttributes = snapshotChildren[ j ].attributes;\n\t\t\t\t\tlet range;\n\n\t\t\t\t\tif ( elementChildren[ i ].name == '$text' ) {\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element, i + 1 ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst index = element.offsetToIndex( i );\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element.getChild( index ), 0 ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Generate diff items for this change (there might be multiple attributes changed and\n\t\t\t\t\t// there is a single diff for each of them) and insert them into the diff set.\n\t\t\t\t\tdiffSet.push( ...this._getAttributesDiff( range, snapshotAttributes, elementAttributes ) );\n\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t} else {\n\t\t\t\t\t// `action` is 'equal'. Child not changed.\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Then, sort the changes by the position (change at position before other changes is first).\n\t\tdiffSet.sort( ( a, b ) => {\n\t\t\t// If the change is in different root, we don't care much, but we'd like to have all changes in given\n\t\t\t// root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\n\t\t\t// will be processed first.\n\t\t\tif ( a.position.root != b.position.root ) {\n\t\t\t\treturn a.position.root.rootName < b.position.root.rootName ? -1 : 1;\n\t\t\t}\n\n\t\t\t// If change happens at the same position...\n\t\t\tif ( a.position.isEqual( b.position ) ) {\n\t\t\t\t// Keep chronological order of operations.\n\t\t\t\treturn a.changeCount - b.changeCount;\n\t\t\t}\n\n\t\t\t// If positions differ, position \"on the left\" should be earlier in the result.\n\t\t\treturn a.position.isBefore( b.position ) ? -1 : 1;\n\t\t} );\n\n\t\t// Glue together multiple changes (mostly on text nodes).\n\t\tfor ( let i = 1; i < diffSet.length; i++ ) {\n\t\t\tconst prevDiff = diffSet[ i - 1 ];\n\t\t\tconst thisDiff = diffSet[ i ];\n\n\t\t\t// Glue remove changes if they happen on text on same position.\n\t\t\tconst isConsecutiveTextRemove =\n\t\t\t\tprevDiff.type == 'remove' && thisDiff.type == 'remove' &&\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\n\t\t\t\tprevDiff.position.isEqual( thisDiff.position );\n\n\t\t\t// Glue insert changes if they happen on text on consecutive fragments.\n\t\t\tconst isConsecutiveTextAdd =\n\t\t\t\tprevDiff.type == 'insert' && thisDiff.type == 'insert' &&\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset;\n\n\t\t\t// Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\n\t\t\tconst isConsecutiveAttributeChange =\n\t\t\t\tprevDiff.type == 'attribute' && thisDiff.type == 'attribute' &&\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\n\t\t\t\tprevDiff.range.isFlat && thisDiff.range.isFlat &&\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset &&\n\t\t\t\tprevDiff.attributeKey == thisDiff.attributeKey &&\n\t\t\t\tprevDiff.attributeOldValue == thisDiff.attributeOldValue &&\n\t\t\t\tprevDiff.attributeNewValue == thisDiff.attributeNewValue;\n\n\t\t\tif ( isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange ) {\n\t\t\t\tdiffSet[ i - 1 ].length++;\n\n\t\t\t\tif ( isConsecutiveAttributeChange ) {\n\t\t\t\t\tdiffSet[ i - 1 ].range.end = diffSet[ i - 1 ].range.end.getShiftedBy( 1 );\n\t\t\t\t}\n\n\t\t\t\tdiffSet.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\n\t\tfor ( const item of diffSet ) {\n\t\t\tdelete item.changeCount;\n\n\t\t\tif ( item.type == 'attribute' ) {\n\t\t\t\tdelete item.position;\n\t\t\t\tdelete item.length;\n\t\t\t}\n\t\t}\n\n\t\tthis._changeCount = 0;\n\n\t\t// Cache changes.\n\t\tthis._cachedChangesWithGraveyard = diffSet.slice();\n\t\tthis._cachedChanges = diffSet.slice().filter( _changesInGraveyardFilter );\n\n\t\tif ( options.includeChangesInGraveyard ) {\n\t\t\treturn this._cachedChangesWithGraveyard;\n\t\t} else {\n\t\t\treturn this._cachedChanges;\n\t\t}\n\t}\n\n\t/**\n\t * Resets `Differ`. Removes all buffered changes.\n\t */\n\treset() {\n\t\tthis._changesInElement.clear();\n\t\tthis._elementSnapshots.clear();\n\t\tthis._changedMarkers.clear();\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Saves and handles an insert change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_markInsert( parent, offset, howMany ) {\n\t\tconst changeItem = { type: 'insert', offset, howMany, count: this._changeCount++ };\n\n\t\tthis._markChange( parent, changeItem );\n\t}\n\n\t/**\n\t * Saves and handles a remove change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_markRemove( parent, offset, howMany ) {\n\t\tconst changeItem = { type: 'remove', offset, howMany, count: this._changeCount++ };\n\n\t\tthis._markChange( parent, changeItem );\n\n\t\tthis._removeAllNestedChanges( parent, offset, howMany );\n\t}\n\n\t/**\n\t * Saves and handles an attribute change.\n\t *\n\t * @private\n\t * @param {module:engine/model/item~Item} item\n\t */\n\t_markAttribute( item ) {\n\t\tconst changeItem = { type: 'attribute', offset: item.startOffset, howMany: item.offsetSize, count: this._changeCount++ };\n\n\t\tthis._markChange( item.parent, changeItem );\n\t}\n\n\t/**\n\t * Saves and handles a model change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Object} changeItem\n\t */\n\t_markChange( parent, changeItem ) {\n\t\t// First, make a snapshot of this parent's children (it will be made only if it was not made before).\n\t\tthis._makeSnapshot( parent );\n\n\t\t// Then, get all changes that already were done on the element (empty array if this is the first change).\n\t\tconst changes = this._getChangesForElement( parent );\n\n\t\t// Then, look through all the changes, and transform them or the new change.\n\t\tthis._handleChange( changeItem, changes );\n\n\t\t// Add the new change.\n\t\tchanges.push( changeItem );\n\n\t\t// Remove incorrect changes. During transformation some change might be, for example, included in another.\n\t\t// In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\n\t\tfor ( let i = 0; i < changes.length; i++ ) {\n\t\t\tif ( changes[ i ].howMany < 1 ) {\n\t\t\t\tchanges.splice( i, 1 );\n\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of changes that have already been saved for a given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {Array.<Object>}\n\t */\n\t_getChangesForElement( element ) {\n\t\tlet changes;\n\n\t\tif ( this._changesInElement.has( element ) ) {\n\t\t\tchanges = this._changesInElement.get( element );\n\t\t} else {\n\t\t\tchanges = [];\n\n\t\t\tthis._changesInElement.set( element, changes );\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * Saves a children snapshot for a given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_makeSnapshot( element ) {\n\t\tif ( !this._elementSnapshots.has( element ) ) {\n\t\t\tthis._elementSnapshots.set( element, _getChildrenSnapshot( element.getChildren() ) );\n\t\t}\n\t}\n\n\t/**\n\t * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\n\t * change and/or the old change.\n\t *\n\t * @private\n\t * @param {Object} inc Incoming (new) change.\n\t * @param {Array.<Object>} changes An array containing all the changes done on that element.\n\t */\n\t_handleChange( inc, changes ) {\n\t\t// We need a helper variable that will store how many nodes are to be still handled for this change item.\n\t\t// `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\n\t\t// needs to be differentiated.\n\t\t//\n\t\t// This comes up when there are multiple changes that are affected by `inc` change item.\n\t\t//\n\t\t// For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\n\t\t// Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\n\t\t//\n\t\t// Then, we:\n\t\t// - \"forget\" about first insert change (it is \"eaten\" by remove),\n\t\t// - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\n\t\t// - but still we have to change offset of the second insert change from `5` to `3`!\n\t\t//\n\t\t// So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\n\t\t// while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\n\t\tinc.nodesToHandle = inc.howMany;\n\n\t\tfor ( const old of changes ) {\n\t\t\tconst incEnd = inc.offset + inc.howMany;\n\t\t\tconst oldEnd = old.offset + old.howMany;\n\n\t\t\tif ( inc.type == 'insert' ) {\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\told.howMany += inc.nodesToHandle;\n\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\tif ( inc.offset < old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\t// This case is more complicated, because attribute change has to be split into two.\n\t\t\t\t\t\t// Example (assume that uppercase and lowercase letters mean different attributes):\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// initial state:\t\tabcxyz\n\t\t\t\t\t\t// attribute change:\taBCXYz\n\t\t\t\t\t\t// incoming insert:\t\taBCfooXYz\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Change ranges cannot intersect because each item has to be described exactly (it was either\n\t\t\t\t\t\t// not changed, inserted, removed, or its attribute was changed). That's why old attribute\n\t\t\t\t\t\t// change has to be split and both parts has to be handled separately from now on.\n\t\t\t\t\t\tconst howMany = old.howMany;\n\n\t\t\t\t\t\told.howMany = inc.offset - old.offset;\n\n\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\n\t\t\t\t\t\t// be processed again in this loop.\n\t\t\t\t\t\tchanges.unshift( {\n\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\toffset: incEnd,\n\t\t\t\t\t\t\thowMany: howMany - old.howMany,\n\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( inc.type == 'remove' ) {\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( incEnd <= oldEnd ) {\n\t\t\t\t\t\tif ( inc.offset < old.offset ) {\n\t\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\n\n\t\t\t\t\t\t\told.offset = inc.offset;\n\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\told.howMany -= inc.nodesToHandle;\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\t\tinc.nodesToHandle -= old.howMany;\n\t\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\t\tconst intersectionLength = oldEnd - inc.offset;\n\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\n\t\t\t\t\t\tinc.nodesToHandle += old.howMany;\n\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\n\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\n\n\t\t\t\t\t\told.offset = inc.offset;\n\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\tif ( incEnd <= oldEnd ) {\n\t\t\t\t\t\t\t// On first sight in this case we don't need to split attribute operation into two.\n\t\t\t\t\t\t\t// However the changes set is later converted to actions (see `_generateActionsFromChanges`).\n\t\t\t\t\t\t\t// For that reason, no two changes may intersect.\n\t\t\t\t\t\t\t// So we cannot have an attribute change that \"contains\" remove change.\n\t\t\t\t\t\t\t// Attribute change needs to be split.\n\t\t\t\t\t\t\tconst howMany = old.howMany;\n\n\t\t\t\t\t\t\told.howMany = inc.offset - old.offset;\n\n\t\t\t\t\t\t\tconst howManyAfter = howMany - old.howMany - inc.nodesToHandle;\n\n\t\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\n\t\t\t\t\t\t\t// be processed again in this loop.\n\t\t\t\t\t\t\tchanges.unshift( {\n\t\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\t\toffset: inc.offset,\n\t\t\t\t\t\t\t\thowMany: howManyAfter,\n\t\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\told.howMany -= oldEnd - inc.offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( inc.type == 'attribute' ) {\n\t\t\t\t// In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\n\t\t\t\t\t\t\t// This case is similar to a case described when incoming change was insert and old change was attribute.\n\t\t\t\t\t\t\t// See comment above.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// This time incoming change is attribute. We need to split incoming change in this case too.\n\t\t\t\t\t\t\t// However this time, the second part of the attribute change needs to be processed further\n\t\t\t\t\t\t\t// because there might be other changes that it collides with.\n\t\t\t\t\t\t\tconst attributePart = {\n\t\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\t\toffset: oldEnd,\n\t\t\t\t\t\t\t\thowMany: incEnd - oldEnd,\n\t\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis._handleChange( attributePart, changes );\n\n\t\t\t\t\t\t\tchanges.push( attributePart );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\n\t\t\t\t\t} else if ( inc.offset >= old.offset && inc.offset < oldEnd ) {\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\n\t\t\t\t\t\t\tinc.nodesToHandle = incEnd - oldEnd;\n\t\t\t\t\t\t\tinc.offset = oldEnd;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\t// This is a case when attribute change \"contains\" remove change.\n\t\t\t\t\t// The attribute change needs to be split into two because changes cannot intersect.\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\n\t\t\t\t\t\tconst attributePart = {\n\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\toffset: old.offset,\n\t\t\t\t\t\t\thowMany: incEnd - old.offset,\n\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._handleChange( attributePart, changes );\n\n\t\t\t\t\t\tchanges.push( attributePart );\n\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\t// There are only two conflicting scenarios possible here:\n\t\t\t\t\tif ( inc.offset >= old.offset && incEnd <= oldEnd ) {\n\t\t\t\t\t\t// `old` change includes `inc` change, or they are the same.\n\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\tinc.howMany = 0;\n\t\t\t\t\t\tinc.offset = 0;\n\t\t\t\t\t} else if ( inc.offset <= old.offset && incEnd >= oldEnd ) {\n\t\t\t\t\t\t// `inc` change includes `old` change.\n\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinc.howMany = inc.nodesToHandle;\n\t\tdelete inc.nodesToHandle;\n\t}\n\n\t/**\n\t * Returns an object with a single insert change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent The element in which the change happened.\n\t * @param {Number} offset The offset at which change happened.\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\n\t * @returns {Object} The diff item.\n\t */\n\t_getInsertDiff( parent, offset, name ) {\n\t\treturn {\n\t\t\ttype: 'insert',\n\t\t\tposition: Position._createAt( parent, offset ),\n\t\t\tname,\n\t\t\tlength: 1,\n\t\t\tchangeCount: this._changeCount++\n\t\t};\n\t}\n\n\t/**\n\t * Returns an object with a single remove change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent The element in which change happened.\n\t * @param {Number} offset The offset at which change happened.\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\n\t * @returns {Object} The diff item.\n\t */\n\t_getRemoveDiff( parent, offset, name ) {\n\t\treturn {\n\t\t\ttype: 'remove',\n\t\t\tposition: Position._createAt( parent, offset ),\n\t\t\tname,\n\t\t\tlength: 1,\n\t\t\tchangeCount: this._changeCount++\n\t\t};\n\t}\n\n\t/**\n\t * Returns an array of objects where each one is a single attribute change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range The range where the change happened.\n\t * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\n\t * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\n\t * @returns {Array.<Object>} An array containing one or more diff items.\n\t */\n\t_getAttributesDiff( range, oldAttributes, newAttributes ) {\n\t\t// Results holder.\n\t\tconst diffs = [];\n\n\t\t// Clone new attributes as we will be performing changes on this object.\n\t\tnewAttributes = new Map( newAttributes );\n\n\t\t// Look through old attributes.\n\t\tfor ( const [ key, oldValue ] of oldAttributes ) {\n\t\t\t// Check what is the new value of the attribute (or if it was removed).\n\t\t\tconst newValue = newAttributes.has( key ) ? newAttributes.get( key ) : null;\n\n\t\t\t// If values are different (or attribute was removed)...\n\t\t\tif ( newValue !== oldValue ) {\n\t\t\t\t// Add diff item.\n\t\t\t\tdiffs.push( {\n\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\tposition: range.start,\n\t\t\t\t\trange: range.clone(),\n\t\t\t\t\tlength: 1,\n\t\t\t\t\tattributeKey: key,\n\t\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\t\tattributeNewValue: newValue,\n\t\t\t\t\tchangeCount: this._changeCount++\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Prevent returning two diff items for the same change.\n\t\t\tnewAttributes.delete( key );\n\t\t}\n\n\t\t// Look through new attributes that weren't handled above.\n\t\tfor ( const [ key, newValue ] of newAttributes ) {\n\t\t\t// Each of them is a new attribute. Add diff item.\n\t\t\tdiffs.push( {\n\t\t\t\ttype: 'attribute',\n\t\t\t\tposition: range.start,\n\t\t\t\trange: range.clone(),\n\t\t\t\tlength: 1,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: null,\n\t\t\t\tattributeNewValue: newValue,\n\t\t\t\tchangeCount: this._changeCount++\n\t\t\t} );\n\t\t}\n\n\t\treturn diffs;\n\t}\n\n\t/**\n\t * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element Element to check.\n\t * @returns {Boolean}\n\t */\n\t_isInInsertedElement( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( !parent ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst changes = this._changesInElement.get( parent );\n\t\tconst offset = element.startOffset;\n\n\t\tif ( changes ) {\n\t\t\tfor ( const change of changes ) {\n\t\t\t\tif ( change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._isInInsertedElement( parent );\n\t}\n\n\t/**\n\t * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\n\t * and `howMany`.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_removeAllNestedChanges( parent, offset, howMany ) {\n\t\tconst range = new Range( Position._createAt( parent, offset ), Position._createAt( parent, offset + howMany ) );\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\tthis._elementSnapshots.delete( item );\n\t\t\t\tthis._changesInElement.delete( item );\n\n\t\t\t\tthis._removeAllNestedChanges( item, 0, item.maxOffset );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\n// objects, each representing one character and attributes set on that character.\nfunction _getChildrenSnapshot( children ) {\n\tconst snapshot = [];\n\n\tfor ( const child of children ) {\n\t\tif ( child.is( '$text' ) ) {\n\t\t\tfor ( let i = 0; i < child.data.length; i++ ) {\n\t\t\t\tsnapshot.push( {\n\t\t\t\t\tname: '$text',\n\t\t\t\t\tattributes: new Map( child.getAttributes() )\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tsnapshot.push( {\n\t\t\t\tname: child.name,\n\t\t\t\tattributes: new Map( child.getAttributes() )\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn snapshot;\n}\n\n// Generates array of actions for given changes set.\n// It simulates what `diff` function does.\n// Generated actions are:\n// - 'e' for 'equal' - when item at that position did not change,\n// - 'i' for 'insert' - when item at that position was inserted,\n// - 'r' for 'remove' - when item at that position was removed,\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\n//\n// Example (assume that uppercase letters have bold attribute, compare with function code):\n//\n// children before:\tfooBAR\n// children after:\tfoxybAR\n//\n// changes: type: remove, offset: 1, howMany: 1\n//\t\t\ttype: insert, offset: 2, howMany: 2\n//\t\t\ttype: attribute, offset: 4, howMany: 1\n//\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\n//\n// steps taken by th script:\n//\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\n//    1.2 this change removes one node, add one remove action\n//    1.3 change last visited `offset` to 1\n//    1.4 since an old child has been removed, one more old child has been handled\n//    1.5 actions at this point are: equal, remove\n//\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\n//    2.2 this change inserts two nodes, add two insert actions\n//    2.3 change last visited offset to the end of the inserted range, that is 4\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\n//\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\n//    3.1 between this change and previous change are no not-changed nodes\n//    3.2 this change changes one node, add one attribute action\n//    3.3 change last visited `offset` to the end of change range, that is 5\n//    3.4 since an old child has been changed, one more old child has been handled\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\n//\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\n//    4.1 fill up with two equal actions\n//\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\nfunction _generateActionsFromChanges( oldChildrenLength, changes ) {\n\tconst actions = [];\n\n\tlet offset = 0;\n\tlet oldChildrenHandled = 0;\n\n\t// Go through all buffered changes.\n\tfor ( const change of changes ) {\n\t\t// First, fill \"holes\" between changes with \"equal\" actions.\n\t\tif ( change.offset > offset ) {\n\t\t\tfor ( let i = 0; i < change.offset - offset; i++ ) {\n\t\t\t\tactions.push( 'e' );\n\t\t\t}\n\n\t\t\toldChildrenHandled += change.offset - offset;\n\t\t}\n\n\t\t// Then, fill up actions accordingly to change type.\n\t\tif ( change.type == 'insert' ) {\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\n\t\t\t\tactions.push( 'i' );\n\t\t\t}\n\n\t\t\t// The last handled offset is after inserted range.\n\t\t\toffset = change.offset + change.howMany;\n\t\t} else if ( change.type == 'remove' ) {\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\n\t\t\t\tactions.push( 'r' );\n\t\t\t}\n\n\t\t\t// The last handled offset is at the position where the nodes were removed.\n\t\t\toffset = change.offset;\n\t\t\t// We removed `howMany` old nodes, update `oldChildrenHandled`.\n\t\t\toldChildrenHandled += change.howMany;\n\t\t} else {\n\t\t\tactions.push( ...'a'.repeat( change.howMany ).split( '' ) );\n\n\t\t\t// The last handled offset is at the position after the changed range.\n\t\t\toffset = change.offset + change.howMany;\n\t\t\t// We changed `howMany` old nodes, update `oldChildrenHandled`.\n\t\t\toldChildrenHandled += change.howMany;\n\t\t}\n\t}\n\n\t// Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\n\t// has not been changed / removed at the end of their parent.\n\tif ( oldChildrenHandled < oldChildrenLength ) {\n\t\tfor ( let i = 0; i < oldChildrenLength - oldChildrenHandled - offset; i++ ) {\n\t\t\tactions.push( 'e' );\n\t\t}\n\t}\n\n\treturn actions;\n}\n\n// Filter callback for Array.filter that filters out change entries that are in graveyard.\nfunction _changesInGraveyardFilter( entry ) {\n\tconst posInGy = entry.position && entry.position.root.rootName == '$graveyard';\n\tconst rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\n\n\treturn !posInGy && !rangeInGy;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nexport default class History {\n\t/**\n\t * Creates an empty History instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Operations added to the history.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n\t\t */\n\t\tthis._operations = [];\n\n\t\t/**\n\t\t * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n\t\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t\t *\n\t\t * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n\t\t * value is an operation that has been undone by the \"undoing operation\".\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/history~History#_undoPairs\n\t\t */\n\t\tthis._undoPairs = new Map();\n\n\t\t/**\n\t\t * Holds all undone operations.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n\t\t */\n\t\tthis._undoneOperations = new Set();\n\t}\n\n\t/**\n\t * Adds an operation to the history.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n\t */\n\taddOperation( operation ) {\n\t\tif ( this._operations.includes( operation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._operations.push( operation );\n\t}\n\n\t/**\n\t * Returns operations added to the history.\n\t *\n\t * @param {Number} [from=Number.NEGATIVE_INFINITY] Base version from which operations should be returned (inclusive).\n\t * Defaults to `Number.NEGATIVE_INFINITY`, which means that operations from the first one will be returned.\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n\t * @returns {Array.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n\t */\n\tgetOperations( from = Number.NEGATIVE_INFINITY, to = Number.POSITIVE_INFINITY ) {\n\t\tconst operations = [];\n\n\t\tfor ( const operation of this._operations ) {\n\t\t\tif ( operation.baseVersion >= from && operation.baseVersion < to ) {\n\t\t\t\toperations.push( operation );\n\t\t\t}\n\t\t}\n\n\t\treturn operations;\n\t}\n\n\t/**\n\t * Returns operation from the history that bases on given `baseVersion`.\n\t *\n\t * @param {Number} baseVersion Base version of the operation to get.\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation with given base version or `undefined` if\n\t * there is no such operation in history.\n\t */\n\tgetOperation( baseVersion ) {\n\t\tfor ( const operation of this._operations ) {\n\t\t\tif ( operation.baseVersion == baseVersion ) {\n\t\t\t\treturn operation;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n\t * history is keeping more context information about operations, which helps in operational transformation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n\t */\n\tsetOperationAsUndone( undoneOperation, undoingOperation ) {\n\t\tthis._undoPairs.set( undoingOperation, undoneOperation );\n\t\tthis._undoneOperations.add( undoneOperation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` is undoing any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n\t */\n\tisUndoingOperation( operation ) {\n\t\treturn this._undoPairs.has( operation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` has been undone by any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n\t */\n\tisUndoneOperation( operation ) {\n\t\treturn this._undoneOperations.has( operation );\n\t}\n\n\t/**\n\t * For given `undoingOperation`, returns the operation which has been undone by it.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n\t * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n\t */\n\tgetUndoneOperation( undoingOperation ) {\n\t\treturn this._undoPairs.get( undoingOperation );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark( character ) {\n\t// eslint-disable-next-line no-misleading-character-class\n\treturn !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isHighSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\ud800-\\udbff]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isLowSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\udc00-\\udfff]/.test( character );\n}\n\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideSurrogatePair( string, offset ) {\n\treturn isHighSurrogateHalf( string.charAt( offset - 1 ) ) && isLowSurrogateHalf( string.charAt( offset ) );\n}\n\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideCombinedSymbol( string, offset ) {\n\treturn isCombiningMark( string.charAt( offset ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/document\n */\n\nimport Differ from './differ';\nimport RootElement from './rootelement';\nimport History from './history';\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport { clone } from 'lodash-es';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\nconst graveyardName = '$graveyard';\n\n/**\n * Data model's document. It contains the model's structure, its selection and the history of changes.\n *\n * Read more about working with the model in\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\n *\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\n *\n *\t\tmodel.document.getRoot(); // -> returns the main root\n *\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\n * (e.g. a title and a body of a message).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Document {\n\t/**\n\t * Creates an empty document instance with no {@link #roots} (other than\n\t * the {@link #graveyard graveyard root}).\n\t */\n\tconstructor( model ) {\n\t\t/**\n\t\t * The {@link module:engine/model/model~Model model} that the document is a part of.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n\t\t * operations are applied on a proper document version.\n\t\t *\n\t\t * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\n\t\t * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyoperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.version = 0;\n\n\t\t/**\n\t\t * The document's history.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/history~History}\n\t\t */\n\t\tthis.history = new History( this );\n\n\t\t/**\n\t\t * The selection in this document.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = new DocumentSelection( this );\n\n\t\t/**\n\t\t * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\n\t\t * {@link #getRoot} to manipulate it.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/differ~Differ}\n\t\t */\n\t\tthis.differ = new Differ( model.markers );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the model document.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<Function>}\n\t\t */\n\t\tthis._postFixers = new Set();\n\n\t\t/**\n\t\t * A boolean indicates whether the selection has changed until\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\n\n\t\t// Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\t\tthis.createRoot( '$root', graveyardName );\n\n\t\t// First, if the operation is a document operation check if it's base version is correct.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation && operation.baseVersion !== this.version ) {\n\t\t\t\t/**\n\t\t\t\t * Only operations with matching versions can be applied.\n\t\t\t\t *\n\t\t\t\t * @error model-document-applyoperation-wrong-version\n\t\t\t\t * @param {module:engine/model/operation/operation~Operation} operation\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'model-document-applyoperation-wrong-version', this, { operation } );\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\t// Then, still before an operation is applied on model, buffer the change in differ.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation ) {\n\t\t\t\tthis.differ.bufferOperation( operation );\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// After the operation is applied, bump document's version and add the operation to the history.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation ) {\n\t\t\t\tthis.version++;\n\t\t\t\tthis.history.addOperation( operation );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// Listen to selection changes. If selection changed, mark it.\n\t\tthis.listenTo( this.selection, 'change', () => {\n\t\t\tthis._hasSelectionChangedFromTheLastChangeBlock = true;\n\t\t} );\n\n\t\t// Buffer marker changes.\n\t\t// This is not covered in buffering operations because markers may change outside of them (when they\n\t\t// are modified using `model.markers` collection, not through `MarkerOperation`).\n\t\tthis.listenTo( model.markers, 'update', ( evt, marker, oldRange, newRange ) => {\n\t\t\t// Whenever marker is updated, buffer that change.\n\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, newRange, marker.affectsData );\n\n\t\t\tif ( oldRange === null ) {\n\t\t\t\t// If this is a new marker, add a listener that will buffer change whenever marker changes.\n\t\t\t\tmarker.on( 'change', ( evt, oldRange ) => {\n\t\t\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, marker.getRange(), marker.affectsData );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\n\t *\n\t * @readonly\n\t * @member {module:engine/model/rootelement~RootElement}\n\t */\n\tget graveyard() {\n\t\treturn this.getRoot( graveyardName );\n\t}\n\n\t/**\n\t * Creates a new root.\n\t *\n\t * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\n\t * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\n\t * @param {String} [rootName='main'] A unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement} The created root.\n\t */\n\tcreateRoot( elementName = '$root', rootName = 'main' ) {\n\t\tif ( this.roots.get( rootName ) ) {\n\t\t\t/**\n\t\t\t * A root with the specified name already exists.\n\t\t\t *\n\t\t\t * @error model-document-createroot-name-exists\n\t\t\t * @param {module:engine/model/document~Document} doc\n\t\t\t * @param {String} name\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-document-createroot-name-exists', this, { name: rootName } );\n\t\t}\n\n\t\tconst root = new RootElement( this, elementName, rootName );\n\t\tthis.roots.add( root );\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Removes all event listeners set by the document instance.\n\t */\n\tdestroy() {\n\t\tthis.selection.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Returns a root by its name.\n\t *\n\t * @param {String} [name='main'] A unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\n\t * there is no root with the given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\n\t *\n\t * @returns {Array.<String>} Roots names.\n\t */\n\tgetRootNames() {\n\t\treturn Array.from( this.roots, root => root.rootName ).filter( name => name != graveyardName );\n\t}\n\n\t/**\n\t * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features\n\t * will operate on a correct model state.\n\t *\n\t * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\n\t * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\n\t * executed changes block. Thanks to that, all changes done by the callback will be added to the same\n\t * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\n\t * for the user.\n\t *\n\t * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\n\t * callback should add an empty paragraph so that the editor is never empty:\n\t *\n\t *\t\tdocument.registerPostFixer( writer => {\n\t *\t\t\tconst changes = document.differ.getChanges();\n\t *\n\t *\t\t\t// Check if the changes lead to an empty root in the editor.\n\t *\t\t\tfor ( const entry of changes ) {\n\t *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\n\t *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\n\t *\n\t *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\n\t *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\n\t *\t\t\t\t\treturn true;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {Function} postFixer\n\t */\n\tregisterPostFixer( postFixer ) {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * A custom `toJSON()` method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} A clone of this object with the document property changed to a string.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tjson.selection = '[engine.model.DocumentSelection]';\n\t\tjson.model = '[engine.model.Model]';\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Check if there were any changes done on document, and if so, call post-fixers,\n\t * fire `change` event for features and conversion and then reset the differ.\n\t * Fire `change:data` event when at least one operation or buffered marker changes the data.\n\t *\n\t * @protected\n\t * @fires change\n\t * @fires change:data\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixers will be called.\n\t */\n\t_handleChangeBlock( writer ) {\n\t\tif ( this._hasDocumentChangedFromTheLastChangeBlock() ) {\n\t\t\tthis._callPostFixers( writer );\n\n\t\t\t// Refresh selection attributes according to the final position in the model after the change.\n\t\t\tthis.selection.refresh();\n\n\t\t\tif ( this.differ.hasDataChanges() ) {\n\t\t\t\tthis.fire( 'change:data', writer.batch );\n\t\t\t} else {\n\t\t\t\tthis.fire( 'change', writer.batch );\n\t\t\t}\n\n\t\t\t// Theoretically, it is not necessary to refresh selection after change event because\n\t\t\t// post-fixers are the last who should change the model, but just in case...\n\t\t\tthis.selection.refresh();\n\n\t\t\tthis.differ.reset();\n\t\t}\n\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\n\t}\n\n\t/**\n\t * Returns whether there is a buffered change or if the selection has changed from the last\n\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block}\n\t * or {@link module:engine/model/model~Model#change `change()` block}.\n\t *\n\t * @protected\n\t * @returns {Boolean} Returns `true` if document has changed from the last `change()` or `enqueueChange()` block.\n\t */\n\t_hasDocumentChangedFromTheLastChangeBlock() {\n\t\treturn !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;\n\t}\n\n\t/**\n\t * Returns the default root for this document which is either the first root that was added to the document using\n\t * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n\t */\n\t_getDefaultRoot() {\n\t\tfor ( const root of this.roots ) {\n\t\t\tif ( root !== this.graveyard ) {\n\t\t\t\treturn root;\n\t\t\t}\n\t\t}\n\n\t\treturn this.graveyard;\n\t}\n\n\t/**\n\t * Returns the default range for this selection. The default range is a collapsed range that starts and ends\n\t * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getDefaultRange() {\n\t\tconst defaultRoot = this._getDefaultRoot();\n\t\tconst model = this.model;\n\t\tconst schema = model.schema;\n\n\t\t// Find the first position where the selection can be put.\n\t\tconst position = model.createPositionFromPath( defaultRoot, [ 0 ] );\n\t\tconst nearestRange = schema.getNearestSelectionRange( position );\n\n\t\t// If valid selection range is not found - return range collapsed at the beginning of the root.\n\t\treturn nearestRange || model.createRange( position );\n\t}\n\n\t/**\n\t * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\n\t * the {@link #selection document's selection}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range A range to check.\n\t * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n\t */\n\t_validateSelectionRange( range ) {\n\t\treturn validateTextNodePosition( range.start ) && validateTextNodePosition( range.end );\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixer callbacks will be called.\n\t */\n\t_callPostFixers( writer ) {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\t// Ensure selection attributes are up to date before each post-fixer.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1673.\n\t\t\t\t//\n\t\t\t\t// It might be good to refresh the selection after each operation but at the moment it leads\n\t\t\t\t// to losing attributes for composition or and spell checking\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-typing/issues/188\n\t\t\t\tthis.selection.refresh();\n\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\n\t * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\n\t * during that block's execution.\n\t *\n\t * The changes which this event will cover include:\n\t *\n\t * * document structure changes,\n\t * * selection changes,\n\t * * marker changes.\n\t *\n\t * If you want to be notified about all these changes, then simply listen to this event like this:\n\t *\n\t *\t\tmodel.document.on( 'change', () => {\n\t *\t\t\tconsole.log( 'The document has changed!' );\n\t *\t\t} );\n\t *\n\t * If, however, you only want to be notified about the data changes, then use the\n\t * {@link module:engine/model/document~Document#event:change:data change:data} event,\n\t * which is fired for document structure changes and marker changes (which affects the data).\n\t *\n\t *\t\tmodel.document.on( 'change:data', () => {\n\t *\t\t\tconsole.log( 'The data has changed!' );\n\t *\t\t} );\n\t *\n\t * @event change\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n\t */\n\n\t/**\n\t * It is a narrower version of the {@link #event:change} event. It is fired for changes which\n\t * affect the editor data. This is:\n\t *\n\t * * document structure changes,\n\t * * marker changes (which affects the data).\n\t *\n\t * If you want to be notified about the data changes, then listen to this event:\n\t *\n\t *\t\tmodel.document.on( 'change:data', () => {\n\t *\t\t\tconsole.log( 'The data has changed!' );\n\t *\t\t} );\n\t *\n\t * If you would like to listen to all document changes, then check out the\n\t * {@link module:engine/model/document~Document#event:change change} event.\n\t *\n\t * @event change:data\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version = null ) {\n\t// @if CK_DEBUG_ENGINE // \tversion = version === null ? this.version : version;\n\t// @if CK_DEBUG_ENGINE // \tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( Document, EmitterMixin );\n\n// Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\nfunction validateTextNodePosition( rangeBoundary ) {\n\tconst textNode = rangeBoundary.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tconst offset = rangeBoundary.offset - textNode.startOffset;\n\n\t\treturn !isInsideSurrogatePair( data, offset ) && !isInsideCombinedSymbol( data, offset );\n\t}\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/markercollection\n */\n\nimport LiveRange from './liverange';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\n *\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\n * collection. All markers created by the writer will be automatically added to this collection.\n *\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\n *\n * @see module:engine/model/markercollection~Marker\n */\nexport default class MarkerCollection {\n\t/**\n\t * Creates a markers collection.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Stores {@link ~Marker markers} added to the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} #_markers\n\t\t */\n\t\tthis._markers = new Map();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link ~Marker markers} added to the collection.\n\t *\n\t * @returns {Iterable}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._markers.values();\n\t}\n\n\t/**\n\t * Checks if marker with given `markerName` is in the collection.\n\t *\n\t * @param {String} markerName Marker name.\n\t * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n\t */\n\thas( markerName ) {\n\t\treturn this._markers.has( markerName );\n\t}\n\n\t/**\n\t * Returns {@link ~Marker marker} with given `markerName`.\n\t *\n\t * @param {String} markerName Name of marker to get.\n\t * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n\t * not added to the collection.\n\t */\n\tget( markerName ) {\n\t\treturn this._markers.get( markerName ) || null;\n\t}\n\n\t/**\n\t * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n\t * {@link module:engine/model/range~Range range}.\n\t *\n\t * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\n\t * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\n\t * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\n\t * flag has changed.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\n\t * @param {module:engine/model/range~Range} range Marker range.\n\t * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\n\t * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\n\t */\n\t_set( markerOrName, range, managedUsingOperations = false, affectsData = false ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n\t\tif ( markerName.includes( ',' ) ) {\n\t\t\t/**\n\t\t\t * Marker name cannot contain the \",\" character.\n\t\t\t *\n\t\t\t * @error markercollection-incorrect-marker-name\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'markercollection-incorrect-marker-name', this );\n\t\t}\n\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tconst oldRange = oldMarker.getRange();\n\t\t\tlet hasChanged = false;\n\n\t\t\tif ( !oldRange.isEqual( range ) ) {\n\t\t\t\toldMarker._attachLiveRange( LiveRange.fromRange( range ) );\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( managedUsingOperations != oldMarker.managedUsingOperations ) {\n\t\t\t\toldMarker._managedUsingOperations = managedUsingOperations;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData ) {\n\t\t\t\toldMarker._affectsData = affectsData;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( hasChanged ) {\n\t\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldRange, range );\n\t\t\t}\n\n\t\t\treturn oldMarker;\n\t\t}\n\n\t\tconst liveRange = LiveRange.fromRange( range );\n\t\tconst marker = new Marker( markerName, liveRange, managedUsingOperations, affectsData );\n\n\t\tthis._markers.set( markerName, marker );\n\t\tthis.fire( 'update:' + markerName, marker, null, range );\n\n\t\treturn marker;\n\t}\n\n\t/**\n\t * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String} markerOrName Marker or name of a marker to remove.\n\t * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n\t */\n\t_remove( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tthis._markers.delete( markerName );\n\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldMarker.getRange(), null );\n\n\t\t\tthis._destroyMarker( oldMarker );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Fires an {@link module:engine/model/markercollection~MarkerCollection#event:update} event for the given {@link ~Marker marker}\n\t * but does not change the marker. Useful to force {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast\n\t * conversion} for the marker.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String} markerOrName Marker or name of a marker to refresh.\n\t */\n\t_refresh( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst marker = this._markers.get( markerName );\n\n\t\tif ( !marker ) {\n\t\t\t/**\n\t\t\t * Marker with provided name does not exists.\n\t\t\t *\n\t\t\t * @error markercollection-refresh-marker-not-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'markercollection-refresh-marker-not-exists', this );\n\t\t}\n\n\t\tconst range = marker.getRange();\n\n\t\tthis.fire( 'update:' + markerName, marker, range, range, marker.managedUsingOperations, marker.affectsData );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersAtPosition( position ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().containsPosition( position ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersIntersectingRange( range ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().getIntersection( range ) !== null ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys marker collection and all markers inside it.\n\t */\n\tdestroy() {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tthis._destroyMarker( marker );\n\t\t}\n\n\t\tthis._markers = null;\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Iterates over all markers that starts with given `prefix`.\n\t *\n\t *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n\t *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n\t *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n\t *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n\t *\n\t * @param prefix\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersGroup( prefix ) {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tif ( marker.name.startsWith( prefix + ':' ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the marker.\n\t *\n\t * @private\n\t * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n\t */\n\t_destroyMarker( marker ) {\n\t\tmarker.stopListening();\n\t\tmarker._detachLiveRange();\n\t}\n\n\t/**\n\t * Fired whenever marker is added, updated or removed from `MarkerCollection`.\n\t *\n\t * @event update\n\t * @param {module:engine/model/markercollection~Marker} marker Updated Marker.\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\n\t * means that marker is just added.\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\n\t * means that marker is just removed.\n\t */\n}\n\nmix( MarkerCollection, EmitterMixin );\n\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree but in\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * Markers are built from a name and a range.\n *\n * Range of the marker is updated automatically when document changes, using\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\n *\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\n * For instance: `model.markers.on( 'update:user', callback );` will be called whenever any `user:*` markers changes.\n *\n * There are two types of markers.\n *\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\n *\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\n * This type of markers is useful for solutions like spell checking or comments.\n *\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\n *\n *\t\tmodel.change( ( writer ) => {\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\n *\n * \t\t\t// ...\n *\n * \t\t\twriter.removeMarker( marker );\n *\t\t} );\n *\n * See {@link module:engine/model/writer~Writer} to find more examples.\n *\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\n * markers as possible and remove them as soon as they are not needed anymore.\n *\n * Markers can be downcasted and upcasted.\n *\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\n * Use {@link module:engine/conversion/downcasthelpers downcast converters} or attach a custom converter to mentioned events.\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcasthelpers upcast converters} or\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\nclass Marker {\n\t/**\n\t * Creates a marker instance.\n\t *\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n\t * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\n\t * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t */\n\tconstructor( name, liveRange, managedUsingOperations, affectsData ) {\n\t\t/**\n\t\t * Marker's name.\n\t\t *\n\t\t * @readonly\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Range marked by the marker.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/liverange~LiveRange}\n\t\t */\n\t\tthis._liveRange = this._attachLiveRange( liveRange );\n\n\t\t/**\n\t\t * Flag indicates if the marker is managed using operations or not.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._managedUsingOperations = managedUsingOperations;\n\n\t\t/**\n\t\t * Specifies whether the marker affects the data produced by the data pipeline\n\t\t * (is persisted in the editor's data).\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._affectsData = affectsData;\n\t}\n\n\t/**\n\t * A value indicating if the marker is managed using operations.\n\t * See {@link ~Marker marker class description} to learn more about marker types.\n\t * See {@link module:engine/model/writer~Writer#addMarker}.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget managedUsingOperations() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed', this );\n\t\t}\n\n\t\treturn this._managedUsingOperations;\n\t}\n\n\t/**\n\t * A value indicating if the marker changes the data.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget affectsData() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed', this );\n\t\t}\n\n\t\treturn this._affectsData;\n\t}\n\n\t/**\n\t * Returns current marker start position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetStart() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed', this );\n\t\t}\n\n\t\treturn this._liveRange.start.clone();\n\t}\n\n\t/**\n\t * Returns current marker end position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetEnd() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed', this );\n\t\t}\n\n\t\treturn this._liveRange.end.clone();\n\t}\n\n\t/**\n\t * Returns a range that represents the current state of the marker.\n\t *\n\t * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n\t * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n\t * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n\t * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n\t * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n\t * that it's data is up-to-date.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tgetRange() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed', this );\n\t\t}\n\n\t\treturn this._liveRange.toRange();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tmarker.is( 'marker' ); // -> true\n\t *\t\tmarker.is( 'model:marker' ); // -> true\n\t *\n\t *\t\tmarker.is( 'view:element' ); // -> false\n\t *\t\tmarker.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'marker' || type === 'model:marker';\n\t}\n\n\t/**\n\t * Binds new live range to the marker and detach the old one if is attached.\n\t *\n\t * @protected\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\n\t * @returns {module:engine/model/liverange~LiveRange} Attached live range.\n\t */\n\t_attachLiveRange( liveRange ) {\n\t\tif ( this._liveRange ) {\n\t\t\tthis._detachLiveRange();\n\t\t}\n\n\t\t// Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\n\t\tliveRange.delegate( 'change:range' ).to( this );\n\t\tliveRange.delegate( 'change:content' ).to( this );\n\n\t\tthis._liveRange = liveRange;\n\n\t\treturn liveRange;\n\t}\n\n\t/**\n\t * Unbinds and destroys currently attached live range.\n\t *\n\t * @protected\n\t */\n\t_detachLiveRange() {\n\t\tthis._liveRange.stopDelegating( 'change:range', this );\n\t\tthis._liveRange.stopDelegating( 'change:content', this );\n\t\tthis._liveRange.detach();\n\t\tthis._liveRange = null;\n\t}\n\n\t/**\n\t * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change:range\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange\n\t * @param {Object} data\n\t */\n\n\t/**\n\t * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change:content\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} oldRange\n\t * @param {Object} data\n\t */\n}\n\nmix( Marker, EmitterMixin );\n\n/**\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\n *\n * @error marker-destroyed\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operationfactory\n */\n\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport MarkerOperation from '../operation/markeroperation';\nimport MoveOperation from '../operation/moveoperation';\nimport NoOperation from '../operation/nooperation';\nimport Operation from '../operation/operation';\nimport RenameOperation from '../operation/renameoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\nimport SplitOperation from '../operation/splitoperation';\nimport MergeOperation from '../operation/mergeoperation';\n\nconst operations = {};\noperations[ AttributeOperation.className ] = AttributeOperation;\noperations[ InsertOperation.className ] = InsertOperation;\noperations[ MarkerOperation.className ] = MarkerOperation;\noperations[ MoveOperation.className ] = MoveOperation;\noperations[ NoOperation.className ] = NoOperation;\noperations[ Operation.className ] = Operation;\noperations[ RenameOperation.className ] = RenameOperation;\noperations[ RootAttributeOperation.className ] = RootAttributeOperation;\noperations[ SplitOperation.className ] = SplitOperation;\noperations[ MergeOperation.className ] = MergeOperation;\n\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\nexport default class OperationFactory {\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn operations[ json.__className ].fromJSON( json, document );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liveposition\n */\n\nimport Position from './position';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\nexport default class LivePosition extends Position {\n\t/**\n\t * Creates a live position.\n\t *\n\t * @see module:engine/model/position~Position\n\t * @param {module:engine/model/rootelement~RootElement} root\n\t * @param {Array.<Number>} path\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\n\t */\n\tconstructor( root, path, stickiness = 'toNone' ) {\n\t\tsuper( root, path, stickiness );\n\n\t\tif ( !this.root.is( 'rootElement' ) ) {\n\t\t\t/**\n\t\t\t * LivePosition's root has to be an instance of RootElement.\n\t\t\t *\n\t\t\t * @error model-liveposition-root-not-rootelement\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-liveposition-root-not-rootelement', root );\n\t\t}\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tlivePosition.is( 'position' ); // -> true\n\t *\t\tlivePosition.is( 'model:position' ); // -> true\n\t *\t\tlivePosition.is( 'liveposition' ); // -> true\n\t *\t\tlivePosition.is( 'model:livePosition' ); // -> true\n\t *\n\t *\t\tlivePosition.is( 'view:position' ); // -> false\n\t *\t\tlivePosition.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'livePosition' || type === 'model:livePosition' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype == 'position' || type === 'model:position';\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\ttoPosition() {\n\t\treturn new Position( this.root, this.path.slice(), this.stickiness );\n\t}\n\n\t/**\n\t * Creates a `LivePosition` instance that is equal to position.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic fromPosition( position, stickiness ) {\n\t\treturn new this( position.root, position.path.slice(), stickiness ? stickiness : position.stickiness );\n\t}\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createAfter\n\t * @see module:engine/model/position~Position._createAfter\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createBefore\n\t * @see module:engine/model/position~Position._createBefore\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createAt\n\t * @see module:engine/model/position~Position._createAt\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset]\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n\t *\n\t * @event module:engine/model/liveposition~LivePosition#change\n\t * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n\t */\n}\n\n// Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n// this position's {@link module:engine/model/position~Position#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this position accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\tconst result = this.getTransformedByOperation( operation );\n\n\tif ( !this.isEqual( result ) ) {\n\t\tconst oldPosition = this.toPosition();\n\n\t\tthis.path = result.path;\n\t\tthis.root = result.root;\n\n\t\tthis.fire( 'change', oldPosition );\n\t}\n}\n\nmix( LivePosition, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/insertcontent\n */\n\nimport Position from '../position';\nimport LivePosition from '../liveposition';\nimport Element from '../element';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\nimport Selection from '../selection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\n * to the insertion selection (equal to a range to be selected after insertion).\n *\n * If `selectable` is not passed, the content will be inserted using the current selection of the model document.\n *\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n * Selection into which the content should be inserted.\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n * at the insertion position.\n */\nexport default function insertContent( model, content, selectable, placeOrOffset ) {\n\treturn model.change( writer => {\n\t\tlet selection;\n\n\t\tif ( !selectable ) {\n\t\t\tselection = model.document.selection;\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tselection = selectable;\n\t\t} else {\n\t\t\tselection = writer.createSelection( selectable, placeOrOffset );\n\t\t}\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\tmodel.deleteContent( selection, { doNotAutoparagraph: true } );\n\t\t}\n\n\t\tconst insertion = new Insertion( model, writer, selection.anchor );\n\n\t\tlet nodesToInsert;\n\n\t\tif ( content.is( 'documentFragment' ) ) {\n\t\t\tnodesToInsert = content.getChildren();\n\t\t} else {\n\t\t\tnodesToInsert = [ content ];\n\t\t}\n\n\t\tinsertion.handleNodes( nodesToInsert, {\n\t\t\t// The set of children being inserted is the only set in this context\n\t\t\t// so it's the first and last (it's a hack ;)).\n\t\t\tisFirst: true,\n\t\t\tisLast: true\n\t\t} );\n\n\t\tconst newRange = insertion.getSelectionRange();\n\n\t\t/* istanbul ignore else */\n\t\tif ( newRange ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\twriter.setSelection( newRange );\n\t\t\t} else {\n\t\t\t\tselection.setTo( newRange );\n\t\t\t}\n\t\t} else {\n\t\t\t// We are not testing else because it's a safe check for unpredictable edge cases:\n\t\t\t// an insertion without proper range to select.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Cannot determine a proper selection range after insertion.' );\n\t\t}\n\n\t\tconst affectedRange = insertion.getAffectedRange() || model.createRange( selection.anchor );\n\n\t\tinsertion.destroy();\n\n\t\treturn affectedRange;\n\t} );\n}\n\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\nclass Insertion {\n\tconstructor( model, writer, position ) {\n\t\t/**\n\t\t * The model in context of which the insertion should be performed.\n\t\t *\n\t\t * @member {module:engine/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Batch to which operations will be added.\n\t\t *\n\t\t * @member {module:engine/controller/writer~Batch} #writer\n\t\t */\n\t\tthis.writer = writer;\n\n\t\t/**\n\t\t * The position at which (or near which) the next node will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #position\n\t\t */\n\t\tthis.position = position;\n\n\t\t/**\n\t\t * Elements with which the inserted elements can be merged.\n\t\t *\n\t\t *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n\t\t *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n\t\t *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n\t\t *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n\t\t *\n\t\t *\n\t\t * @member {Set} #canMergeWith\n\t\t */\n\t\tthis.canMergeWith = new Set( [ this.position.parent ] );\n\n\t\t/**\n\t\t * Schema of the model.\n\t\t *\n\t\t * @member {module:engine/model/schema~Schema} #schema\n\t\t */\n\t\tthis.schema = model.schema;\n\n\t\tthis._filterAttributesOf = [];\n\n\t\t/**\n\t\t * Beginning of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedStart\n\t\t */\n\t\tthis._affectedStart = null;\n\n\t\t/**\n\t\t * End of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedEnd\n\t\t */\n\t\tthis._affectedEnd = null;\n\t}\n\n\t/**\n\t * Handles insertion of a set of nodes.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n\t * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n\t * If the parent context is passed it means that the parent element was stripped (was not allowed).\n\t */\n\thandleNodes( nodes, parentContext ) {\n\t\tnodes = Array.from( nodes );\n\n\t\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\t\tconst node = nodes[ i ];\n\n\t\t\tthis._handleNode( node, {\n\t\t\t\tisFirst: i === 0 && parentContext.isFirst,\n\t\t\t\tisLast: ( i === ( nodes.length - 1 ) ) && parentContext.isLast\n\t\t\t} );\n\t\t}\n\n\t\t// TMP this will become a post-fixer.\n\t\tthis.schema.removeDisallowedAttributes( this._filterAttributesOf, this.writer );\n\t\tthis._filterAttributesOf = [];\n\t}\n\n\t/**\n\t * Returns range to be selected after insertion.\n\t * Returns `null` if there is no valid range to select after insertion.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetSelectionRange() {\n\t\tif ( this.nodeToSelect ) {\n\t\t\treturn Range._createOn( this.nodeToSelect );\n\t\t}\n\n\t\treturn this.model.schema.getNearestSelectionRange( this.position );\n\t}\n\n\t/**\n\t * Returns a range which contains all the performed changes. This is a range that, if removed, would return the model to the state\n\t * before the insertion. Returns `null` if no changes were done.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetAffectedRange() {\n\t\tif ( !this._affectedStart ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Range( this._affectedStart, this._affectedEnd );\n\t}\n\n\t/**\n\t * Destroys `Insertion` instance.\n\t */\n\tdestroy() {\n\t\tif ( this._affectedStart ) {\n\t\t\tthis._affectedStart.detach();\n\t\t}\n\n\t\tif ( this._affectedEnd ) {\n\t\t\tthis._affectedEnd.detach();\n\t\t}\n\t}\n\n\t/**\n\t * Handles insertion of a single node.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t * @param {Object} context\n\t * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n\t * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n\t */\n\t_handleNode( node, context ) {\n\t\t// Let's handle object in a special way.\n\t\t// * They should never be merged with other elements.\n\t\t// * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n\t\tif ( this.schema.isObject( node ) ) {\n\t\t\tthis._handleObject( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Try to find a place for the given node.\n\t\t// Split the position.parent's branch up to a point where the node can be inserted.\n\t\t// If it isn't allowed in the whole branch, then of course don't split anything.\n\t\tconst isAllowed = this._checkAndSplitToAllowedPosition( node, context );\n\n\t\tif ( !isAllowed ) {\n\t\t\tthis._handleDisallowedNode( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._insert( node );\n\n\t\t// After the node was inserted we may try to merge it with its siblings.\n\t\t// This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n\t\t// and only if the selection was in those elements initially.\n\t\t//\n\t\t// E.g.:\n\t\t// <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n\t\t// and:\n\t\t// <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>z</p><p>y</p> => <p>xz[]y</p>\n\t\t// but:\n\t\t// <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n\t\t// <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deleteContents\n\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\t\tthis._mergeSiblingsOf( node, context );\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/element~Element} node The object element.\n\t * @param {Object} context\n\t */\n\t_handleObject( node, context ) {\n\t\t// Try finding it a place in the tree.\n\t\tif ( this._checkAndSplitToAllowedPosition( node ) ) {\n\t\t\tthis._insert( node );\n\t\t}\n\t\t// Try autoparagraphing.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n\t * @param {Object} context\n\t */\n\t_handleDisallowedNode( node, context ) {\n\t\t// If the node is an element, try inserting its children (strip the parent).\n\t\tif ( node.is( 'element' ) ) {\n\t\t\tthis.handleNodes( node.getChildren(), context );\n\t\t}\n\t\t// If text is not allowed, try autoparagraphing it.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node to insert.\n\t */\n\t_insert( node ) {\n\t\t/* istanbul ignore if */\n\t\tif ( !this.schema.checkChild( this.position, node ) ) {\n\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t// Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n\n\t\t\t/**\n\t\t\t * Given node cannot be inserted on the given position.\n\t\t\t *\n\t\t\t * @error insertcontent-wrong-position\n\t\t\t * @param {module:engine/model/node~Node} node Node to insert.\n\t\t\t * @param {module:engine/model/position~Position} position Position to insert the node at.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'insertcontent-wrong-position',\n\t\t\t\tthis,\n\t\t\t\t{ node, position: this.position }\n\t\t\t);\n\t\t}\n\n\t\tconst livePos = LivePosition.fromPosition( this.position, 'toNext' );\n\n\t\tthis._setAffectedBoundaries( this.position );\n\t\tthis.writer.insert( node, this.position );\n\n\t\tthis.position = livePos.toPosition();\n\t\tlivePos.detach();\n\n\t\t// The last inserted object should be selected because we can't put a collapsed selection after it.\n\t\tif ( this.schema.isObject( node ) && !this.schema.checkChild( this.position, '$text' ) ) {\n\t\t\tthis.nodeToSelect = node;\n\t\t} else {\n\t\t\tthis.nodeToSelect = null;\n\t\t}\n\n\t\tthis._filterAttributesOf.push( node );\n\t}\n\n\t/**\n\t * Sets `_affectedStart` and `_affectedEnd` to the given `position`. Should be used before a change is done during insertion process to\n\t * mark the affected range.\n\t *\n\t * This method is used before inserting a node or splitting a parent node. `_affectedStart` and `_affectedEnd` are also changed\n\t * during merging, but the logic there is more complicated so it is left out of this function.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position\n\t */\n\t_setAffectedBoundaries( position ) {\n\t\t// Set affected boundaries stickiness so that those position will \"expand\" when something is inserted in between them:\n\t\t// <paragraph>Foo][bar</paragraph> -> <paragraph>Foo]xx[bar</paragraph>\n\t\t// This is why it cannot be a range but two separate positions.\n\t\tif ( !this._affectedStart ) {\n\t\t\tthis._affectedStart = LivePosition.fromPosition( position, 'toPrevious' );\n\t\t}\n\n\t\t// If `_affectedEnd` is before the new boundary position, expand `_affectedEnd`. This can happen if first inserted node was\n\t\t// inserted into the parent but the next node is moved-out of that parent:\n\t\t// (1) <paragraph>Foo][</paragraph> -> <paragraph>Foo]xx[</paragraph>\n\t\t// (2) <paragraph>Foo]xx[</paragraph> -> <paragraph>Foo]xx</paragraph><widget></widget>[\n\t\tif ( !this._affectedEnd || this._affectedEnd.isBefore( position ) ) {\n\t\t\tif ( this._affectedEnd ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t}\n\n\t\t\tthis._affectedEnd = LivePosition.fromPosition( position, 'toNext' );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t */\n\t_mergeSiblingsOf( node, context ) {\n\t\tif ( !( node instanceof Element ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mergeLeft = this._canMergeLeft( node, context );\n\t\tconst mergeRight = this._canMergeRight( node, context );\n\t\tconst mergePosLeft = LivePosition._createBefore( node );\n\t\tmergePosLeft.stickiness = 'toNext';\n\t\tconst mergePosRight = LivePosition._createAfter( node );\n\t\tmergePosRight.stickiness = 'toNext';\n\n\t\tif ( mergeLeft ) {\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position );\n\t\t\tlivePosition.stickiness = 'toNext';\n\n\t\t\t// If `_affectedStart` is sames as merge position, it means that the element \"marked\" by `_affectedStart` is going to be\n\t\t\t// removed and its contents will be moved. This won't transform `LivePosition` so `_affectedStart` needs to be moved\n\t\t\t// by hand to properly reflect affected range. (Due to `_affectedStart` and `_affectedEnd` stickiness, the \"range\" is\n\t\t\t// shown as `][`).\n\t\t\t//\n\t\t\t// Example - insert `<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>` at the end of `<paragraph>Foo^</paragraph>`:\n\t\t\t//\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>\n\t\t\t//\n\t\t\t// Note, that if we are here then something must have been inserted, so `_affectedStart` and `_affectedEnd` have to be set.\n\t\t\tif ( this._affectedStart.isEqual( mergePosLeft ) ) {\n\t\t\t\tthis._affectedStart.detach();\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toPrevious' );\n\t\t\t}\n\n\t\t\tthis.writer.merge( mergePosLeft );\n\n\t\t\t// If only one element (the merged one) is in the \"affected range\", also move the affected range end appropriately.\n\t\t\t//\n\t\t\t// Example - insert `<paragraph>Abc</paragraph>` at the of `<paragraph>Foo^</paragraph>`:\n\t\t\t//\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc[</paragraph><paragraph>Bar</paragraph>\n\t\t\tif ( mergePosLeft.isEqual( this._affectedEnd ) && context.isLast ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toNext' );\n\t\t\t}\n\n\t\t\tthis.position = livePosition.toPosition();\n\t\t\tlivePosition.detach();\n\t\t}\n\n\t\tif ( mergeRight ) {\n\t\t\t/* istanbul ignore if */\n\t\t\tif ( !this.position.isEqual( mergePosRight ) ) {\n\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t\t// At this point the insertion position should be after the node we'll merge. If it isn't,\n\t\t\t\t// it should need to be secured as in the left merge case.\n\t\t\t\t/**\n\t\t\t\t * An internal error occurred when merging inserted content with its siblings.\n\t\t\t\t * The insertion position should equal the merge position.\n\t\t\t\t *\n\t\t\t\t * If you encountered this error, report it back to the CKEditor 5 team\n\t\t\t\t * with as many details as possible regarding the content being inserted and the insertion position.\n\t\t\t\t *\n\t\t\t\t * @error insertcontent-invalid-insertion-position\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'insertcontent-invalid-insertion-position', this );\n\t\t\t}\n\n\t\t\t// Move the position to the previous node, so it isn't moved to the graveyard on merge.\n\t\t\t// <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\t\t\tthis.position = Position._createAt( mergePosRight.nodeBefore, 'end' );\n\n\t\t\t// OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n\t\t\t// NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position, 'toPrevious' );\n\n\t\t\t// See comment above on moving `_affectedStart`.\n\t\t\tif ( this._affectedEnd.isEqual( mergePosRight ) ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosRight.nodeBefore, 'end', 'toNext' );\n\t\t\t}\n\n\t\t\tthis.writer.merge( mergePosRight );\n\n\t\t\t// See comment above on moving `_affectedStart`.\n\t\t\tif ( mergePosRight.getShiftedBy( -1 ).isEqual( this._affectedStart ) && context.isFirst ) {\n\t\t\t\tthis._affectedStart.detach();\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosRight.nodeBefore, 0, 'toPrevious' );\n\t\t\t}\n\n\t\t\tthis.position = livePosition.toPosition();\n\t\t\tlivePosition.detach();\n\t\t}\n\n\t\tif ( mergeLeft || mergeRight ) {\n\t\t\t// After merge elements that were marked by _insert() to be filtered might be gone so\n\t\t\t// we need to mark the new container.\n\t\t\tthis._filterAttributesOf.push( this.position.parent );\n\t\t}\n\n\t\tmergePosLeft.detach();\n\t\tmergePosRight.detach();\n\t}\n\n\t/**\n\t * Checks whether specified node can be merged with previous sibling element.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t * @returns {Boolean}\n\t */\n\t_canMergeLeft( node, context ) {\n\t\tconst previousSibling = node.previousSibling;\n\n\t\treturn context.isFirst &&\n\t\t\t( previousSibling instanceof Element ) &&\n\t\t\tthis.canMergeWith.has( previousSibling ) &&\n\t\t\tthis.model.schema.checkMerge( previousSibling, node );\n\t}\n\n\t/**\n\t * Checks whether specified node can be merged with next sibling element.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t * @returns {Boolean}\n\t */\n\t_canMergeRight( node, context ) {\n\t\tconst nextSibling = node.nextSibling;\n\n\t\treturn context.isLast &&\n\t\t\t( nextSibling instanceof Element ) &&\n\t\t\tthis.canMergeWith.has( nextSibling ) &&\n\t\t\tthis.model.schema.checkMerge( node, nextSibling );\n\t}\n\n\t/**\n\t * Tries wrapping the node in a new paragraph and inserting it this way.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n\t * @param {Object} context\n\t */\n\t_tryAutoparagraphing( node, context ) {\n\t\tconst paragraph = this.writer.createElement( 'paragraph' );\n\n\t\t// Do not autoparagraph if the paragraph won't be allowed there,\n\t\t// cause that would lead to an infinite loop. The paragraph would be rejected in\n\t\t// the next _handleNode() call and we'd be here again.\n\t\tif ( this._getAllowedIn( paragraph, this.position.parent ) && this.schema.checkChild( paragraph, node ) ) {\n\t\t\tparagraph._appendChild( node );\n\t\t\tthis._handleNode( paragraph, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t * @returns {Boolean} Whether an allowed position was found.\n\t * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n\t */\n\t_checkAndSplitToAllowedPosition( node ) {\n\t\tconst allowedIn = this._getAllowedIn( node, this.position.parent );\n\n\t\tif ( !allowedIn ) {\n\t\t\treturn false;\n\t\t}\n\n\t\twhile ( allowedIn != this.position.parent ) {\n\t\t\t// If a parent which we'd need to leave is a limit element, break.\n\t\t\tif ( this.schema.isLimit( this.position.parent ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( this.position.isAtStart ) {\n\t\t\t\t// If insertion position is at the beginning of the parent, move it out instead of splitting.\n\t\t\t\t// <p>^Foo</p> -> ^<p>Foo</p>\n\t\t\t\tconst parent = this.position.parent;\n\n\t\t\t\tthis.position = this.writer.createPositionBefore( parent );\n\n\t\t\t\t// Special case – parent is empty (<p>^</p>).\n\t\t\t\t//\n\t\t\t\t// 1. parent.isEmpty\n\t\t\t\t// We can remove the element after moving insertion position out of it.\n\t\t\t\t//\n\t\t\t\t// 2. parent.parent === allowedIn\n\t\t\t\t// However parent should remain in place when allowed element is above limit element in document tree.\n\t\t\t\t// For example there shouldn't be allowed to remove empty paragraph from tableCell, when is pasted\n\t\t\t\t// content allowed in $root.\n\t\t\t\tif ( parent.isEmpty && parent.parent === allowedIn ) {\n\t\t\t\t\tthis.writer.remove( parent );\n\t\t\t\t}\n\t\t\t} else if ( this.position.isAtEnd ) {\n\t\t\t\t// If insertion position is at the end of the parent, move it out instead of splitting.\n\t\t\t\t// <p>Foo^</p> -> <p>Foo</p>^\n\t\t\t\tthis.position = this.writer.createPositionAfter( this.position.parent );\n\t\t\t} else {\n\t\t\t\tconst tempPos = this.writer.createPositionAfter( this.position.parent );\n\n\t\t\t\tthis._setAffectedBoundaries( this.position );\n\t\t\t\tthis.writer.split( this.position );\n\n\t\t\t\tthis.position = tempPos;\n\n\t\t\t\tthis.canMergeWith.add( this.position.nodeAfter );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node to check.\n\t * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getAllowedIn( node, element ) {\n\t\tif ( this.schema.checkChild( element, node ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\tif ( element.parent ) {\n\t\t\treturn this._getAllowedIn( node, element.parent );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/deletecontent\n */\n\nimport LivePosition from '../liveposition';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\n\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#deleteContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * Selection of which the content should be deleted.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n *\n * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n * to a place where text cannot be inserted.\n *\n * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n *\n * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n * * `<paragraph>x</paragraph>[]` with the option enabled (`doNotAutoparagraph == true`).\n *\n * If you use this option you need to make sure to handle invalid selections yourself or leave\n * them to the selection post-fixer (may not always work).\n *\n * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n *\n * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n */\nexport default function deleteContent( model, selection, options = {} ) {\n\tif ( selection.isCollapsed ) {\n\t\treturn;\n\t}\n\n\tconst selRange = selection.getFirstRange();\n\n\t// If the selection is already removed, don't do anything.\n\tif ( selRange.root.rootName == '$graveyard' ) {\n\t\treturn;\n\t}\n\n\tconst schema = model.schema;\n\n\tmodel.change( writer => {\n\t\t// 1. Replace the entire content with paragraph.\n\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n\t\tif ( !options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph( schema, selection ) ) {\n\t\t\treplaceEntireContentWithParagraph( writer, selection, schema );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the live positions for the range adjusted to span only blocks selected from the user perspective.\n\t\tconst [ startPosition, endPosition ] = getLivePositionsForSelectedBlocks( selRange );\n\n\t\t// 2. Remove the content if there is any.\n\t\tif ( !startPosition.isTouching( endPosition ) ) {\n\t\t\twriter.remove( writer.createRange( startPosition, endPosition ) );\n\t\t}\n\n\t\t// 3. Merge elements in the right branch to the elements in the left branch.\n\t\t// The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n\t\t//\n\t\t// <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n\t\t//\n\t\t// However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n\t\t// as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n\t\t// want to override that behavior anyway.\n\t\tif ( !options.leaveUnmerged ) {\n\t\t\tmergeBranches( writer, startPosition, endPosition );\n\n\t\t\t// TMP this will be replaced with a postfixer.\n\t\t\t// We need to check and strip disallowed attributes in all nested nodes because after merge\n\t\t\t// some attributes could end up in a path where are disallowed.\n\t\t\t//\n\t\t\t// e.g. bold is disallowed for <H1>\n\t\t\t// <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\n\t\t\tschema.removeDisallowedAttributes( startPosition.parent.getChildren(), writer );\n\t\t}\n\n\t\tcollapseSelectionAt( writer, selection, startPosition );\n\n\t\t// 4. Add a paragraph to set selection in it.\n\t\t// Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\t\t// If autoparagraphing is off, we assume that you know what you do so we leave the selection wherever it was.\n\t\tif ( !options.doNotAutoparagraph && shouldAutoparagraph( schema, startPosition ) ) {\n\t\t\tinsertParagraph( writer, startPosition, selection );\n\t\t}\n\n\t\tstartPosition.detach();\n\t\tendPosition.detach();\n\t} );\n}\n\n// Returns the live positions for the range adjusted to span only blocks selected from the user perspective. Example:\n//\n//     <heading1>[foo</heading1>\n//     <paragraph>bar</paragraph>\n//     <heading1>]abc</heading1>  <-- this block is not considered as selected\n//\n// This is the same behavior as in Selection#getSelectedBlocks() \"special case\".\nfunction getLivePositionsForSelectedBlocks( range ) {\n\tconst model = range.root.document.model;\n\n\tconst startPosition = range.start;\n\tlet endPosition = range.end;\n\n\t// If the end of selection is at the start position of last block in the selection, then\n\t// shrink it to not include that trailing block. Note that this should happen only for not empty selection.\n\tif ( model.hasContent( range, { ignoreMarkers: true } ) ) {\n\t\tconst endBlock = getParentBlock( endPosition );\n\n\t\tif ( endBlock && endPosition.isTouching( model.createPositionAt( endBlock, 0 ) ) ) {\n\t\t\t// Create forward selection as a probe to find a valid position after excluding last block from the range.\n\t\t\tconst selection = model.createSelection( range );\n\n\t\t\t// Modify the forward selection in backward direction to shrink it and remove first position of following block from it.\n\t\t\t// This is how modifySelection works and here we are making use of it.\n\t\t\tmodel.modifySelection( selection, { direction: 'backward' } );\n\n\t\t\tendPosition = selection.getLastPosition();\n\t\t}\n\t}\n\n\treturn [\n\t\tLivePosition.fromPosition( startPosition, 'toPrevious' ),\n\t\tLivePosition.fromPosition( endPosition, 'toNext' )\n\t];\n}\n\n// Finds the lowest element in position's ancestors which is a block.\n// Returns null if a limit element is encountered before reaching a block element.\nfunction getParentBlock( position ) {\n\tconst element = position.parent;\n\tconst schema = element.root.document.model.schema;\n\tconst ancestors = element.getAncestors( { parentFirst: true, includeSelf: true } );\n\n\tfor ( const element of ancestors ) {\n\t\tif ( schema.isLimit( element ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( schema.isBlock( element ) ) {\n\t\t\treturn element;\n\t\t}\n\t}\n}\n\n// This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\nfunction mergeBranches( writer, startPosition, endPosition ) {\n\tconst model = writer.model;\n\n\t// Verify if there is a need and possibility to merge.\n\tif ( !checkShouldMerge( writer.model.schema, startPosition, endPosition ) ) {\n\t\treturn;\n\t}\n\n\t// If the start element on the common ancestor level is empty, and the end element on the same level is not empty\n\t// then merge those to the right element so that it's properties are preserved (name, attributes).\n\t// Because of OT merging is used instead of removing elements.\n\t//\n\t// Merge left:\n\t//     <heading1>foo[</heading1>    ->  <heading1>foo[]bar</heading1>\n\t//     <paragraph>]bar</paragraph>  ->               --^\n\t//\n\t// Merge right:\n\t//     <heading1>[</heading1>       ->\n\t//     <paragraph>]bar</paragraph>  ->  <paragraph>[]bar</paragraph>\n\t//\n\t// Merge left:\n\t//     <blockQuote>                     ->  <blockQuote>\n\t//         <heading1>foo[</heading1>    ->      <heading1>foo[]bar</heading1>\n\t//         <paragraph>]bar</paragraph>  ->                   --^\n\t//     </blockQuote>                    ->  </blockQuote>\n\t//\n\t// Merge right:\n\t//     <blockQuote>                     ->  <blockQuote>\n\t//         <heading1>[</heading1>       ->\n\t//         <paragraph>]bar</paragraph>  ->      <paragraph>[]bar</paragraph>\n\t//     </blockQuote>                    ->  </blockQuote>\n\n\t// Merging should not go deeper than common ancestor.\n\tconst [ startAncestor, endAncestor ] = getAncestorsJustBelowCommonAncestor( startPosition, endPosition );\n\n\tif ( !model.hasContent( startAncestor, { ignoreMarkers: true } ) && model.hasContent( endAncestor, { ignoreMarkers: true } ) ) {\n\t\tmergeBranchesRight( writer, startPosition, endPosition, startAncestor.parent );\n\t} else {\n\t\tmergeBranchesLeft( writer, startPosition, endPosition, startAncestor.parent );\n\t}\n}\n\n// Merging blocks to the left (properties of the left block are preserved).\n// Simple example:\n//     <heading1>foo[</heading1>    ->  <heading1>foo[bar</heading1>]\n//     <paragraph>]bar</paragraph>  ->              --^\n//\n// Nested example:\n//     <blockQuote>                     ->  <blockQuote>\n//         <heading1>foo[</heading1>    ->      <heading1>foo[bar</heading1>\n//     </blockQuote>                    ->  </blockQuote>]    ^\n//     <blockBlock>                     ->                    |\n//         <paragraph>]bar</paragraph>  ->                 ---\n//     </blockBlock>                    ->\n//\nfunction mergeBranchesLeft( writer, startPosition, endPosition, commonAncestor ) {\n\tconst startElement = startPosition.parent;\n\tconst endElement = endPosition.parent;\n\n\t// Merging reached the common ancestor element, stop here.\n\tif ( startElement == commonAncestor || endElement == commonAncestor ) {\n\t\treturn;\n\t}\n\n\t// Remember next positions to merge in next recursive step (also used as modification points pointers).\n\tstartPosition = writer.createPositionAfter( startElement );\n\tendPosition = writer.createPositionBefore( endElement );\n\n\t// Move endElement just after startElement if they aren't siblings.\n\tif ( !endPosition.isEqual( startPosition ) ) {\n\t\t//\n\t\t//     <blockQuote>                     ->  <blockQuote>\n\t\t//         <heading1>foo[</heading1>    ->      <heading1>foo</heading1>[<paragraph>bar</paragraph>\n\t\t//     </blockQuote>                    ->  </blockQuote>                ^\n\t\t//     <blockBlock>                     ->  <blockBlock>                 |\n\t\t//         <paragraph>]bar</paragraph>  ->      ]                     ---\n\t\t//     </blockBlock>                    ->  </blockBlock>\n\t\t//\n\t\twriter.insert( endElement, startPosition );\n\t}\n\n\t// Merge two siblings (nodes on sides of startPosition):\n\t//\n\t//     <blockQuote>                                             ->  <blockQuote>\n\t//         <heading1>foo</heading1>[<paragraph>bar</paragraph>  ->      <heading1>foo[bar</heading1>\n\t//     </blockQuote>                                            ->  </blockQuote>\n\t//     <blockBlock>                                             ->  <blockBlock>\n\t//         ]                                                    ->      ]\n\t//     </blockBlock>                                            ->  </blockBlock>\n\t//\n\t// Or in simple case (without moving elements in above if):\n\t//     <heading1>foo</heading1>[<paragraph>bar</paragraph>]  ->  <heading1>foo[bar</heading1>]\n\t//\n\twriter.merge( startPosition );\n\n\t// Remove empty end ancestors:\n\t//\n\t//     <blockQuote>                      ->  <blockQuote>\n\t//         <heading1>foo[bar</heading1>  ->      <heading1>foo[bar</heading1>\n\t//     </blockQuote>                     ->  </blockQuote>\n\t//     <blockBlock>                      ->\n\t//         ]                             ->  ]\n\t//     </blockBlock>                     ->\n\t//\n\twhile ( endPosition.parent.isEmpty ) {\n\t\tconst parentToRemove = endPosition.parent;\n\n\t\tendPosition = writer.createPositionBefore( parentToRemove );\n\n\t\twriter.remove( parentToRemove );\n\t}\n\n\t// Verify if there is a need and possibility to merge next level.\n\tif ( !checkShouldMerge( writer.model.schema, startPosition, endPosition ) ) {\n\t\treturn;\n\t}\n\n\t// Continue merging next level (blockQuote with blockBlock in the examples above if it would not be empty and got removed).\n\tmergeBranchesLeft( writer, startPosition, endPosition, commonAncestor );\n}\n\n// Merging blocks to the right (properties of the right block are preserved).\n// Simple example:\n//     <heading1>foo[</heading1>    ->            --v\n//     <paragraph>]bar</paragraph>  ->  [<paragraph>foo]bar</paragraph>\n//\n// Nested example:\n//     <blockQuote>                     ->\n//         <heading1>foo[</heading1>    ->              ---\n//     </blockQuote>                    ->                 |\n//     <blockBlock>                     ->  [<blockBlock>  v\n//         <paragraph>]bar</paragraph>  ->      <paragraph>foo]bar</paragraph>\n//     </blockBlock>                    ->  </blockBlock>\n//\nfunction mergeBranchesRight( writer, startPosition, endPosition, commonAncestor ) {\n\tconst startElement = startPosition.parent;\n\tconst endElement = endPosition.parent;\n\n\t// Merging reached the common ancestor element, stop here.\n\tif ( startElement == commonAncestor || endElement == commonAncestor ) {\n\t\treturn;\n\t}\n\n\t// Remember next positions to merge in next recursive step (also used as modification points pointers).\n\tstartPosition = writer.createPositionAfter( startElement );\n\tendPosition = writer.createPositionBefore( endElement );\n\n\t// Move startElement just before endElement if they aren't siblings.\n\tif ( !endPosition.isEqual( startPosition ) ) {\n\t\t//\n\t\t//     <blockQuote>                     ->  <blockQuote>\n\t\t//         <heading1>foo[</heading1>    ->      [                   ---\n\t\t//     </blockQuote>                    ->  </blockQuote>              |\n\t\t//     <blockBlock>                     ->  <blockBlock>               v\n\t\t//         <paragraph>]bar</paragraph>  ->      <heading1>foo</heading1>]<paragraph>bar</paragraph>\n\t\t//     </blockBlock>                    ->  </blockBlock>\n\t\t//\n\t\twriter.insert( startElement, endPosition );\n\t}\n\n\t// Remove empty end ancestors:\n\t//\n\t//     <blockQuote>                                             ->\n\t//         [                                                    ->  [\n\t//     </blockQuote>                                            ->\n\t//     <blockBlock>                                             ->  <blockBlock>\n\t//         <heading1>foo</heading1>]<paragraph>bar</paragraph>  ->      <heading1>foo</heading1>]<paragraph>bar</paragraph>\n\t//     </blockBlock>                                            ->  </blockBlock>\n\t//\n\twhile ( startPosition.parent.isEmpty ) {\n\t\tconst parentToRemove = startPosition.parent;\n\n\t\tstartPosition = writer.createPositionBefore( parentToRemove );\n\n\t\twriter.remove( parentToRemove );\n\t}\n\n\t// Update endPosition after inserting and removing elements.\n\tendPosition = writer.createPositionBefore( endElement );\n\n\t// Merge right two siblings (nodes on sides of endPosition):\n\t//                                                              ->\n\t//     [                                                        ->  [\n\t//                                                              ->\n\t//     <blockBlock>                                             ->  <blockBlock>\n\t//         <heading1>foo</heading1>]<paragraph>bar</paragraph>  ->      <paragraph>foo]bar</paragraph>\n\t//     </blockBlock>                                            ->  </blockBlock>\n\t//\n\t// Or in simple case (without moving elements in above if):\n\t//     [<heading1>foo</heading1>]<paragraph>bar</paragraph>  ->  [<heading1>foo]bar</heading1>\n\t//\n\tmergeRight( writer, endPosition );\n\n\t// Verify if there is a need and possibility to merge next level.\n\tif ( !checkShouldMerge( writer.model.schema, startPosition, endPosition ) ) {\n\t\treturn;\n\t}\n\n\t// Continue merging next level (blockQuote with blockBlock in the examples above if it would not be empty and got removed).\n\tmergeBranchesRight( writer, startPosition, endPosition, commonAncestor );\n}\n\n// There is no right merge operation so we need to simulate it.\nfunction mergeRight( writer, position ) {\n\tconst startElement = position.nodeBefore;\n\tconst endElement = position.nodeAfter;\n\n\tif ( startElement.name != endElement.name ) {\n\t\twriter.rename( startElement, endElement.name );\n\t}\n\n\twriter.clearAttributes( startElement );\n\twriter.setAttributes( Object.fromEntries( endElement.getAttributes() ), startElement );\n\n\twriter.merge( position );\n}\n\n// Verifies if merging is needed and possible. It's not needed if both positions are in the same element\n// and it's not possible if some element is a limit or the range crosses a limit element.\nfunction checkShouldMerge( schema, startPosition, endPosition ) {\n\tconst startElement = startPosition.parent;\n\tconst endElement = endPosition.parent;\n\n\t// If both positions ended up in the same parent, then there's nothing more to merge:\n\t// <$root><p>x[</p><p>]y</p></$root> => <$root><p>xy</p>[]</$root>\n\tif ( startElement == endElement ) {\n\t\treturn false;\n\t}\n\n\t// If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\n\t\treturn false;\n\t}\n\n\t// Check if operations we'll need to do won't need to cross object or limit boundaries.\n\t// E.g., we can't merge endElement into startElement in this case:\n\t// <limit><startElement>x[</startElement></limit><endElement>]</endElement>\n\treturn isCrossingLimitElement( startPosition, endPosition, schema );\n}\n\n// Returns the elements that are the ancestors of the provided positions that are direct children of the common ancestor.\nfunction getAncestorsJustBelowCommonAncestor( positionA, positionB ) {\n\tconst ancestorsA = positionA.getAncestors();\n\tconst ancestorsB = positionB.getAncestors();\n\n\tlet i = 0;\n\n\twhile ( ancestorsA[ i ] && ancestorsA[ i ] == ancestorsB[ i ] ) {\n\t\ti++;\n\t}\n\n\treturn [ ancestorsA[ i ], ancestorsB[ i ] ];\n}\n\nfunction shouldAutoparagraph( schema, position ) {\n\tconst isTextAllowed = schema.checkChild( position, '$text' );\n\tconst isParagraphAllowed = schema.checkChild( position, 'paragraph' );\n\n\treturn !isTextAllowed && isParagraphAllowed;\n}\n\n// Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\nfunction isCrossingLimitElement( leftPos, rightPos, schema ) {\n\tconst rangeToCheck = new Range( leftPos, rightPos );\n\n\tfor ( const value of rangeToCheck.getWalker() ) {\n\t\tif ( schema.isLimit( value.item ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction insertParagraph( writer, position, selection ) {\n\tconst paragraph = writer.createElement( 'paragraph' );\n\n\twriter.insert( paragraph, position );\n\n\tcollapseSelectionAt( writer, selection, writer.createPositionAt( paragraph, 0 ) );\n}\n\nfunction replaceEntireContentWithParagraph( writer, selection ) {\n\tconst limitElement = writer.model.schema.getLimitElement( selection );\n\n\twriter.remove( writer.createRangeIn( limitElement ) );\n\tinsertParagraph( writer, writer.createPositionAt( limitElement, 0 ), selection );\n}\n\n// We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\nfunction shouldEntireContentBeReplacedWithParagraph( schema, selection ) {\n\tconst limitElement = schema.getLimitElement( selection );\n\n\tif ( !selection.containsEntireContent( limitElement ) ) {\n\t\treturn false;\n\t}\n\n\tconst range = selection.getFirstRange();\n\n\tif ( range.start.parent == range.end.parent ) {\n\t\treturn false;\n\t}\n\n\treturn schema.checkChild( limitElement, 'paragraph' );\n}\n\n// Helper function that sets the selection. Depending whether given `selection` is a document selection or not,\n// uses a different method to set it.\nfunction collapseSelectionAt( writer, selection, positionOrRange ) {\n\tif ( selection instanceof DocumentSelection ) {\n\t\twriter.setSelection( positionOrRange );\n\t} else {\n\t\tselection.setTo( positionOrRange );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\n\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\n\nconst wordBoundaryCharacters = ' ,.?!:;\"-()';\n\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\nexport default function modifySelection( model, selection, options = {} ) {\n\tconst schema = model.schema;\n\tconst isForward = options.direction != 'backward';\n\tconst unit = options.unit ? options.unit : 'character';\n\n\tconst focus = selection.focus;\n\n\tconst walker = new TreeWalker( {\n\t\tboundaries: getSearchRange( focus, isForward ),\n\t\tsingleCharacters: true,\n\t\tdirection: isForward ? 'forward' : 'backward'\n\t} );\n\n\tconst data = { walker, schema, isForward, unit };\n\n\tlet next;\n\n\twhile ( ( next = walker.next() ) ) {\n\t\tif ( next.done ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = tryExtendingTo( data, next.value );\n\n\t\tif ( position ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelectionFocus( position );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tselection.setFocus( position );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\nfunction tryExtendingTo( data, value ) {\n\tconst { isForward, walker, unit, schema } = data;\n\tconst { type, item, nextPosition } = value;\n\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\n\t// based on the unit.\n\tif ( type == 'text' ) {\n\t\tif ( data.unit === 'word' ) {\n\t\t\treturn getCorrectWordBreakPosition( walker, isForward );\n\t\t}\n\n\t\treturn getCorrectPosition( walker, unit, isForward );\n\t}\n\n\t// Entering an element.\n\tif ( type == ( isForward ? 'elementStart' : 'elementEnd' ) ) {\n\t\t// If it's a selectable, we can select it now.\n\t\tif ( schema.isSelectable( item ) ) {\n\t\t\treturn Position._createAt( item, isForward ? 'after' : 'before' );\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( schema.checkChild( nextPosition, '$text' ) ) {\n\t\t\treturn nextPosition;\n\t\t}\n\t}\n\t// Leaving an element.\n\telse {\n\t\t// If leaving a limit element, stop.\n\t\tif ( schema.isLimit( item ) ) {\n\t\t\t// NOTE: Fast-forward the walker until the end.\n\t\t\twalker.skip( () => true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( schema.checkChild( nextPosition, '$text' ) ) {\n\t\t\treturn nextPosition;\n\t\t}\n\t}\n}\n\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\nfunction getCorrectPosition( walker, unit ) {\n\tconst textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( isInsideSurrogatePair( data, offset ) || ( unit == 'character' && isInsideCombinedSymbol( data, offset ) ) ) {\n\t\t\twalker.next();\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\n// Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction getCorrectWordBreakPosition( walker, isForward ) {\n\tlet textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( !isAtWordBoundary( textNode.data, offset, isForward ) && !isAtNodeBoundary( textNode, offset, isForward ) ) {\n\t\t\twalker.next();\n\n\t\t\t// Check of adjacent text nodes with different attributes (like BOLD).\n\t\t\t// Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n\t\t\t// should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\t\t\tconst nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore;\n\n\t\t\t// Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\t\t\tif ( nextNode && nextNode.is( '$text' ) ) {\n\t\t\t\t// Check boundary char of an adjacent text node.\n\t\t\t\tconst boundaryChar = nextNode.data.charAt( isForward ? 0 : nextNode.data.length - 1 );\n\n\t\t\t\t// Go to the next node if the character at the boundary of that node belongs to the same word.\n\t\t\t\tif ( !wordBoundaryCharacters.includes( boundaryChar ) ) {\n\t\t\t\t\t// If adjacent text node belongs to the same word go to it & reset values.\n\t\t\t\t\twalker.next();\n\n\t\t\t\t\ttextNode = walker.position.textNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\nfunction getSearchRange( start, isForward ) {\n\tconst root = start.root;\n\tconst searchEnd = Position._createAt( root, isForward ? 'end' : 0 );\n\n\tif ( isForward ) {\n\t\treturn new Range( start, searchEnd );\n\t} else {\n\t\treturn new Range( searchEnd, start );\n\t}\n}\n\n// Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtWordBoundary( data, offset, isForward ) {\n\t// The offset to check depends on direction.\n\tconst offsetToCheck = offset + ( isForward ? 0 : -1 );\n\n\treturn wordBoundaryCharacters.includes( data.charAt( offsetToCheck ) );\n}\n\n// Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtNodeBoundary( textNode, offset, isForward ) {\n\treturn offset === ( isForward ? textNode.endOffset : 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent( model, selection ) {\n\treturn model.change( writer => {\n\t\tconst frag = writer.createDocumentFragment();\n\t\tconst range = selection.getFirstRange();\n\n\t\tif ( !range || range.isCollapsed ) {\n\t\t\treturn frag;\n\t\t}\n\n\t\tconst root = range.start.root;\n\t\tconst commonPath = range.start.getCommonPath( range.end );\n\t\tconst commonParent = root.getNodeByPath( commonPath );\n\n\t\t// ## 1st step\n\t\t//\n\t\t// First, we'll clone a fragment represented by a minimal flat range\n\t\t// containing the original range to be cloned.\n\t\t// E.g. let's consider such a range:\n\t\t//\n\t\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n\t\t//\n\t\t// A minimal flat range containing this one is:\n\t\t//\n\t\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n\t\t//\n\t\t// We can easily clone this structure, preserving e.g. the <quote> element.\n\t\tlet flatSubtreeRange;\n\n\t\tif ( range.start.parent == range.end.parent ) {\n\t\t\t// The original range is flat, so take it.\n\t\t\tflatSubtreeRange = range;\n\t\t} else {\n\t\t\tflatSubtreeRange = writer.createRange(\n\t\t\t\twriter.createPositionAt( commonParent, range.start.path[ commonPath.length ] ),\n\t\t\t\twriter.createPositionAt( commonParent, range.end.path[ commonPath.length ] + 1 )\n\t\t\t);\n\t\t}\n\n\t\tconst howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\n\n\t\t// Clone the whole contents.\n\t\tfor ( const item of flatSubtreeRange.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( '$textProxy' ) ) {\n\t\t\t\twriter.appendText( item.data, item.getAttributes(), frag );\n\t\t\t} else {\n\t\t\t\twriter.append( writer.cloneElement( item, true ), frag );\n\t\t\t}\n\t\t}\n\n\t\t// ## 2nd step\n\t\t//\n\t\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n\t\t//\n\t\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\n\t\t//\n\t\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n\t\t//\n\t\t// So this will be the final copied content:\n\t\t//\n\t\t// <quote><h>st</h></quote><p>se</p>\n\t\t//\n\t\t// In order to do that, we remove content from these two ranges:\n\t\t//\n\t\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\t\tif ( flatSubtreeRange != range ) {\n\t\t\t// Find the position of the original range in the cloned fragment.\n\t\t\tconst newRange = range._getTransformedByMove( flatSubtreeRange.start, writer.createPositionAt( frag, 0 ), howMany )[ 0 ];\n\n\t\t\tconst leftExcessRange = writer.createRange( writer.createPositionAt( frag, 0 ), newRange.start );\n\t\t\tconst rightExcessRange = writer.createRange( newRange.end, writer.createPositionAt( frag, 'end' ) );\n\n\t\t\tremoveRangeContent( rightExcessRange, writer );\n\t\t\tremoveRangeContent( leftExcessRange, writer );\n\t\t}\n\n\t\treturn frag;\n\t} );\n}\n\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\nfunction removeRangeContent( range, writer ) {\n\tconst parentsToCheck = [];\n\n\tArray.from( range.getItems( { direction: 'backward' } ) )\n\t\t// We should better store ranges because text proxies will lose integrity\n\t\t// with the text nodes when we'll start removing content.\n\t\t.map( item => writer.createRangeOn( item ) )\n\t\t// Filter only these items which are fully contained in the passed range.\n\t\t//\n\t\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n\t\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n\t\t.filter( itemRange => {\n\t\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n\t\t\tconst contained =\n\t\t\t\t( itemRange.start.isAfter( range.start ) || itemRange.start.isEqual( range.start ) ) &&\n\t\t\t\t( itemRange.end.isBefore( range.end ) || itemRange.end.isEqual( range.end ) );\n\n\t\t\treturn contained;\n\t\t} )\n\t\t.forEach( itemRange => {\n\t\t\tparentsToCheck.push( itemRange.start.parent );\n\n\t\t\twriter.remove( itemRange );\n\t\t} );\n\n\t// Remove ancestors of the removed items if they turned to be empty now\n\t// (their whole content was contained in the range).\n\tparentsToCheck.forEach( parentToCheck => {\n\t\tlet parent = parentToCheck;\n\n\t\twhile ( parent.parent && parent.isEmpty ) {\n\t\t\tconst removeRange = writer.createRangeOn( parent );\n\n\t\t\tparent = parent.parent;\n\n\t\t\twriter.remove( removeRange );\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/selection-post-fixer\n */\n\nimport Range from '../range';\nimport Position from '../position';\n\n/**\n * Injects selection post-fixer to the model.\n *\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct position means that:\n *\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\n * allows a `$text`.\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\n * boundary (a range must be rooted within one limit element).\n * * Only {@link module:engine/model/schema~Schema#isSelectable selectable elements} can be selected from the outside\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\n *\n * If the position is not correct, the post-fixer will automatically correct it.\n *\n * ## Fixing a non-collapsed selection\n *\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\n *\n *\t\troot\n *\t\t |- element P1\n *\t\t |   |- \"foo\"                                      root\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\n *\t\t |   |   |- element TD (l)                       TD      TD\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\n *\t\t |   |- element TR (l)\n *\t\t |   |   |- element TD (l)                           ||\n *\t\t |   |       |- \"bbb\"                                ||\n *\t\t |- element P2                                       VV\n *\t\t |   |- \"bar\"\n *\t\t                                                   root\n *\t\t                                        P1         TABLE]            P2\n *\t\t                                       f o[o     TR      TR         b a r\n *\t\t                                                 TD      TD\n *\t\t                                               a a a    b b b\n *\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\n * expanded to select the whole TABLE element.\n *\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\n * them to select `isLimit=true` elements.\n *\n * @param {module:engine/model/model~Model} model\n */\nexport function injectSelectionPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => selectionPostFixer( writer, model ) );\n}\n\n// The selection post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction selectionPostFixer( writer, model ) {\n\tconst selection = model.document.selection;\n\tconst schema = model.schema;\n\n\tconst ranges = [];\n\n\tlet wasFixed = false;\n\n\tfor ( const modelRange of selection.getRanges() ) {\n\t\t// Go through all ranges in selection and try fixing each of them.\n\t\t// Those ranges might overlap but will be corrected later.\n\t\tconst correctedRange = tryFixingRange( modelRange, schema );\n\n\t\t// \"Selection fixing\" algorithms sometimes get lost. In consequence, it may happen\n\t\t// that a new range is returned but, in fact, it has the same positions as the original\n\t\t// range anyway. If this range is not discarded, a new selection will be set and that,\n\t\t// for instance, would destroy the selection attributes. Let's make sure that the post-fixer\n\t\t// actually worked first before setting a new selection.\n\t\t//\n\t\t// https://github.com/ckeditor/ckeditor5/issues/6693\n\t\tif ( correctedRange && !correctedRange.isEqual( modelRange ) ) {\n\t\t\tranges.push( correctedRange );\n\t\t\twasFixed = true;\n\t\t} else {\n\t\t\tranges.push( modelRange );\n\t\t}\n\t}\n\n\t// If any of ranges were corrected update the selection.\n\tif ( wasFixed ) {\n\t\twriter.setSelection( mergeIntersectingRanges( ranges ), { backward: selection.isBackward } );\n\t}\n}\n\n// Tries fixing a range if it's incorrect.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingRange( range, schema ) {\n\tif ( range.isCollapsed ) {\n\t\treturn tryFixingCollapsedRange( range, schema );\n\t}\n\n\treturn tryFixingNonCollapsedRage( range, schema );\n}\n\n// Tries to fix collapsed ranges.\n//\n// * Fixes situation when a range is in a place where $text is not allowed\n//\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingCollapsedRange( range, schema ) {\n\tconst originalPosition = range.start;\n\n\tconst nearestSelectionRange = schema.getNearestSelectionRange( originalPosition );\n\n\t// This might be null ie when editor data is empty.\n\t// In such cases there is no need to fix the selection range.\n\tif ( !nearestSelectionRange ) {\n\t\treturn null;\n\t}\n\n\tif ( !nearestSelectionRange.isCollapsed ) {\n\t\treturn nearestSelectionRange;\n\t}\n\n\tconst fixedPosition = nearestSelectionRange.start;\n\n\t// Fixed position is the same as original - no need to return corrected range.\n\tif ( originalPosition.isEqual( fixedPosition ) ) {\n\t\treturn null;\n\t}\n\n\treturn new Range( fixedPosition );\n}\n\n// Tries to fix an expanded range.\n//\n// @param {module:engine/model/range~Range} range Expanded range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingNonCollapsedRage( range, schema ) {\n\tconst { start, end } = range;\n\n\tconst isTextAllowedOnStart = schema.checkChild( start, '$text' );\n\tconst isTextAllowedOnEnd = schema.checkChild( end, '$text' );\n\n\tconst startLimitElement = schema.getLimitElement( start );\n\tconst endLimitElement = schema.getLimitElement( end );\n\n\t// Ranges which both end are inside the same limit element (or root) might needs only minor fix.\n\tif ( startLimitElement === endLimitElement ) {\n\t\t// Range is valid when both position allows to place a text:\n\t\t// - <block>f[oobarba]z</block>\n\t\t// This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\n\t\tif ( isTextAllowedOnStart && isTextAllowedOnEnd ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\n\t\t// - [<block>foo</block>]    ->    <block>[foo]</block>\n\t\t// - [<block>foo]</block>    ->    <block>[foo]</block>\n\t\t// - <block>f[oo</block>]    ->    <block>f[oo]</block>\n\t\t// - [<block>foo</block><selectable></selectable>]    ->    <block>[foo</block><selectable></selectable>]\n\t\tif ( checkSelectionOnNonLimitElements( start, end, schema ) ) {\n\t\t\tconst isStartBeforeSelectable = start.nodeAfter && schema.isSelectable( start.nodeAfter );\n\t\t\tconst fixedStart = isStartBeforeSelectable ? null : schema.getNearestSelectionRange( start, 'forward' );\n\n\t\t\tconst isEndAfterSelectable = end.nodeBefore && schema.isSelectable( end.nodeBefore );\n\t\t\tconst fixedEnd = isEndAfterSelectable ? null : schema.getNearestSelectionRange( end, 'backward' );\n\n\t\t\t// The schema.getNearestSelectionRange might return null - if that happens use original position.\n\t\t\tconst rangeStart = fixedStart ? fixedStart.start : start;\n\t\t\tconst rangeEnd = fixedEnd ? fixedEnd.start : end;\n\n\t\t\treturn new Range( rangeStart, rangeEnd );\n\t\t}\n\t}\n\n\tconst isStartInLimit = startLimitElement && !startLimitElement.is( 'rootElement' );\n\tconst isEndInLimit = endLimitElement && !endLimitElement.is( 'rootElement' );\n\n\t// At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\n\t// then the range crossed limit element boundaries and needs to be fixed.\n\tif ( isStartInLimit || isEndInLimit ) {\n\t\tconst bothInSameParent = ( start.nodeAfter && end.nodeBefore ) && start.nodeAfter.parent === end.nodeBefore.parent;\n\n\t\tconst expandStart = isStartInLimit && ( !bothInSameParent || !isSelectable( start.nodeAfter, schema ) );\n\t\tconst expandEnd = isEndInLimit && ( !bothInSameParent || !isSelectable( end.nodeBefore, schema ) );\n\n\t\t// Although we've already found limit element on start/end positions we must find the outer-most limit element.\n\t\t// as limit elements might be nested directly inside (ie table > tableRow > tableCell).\n\t\tlet fixedStart = start;\n\t\tlet fixedEnd = end;\n\n\t\tif ( expandStart ) {\n\t\t\tfixedStart = Position._createBefore( findOutermostLimitAncestor( startLimitElement, schema ) );\n\t\t}\n\n\t\tif ( expandEnd ) {\n\t\t\tfixedEnd = Position._createAfter( findOutermostLimitAncestor( endLimitElement, schema ) );\n\t\t}\n\n\t\treturn new Range( fixedStart, fixedEnd );\n\t}\n\n\t// Range was not fixed at this point so it is valid - ie it was placed around limit element already.\n\treturn null;\n}\n\n// Finds the outer-most ancestor.\n//\n// @param {module:engine/model/node~Node} startingNode\n// @param {module:engine/model/schema~Schema} schema\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\n// @returns {module:engine/model/node~Node}\nfunction findOutermostLimitAncestor( startingNode, schema ) {\n\tlet isLimitNode = startingNode;\n\tlet parent = isLimitNode;\n\n\t// Find outer most isLimit block as such blocks might be nested (ie. in tables).\n\twhile ( schema.isLimit( parent ) && parent.parent ) {\n\t\tisLimitNode = parent;\n\t\tparent = parent.parent;\n\t}\n\n\treturn isLimitNode;\n}\n\n// Checks whether any of range boundaries is placed around non-limit elements.\n//\n// @param {module:engine/model/position~Position} start\n// @param {module:engine/model/position~Position} end\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction checkSelectionOnNonLimitElements( start, end, schema ) {\n\tconst startIsOnBlock = ( start.nodeAfter && !schema.isLimit( start.nodeAfter ) ) || schema.checkChild( start, '$text' );\n\tconst endIsOnBlock = ( end.nodeBefore && !schema.isLimit( end.nodeBefore ) ) || schema.checkChild( end, '$text' );\n\n\t// We should fix such selection when one of those nodes needs fixing.\n\treturn startIsOnBlock || endIsOnBlock;\n}\n\n// Returns a minimal non-intersecting array of ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @returns {Array.<module:engine/model/range~Range>}\nfunction mergeIntersectingRanges( ranges ) {\n\tconst nonIntersectingRanges = [];\n\n\t// First range will always be fine.\n\tnonIntersectingRanges.push( ranges.shift() );\n\n\tfor ( const range of ranges ) {\n\t\tconst previousRange = nonIntersectingRanges.pop();\n\n\t\tif ( range.isIntersecting( previousRange ) ) {\n\t\t\t// Get the sum of two ranges.\n\t\t\tconst start = previousRange.start.isAfter( range.start ) ? range.start : previousRange.start;\n\t\t\tconst end = previousRange.end.isAfter( range.end ) ? previousRange.end : range.end;\n\n\t\t\tconst merged = new Range( start, end );\n\t\t\tnonIntersectingRanges.push( merged );\n\t\t} else {\n\t\t\tnonIntersectingRanges.push( previousRange );\n\t\t\tnonIntersectingRanges.push( range );\n\t\t}\n\t}\n\n\treturn nonIntersectingRanges;\n}\n\n// Checks if node exists and if it's a selectable.\n//\n// @param {module:engine/model/node~Node} node\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isSelectable( node, schema ) {\n\treturn node && schema.isSelectable( node );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/model\n */\n\nimport Batch from './batch';\nimport Writer from './writer';\nimport Schema from './schema';\nimport Document from './document';\nimport MarkerCollection from './markercollection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ModelElement from './element';\nimport ModelRange from './range';\nimport ModelPosition from './position';\nimport ModelSelection from './selection';\nimport OperationFactory from './operation/operationfactory';\n\nimport insertContent from './utils/insertcontent';\nimport deleteContent from './utils/deletecontent';\nimport modifySelection from './utils/modifyselection';\nimport getSelectedContent from './utils/getselectedcontent';\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\nimport { autoParagraphEmptyRoots } from './utils/autoparagraphing';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees } = require( '../dev-utils/utils' );\n// @if CK_DEBUG_ENGINE // const { OperationReplayer } = require( '../dev-utils/operationreplayer' ).default;\n\n/**\n * Editor's data model. Read about the model in the\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\tconstructor() {\n\t\t/**\n\t\t * Model's marker collection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis.markers = new MarkerCollection();\n\n\t\t/**\n\t\t * Model's document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis.document = new Document( this );\n\n\t\t/**\n\t\t * Model's schema.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/schema~Schema}\n\t\t */\n\t\tthis.schema = new Schema();\n\n\t\t/**\n\t\t * All callbacks added by {@link module:engine/model/model~Model#change} or\n\t\t * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Function>}\n\t\t */\n\t\tthis._pendingChanges = [];\n\n\t\t/**\n\t\t * The last created and currently used writer instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/writer~Writer}\n\t\t */\n\t\tthis._currentWriter = null;\n\n\t\t[ 'insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation' ]\n\t\t\t.forEach( methodName => this.decorate( methodName ) );\n\n\t\t// Adding operation validation with `highest` priority, so it is called before any other feature would like\n\t\t// to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\n\t\tthis.on( 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\toperation._validate();\n\t\t}, { priority: 'highest' } );\n\n\t\t// Register some default abstract entities.\n\t\tthis.schema.register( '$root', {\n\t\t\tisLimit: true\n\t\t} );\n\t\tthis.schema.register( '$block', {\n\t\t\tallowIn: '$root',\n\t\t\tisBlock: true\n\t\t} );\n\t\tthis.schema.register( '$text', {\n\t\t\tallowIn: '$block',\n\t\t\tisInline: true,\n\t\t\tisContent: true\n\t\t} );\n\t\tthis.schema.register( '$clipboardHolder', {\n\t\t\tallowContentOf: '$root',\n\t\t\tisLimit: true\n\t\t} );\n\t\tthis.schema.extend( '$text', { allowIn: '$clipboardHolder' } );\n\n\t\t// An element needed by the `upcastElementToMarker` converter.\n\t\t// This element temporarily represents a marker boundary during the conversion process and is removed\n\t\t// at the end of the conversion. `UpcastDispatcher` or at least `Conversion` class looks like a\n\t\t// better place for this registration but both know nothing about `Schema`.\n\t\tthis.schema.register( '$marker' );\n\t\tthis.schema.addChildCheck( ( context, childDefinition ) => {\n\t\t\tif ( childDefinition.name === '$marker' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t\tinjectSelectionPostFixer( this );\n\n\t\t// Post-fixer which takes care of adding empty paragraph elements to the empty roots.\n\t\tthis.document.registerPostFixer( autoParagraphEmptyRoots );\n\n\t\t// @if CK_DEBUG_ENGINE // this.on( 'applyOperation', () => {\n\t\t// @if CK_DEBUG_ENGINE // \tdumpTrees( this.document, this.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\n\t * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\n\t * the {@link module:engine/model/document~Document#selection document's selection}, and\n\t * {@link module:engine/model/model~Model#markers model markers}.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t} );\n\t *\n\t * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\n\t * into a single undo step.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\n\t *\n\t *\t\t\tmodel.change( writer => {\n\t *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\n\t *\t\t} );\n\t *\n\t * The callback of the `change()` block is executed synchronously.\n\t *\n\t * You can also return a value from the change block.\n\t *\n\t *\t\tconst img = model.change( writer => {\n\t *\t\t\treturn writer.createElement( 'img' );\n\t *\t\t} );\n\t *\n\t * @see #enqueueChange\n\t * @param {Function} callback Callback function which may modify the model.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tchange( callback ) {\n\t\ttry {\n\t\t\tif ( this._pendingChanges.length === 0 ) {\n\t\t\t\t// If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\n\t\t\t\tthis._pendingChanges.push( { batch: new Batch(), callback } );\n\n\t\t\t\treturn this._runPendingChanges()[ 0 ];\n\t\t\t} else {\n\t\t\t\t// If this is not the outermost block, just execute the callback.\n\t\t\t\treturn callback( this._currentWriter );\n\t\t\t}\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\n\t *\n\t * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\n\t * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\n\t * it will be delayed and executed after the outermost block.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconsole.log( 1 );\n\t *\n\t *\t\t\tmodel.enqueueChange( writer => {\n\t *\t\t\t\tconsole.log( 2 );\n\t *\t\t\t} );\n\t *\n\t * \t\t\tconsole.log( 3 );\n\t *\t\t} ); // Will log: 1, 3, 2.\n\t *\n\t * In addition to that, the changes enqueued with `enqueueChange()` will be converted separately from the changes\n\t * done in the outer `change()` block.\n\t *\n\t * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\n\t * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\n\t * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\n\t *\n\t * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\n\t *\n\t *\t\tmodel.enqueueChange( batch, writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t} );\n\t *\n\t * In order to make a nested `enqueueChange()` create a single undo step together with the changes done in the outer `change()`\n\t * block, you can obtain the batch instance from the  {@link module:engine/model/writer~Writer#batch writer} of the outer block.\n\t *\n\t * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\n\t * If not defined, a new batch will be created.\n\t * @param {Function} callback Callback function which may modify the model.\n\t */\n\tenqueueChange( batchOrType, callback ) {\n\t\ttry {\n\t\t\tif ( typeof batchOrType === 'string' ) {\n\t\t\t\tbatchOrType = new Batch( batchOrType );\n\t\t\t} else if ( typeof batchOrType == 'function' ) {\n\t\t\t\tcallback = batchOrType;\n\t\t\t\tbatchOrType = new Batch();\n\t\t\t}\n\n\t\t\tthis._pendingChanges.push( { batch: batchOrType, callback } );\n\n\t\t\tif ( this._pendingChanges.length == 1 ) {\n\t\t\t\tthis._runPendingChanges();\n\t\t\t}\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\n\t * {@link module:engine/model/operation/operation~Operation operations} to the model.\n\t *\n\t * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\n\t * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\n\t * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\n\t * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\n\t */\n\tapplyOperation( operation ) {\n\t\t// @if CK_DEBUG_ENGINE // console.log( 'Applying ' + operation );\n\n\t\t// @if CK_DEBUG_ENGINE // if ( !this._operationLogs ) {\n\t\t// @if CK_DEBUG_ENGINE //\tthis._operationLogs = [];\n\t\t// @if CK_DEBUG_ENGINE // }\n\n\t\t// @if CK_DEBUG_ENGINE // this._operationLogs.push( JSON.stringify( operation ) );\n\n\t\t// @if CK_DEBUG_ENGINE //if ( !this._appliedOperations ) {\n\t\t// @if CK_DEBUG_ENGINE //\tthis._appliedOperations = [];\n\t\t// @if CK_DEBUG_ENGINE //}\n\n\t\t// @if CK_DEBUG_ENGINE //this._appliedOperations.push( operation );\n\n\t\toperation._execute();\n\t}\n\n\t// @if CK_DEBUG_ENGINE // getAppliedOperation() {\n\t// @if CK_DEBUG_ENGINE //\tif ( !this._appliedOperations ) {\n\t// @if CK_DEBUG_ENGINE //\t\treturn '';\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\treturn this._appliedOperations.map( JSON.stringify ).join( '-------' );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // createReplayer( stringifiedOperations ) {\n\t// @if CK_DEBUG_ENGINE //\treturn new OperationReplayer( this, '-------', stringifiedOperations );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t/**\n\t * Inserts content at the position in the editor specified by the selection, as one would expect the paste\n\t * functionality to work.\n\t *\n\t * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\n\t * the content, clears the given selection's content before inserting nodes and moves the selection\n\t * to its target position at the end of the process.\n\t * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\n\t * pasting feature should do.\n\t *\n\t * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\n\t *\n\t * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\n\t * inside a {@link #change `change()` block}.\n\t *\n\t * # Conversion and schema\n\t *\n\t * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\n\t * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\n\t * is only adding nodes to the model. Additionally, you need to define\n\t * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\n\t * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\n\t *\n\t * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\n\t * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\n\t * unless converters are defined for all elements and attributes in that HTML.\n\t *\n\t * # Examples\n\t *\n\t * Using `insertContent()` with a manually created model structure:\n\t *\n\t *\t\t// Let's create a document fragment containing such content as:\n\t *\t\t//\n\t *\t\t// <paragraph>foo</paragraph>\n\t *\t\t// <blockQuote>\n\t *\t\t//    <paragraph>bar</paragraph>\n\t *\t\t// </blockQuote>\n\t *\t\tconst docFrag = editor.model.change( writer => {\n\t *\t\t\tconst p1 = writer.createElement( 'paragraph' );\n\t *\t\t\tconst p2 = writer.createElement( 'paragraph' );\n\t *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\n\t *\t\t\tconst docFrag = writer.createDocumentFragment();\n\t *\n\t *\t\t\twriter.append( p1, docFrag );\n\t *\t\t\twriter.append( blockQuote, docFrag );\n\t *\t\t\twriter.append( p2, blockQuote );\n\t *\t\t\twriter.insertText( 'foo', p1 );\n\t *\t\t\twriter.insertText( 'bar', p2 );\n\t *\n\t *\t\t\treturn docFrag;\n\t *\t\t} );\n\t *\n\t *\t\t// insertContent() does not have to be used in a change() block. It can, though,\n\t *\t\t// so this code could be moved to the callback defined above.\n\t *\t\teditor.model.insertContent( docFrag );\n\t *\n\t * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\n\t *\n\t *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\n\t *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\n\t *\t\tconst htmlDP = new HtmlDataProcessor( viewDocument );\n\t *\n\t *\t\t// Convert an HTML string to a view document fragment:\n\t *\t\tconst viewFragment = htmlDP.toView( htmlString );\n\t *\n\t *\t\t// Convert the view document fragment to a model document fragment\n\t *\t\t// in the context of $root. This conversion takes the schema into\n\t *\t\t// account so if, for example, the view document fragment contained a bare text node,\n\t *\t\t// this text node cannot be a child of $root, so it will be automatically\n\t *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\n\t *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\n\t *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\n\t *\t\t// which has a loosened schema.\n\t *\t\tconst modelFragment = editor.data.toModel( viewFragment );\n\t *\n\t *\t\teditor.model.insertContent( modelFragment );\n\t *\n\t * By default this method will use the document selection but it can also be used with a position, range or selection instance.\n\t *\n\t *\t\t// Insert text at the current document selection position.\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\n\t *\t\t} );\n\t *\n\t *\t\t// Insert text at a given position - the document selection will not be modified.\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\n\t *\n\t *\t\t\t// Which is a shorthand for:\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\n\t *\t\t} );\n\t *\n\t * If you want the document selection to be moved to the inserted content, use the\n\t * {@link module:engine/model/writer~Writer#setSelection `setSelection()`} method of the writer after inserting\n\t * the content:\n\t *\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\n\t *\t\t\t// Insert an empty paragraph at the beginning of the root.\n\t *\t\t\teditor.model.insertContent( paragraph, writer.createPositionAt( editor.model.document.getRoot(), 0 ) );\n\t *\n\t *\t\t\t// Move the document selection to the inserted paragraph.\n\t *\t\t\twriter.setSelection( paragraph, 'in' );\n\t *\t\t} );\n\t *\n\t * If an instance of the {@link module:engine/model/selection~Selection model selection} is passed as `selectable`,\n\t * the new content will be inserted at the passed selection (instead of document selection):\n\t *\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\t// Create a selection in a paragraph that will be used as a place of insertion.\n\t *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t\t// Insert the new text at the created selection.\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\n\t *\n\t *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\n\t *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\n\t *\t\t\twriter.setSelection( selection );\n\t *\t\t} );\n\t *\n\t * @fires insertContent\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n\t * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n\t * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\n\t * This param defines a position in relation to that item.\n\t * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n\t * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n\t * at the insertion position.\n\t */\n\tinsertContent( content, selectable, placeOrOffset ) {\n\t\treturn insertContent( this, content, selectable, placeOrOffset );\n\t}\n\n\t/**\n\t * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n\t *\n\t * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\n\t * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n\t * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n\t * then that behavior should be implemented in the view's listener. At the same time, the table feature\n\t * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n\t * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n\t * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n\t *\n\t * @fires deleteContent\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * Selection of which the content should be deleted.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n\t *\n\t * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\n\t *\n\t * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\n\t * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n\t *\n\t * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n\t * elements will not be merged.\n\t *\n\t * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n\t * paragraph when the entire content was selected.\n\t *\n\t * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\n\t *\n\t * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n\t * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\n\t *\n\t * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n\t * to a place where text cannot be inserted.\n\t *\n\t * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n\t *\n\t * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n\t * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n\t *\n\t * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n\t *\n\t * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n\t *\n\t * @param {'forward'|'backward'} [options.direction='backward'] The direction in which the content is being consumed.\n\t * Deleting backward corresponds to using the <kbd>Backspace</kbd> key, while deleting content forward corresponds to\n\t * the <kbd>Shift</kbd>+<kbd>Backspace</kbd> keystroke.\n\t */\n\tdeleteContent( selection, options ) {\n\t\tdeleteContent( this, selection, options );\n\t}\n\n\t/**\n\t * Modifies the selection. Currently, the supported modifications are:\n\t *\n\t * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n\t * Possible values for `unit` are:\n\t *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n\t *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n\t *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n\t *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n\t *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n\t *  why `'character'` value is most natural and common method of modifying selection.\n\t *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n\t *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n\t *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n\t *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n\t *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n\t *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n\t *  extension will include whole \"surrogate pair\".\n\t *  * `'word'` - moves selection by a whole word.\n\t *\n\t * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n\t *\n\t * @fires modifySelection\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * The selection to modify.\n\t * @param {Object} [options]\n\t * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n\t * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n\t */\n\tmodifySelection( selection, options ) {\n\t\tmodifySelection( this, selection, options );\n\t}\n\n\t/**\n\t * Gets a clone of the selected content.\n\t *\n\t * For example, for the following selection:\n\t *\n\t * ```html\n\t * <paragraph>x</paragraph>\n\t * <blockQuote>\n\t *\t<paragraph>y</paragraph>\n\t *\t<heading1>fir[st</heading1>\n\t * </blockQuote>\n\t * <paragraph>se]cond</paragraph>\n\t * <paragraph>z</paragraph>\n\t * ```\n\t *\n\t * It will return a document fragment with such a content:\n\t *\n\t * ```html\n\t * <blockQuote>\n\t *\t<heading1>st</heading1>\n\t * </blockQuote>\n\t * <paragraph>se</paragraph>\n\t * ```\n\t *\n\t * @fires getSelectedContent\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * The selection of which content will be returned.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tgetSelectedContent( selection ) {\n\t\treturn getSelectedContent( this, selection );\n\t}\n\n\t/**\n\t * Checks whether the given {@link module:engine/model/range~Range range} or\n\t * {@link module:engine/model/element~Element element} has any meaningful content.\n\t *\n\t * Meaningful content is:\n\t *\n\t * * any text node (`options.ignoreWhitespaces` allows controlling whether this text node must also contain\n\t * any non-whitespace characters),\n\t * * or any {@link module:engine/model/schema~Schema#isContent content element},\n\t * * or any {@link module:engine/model/markercollection~Marker marker} which\n\t * {@link module:engine/model/markercollection~Marker#_affectsData affects data}.\n\t *\n\t * This means that a range containing an empty `<paragraph></paragraph>` is not considered to have a meaningful content.\n\t * However, a range containing an `<image></image>` (which would normally be marked in the schema as an object element)\n\t * is considered non-empty.\n\t *\n\t * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.ignoreWhitespaces] Whether text node with whitespaces only should be considered empty.\n\t * @param {Boolean} [options.ignoreMarkers] Whether markers should be ignored.\n\t * @returns {Boolean}\n\t */\n\thasContent( rangeOrElement, options = {} ) {\n\t\tconst range = rangeOrElement instanceof ModelElement ? ModelRange._createIn( rangeOrElement ) : rangeOrElement;\n\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { ignoreWhitespaces = false, ignoreMarkers = false } = options;\n\n\t\t// Check if there are any markers which affects data in this given range.\n\t\tif ( !ignoreMarkers ) {\n\t\t\tfor ( const intersectingMarker of this.markers.getMarkersIntersectingRange( range ) ) {\n\t\t\t\tif ( intersectingMarker.affectsData ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tif ( this.schema.isContent( item ) ) {\n\t\t\t\tif ( item.is( '$textProxy' ) ) {\n\t\t\t\t\tif ( !ignoreWhitespaces ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if ( item.data.search( /\\S/ ) !== -1 ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates a position from the given root and path in that root.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionFromPath( root, path, stickiness ) {\n\t\treturn new ModelPosition( root, path, stickiness );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * a parent element and offset in that element,\n\t * * a parent element and `'end'` (the position will be set at the end of that element),\n\t * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\n\t * (the position will be set before or after the given model item).\n\t *\n\t * This method is a shortcut to other factory methods such as:\n\t *\n\t * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\n\t * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn ModelPosition._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn ModelPosition._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn ModelPosition._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from the `start` position to the `end` position.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRange( start, end );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\n\t * to the `start` position.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new ModelRange( start, end );\n\t}\n\n\t/**\n\t * Creates a range inside the given element which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRangeIn( paragraph );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn ModelRange._createIn( element );\n\t}\n\n\t/**\n\t * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * Note: This method is also available on `writer` instance as\n\t * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRangeOn( paragraph );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn ModelRange._createOn( item );\n\t}\n\n\t/**\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n\t * or creates an empty selection if no arguments were passed.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\n\t *\n\t *\t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\tconst selection = writer.createSelection( documentSelection );\n\t *\n\t *\t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates selection at the given offset in the given element.\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t *\t\t// Additional options (`'backward'`) can be specified as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @returns {module:engine/model/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new ModelSelection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/batch~Batch} instance.\n\t *\n\t * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\n\t *\n\t * * {@link #change `change()`},\n\t * * {@link #enqueueChange `enqueueChange()`}.\n\t *\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t * @returns {module:engine/model/batch~Batch}\n\t */\n\tcreateBatch( type ) {\n\t\treturn new Batch( type );\n\t}\n\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * This is an alias for {@link module:engine/model/operation/operationfactory~OperationFactory.fromJSON `OperationFactory.fromJSON()`}.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tcreateOperationFromJSON( json ) {\n\t\treturn OperationFactory.fromJSON( json, this.document );\n\t}\n\n\t/**\n\t * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\n\t */\n\tdestroy() {\n\t\tthis.document.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\n\t * which calls callbacks and returns array of values returned by these callbacks.\n\t *\n\t * @private\n\t * @returns {Array.<*>} Array of values returned by callbacks.\n\t */\n\t_runPendingChanges() {\n\t\tconst ret = [];\n\n\t\tthis.fire( '_beforeChanges' );\n\n\t\twhile ( this._pendingChanges.length ) {\n\t\t\t// Create a new writer using batch instance created for this chain of changes.\n\t\t\tconst currentBatch = this._pendingChanges[ 0 ].batch;\n\t\t\tthis._currentWriter = new Writer( this, currentBatch );\n\n\t\t\t// Execute changes callback and gather the returned value.\n\t\t\tconst callbackReturnValue = this._pendingChanges[ 0 ].callback( this._currentWriter );\n\t\t\tret.push( callbackReturnValue );\n\n\t\t\tthis.document._handleChangeBlock( this._currentWriter );\n\n\t\t\tthis._pendingChanges.shift();\n\t\t\tthis._currentWriter = null;\n\t\t}\n\n\t\tthis.fire( '_afterChanges' );\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\n\t * {@link module:engine/model/model~Model#change} block.\n\t *\n\t * @protected\n\t * @event _beforeChanges\n\t */\n\n\t/**\n\t * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\n\t * {@link module:engine/model/model~Model#change} block.\n\t *\n\t * @protected\n\t * @event _afterChanges\n\t */\n\n\t/**\n\t * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\n\t * using {@link #applyOperation}.\n\t *\n\t * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\n\t * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\n\t * be used.\n\t *\n\t * A few callbacks are already added to this event by engine internal classes:\n\t *\n\t * * with `highest` priority operation is validated,\n\t * * with `normal` priority operation is executed,\n\t * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\n\t * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\n\t * update themselves.\n\t *\n\t * @event applyOperation\n\t * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\n\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t */\n\n\t/**\n\t * Event fired when {@link #insertContent} method is called.\n\t *\n\t * The {@link #insertContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\n\t * `model.document.selection`.\n\t *\n\t * @event insertContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #deleteContent} method is called.\n\t *\n\t * The {@link #deleteContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event deleteContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #modifySelection} method is called.\n\t *\n\t * The {@link #modifySelection default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event modifySelection\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #getSelectedContent} method is called.\n\t *\n\t * The {@link #getSelectedContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event getSelectedContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n}\n\nmix( Model, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends module:utils/keystrokehandler~KeystrokeHandler\n */\nexport default class EditingKeystrokeHandler extends KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * The handler can be specified as a command name or a callback.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function|String} callback If a string is passed, then the keystroke will\n\t * {@link module:core/editor/editor~Editor#execute execute a command}.\n\t * If a function, then it will be called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tif ( typeof callback == 'string' ) {\n\t\t\tconst commandName = callback;\n\n\t\t\tcallback = ( evtData, cancel ) => {\n\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\tcancel();\n\t\t\t};\n\t\t}\n\n\t\tsuper.set( keystroke, callback, options );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editor\n */\n\nimport Context from '../context';\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\nimport PluginCollection from '../plugincollection';\nimport CommandCollection from '../commandcollection';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { StylesProcessor } from '@ckeditor/ckeditor5-engine/src/view/stylesmap';\n\n/**\n * The class representing a basic, generic editor.\n *\n * Check out the list of its subclasses to learn about specific editor implementations.\n *\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\n * own methods and properties.\n *\n * When you are implementing a plugin, this editor represents the API\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\n *\n * This API should be sufficient in order to implement the \"editing\" part of your feature\n * (schema definition, conversion, commands, keystrokes, etc.).\n * It does not define the editor UI, which is available only if\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\n * (as most editor implementations do).\n *\n * @abstract\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Editor {\n\t/**\n\t * Creates a new instance of the editor class.\n\t *\n\t * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\n\t *\n\t * @param {Object} [config={}] The editor configuration.\n\t */\n\tconstructor( config = {} ) {\n\t\t/**\n\t\t * The editor context.\n\t\t * When it is not provided through the configuration, the editor creates it.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:core/context~Context}\n\t\t */\n\t\tthis._context = config.context || new Context( { language: config.language } );\n\t\tthis._context._addEditor( this, !config.context );\n\n\t\t// Clone the plugins to make sure that the plugin array will not be shared\n\t\t// between editors and make the watchdog feature work correctly.\n\t\tconst availablePlugins = Array.from( this.constructor.builtinPlugins || [] );\n\n\t\t/**\n\t\t * Stores all configurations specific to this editor instance.\n\t\t *\n\t\t *\t\teditor.config.get( 'image.toolbar' );\n\t\t *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\n\t\tthis.config.define( 'plugins', availablePlugins );\n\t\tthis.config.define( this._context._getEditorConfig() );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this editor instance.\n\t\t *\n\t\t *\t\teditor.plugins.get( 'Clipboard' ); // -> An instance of the clipboard plugin.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/plugincollection~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins, this._context.plugins );\n\n\t\t/**\n\t\t * The locale instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = this._context.locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * Commands registered to the editor.\n\t\t *\n\t\t * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\n\t\t *\n\t\t *\t\t// Execute the bold command:\n\t\t *\t\teditor.execute( 'bold' );\n\t\t *\n\t\t *\t\t// Check the state of the bold command:\n\t\t *\t\teditor.commands.get( 'bold' ).value;\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/commandcollection~CommandCollection}\n\t\t */\n\t\tthis.commands = new CommandCollection();\n\n\t\t/**\n\t\t * Indicates the editor life-cycle state.\n\t\t *\n\t\t * The editor is in one of the following states:\n\t\t *\n\t\t * * `initializing` &ndash; During the editor initialization (before\n\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}) finished its job.\n\t\t * * `ready` &ndash; After the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\n\t\t * method is resolved.\n\t\t * * `destroyed` &ndash; Once the {@link #destroy `editor.destroy()`} method was called.\n\t\t *\n\t\t * @observable\n\t\t * @member {'initializing'|'ready'|'destroyed'} #state\n\t\t */\n\t\tthis.set( 'state', 'initializing' );\n\t\tthis.once( 'ready', () => ( this.state = 'ready' ), { priority: 'high' } );\n\t\tthis.once( 'destroy', () => ( this.state = 'destroyed' ), { priority: 'high' } );\n\n\t\t/**\n\t\t * Defines whether this editor is in read-only mode.\n\t\t *\n\t\t * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n\t\t * to modify the document by using them. Also, the editable element(s) become non-editable.\n\t\t *\n\t\t * In order to make the editor read-only, you can set this value directly:\n\t\t *\n\t\t *\t\teditor.isReadOnly = true;\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * The editor's model.\n\t\t *\n\t\t * The central point of the editor's abstract data model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = new Model();\n\n\t\tconst stylesProcessor = new StylesProcessor();\n\n\t\t/**\n\t\t * The {@link module:engine/controller/datacontroller~DataController data controller}.\n\t\t * Used e.g. for setting and retrieving the editor data.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/datacontroller~DataController}\n\t\t */\n\t\tthis.data = new DataController( this.model, stylesProcessor );\n\n\t\t/**\n\t\t * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n\t\t * Controls user input and rendering the content for editing.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController}\n\t\t */\n\t\tthis.editing = new EditingController( this.model, stylesProcessor );\n\t\tthis.editing.view.document.bind( 'isReadOnly' ).to( this );\n\n\t\t/**\n\t\t * Conversion manager through which you can register model-to-view and view-to-model converters.\n\t\t *\n\t\t * See the {@link module:engine/conversion/conversion~Conversion} documentation to learn how to add converters.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/conversion~Conversion}\n\t\t */\n\t\tthis.conversion = new Conversion( [ this.editing.downcastDispatcher, this.data.downcastDispatcher ], this.data.upcastDispatcher );\n\t\tthis.conversion.addAlias( 'dataDowncast', this.data.downcastDispatcher );\n\t\tthis.conversion.addAlias( 'editingDowncast', this.editing.downcastDispatcher );\n\n\t\t/**\n\t\t * An instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n\t\t *\n\t\t * It allows setting simple keystrokes:\n\t\t *\n\t\t *\t\t// Execute the bold command on Ctrl+E:\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\n\t\t *\n\t\t *\t\t// Execute your own callback:\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\n\t\t *\t\t\tconsole.log( data.keyCode );\n\t\t *\n\t\t *\t\t\t// Prevent the default (native) action and stop the underlying keydown event\n\t\t *\t\t\t// so no other editor feature will interfere.\n\t\t *\t\t\tcancel();\n\t\t *\t\t} );\n\t\t *\n\t\t * Note: Certain typing-oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\n\t\t * by a low-level mechanism and trying to listen to them via the keystroke handler will not work reliably.\n\t\t * To handle these specific keystrokes, see the events fired by the\n\t\t * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new EditingKeystrokeHandler( this );\n\t\tthis.keystrokes.listenTo( this.editing.view.document );\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the configuration.\n\t *\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n\t * once the initialization is completed, providing an array of loaded plugins.\n\t */\n\tinitPlugins() {\n\t\tconst config = this.config;\n\t\tconst plugins = config.get( 'plugins' );\n\t\tconst removePlugins = config.get( 'removePlugins' ) || [];\n\t\tconst extraPlugins = config.get( 'extraPlugins' ) || [];\n\n\t\treturn this.plugins.init( plugins.concat( extraPlugins ), removePlugins );\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * **Note** The editor cannot be destroyed during the initialization phase so if it is called\n\t * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\n\t *\n\t * @fires destroy\n\t * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\tlet readyPromise = Promise.resolve();\n\n\t\tif ( this.state == 'initializing' ) {\n\t\t\treadyPromise = new Promise( resolve => this.once( 'ready', resolve ) );\n\t\t}\n\n\t\treturn readyPromise\n\t\t\t.then( () => {\n\t\t\t\tthis.fire( 'destroy' );\n\t\t\t\tthis.stopListening();\n\t\t\t\tthis.commands.destroy();\n\t\t\t} )\n\t\t\t.then( () => this.plugins.destroy() )\n\t\t\t.then( () => {\n\t\t\t\tthis.model.destroy();\n\t\t\t\tthis.data.destroy();\n\t\t\t\tthis.editing.destroy();\n\t\t\t\tthis.keystrokes.destroy();\n\t\t\t} )\n\t\t\t// Remove the editor from the context.\n\t\t\t// When the context was created by this editor, the context will be destroyed.\n\t\t\t.then( () => this._context._removeEditor( this ) );\n\t}\n\n\t/**\n\t * Executes the specified command with given parameters.\n\t *\n\t * Shorthand for:\n\t *\n\t *\t\teditor.commands.get( commandName ).execute( ... );\n\t *\n\t * @param {String} commandName The name of the command to execute.\n\t * @param {*} [...commandParams] Command parameters.\n\t * @returns {*} The value returned by the {@link module:core/commandcollection~CommandCollection#execute `commands.execute()`}.\n\t */\n\texecute( ...args ) {\n\t\ttry {\n\t\t\treturn this.commands.execute( ...args );\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and initializes a new editor instance.\n\t *\n\t * This is an abstract method. Every editor type needs to implement its own initialization logic.\n\t *\n\t * See the `create()` methods of the existing editor types to learn how to use them:\n\t *\n\t * * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}\n\t * * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}\n\t * * {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n\t * * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`}\n\t *\n\t * @abstract\n\t * @method module:core/editor/editor~Editor.create\n\t */\n}\n\nmix( Editor, ObservableMixin );\n\n/**\n * Fired when the {@link module:engine/controller/datacontroller~DataController#event:ready data} and all additional\n * editor components are ready.\n *\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\n * application, you do not have to listen to `editor#ready` because when the promise returned by the static\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\n * you cannot even add a listener to the `editor#ready` event.\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event destroy\n */\n\n/**\n * This error is thrown when trying to pass a `<textarea>` element to a `create()` function of an editor class.\n *\n * The only editor type which can be initialized on `<textarea>` elements is {@glink builds/guides/overview#classic-editor classic editor}.\n * This editor hides the passed element and inserts its own UI next to it. Other types of editors reuse the passed element as their root\n * editable element and therefore `<textarea>` is not appropriate for them. Use a `<div>` or another text container instead:\n *\n *\t\t<div id=\"editor\">\n *\t\t\t<p>Initial content.</p>\n *\t\t</div>\n *\n * @error editor-wrong-element\n */\n\n/**\n * An array of plugins built into this editor class.\n *\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\n * during the editor initialization.\n *\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\n * unless `config.plugins` is passed.\n *\n *\t\t// Build some plugins into the editor class first.\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Do not initialize these plugins (note: it is defined by a string):\n *\t\t\t\tremovePlugins: [ 'Foo' ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> Undefined.\n *\t\t\t\teditor.config.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Load only this plugin. It can also be defined by a string if\n *\t\t\t\t// this plugin was built into the editor class.\n *\t\t\t\tplugins: [ FooPlugin ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\teditor.config.get( BarPlugin ); // -> Undefined.\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\n */\n\n/**\n * The default configuration which is built into the editor class.\n *\n * It is used in CKEditor 5 builds to provide the default configuration options which are later used during the editor initialization.\n *\n *\t\tClassicEditor.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the configuration passed to create().\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, { bar: 3 } )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/utils\n */\n\n/**\n * Returns attributes that should be preserved on the enter key.\n *\n * Filtering is realized based on `copyOnEnter` attribute property. Read more about attribute properties\n * {@link module:engine/model/schema~Schema#setAttributeProperties here}.\n *\n * @param {module:engine/model/schema~Schema} schema\n * @param {Iterable.<*>} allAttributes attributes to filter.\n * @returns {Iterable.<*>}\n */\nexport function* getCopyOnEnterAttributes( schema, allAttributes ) {\n\tfor ( const attribute of allAttributes ) {\n\t\tif ( attribute && schema.getAttributeProperties( attribute[ 0 ] ).copyOnEnter ) {\n\t\t\tyield attribute;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nexport default class EnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tenterBlock( this.editor.model, writer, doc.selection, model.schema );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock( model, writer, selection, schema ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Don't touch the roots and other limit elements.\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\n\t\t// Delete the selected content but only if inside a single limit element.\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\n\t\t// is not entirely valid.\n\t\tif ( !isSelectionEmpty && startElement == endElement ) {\n\t\t\tmodel.deleteContent( selection );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( writer.model.schema, selection.getAttributes() );\n\t\tsplitBlock( writer, range.start );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\tif ( leaveUnmerged ) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif ( isContainedWithinOneElement ) {\n\t\t\t\tsplitBlock( writer, selection.focus );\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock( writer, splitPos ) {\n\twriter.split( splitPos );\n\twriter.setSelection( splitPos.parent.nextSibling, 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enterobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class EnterObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst doc = this.document;\n\n\t\tdoc.on( 'keydown', ( evt, data ) => {\n\t\t\tif ( this.isEnabled && data.keyCode == keyCodes.enter ) {\n\t\t\t\t// Save the event object to check later if it was stopped or not.\n\t\t\t\tlet event;\n\t\t\t\tdoc.once( 'enter', evt => ( event = evt ), { priority: 'highest' } );\n\n\t\t\t\tdoc.fire( 'enter', new DomEventData( doc, data.domEvent, {\n\t\t\t\t\tisSoft: data.shiftKey\n\t\t\t\t} ) );\n\n\t\t\t\t// Stop `keydown` event if `enter` event was stopped.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\n\t\t\t\tif ( event && event.stop.called ) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Enter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Enter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'enter', new EnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The soft enter key is handled by the ShiftEnter plugin.\n\t\t\tif ( data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'enter' );\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftentercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\n *\n * @extends module:core/command~Command\n */\nexport default class ShiftEnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tsoftBreakAction( model, writer, doc.selection );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.isEnabled = isEnabled( model.schema, doc.selection );\n\t}\n}\n\n// Checks whether the ShiftEnter command should be enabled in the specified selection.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\nfunction isEnabled( schema, selection ) {\n\t// At this moment it is okay to support single range selections only.\n\t// But in the future we may need to change that.\n\tif ( selection.rangeCount > 1 ) {\n\t\treturn false;\n\t}\n\n\tconst anchorPos = selection.anchor;\n\n\t// Check whether the break element can be inserted in the current selection anchor.\n\tif ( !anchorPos || !schema.checkChild( anchorPos, 'softBreak' ) ) {\n\t\treturn false;\n\t}\n\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Do not modify the content if selection is cross-limit elements.\n\tif ( ( isInsideLimitElement( startElement, schema ) || isInsideLimitElement( endElement, schema ) ) && startElement !== endElement ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\nfunction softBreakAction( model, writer, selection ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( model.schema, selection.getAttributes() );\n\t\tinsertBreak( model, writer, range.end );\n\n\t\twriter.removeSelectionAttribute( selection.getAttributeKeys() );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\t// Selection within one element:\n\t\t//\n\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\n\t\tif ( isContainedWithinOneElement ) {\n\t\t\tinsertBreak( model, writer, selection.focus );\n\t\t}\n\t\t// Selection over multiple elements.\n\t\t//\n\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t//\n\t\t// We chose not to insert a line break in this case because:\n\t\t//\n\t\t// * it's not a very common scenario,\n\t\t// * it actually surprised me when I saw the \"expected behavior\" in real life.\n\t\t//\n\t\t// It's ok if the user will need to be more specific where they want the <br> to be inserted.\n\t\telse {\n\t\t\t// Move the selection to the 2nd element (last step of the example above).\n\t\t\tif ( leaveUnmerged ) {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction insertBreak( model, writer, position ) {\n\tconst breakLineElement = writer.createElement( 'softBreak' );\n\n\tmodel.insertContent( breakLineElement, position );\n\twriter.setSelection( breakLineElement, 'after' );\n}\n\n// Checks whether the specified `element` is a child of the limit element.\n//\n// Checking whether the `<p>` element is inside a limit element:\n//   - <$root><p>Text.</p></$root> => false\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\n//\n// @param {module:engine/model/element~Element} element\n// @param {module:engine/schema~Schema} schema\n// @returns {Boolean}\nfunction isInsideLimitElement( element, schema ) {\n\t// `$root` is a limit element but in this case is an invalid element.\n\tif ( element.is( 'rootElement' ) ) {\n\t\treturn false;\n\t}\n\n\treturn schema.isLimit( element ) || isInsideLimitElement( element.parent, schema );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftenter\n */\n\nimport ShiftEnterCommand from './shiftentercommand';\nimport EnterObserver from './enterobserver';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\n *\n * See also the {@link module:enter/enter~Enter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ShiftEnter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ShiftEnter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Configure the schema.\n\t\tschema.register( 'softBreak', {\n\t\t\tallowWhere: '$text',\n\t\t\tisInline: true\n\t\t} );\n\n\t\t// Configure converters.\n\t\tconversion.for( 'upcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tmodel: 'softBreak',\n\t\t\t\tview: 'br'\n\t\t\t} );\n\n\t\tconversion.for( 'downcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tmodel: 'softBreak',\n\t\t\t\tview: ( modelElement, { writer } ) => writer.createEmptyElement( 'br' )\n\t\t\t} );\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'shiftEnter', new ShiftEnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The hard enter key is handled by the Enter plugin.\n\t\t\tif ( !data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'shiftEnter' );\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The select all command.\n *\n * It is used by the {@link module:select-all/selectallediting~SelectAllEditing select all editing feature} to handle\n * the <kbd>Ctrl/⌘</kbd>+<kbd>A</kbd> keystroke.\n *\n * Executing this command changes the {@glink framework/guides/architecture/editing-engine#model model}\n * selection so it contains the entire content of the editable root of the editor the selection is\n * {@link module:engine/model/selection~Selection#anchor anchored} in.\n *\n * If the selection was anchored in a {@glink framework/guides/tutorials/implementing-a-block-widget nested editable}\n * (e.g. a caption of an image), the new selection will contain its entire content. Successive executions of this command\n * will expand the selection to encompass more and more content up to the entire editable root of the editor.\n *\n * @extends module:core/command~Command\n */\nexport default class SelectAllCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tlet scopeElement = model.schema.getLimitElement( selection );\n\n\t\t// If an entire scope is selected, or the selection's ancestor is not a scope yet,\n\t\t// browse through ancestors to find the enclosing parent scope.\n\t\tif ( selection.containsEntireContent( scopeElement ) || !isSelectAllScope( model.schema, scopeElement ) ) {\n\t\t\tdo {\n\t\t\t\tscopeElement = scopeElement.parent;\n\n\t\t\t\t// Do nothing, if the entire `root` is already selected.\n\t\t\t\tif ( !scopeElement ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while ( !isSelectAllScope( model.schema, scopeElement ) );\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setSelection( scopeElement, 'in' );\n\t\t} );\n\t}\n}\n\n// Checks whether the element is a valid select-all scope.\n// Returns true, if the element is a {@link module:engine/model/schema~Schema#isLimit limit},\n// and can contain any text or paragraph.\n//\n// @param {module:engine/model/schema~Schema} schema The schema to check against.\n// @param {module:engine/model/element~Element} element\n// @return {Boolean}\nfunction isSelectAllScope( schema, element ) {\n\treturn schema.isLimit( element ) && ( schema.checkChild( element, '$text' ) || schema.checkChild( element, 'paragraph' ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getCode, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport SelectAllCommand from './selectallcommand';\n\nconst SELECT_ALL_KEYSTROKE = parseKeystroke( 'Ctrl+A' );\n\n/**\n * The select all editing feature.\n *\n * It registers the `'selectAll'` {@link module:select-all/selectallcommand~SelectAllCommand command}\n * and the <kbd>Ctrl/⌘</kbd>+<kbd>A</kbd> keystroke listener which executes it.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAllEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAllEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\teditor.commands.add( 'selectAll', new SelectAllCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'keydown', ( eventInfo, domEventData ) => {\n\t\t\tif ( getCode( domEventData ) === SELECT_ALL_KEYSTROKE ) {\n\t\t\t\teditor.execute( 'selectAll' );\n\t\t\t\tdomEventData.preventDefault();\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport selectAllIcon from '../theme/icons/select-all.svg';\n\n/**\n * The select all UI feature.\n *\n * It registers the `'selectAll'` UI button in the editor's\n * {@link module:ui/componentfactory~ComponentFactory component factory}. When clicked, the button\n * executes the {@link module:select-all/selectallcommand~SelectAllCommand select all command}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAllUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAllUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( 'selectAll', locale => {\n\t\t\tconst command = editor.commands.get( 'selectAll' );\n\t\t\tconst view = new ButtonView( locale );\n\t\t\tconst t = locale.t;\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Select all' ),\n\t\t\t\ticon: selectAllIcon,\n\t\t\t\tkeystroke: 'Ctrl+A',\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute the command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( 'selectAll' );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","export default \"<svg width=\\\"20\\\" height=\\\"20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.75 15.5a.75.75 0 0 1 .75.75V18l.008.09A.5.5 0 0 0 2 18.5h1.75a.75.75 0 1 1 0 1.5H1.5l-.144-.007a1.5 1.5 0 0 1-1.35-1.349L0 18.5v-2.25a.75.75 0 0 1 .75-.75zm18.5 0a.75.75 0 0 1 .75.75v2.25l-.007.144a1.5 1.5 0 0 1-1.349 1.35L18.5 20h-2.25a.75.75 0 1 1 0-1.5H18a.5.5 0 0 0 .492-.41L18.5 18v-1.75a.75.75 0 0 1 .75-.75zm-10.45 3c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2H7.2a.2.2 0 0 1-.2-.2v-1.1c0-.11.09-.2.2-.2h1.6zm4 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2h-1.6a.2.2 0 0 1-.2-.2v-1.1c0-.11.09-.2.2-.2h1.6zm.45-5.5a.75.75 0 1 1 0 1.5h-8.5a.75.75 0 1 1 0-1.5h8.5zM1.3 11c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2H.2a.2.2 0 0 1-.2-.2v-1.6c0-.11.09-.2.2-.2h1.1zm18.5 0c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2h-1.1a.2.2 0 0 1-.2-.2v-1.6c0-.11.09-.2.2-.2h1.1zm-4.55-2a.75.75 0 1 1 0 1.5H4.75a.75.75 0 1 1 0-1.5h10.5zM1.3 7c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2H.2a.2.2 0 0 1-.2-.2V7.2c0-.11.09-.2.2-.2h1.1zm18.5 0c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2h-1.1a.2.2 0 0 1-.2-.2V7.2c0-.11.09-.2.2-.2h1.1zm-4.55-2a.75.75 0 1 1 0 1.5h-2.5a.75.75 0 1 1 0-1.5h2.5zm-5 0a.75.75 0 1 1 0 1.5h-5.5a.75.75 0 0 1 0-1.5h5.5zm-6.5-5a.75.75 0 0 1 0 1.5H2a.5.5 0 0 0-.492.41L1.5 2v1.75a.75.75 0 0 1-1.5 0V1.5l.007-.144A1.5 1.5 0 0 1 1.356.006L1.5 0h2.25zM18.5 0l.144.007a1.5 1.5 0 0 1 1.35 1.349L20 1.5v2.25a.75.75 0 1 1-1.5 0V2l-.008-.09A.5.5 0 0 0 18 1.5h-1.75a.75.75 0 1 1 0-1.5h2.25zM8.8 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2H7.2a.2.2 0 0 1-.2-.2V.2c0-.11.09-.2.2-.2h1.6zm4 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2h-1.6a.2.2 0 0 1-.2-.2V.2c0-.11.09-.2.2-.2h1.6z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectall\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport SelectAllEditing from './selectallediting';\nimport SelectAllUI from './selectallui';\n\n/**\n * The select all feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:select-all/selectallediting~SelectAllEditing select all editing feature}\n * and the {@link module:select-all/selectallui~SelectAllUI select all UI feature}.\n *\n * Please refer to the documentation of individual features to learn more.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAll extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ SelectAllEditing, SelectAllUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAll';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nexport default class ChangeBuffer {\n\t/**\n\t * Creates a new instance of the change buffer.\n\t *\n\t * @param {module:engine/model/model~Model} model\n\t * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n\t */\n\tconstructor( model, limit = 20 ) {\n\t\t/**\n\t\t * The model instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n\t\t * the {@link #batch batch} is set to a new one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #size\n\t\t */\n\t\tthis.size = 0;\n\n\t\t/**\n\t\t * The maximum number of atomic changes which can be contained in one batch.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #limit\n\t\t */\n\t\tthis.limit = limit;\n\n\t\t/**\n\t\t * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isLocked\n\t\t */\n\t\tthis.isLocked = false;\n\n\t\t// The function to be called in order to notify the buffer about batches which appeared in the document.\n\t\t// The callback will check whether it is a new batch and in that case the buffer will be flushed.\n\t\t//\n\t\t// The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n\t\t// should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n\t\t// the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\t\tthis._changeCallback = ( evt, batch ) => {\n\t\t\tif ( batch.type != 'transparent' && batch !== this._batch ) {\n\t\t\t\tthis._reset( true );\n\t\t\t}\n\t\t};\n\n\t\tthis._selectionChangeCallback = () => {\n\t\t\tthis._reset();\n\t\t};\n\n\t\tthis.model.document.on( 'change', this._changeCallback );\n\n\t\tthis.model.document.selection.on( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.on( 'change:attribute', this._selectionChangeCallback );\n\n\t\t/**\n\t\t * The current batch instance.\n\t\t *\n\t\t * @private\n\t\t * @member #_batch\n\t\t */\n\n\t\t/**\n\t\t * The callback to document the change event which later needs to be removed.\n\t\t *\n\t\t * @private\n\t\t * @member #_changeCallback\n\t\t */\n\n\t\t/**\n\t\t * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n\t\t *\n\t\t * @private\n\t\t * @member #_selectionChangeCallback\n\t\t */\n\t}\n\n\t/**\n\t * The current batch to which a feature should add its operations. Once the {@link #size}\n\t * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @type {module:engine/model/batch~Batch}\n\t */\n\tget batch() {\n\t\tif ( !this._batch ) {\n\t\t\tthis._batch = this.model.createBatch();\n\t\t}\n\n\t\treturn this._batch;\n\t}\n\n\t/**\n\t * The input number of changes into the buffer. Once the {@link #size} is\n\t * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @param {Number} changeCount The number of atomic changes to input.\n\t */\n\tinput( changeCount ) {\n\t\tthis.size += changeCount;\n\n\t\tif ( this.size >= this.limit ) {\n\t\t\tthis._reset( true );\n\t\t}\n\t}\n\n\t/**\n\t * Locks the buffer.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t}\n\n\t/**\n\t * Unlocks the buffer.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t}\n\n\t/**\n\t * Destroys the buffer.\n\t */\n\tdestroy() {\n\t\tthis.model.document.off( 'change', this._changeCallback );\n\t\tthis.model.document.selection.off( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.off( 'change:attribute', this._selectionChangeCallback );\n\t}\n\n\t/**\n\t * Resets the change buffer.\n\t *\n\t * @private\n\t * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n\t */\n\t_reset( ignoreLock ) {\n\t\tif ( !this.isLocked || ignoreLock ) {\n\t\t\tthis._batch = null;\n\t\t\tthis.size = 0;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/inputcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\nexport default class InputCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Number} undoStepSize The maximum number of atomic changes\n\t * which can be contained in one batch in the command buffer.\n\t */\n\tconstructor( editor, undoStepSize ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Typing's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, undoStepSize );\n\n\t\t/**\n\t\t * Stores batches created by the input command. The batches are used to differentiate input batches from other batches using\n\t\t * {@link module:typing/input~Input#isInput} method.\n\t\t *\n\t\t * @type {WeakSet<module:engine/model/batch~Batch>}\n\t\t * @protected\n\t\t */\n\t\tthis._batches = new WeakSet();\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._buffer.destroy();\n\t}\n\n\t/**\n\t * Executes the input command. It replaces the content within the given range with the given text.\n\t * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n\t * at the beginning of the range (which after the removal is a collapsed range).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {String} [options.text=''] The text to be inserted.\n\t * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n\t * to the first range in the current selection.\n\t * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\n\t * the inserted text.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst text = options.text || '';\n\t\tconst textInsertions = text.length;\n\t\tconst selection = options.range ? model.createSelection( options.range ) : doc.selection;\n\t\tconst resultRange = options.resultRange;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tthis._buffer.lock();\n\n\t\t\t// Store the batch as an 'input' batch for the Input.isInput( batch ) check.\n\t\t\tthis._batches.add( this._buffer.batch );\n\n\t\t\tmodel.deleteContent( selection );\n\n\t\t\tif ( text ) {\n\t\t\t\tmodel.insertContent( writer.createText( text, doc.selection.getAttributes() ), selection );\n\t\t\t}\n\n\t\t\tif ( resultRange ) {\n\t\t\t\twriter.setSelection( resultRange );\n\t\t\t} else if ( !selection.is( 'documentSelection' ) ) {\n\t\t\t\twriter.setSelection( selection );\n\t\t\t}\n\n\t\t\tthis._buffer.unlock();\n\n\t\t\tthis._buffer.input( textInsertions );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\n\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectUnsafeKeystrokesHandling( editor ) {\n\tlet latestCompositionSelection = null;\n\n\tconst model = editor.model;\n\tconst view = editor.editing.view;\n\tconst inputCommand = editor.commands.get( 'input' );\n\n\t// For Android, we want to handle keystrokes on `beforeinput` to be sure that code in `DeleteObserver` already had a chance to be fired.\n\tif ( env.isAndroid ) {\n\t\tview.document.on( 'beforeinput', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t} else {\n\t\tview.document.on( 'keydown', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t}\n\n\tview.document.on( 'compositionstart', handleCompositionStart, { priority: 'lowest' } );\n\n\tview.document.on( 'compositionend', () => {\n\t\tlatestCompositionSelection = model.createSelection( model.document.selection );\n\t}, { priority: 'lowest' } );\n\n\t// Handles the keydown event. We need to guess whether such keystroke is going to result\n\t// in typing. If so, then before character insertion happens, any selected content needs\n\t// to be deleted. Otherwise the default browser deletion mechanism would be\n\t// triggered, resulting in:\n\t//\n\t// * Hundreds of mutations which could not be handled.\n\t// * But most importantly, loss of control over how the content is being deleted.\n\t//\n\t// The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n\t// to handle the event.\n\t//\n\t// @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\tfunction handleUnsafeKeystroke( evtData ) {\n\t\tconst doc = model.document;\n\t\tconst isComposing = view.document.isComposing;\n\t\tconst isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual( doc.selection );\n\n\t\t// Reset stored composition selection.\n\t\tlatestCompositionSelection = null;\n\n\t\t// By relying on the state of the input command we allow disabling the entire input easily\n\t\t// by just disabling the input command. We could’ve used here the delete command but that\n\t\t// would mean requiring the delete feature which would block loading one without the other.\n\t\t// We could also check the editor.isReadOnly property, but that wouldn't allow to block\n\t\t// the input without blocking other features.\n\t\tif ( !inputCommand.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isNonTypingKeystroke( evtData ) || doc.selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\t\tif ( isComposing && evtData.keyCode === 229 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is a `keydown` event fired with '229' keycode it might be related\n\t\t// to recent composition. Check if selection is the same as upon ending recent composition,\n\t\t// if so do not remove selected content as it will remove composed sequence (#83).\n\t\tif ( !isComposing && evtData.keyCode === 229 && isSelectionUnchanged ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\t// Handles the `compositionstart` event. It is used only in special cases to remove the contents\n\t// of a non-collapsed selection so composition itself does not result in complex mutations.\n\t//\n\t// The special case mentioned above is a situation in which the `keydown` event is fired after\n\t// `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n\t// contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\tfunction handleCompositionStart() {\n\t\tconst doc = model.document;\n\t\tconst isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true;\n\n\t\t// If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n\t\t// it means the `handleKeydown()` method did not remove its contents. It happens usually because\n\t\t// of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n\t\t// we need to remove selection contents on composition start (#83).\n\t\tif ( doc.selection.isCollapsed || isFlatSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\tfunction deleteSelectionContent() {\n\t\tconst buffer = inputCommand.buffer;\n\n\t\tbuffer.lock();\n\n\t\tconst batch = buffer.batch;\n\t\tinputCommand._batches.add( batch );\n\n\t\tmodel.enqueueChange( batch, () => {\n\t\t\tmodel.deleteContent( model.document.selection );\n\t\t} );\n\n\t\tbuffer.unlock();\n\t}\n}\n\nconst safeKeycodes = [\n\tgetCode( 'arrowUp' ),\n\tgetCode( 'arrowRight' ),\n\tgetCode( 'arrowDown' ),\n\tgetCode( 'arrowLeft' ),\n\t9, // Tab\n\t16, // Shift\n\t17, // Ctrl\n\t18, // Alt\n\t19, // Pause\n\t20, // CapsLock\n\t27, // Escape\n\t33, // PageUp\n\t34, // PageDown\n\t35, // Home\n\t36, // End,\n\t45, // Insert,\n\t91, // Windows,\n\t93, // Menu key,\n\t144, // NumLock\n\t145, // ScrollLock,\n\t173, // Mute/Unmute\n\t174, // Volume up\n\t175, // Volume down,\n\t176, // Next song,\n\t177, // Previous song,\n\t178, // Stop,\n\t179, // Play/Pause,\n\t255 // Display brightness (increase and decrease)\n];\n\n// Function keys.\nfor ( let code = 112; code <= 135; code++ ) {\n\tsafeKeycodes.push( code );\n}\n\n/**\n * Returns `true` if a keystroke will **not** result in \"typing\".\n *\n * For instance, keystrokes that result in typing are letters \"a-zA-Z\", numbers \"0-9\", delete, backspace, etc.\n *\n * Keystrokes that do not cause typing are, for instance, Fn keys (F5, F8, etc.), arrow keys (←, →, ↑, ↓),\n * Tab (↹), \"Windows logo key\" (⊞ Win), etc.\n *\n * Note: This implementation is very simple and will need to be refined with time.\n *\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyData\n * @returns {Boolean}\n */\nexport function isNonTypingKeystroke( keyData ) {\n\t// Keystrokes which contain Ctrl don't represent typing.\n\tif ( keyData.ctrlKey ) {\n\t\treturn true;\n\t}\n\n\treturn safeKeycodes.includes( keyData.keyCode );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/utils\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\nexport function containerChildrenMutated( mutations ) {\n\tif ( mutations.length == 0 ) {\n\t\treturn false;\n\t}\n\n\t// Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\tfor ( const mutation of mutations ) {\n\t\tif ( mutation.type === 'children' && !getSingleTextNodeChange( mutation ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\nexport function getSingleTextNodeChange( mutation ) {\n\t// One new node.\n\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\n\t\treturn;\n\t}\n\n\t// Which is text.\n\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\n\tconst changes = diffToChanges( diffResult, mutation.newChildren );\n\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\tif ( changes.length > 1 ) {\n\t\treturn;\n\t}\n\n\tconst change = changes[ 0 ];\n\n\t// Which is text.\n\tif ( !( !!change.values[ 0 ] && change.values[ 0 ].is( '$text' ) ) ) {\n\t\treturn;\n\t}\n\n\treturn change;\n}\n\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\nexport function compareChildNodes( oldChild, newChild ) {\n\tif ( !!oldChild && oldChild.is( '$text' ) && !!newChild && newChild.is( '$text' ) ) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges( diff, output ) {\n\tconst changes = [];\n\tlet index = 0;\n\tlet lastOperation;\n\n\tdiff.forEach( change => {\n\t\tif ( change == 'equal' ) {\n\t\t\tpushLast();\n\n\t\t\tindex++;\n\t\t} else if ( change == 'insert' ) {\n\t\t\tif ( isContinuationOf( 'insert' ) ) {\n\t\t\t\tlastOperation.values.push( output[ index ] );\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tindex,\n\t\t\t\t\tvalues: [ output[ index ] ]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tindex++;\n\t\t} else /* if ( change == 'delete' ) */ {\n\t\t\tif ( isContinuationOf( 'delete' ) ) {\n\t\t\t\tlastOperation.howMany++;\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'delete',\n\t\t\t\t\tindex,\n\t\t\t\t\thowMany: 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} );\n\n\tpushLast();\n\n\treturn changes;\n\n\tfunction pushLast() {\n\t\tif ( lastOperation ) {\n\t\t\tchanges.push( lastOperation );\n\t\t\tlastOperation = null;\n\t\t}\n\t}\n\n\tfunction isContinuationOf( expected ) {\n\t\treturn lastOperation && lastOperation.type == expected;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injecttypingmutationshandling\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\n\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\n\n/**\n * Handles mutations caused by normal typing.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectTypingMutationsHandling( editor ) {\n\teditor.editing.view.document.on( 'mutations', ( evt, mutations, viewSelection ) => {\n\t\tnew MutationHandler( editor ).handle( mutations, viewSelection );\n\t} );\n}\n\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\nclass MutationHandler {\n\t/**\n\t * Creates an instance of the mutation handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * Editor instance for which mutations are handled.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The editing controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController} #editing\n\t\t */\n\t\tthis.editing = this.editor.editing;\n\t}\n\n\t/**\n\t * Handles given mutations.\n\t *\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\thandle( mutations, viewSelection ) {\n\t\tif ( containerChildrenMutated( mutations ) ) {\n\t\t\tthis._handleContainerChildrenMutations( mutations, viewSelection );\n\t\t} else {\n\t\t\tfor ( const mutation of mutations ) {\n\t\t\t\t// Fortunately it will never be both.\n\t\t\t\tthis._handleTextMutation( mutation, viewSelection );\n\t\t\t\tthis._handleTextNodeInsertion( mutation );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles situations when container's children mutated during input. This can happen when\n\t * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n\t * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n\t * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n\t * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n\t *\n\t * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n\t * and then compared with the current model to calculate the proper text change.\n\t *\n\t * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n\t * in {@link #_handleTextMutation}).\n\t *\n\t * @private\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\t_handleContainerChildrenMutations( mutations, viewSelection ) {\n\t\t// Get common ancestor of all mutations.\n\t\tconst mutationsCommonAncestor = getMutationsContainer( mutations );\n\n\t\t// Quit if there is no common ancestor.\n\t\tif ( !mutationsCommonAncestor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.editor.editing.view.domConverter;\n\n\t\t// Get common ancestor in DOM.\n\t\tconst domMutationCommonAncestor = domConverter.mapViewToDom( mutationsCommonAncestor );\n\n\t\t// Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n\t\t// This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\t\tconst freshDomConverter = new DomConverter( this.editor.editing.view.document );\n\t\tconst modelFromCurrentDom = this.editor.data.toModel(\n\t\t\tfreshDomConverter.domToView( domMutationCommonAncestor )\n\t\t).getChild( 0 );\n\n\t\t// Current model.\n\t\tconst currentModel = this.editor.editing.mapper.toModelElement( mutationsCommonAncestor );\n\n\t\t// If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\n\t\t// That means that we would need to diff model elements (see `if` below). Better return early instead of\n\t\t// trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\n\t\t// This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\n\t\t// because `<ul>` is not mapped (`<li>`s are).\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/718.\n\t\tif ( !currentModel ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get children from both ancestors.\n\t\tconst modelFromDomChildren = Array.from( modelFromCurrentDom.getChildren() );\n\t\tconst currentModelChildren = Array.from( currentModel.getChildren() );\n\n\t\t// Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\n\t\t// If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\n\t\tconst lastDomChild = modelFromDomChildren[ modelFromDomChildren.length - 1 ];\n\t\tconst lastCurrentChild = currentModelChildren[ currentModelChildren.length - 1 ];\n\n\t\tconst isLastDomChildSoftBreak = lastDomChild && lastDomChild.is( 'element', 'softBreak' );\n\t\tconst isLastCurrentChildSoftBreak = lastCurrentChild && !lastCurrentChild.is( 'element', 'softBreak' );\n\n\t\tif ( isLastDomChildSoftBreak && isLastCurrentChildSoftBreak ) {\n\t\t\tmodelFromDomChildren.pop();\n\t\t}\n\n\t\tconst schema = this.editor.model.schema;\n\n\t\t// Skip situations when common ancestor has any container elements.\n\t\tif ( !isSafeForTextMutation( modelFromDomChildren, schema ) || !isSafeForTextMutation( currentModelChildren, schema ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\n\t\t// Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\n\t\t// that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\n\t\t// By inserting a character we keep all the real texts on their indexes.\n\t\tconst newText = modelFromDomChildren.map( item => item.is( '$text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\n\t\tconst oldText = currentModelChildren.map( item => item.is( '$text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\n\n\t\t// Do nothing if mutations created same text.\n\t\tif ( oldText === newText ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\t\tconst removeRange = this.editor.model.createRange(\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt ),\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt + deletions )\n\t\t);\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTextMutation( mutation, viewSelection ) {\n\t\tif ( mutation.type != 'text' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t// We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n\t\t// for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n\t\t// Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n\t\t// However then it will be handled outside of mutations, like enter key is.\n\t\t// The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n\t\t// take `newText` and compare it to (cleaned up) view.\n\t\t// It could also be done in mutation observer too, however if any outside plugin would like to\n\t\t// introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\t\tconst newText = mutation.newText.replace( /\\u00A0/g, ' ' );\n\t\t// To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\t\tconst oldText = mutation.oldText.replace( /\\u00A0/g, ' ' );\n\n\t\t// Do nothing if mutations created same text.\n\t\tif ( oldText === newText ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\t// Get the position in view and model where the changes will happen.\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, firstChangeAt );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst removeRange = this.editor.model.createRange( modelPos, modelPos.getShiftedBy( deletions ) );\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTextNodeInsertion( mutation ) {\n\t\tif ( mutation.type != 'children' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst change = getSingleTextNodeChange( mutation );\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, change.index );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst insertedText = change.values[ 0 ].data;\n\n\t\tthis.editor.execute( 'input', {\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t// See comment in `_handleTextMutation`.\n\t\t\t// In this case we don't need to do this before `diff` because we diff whole nodes.\n\t\t\t// Just change &nbsp; in case there are some.\n\t\t\ttext: insertedText.replace( /\\u00A0/g, ' ' ),\n\t\t\trange: this.editor.model.createRange( modelPos )\n\t\t} );\n\t}\n}\n\n// Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\nfunction getMutationsContainer( mutations ) {\n\tconst lca = mutations\n\t\t.map( mutation => mutation.node )\n\t\t.reduce( ( commonAncestor, node ) => {\n\t\t\treturn commonAncestor.getCommonAncestor( node, { includeSelf: true } );\n\t\t} );\n\n\tif ( !lca ) {\n\t\treturn;\n\t}\n\n\t// We need to look for container and root elements only, so check all LCA's\n\t// ancestors (starting from itself).\n\treturn lca.getAncestors( { includeSelf: true, parentFirst: true } )\n\t\t.find( element => element.is( 'containerElement' ) || element.is( 'rootElement' ) );\n}\n\n// Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isSafeForTextMutation( children, schema ) {\n\treturn children.every( child => schema.isInline( child ) );\n}\n\n// Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\nfunction calculateChanges( diffResult ) {\n\t// Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n\tlet firstChangeAt = null;\n\t// Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\tlet lastChangeAt = null;\n\n\t// Get `firstChangeAt` and `lastChangeAt`.\n\tfor ( let i = 0; i < diffResult.length; i++ ) {\n\t\tconst change = diffResult[ i ];\n\n\t\tif ( change != 'equal' ) {\n\t\t\tfirstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n\t\t\tlastChangeAt = i;\n\t\t}\n\t}\n\n\t// How many characters, starting from `firstChangeAt`, should be removed.\n\tlet deletions = 0;\n\t// How many characters, starting from `firstChangeAt`, should be inserted.\n\tlet insertions = 0;\n\n\tfor ( let i = firstChangeAt; i <= lastChangeAt; i++ ) {\n\t\t// If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n\t\tif ( diffResult[ i ] != 'insert' ) {\n\t\t\tdeletions++;\n\t\t}\n\n\t\t// If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\t\tif ( diffResult[ i ] != 'delete' ) {\n\t\t\tinsertions++;\n\t\t}\n\t}\n\n\treturn { insertions, deletions, firstChangeAt };\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\n\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\teditor.commands.add( 'input', inputCommand );\n\n\t\tinjectUnsafeKeystrokesHandling( editor );\n\t\tinjectTypingMutationsHandling( editor );\n\t}\n\n\t/**\n\t * Checks batch if it is a result of user input - e.g. typing.\n\t *\n\t *\t\tconst input = editor.plugins.get( 'Input' );\n\t *\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t *\t\t\tif ( input.isInput( batch ) ) {\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\n\t * command as typing changes coming from user input are inserted to the document using that command.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\n\t * @returns {Boolean}\n\t */\n\tisInput( batch ) {\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\n\n\t\treturn inputCommand._batches.has( batch );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deletecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\nexport default class DeleteCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n\t * should consume the content when the selection is collapsed.\n\t */\n\tconstructor( editor, direction ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The directionality of the delete describing in what direction it should\n\t\t * consume the content when the selection is collapsed.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'forward'|'backward'} #direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Delete's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, editor.config.get( 'typing.undoStep' ) );\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n\t * or a piece of content in the {@link #direction defined direction}.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\n\t * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\n\t * See the {@link module:engine/view/document~Document#event:delete} event data.\n\t * @param {module:engine/model/selection~Selection} [options.selection] Selection to remove. If not set, current model selection\n\t * will be used.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tthis._buffer.lock();\n\n\t\t\tconst selection = writer.createSelection( options.selection || doc.selection );\n\n\t\t\t// Do not replace the whole selected content if selection was collapsed.\n\t\t\t// This prevents such situation:\n\t\t\t//\n\t\t\t// <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n\t\t\t// starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\t\t\tconst doNotResetEntireContent = selection.isCollapsed;\n\n\t\t\t// Try to extend the selection in the specified direction.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tmodel.modifySelection( selection, { direction: this.direction, unit: options.unit } );\n\t\t\t}\n\n\t\t\t// Check if deleting in an empty editor. See #61.\n\t\t\tif ( this._shouldEntireContentBeReplacedWithParagraph( options.sequence || 1 ) ) {\n\t\t\t\tthis._replaceEntireContentWithParagraph( writer );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If selection is still collapsed, then there's nothing to delete.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet changeCount = 0;\n\n\t\t\tselection.getFirstRange().getMinimalFlatRanges().forEach( range => {\n\t\t\t\tchangeCount += count(\n\t\t\t\t\trange.getWalker( { singleCharacters: true, ignoreElementEnd: true, shallow: true } )\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tmodel.deleteContent( selection, {\n\t\t\t\tdoNotResetEntireContent,\n\t\t\t\tdirection: this.direction\n\t\t\t} );\n\n\t\t\tthis._buffer.input( changeCount );\n\n\t\t\twriter.setSelection( selection );\n\n\t\t\tthis._buffer.unlock();\n\t\t} );\n\t}\n\n\t/**\n\t * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\n\t * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\n\t * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\n\t *\n\t * But, if the user pressed the key in an empty editable for the first time,\n\t * we want to replace the entire content with a paragraph if:\n\t *\n\t * * the current limit element is empty,\n\t * * the paragraph is allowed in the limit element,\n\t * * the limit doesn't already have a paragraph inside.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\n\t *\n\t * @private\n\t * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\n\t * @returns {Boolean}\n\t */\n\t_shouldEntireContentBeReplacedWithParagraph( sequence ) {\n\t\t// Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\n\t\tif ( sequence > 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst limitElement = model.schema.getLimitElement( selection );\n\n\t\t// If a collapsed selection contains the whole content it means that the content is empty\n\t\t// (from the user perspective).\n\t\tconst limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent( limitElement );\n\n\t\tif ( !limitElementIsEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !model.schema.checkChild( limitElement, 'paragraph' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst limitElementFirstChild = limitElement.getChild( 0 );\n\n\t\t// Does nothing if the limit element already contains only a paragraph.\n\t\t// We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\n\t\t// because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\n\t\tif ( limitElementFirstChild && limitElementFirstChild.name === 'paragraph' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\n\t *\n\t * @private\n\t */\n\t_replaceEntireContentWithParagraph( writer ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst limitElement = model.schema.getLimitElement( selection );\n\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\twriter.remove( writer.createRangeIn( limitElement ) );\n\t\twriter.insert( paragraph, limitElement );\n\n\t\twriter.setSelection( paragraph, 0 );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deleteobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DeleteObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst document = view.document;\n\t\tlet sequence = 0;\n\n\t\tdocument.on( 'keyup', ( evt, data ) => {\n\t\t\tif ( data.keyCode == keyCodes.delete || data.keyCode == keyCodes.backspace ) {\n\t\t\t\tsequence = 0;\n\t\t\t}\n\t\t} );\n\n\t\tdocument.on( 'keydown', ( evt, data ) => {\n\t\t\tconst deleteData = {};\n\n\t\t\tif ( data.keyCode == keyCodes.delete ) {\n\t\t\t\tdeleteData.direction = 'forward';\n\t\t\t\tdeleteData.unit = 'character';\n\t\t\t} else if ( data.keyCode == keyCodes.backspace ) {\n\t\t\t\tdeleteData.direction = 'backward';\n\t\t\t\tdeleteData.unit = 'codePoint';\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\n\t\t\tdeleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\n\t\t\tdeleteData.sequence = ++sequence;\n\n\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\n\t\t} );\n\n\t\t// `beforeinput` is handled only for Android devices. Desktop Chrome and iOS are skipped because they are working fine now.\n\t\tif ( env.isAndroid ) {\n\t\t\tdocument.on( 'beforeinput', ( evt, data ) => {\n\t\t\t\t// If event type is other than `deleteContentBackward` then this is not deleting.\n\t\t\t\tif ( data.domEvent.inputType != 'deleteContentBackward' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst deleteData = {\n\t\t\t\t\tunit: 'codepoint',\n\t\t\t\t\tdirection: 'backward',\n\t\t\t\t\tsequence: 1\n\t\t\t\t};\n\n\t\t\t\t// Android IMEs may change the DOM selection on `beforeinput` event so that the selection contains all the text\n\t\t\t\t// that the IME wants to remove. We will pass this information to `delete` event so proper part of the content is removed.\n\t\t\t\t//\n\t\t\t\t// Sometimes it is only expanding by a one character (in case of collapsed selection). In this case we don't need to\n\t\t\t\t// set a different selection to remove, it will work just fine.\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\tif ( domSelection.anchorNode == domSelection.focusNode && domSelection.anchorOffset + 1 != domSelection.focusOffset ) {\n\t\t\t\t\tdeleteData.selectionToRemove = view.domConverter.domSelectionToView( domSelection );\n\t\t\t\t}\n\n\t\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\n\t\t\t} );\n\t\t}\n\n\t\tfunction fireViewDeleteEvent( originalEvent, domEvent, deleteData ) {\n\t\t\t// Save the event object to check later if it was stopped or not.\n\t\t\tlet event;\n\t\t\tdocument.once( 'delete', evt => ( event = evt ), { priority: Number.POSITIVE_INFINITY } );\n\n\t\t\tdocument.fire( 'delete', new DomEventData( document, domEvent, deleteData ) );\n\n\t\t\t// Stop the original event if `delete` event was stopped.\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\n\t\t\tif ( event && event.stop.called ) {\n\t\t\t\toriginalEvent.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\n * If it's 2 or more it means that the key was pressed and hold.\n * @param {module:engine/view/selection~Selection} [data.selectionToRemove] View selection which content should be removed. If not set,\n * current selection should be used.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/delete\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Delete extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Delete';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( DeleteObserver );\n\n\t\teditor.commands.add( 'forwardDelete', new DeleteCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'delete', new DeleteCommand( editor, 'backward' ) );\n\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\tconst deleteCommandParams = { unit: data.unit, sequence: data.sequence };\n\n\t\t\t// If a specific (view) selection to remove was set, convert it to a model selection and set as a parameter for `DeleteCommand`.\n\t\t\tif ( data.selectionToRemove ) {\n\t\t\t\tconst modelSelection = editor.model.createSelection();\n\t\t\t\tconst ranges = [];\n\n\t\t\t\tfor ( const viewRange of data.selectionToRemove.getRanges() ) {\n\t\t\t\t\tranges.push( editor.editing.mapper.toModelRange( viewRange ) );\n\t\t\t\t}\n\n\t\t\t\tmodelSelection.setTo( ranges );\n\n\t\t\t\tdeleteCommandParams.selection = modelSelection;\n\t\t\t}\n\n\t\t\teditor.execute( data.direction == 'forward' ? 'forwardDelete' : 'delete', deleteCommandParams );\n\n\t\t\tdata.preventDefault();\n\n\t\t\tview.scrollToTheSelection();\n\t\t} );\n\n\t\t// Android IMEs have a quirk - they change DOM selection after the input changes were performed by the browser.\n\t\t// This happens on `keyup` event. Android doesn't know anything about our deletion and selection handling. Even if the selection\n\t\t// was changed during input events, IME remembers the position where the selection \"should\" be placed and moves it there.\n\t\t//\n\t\t// To prevent incorrect selection, we save the selection after deleting here and then re-set it on `keyup`. This has to be done\n\t\t// on DOM selection level, because on `keyup` the model selection is still the same as it was just after deletion, so it\n\t\t// wouldn't be changed and the fix would do nothing.\n\t\t//\n\t\tif ( env.isAndroid ) {\n\t\t\tlet domSelectionAfterDeletion = null;\n\n\t\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\tdomSelectionAfterDeletion = {\n\t\t\t\t\tanchorNode: domSelection.anchorNode,\n\t\t\t\t\tanchorOffset: domSelection.anchorOffset,\n\t\t\t\t\tfocusNode: domSelection.focusNode,\n\t\t\t\t\tfocusOffset: domSelection.focusOffset\n\t\t\t\t};\n\t\t\t}, { priority: 'lowest' } );\n\n\t\t\tthis.listenTo( viewDocument, 'keyup', ( evt, data ) => {\n\t\t\t\tif ( domSelectionAfterDeletion ) {\n\t\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\t\tdomSelection.collapse( domSelectionAfterDeletion.anchorNode, domSelectionAfterDeletion.anchorOffset );\n\t\t\t\t\tdomSelection.extend( domSelectionAfterDeletion.focusNode, domSelectionAfterDeletion.focusOffset );\n\n\t\t\t\t\tdomSelectionAfterDeletion = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/typing\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n\n/**\n * The typing feature. It handles typing.\n *\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\n * plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Typing extends Plugin {\n\tstatic get requires() {\n\t\treturn [ Input, Delete ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Typing';\n\t}\n}\n\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport MergeOperation from './mergeoperation';\nimport SplitOperation from './splitoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport Position from '../position';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\nconst transformations = new Map();\n\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\n *\n * The `transformationFunction` is passed three parameters:\n *\n * * `a` - operation to be transformed, an instance of `OperationA`,\n * * `b` - operation to be transformed by, an instance of `OperationB`,\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\n * transformation context.\n *\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\n * {@link module:engine/model/operation/operation~Operation operation} instances.\n *\n * @protected\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @param {Function} transformationFunction Function to use for transforming.\n */\nfunction setTransformation( OperationA, OperationB, transformationFunction ) {\n\tlet aGroup = transformations.get( OperationA );\n\n\tif ( !aGroup ) {\n\t\taGroup = new Map();\n\t\ttransformations.set( OperationA, aGroup );\n\t}\n\n\taGroup.set( OperationB, transformationFunction );\n}\n\n/**\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\n *\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\n * by the `OperationB` instance.\n *\n * @private\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\n */\nfunction getTransformation( OperationA, OperationB ) {\n\tconst aGroup = transformations.get( OperationA );\n\n\tif ( aGroup && aGroup.has( OperationB ) ) {\n\t\treturn aGroup.get( OperationB );\n\t}\n\n\treturn noUpdateTransformation;\n}\n\n/**\n * A transformation function that only clones operation to transform, without changing it.\n *\n * @private\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\n */\nfunction noUpdateTransformation( a ) {\n\treturn [ a ];\n}\n\n/**\n * Transforms operation `a` by operation `b`.\n *\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\n */\nexport function transform( a, b, context = {} ) {\n\tconst transformationFunction = getTransformation( a.constructor, b.constructor );\n\n\t/* eslint-disable no-useless-catch */\n\ttry {\n\t\ta = a.clone();\n\n\t\treturn transformationFunction( a, b, context );\n\t} catch ( e ) {\n\t\t// @if CK_DEBUG // console.warn( 'Error during operation transformation!', e.message );\n\t\t// @if CK_DEBUG // console.warn( 'Transformed operation', a );\n\t\t// @if CK_DEBUG // console.warn( 'Operation transformed by', b );\n\t\t// @if CK_DEBUG // console.warn( 'context.aIsStrong', context.aIsStrong );\n\t\t// @if CK_DEBUG // console.warn( 'context.aWasUndone', context.aWasUndone );\n\t\t// @if CK_DEBUG // console.warn( 'context.bWasUndone', context.bWasUndone );\n\t\t// @if CK_DEBUG // console.warn( 'context.abRelation', context.abRelation );\n\t\t// @if CK_DEBUG // console.warn( 'context.baRelation', context.baRelation );\n\n\t\tthrow e;\n\t}\n\t/* eslint-enable no-useless-catch */\n}\n\n/**\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\n * both transformed `operationsA` and transformed `operationsB` are returned.\n *\n * Note, that the first operation in each set should base on the same document state (\n * {@link module:engine/model/document~Document#version document version}).\n *\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\n *\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\n *\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\n *\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\n *\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\n *\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\n *\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\n * @param {Object} options Additional transformation options.\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\n * better conflict resolution).\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\n * if some operations got broken into multiple operations during transformation).\n * @returns {Object} Transformation result.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\n * @returns {Map} return.originalOperations A map that links transformed operations to original operations. The keys are the transformed\n * operations and the values are the original operations from the input (`operationsA` and `operationsB`).\n */\nexport function transformSets( operationsA, operationsB, options ) {\n\t// Create new arrays so the originally passed arguments are not changed.\n\t// No need to clone operations, they are cloned as they are transformed.\n\toperationsA = operationsA.slice();\n\toperationsB = operationsB.slice();\n\n\tconst contextFactory = new ContextFactory( options.document, options.useRelations, options.forceWeakRemove );\n\tcontextFactory.setOriginalOperations( operationsA );\n\tcontextFactory.setOriginalOperations( operationsB );\n\n\tconst originalOperations = contextFactory.originalOperations;\n\n\t// If one of sets is empty there is simply nothing to transform, so return sets as they are.\n\tif ( operationsA.length == 0 || operationsB.length == 0 ) {\n\t\treturn { operationsA, operationsB, originalOperations };\n\t}\n\t//\n\t// Following is a description of transformation process:\n\t//\n\t// There are `operationsA` and `operationsB` to be transformed, both by both.\n\t//\n\t// So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\n\t//\n\t// Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\n\t// the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\n\t// is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\n\t//\n\t// However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\n\t// we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\n\t// All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\n\t//\n\t// The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\n\t//\n\t//          [the initial state]\n\t//         [common for a1 and b1]\n\t//\n\t//                   *\n\t//                  / \\\n\t//                 /   \\\n\t//               b1     a1\n\t//               /       \\\n\t//              /         \\\n\t//             *           *\n\t//            / \\         / \\\n\t//           /   \\       /   \\\n\t//         b2    a1'   b1'    a2\n\t//         /       \\   /       \\\n\t//        /         \\ /         \\\n\t//       *           *           *\n\t//        \\         / \\         /\n\t//         \\       /   \\       /\n\t//        a1''   b2'   a2'   b1''\n\t//           \\   /       \\   /\n\t//            \\ /         \\ /\n\t//             *           *\n\t//              \\         /\n\t//               \\       /\n\t//              a2''   b2''\n\t//                 \\   /\n\t//                  \\ /\n\t//                   *\n\t//\n\t//           [the final state]\n\t//\n\t// The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\n\t// applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\n\t// transformed.\n\t//\n\t// Another thing to consider is that an operation during transformation can be broken into multiple operations.\n\t// Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\n\t//\n\t// In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\n\t// (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\n\t// by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\n\t// from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\n\t// by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\n\t// following `operationsA` (in our case it is just `a2`).\n\t//\n\t// Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\n\t// the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\n\t// be transformed by both of them.\n\t//\n\t//                       *\n\t//                      / \\\n\t//                     /   \\\n\t//                    /     \\\n\t//                  b1       a1\n\t//                  /         \\\n\t//                 /           \\\n\t//                /             \\\n\t//               *               *\n\t//              / \\             / \\\n\t//             /  a11'         /   \\\n\t//            /     \\         /     \\\n\t//          b2       *      b1'      a2\n\t//          /       / \\     /         \\\n\t//         /       /  a12' /           \\\n\t//        /       /     \\ /             \\\n\t//       *       b2'     *               *\n\t//        \\     /       / \\             /\n\t//       a11'' /     b21'' \\           /\n\t//          \\ /       /     \\         /\n\t//           *       *      a2'     b1''\n\t//            \\     / \\       \\     /\n\t//          a12'' b22''\\       \\   /\n\t//              \\ /     \\       \\ /\n\t//               *      a2''     *\n\t//                \\       \\     /\n\t//                 \\       \\  b21'''\n\t//                  \\       \\ /\n\t//                a2'''      *\n\t//                    \\     /\n\t//                     \\  b22'''\n\t//                      \\ /\n\t//                       *\n\t//\n\t// Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\n\t//\n\t// Having all that on mind, here is an outline for the transformation process algorithm:\n\t//\n\t// 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\n\t//\n\t// 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\n\t// All original `operationsA` are set to be transformed starting from the first operation `b`.\n\t//\n\t// 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\n\t// by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\n\t// with the transformation results.\n\t//\n\t// 4. If operation is broken into multiple operations, we save all the new operations in the place of the\n\t// original operation.\n\t//\n\t// 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\n\t// be transformed by.\n\t//\n\t// 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\n\t// unless the last operation `a` was transformed.\n\t//\n\t// The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\n\t// The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\n\t// to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\n\t// index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\n\t// operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\n\t// current `a` operation index to the next one.\n\t//\n\n\t// For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\n\tconst nextTransformIndex = new WeakMap();\n\n\t// For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\n\tfor ( const op of operationsA ) {\n\t\tnextTransformIndex.set( op, 0 );\n\t}\n\n\t// Additional data that is used for some postprocessing after the main transformation process is done.\n\tconst data = {\n\t\tnextBaseVersionA: operationsA[ operationsA.length - 1 ].baseVersion + 1,\n\t\tnextBaseVersionB: operationsB[ operationsB.length - 1 ].baseVersion + 1,\n\t\toriginalOperationsACount: operationsA.length,\n\t\toriginalOperationsBCount: operationsB.length\n\t};\n\n\t// Index of currently transformed operation `a`.\n\tlet i = 0;\n\n\t// While not all `operationsA` are transformed...\n\twhile ( i < operationsA.length ) {\n\t\t// Get \"current\" operation `a`.\n\t\tconst opA = operationsA[ i ];\n\n\t\t// For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\n\t\tconst indexB = nextTransformIndex.get( opA );\n\n\t\t// If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\n\t\tif ( indexB == operationsB.length ) {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst opB = operationsB[ indexB ];\n\n\t\t// Transform `a` by `b` and `b` by `a`.\n\t\tconst newOpsA = transform( opA, opB, contextFactory.getContext( opA, opB, true ) );\n\t\tconst newOpsB = transform( opB, opA, contextFactory.getContext( opB, opA, false ) );\n\t\t// As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\n\n\t\t// Update contextual information about operations.\n\t\tcontextFactory.updateRelation( opA, opB );\n\n\t\tcontextFactory.setOriginalOperations( newOpsA, opA );\n\t\tcontextFactory.setOriginalOperations( newOpsB, opB );\n\n\t\t// For new `a` operations, update their index of the next operation `b` to transform them by.\n\t\t//\n\t\t// This is needed even if there was only one result (`a` was not broken) because that information is used\n\t\t// at the beginning of this loop every time.\n\t\tfor ( const newOpA of newOpsA ) {\n\t\t\t// Acknowledge, that operation `b` also might be broken into multiple operations.\n\t\t\t//\n\t\t\t// This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\n\t\t\t// spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\n\t\t\t// be transformed by the same operation (part of it) again.\n\t\t\tnextTransformIndex.set( newOpA, indexB + newOpsB.length );\n\t\t}\n\n\t\t// Update `operationsA` and `operationsB` with the transformed versions.\n\t\toperationsA.splice( i, 1, ...newOpsA );\n\t\toperationsB.splice( indexB, 1, ...newOpsB );\n\t}\n\n\tif ( options.padWithNoOps ) {\n\t\t// If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\n\t\tconst brokenOperationsACount = operationsA.length - data.originalOperationsACount;\n\t\tconst brokenOperationsBCount = operationsB.length - data.originalOperationsBCount;\n\n\t\t// Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\n\t\t// that the base versions are equalled.\n\t\t//\n\t\t// Note that only one array will be updated, as only one of those subtractions can be greater than zero.\n\t\tpadWithNoOps( operationsA, brokenOperationsBCount - brokenOperationsACount );\n\t\tpadWithNoOps( operationsB, brokenOperationsACount - brokenOperationsBCount );\n\t}\n\n\t// Finally, update base versions of transformed operations.\n\tupdateBaseVersions( operationsA, data.nextBaseVersionB );\n\tupdateBaseVersions( operationsB, data.nextBaseVersionA );\n\n\treturn { operationsA, operationsB, originalOperations };\n}\n\n// Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\nclass ContextFactory {\n\t// Creates `ContextFactory` instance.\n\t//\n\t// @param {module:engine/model/document~Document} document Document which the operations change.\n\t// @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\n\t// better conflict resolution).\n\t// @param {Boolean} [forceWeakRemove=false] If set to `false`, remove operation will be always stronger than move operation,\n\t// so the removed nodes won't end up back in the document root. When set to `true`, context data will be used.\n\tconstructor( document, useRelations, forceWeakRemove = false ) {\n\t\t// For each operation that is created during transformation process, we keep a reference to the original operation\n\t\t// which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\n\t\t// gathered during transformation that we want to save for given operation, is actually saved for the original operation.\n\t\t// This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\n\t\t// gathered data through original operation reference.\n\t\tthis.originalOperations = new Map();\n\n\t\t// `model.History` instance which information about undone operations will be taken from.\n\t\tthis._history = document.history;\n\n\t\t// Whether additional context should be used.\n\t\tthis._useRelations = useRelations;\n\n\t\tthis._forceWeakRemove = !!forceWeakRemove;\n\n\t\t// Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\n\t\t// to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\n\t\t// we keep relations between them.\n\t\tthis._relations = new Map();\n\t}\n\n\t// Sets \"original operation\" for given operations.\n\t//\n\t// During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\n\t// or multiple operations. When gathering additional data it is important that all operations can be somehow linked\n\t// so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\n\t//\n\t// The original operation object will be used as such an universal linking id. Throughout the transformation process\n\t// all cloned operations will refer to \"the original operation\" when storing and reading additional data.\n\t//\n\t// If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\n\t// This should be used as an initialization step.\n\t//\n\t// If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\n\t// for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\n\t// `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\n\t//\n\t// @param {Array.<module:engine/model/operation/operation~Operation>} operations\n\t// @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\n\tsetOriginalOperations( operations, takeFrom = null ) {\n\t\tconst originalOperation = takeFrom ? this.originalOperations.get( takeFrom ) : null;\n\n\t\tfor ( const operation of operations ) {\n\t\t\tthis.originalOperations.set( operation, originalOperation || operation );\n\t\t}\n\t}\n\n\t// Saves a relation between operations `opA` and `opB`.\n\t//\n\t// Relations are then later used to help solve conflicts when operations are transformed.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\tupdateRelation( opA, opB ) {\n\t\t// The use of relations is described in a bigger detail in transformation functions.\n\t\t//\n\t\t// In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\n\t\t// Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\n\t\t// position is before the other operation source position. This kind of information gives contextual information when\n\t\t// transformation is used during undo. Similar checks are done for other pairs of operations.\n\t\t//\n\t\tswitch ( opA.constructor ) {\n\t\t\tcase MoveOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opB.movedRange.containsPosition( opA.targetPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAtSource' );\n\t\t\t\t\t\t} else if ( opA.targetPosition.isEqual( opB.deletionPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBetween' );\n\t\t\t\t\t\t} else if ( opA.targetPosition.isAfter( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'moveTargetAfter' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opA.targetPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBefore' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAfter' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase SplitOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( opA.splitPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tif ( opA.splitPosition.isEqual( opB.sourcePosition ) || opA.splitPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase MergeOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( !opA.targetPosition.isEqual( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeTargetNotMoved' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.targetPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSourceNotMoved' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSameElement' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase SplitOperation: {\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.splitPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitAtSource' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase MarkerOperation: {\n\t\t\t\tconst markerRange = opA.newRange;\n\n\t\t\t\tif ( !markerRange ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tconst movedRange = Range._createFromPositionAndShift( opB.sourcePosition, opB.howMany );\n\n\t\t\t\t\t\tconst affectedLeft = movedRange.containsPosition( markerRange.start ) ||\n\t\t\t\t\t\t\tmovedRange.start.isEqual( markerRange.start );\n\n\t\t\t\t\t\tconst affectedRight = movedRange.containsPosition( markerRange.end ) ||\n\t\t\t\t\t\t\tmovedRange.end.isEqual( markerRange.end );\n\n\t\t\t\t\t\tif ( ( affectedLeft || affectedRight ) && !movedRange.containsRange( markerRange ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\n\t\t\t\t\t\t\t\tside: affectedLeft ? 'left' : 'right',\n\t\t\t\t\t\t\t\tpath: affectedLeft ? markerRange.start.path.slice() : markerRange.end.path.slice()\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tconst wasInLeftElement = markerRange.start.isEqual( opB.targetPosition );\n\t\t\t\t\t\tconst wasStartBeforeMergedElement = markerRange.start.isEqual( opB.deletionPosition );\n\t\t\t\t\t\tconst wasEndBeforeMergedElement = markerRange.end.isEqual( opB.deletionPosition );\n\t\t\t\t\t\tconst wasInRightElement = markerRange.end.isEqual( opB.sourcePosition );\n\n\t\t\t\t\t\tif ( wasInLeftElement || wasStartBeforeMergedElement || wasEndBeforeMergedElement || wasInRightElement ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\n\t\t\t\t\t\t\t\twasInLeftElement,\n\t\t\t\t\t\t\t\twasStartBeforeMergedElement,\n\t\t\t\t\t\t\t\twasEndBeforeMergedElement,\n\t\t\t\t\t\t\t\twasInRightElement\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @returns {module:engine/model/operation/transform~TransformationContext}\n\tgetContext( opA, opB, aIsStrong ) {\n\t\treturn {\n\t\t\taIsStrong,\n\t\t\taWasUndone: this._wasUndone( opA ),\n\t\t\tbWasUndone: this._wasUndone( opB ),\n\t\t\tabRelation: this._useRelations ? this._getRelation( opA, opB ) : null,\n\t\t\tbaRelation: this._useRelations ? this._getRelation( opB, opA ) : null,\n\t\t\tforceWeakRemove: this._forceWeakRemove\n\t\t};\n\t}\n\n\t// Returns whether given operation `op` has already been undone.\n\t//\n\t// Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} op\n\t// @returns {Boolean}\n\t_wasUndone( op ) {\n\t\t// For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\n\t\t// operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\n\t\t// from which was undone. So get that original operation.\n\t\tconst originalOp = this.originalOperations.get( op );\n\n\t\t// And check with the document if the original operation was undone.\n\t\treturn originalOp.wasUndone || this._history.isUndoneOperation( originalOp );\n\t}\n\n\t// Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\n\t// was set earlier or `null` if there was no relation between those operations.\n\t//\n\t// This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\n\t//\n\t// When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\n\t// undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\n\t// we look forward in the future and ask if in that future `opB` was undone.\n\t//\n\t// Relations is a backward process to `wasUndone()`.\n\t//\n\t// Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\n\t// operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\n\t// a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\n\t// between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\n\t// a better decision when resolving a conflict between two operations, because we know more about the context of\n\t// those two operations.\n\t//\n\t// This is why this function does not return a relation directly between `opA` and `opB` because we need to look\n\t// back to search for a meaningful contextual information.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @returns {String|null}\n\t_getRelation( opA, opB ) {\n\t\t// Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\n\t\tconst origB = this.originalOperations.get( opB );\n\t\tconst undoneB = this._history.getUndoneOperation( origB );\n\n\t\t// If `opB` is not undoing any operation, there is no relation.\n\t\tif ( !undoneB ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst origA = this.originalOperations.get( opA );\n\t\tconst relationsA = this._relations.get( origA );\n\n\t\t// Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\n\t\tif ( relationsA ) {\n\t\t\treturn relationsA.get( undoneB ) || null;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// Helper function for `ContextFactory#updateRelations`.\n\t//\n\t// @private\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @param {String} relation\n\t_setRelation( opA, opB, relation ) {\n\t\t// As always, setting is for original operations, not the clones/transformed operations.\n\t\tconst origA = this.originalOperations.get( opA );\n\t\tconst origB = this.originalOperations.get( opB );\n\n\t\tlet relationsA = this._relations.get( origA );\n\n\t\tif ( !relationsA ) {\n\t\t\trelationsA = new Map();\n\t\t\tthis._relations.set( origA, relationsA );\n\t\t}\n\n\t\trelationsA.set( origB, relation );\n\t}\n}\n\n/**\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\n * can be used for better conflict resolving.\n *\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\n *\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\n */\n\n/**\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\n * of passed operations.\n *\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\n * each following operation in `operations`.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\n */\nfunction updateBaseVersions( operations, baseVersion ) {\n\tfor ( const operation of operations ) {\n\t\toperation.baseVersion = baseVersion++;\n\t}\n}\n\n/**\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\n * @param {Number} howMany\n */\nfunction padWithNoOps( operations, howMany ) {\n\tfor ( let i = 0; i < howMany; i++ ) {\n\t\toperations.push( new NoOperation( 0 ) );\n\t}\n}\n\n// -----------------------\n\nsetTransformation( AttributeOperation, AttributeOperation, ( a, b, context ) => {\n\t// If operations in conflict, check if their ranges intersect and manage them properly.\n\t//\n\t// Operations can be in conflict only if:\n\t//\n\t// * their key is the same (they change the same attribute), and\n\t// * they are in the same parent (operations for ranges [ 1 ] - [ 3 ] and [ 2, 0 ] - [ 2, 5 ] change different\n\t// elements and can't be in conflict).\n\tif ( a.key === b.key && a.range.start.hasSameParentAs( b.range.start ) ) {\n\t\t// First, we want to apply change to the part of a range that has not been changed by the other operation.\n\t\tconst operations = a.range.getDifference( b.range ).map( range => {\n\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, 0 );\n\t\t} );\n\n\t\t// Then we take care of the common part of ranges.\n\t\tconst common = a.range.getIntersection( b.range );\n\n\t\tif ( common ) {\n\t\t\t// If this operation is more important, we also want to apply change to the part of the\n\t\t\t// original range that has already been changed by the other operation. Since that range\n\t\t\t// got changed we also have to update `oldValue`.\n\t\t\tif ( context.aIsStrong ) {\n\t\t\t\toperations.push( new AttributeOperation( common, b.key, b.newValue, a.newValue, 0 ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( operations.length == 0 ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\treturn operations;\n\t} else {\n\t\t// If operations don't conflict, simply return an array containing just a clone of this operation.\n\t\treturn [ a ];\n\t}\n} );\n\nsetTransformation( AttributeOperation, InsertOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// The attribute operation range includes the position where nodes were inserted.\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n\t// the inserted nodes were elements and they should not receive attributes.\n\t//\n\tif ( a.range.start.hasSameParentAs( b.position ) && a.range.containsPosition( b.position ) ) {\n\t\t// If new nodes should not receive attributes, two separated ranges will be returned.\n\t\t// Otherwise, one expanded range will be returned.\n\t\tconst range = a.range._getTransformedByInsertion( b.position, b.howMany, !b.shouldReceiveAttributes );\n\t\tconst result = range.map( r => {\n\t\t\treturn new AttributeOperation( r, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t\t} );\n\n\t\tif ( b.shouldReceiveAttributes ) {\n\t\t\t// `AttributeOperation#range` includes some newly inserted text.\n\t\t\t// The operation should also change the attribute of that text. An example:\n\t\t\t//\n\t\t\t// Bold should be applied on the following range:\n\t\t\t// <p>Fo[zb]ar</p>\n\t\t\t//\n\t\t\t// In meantime, new text is typed:\n\t\t\t// <p>Fozxxbar</p>\n\t\t\t//\n\t\t\t// Bold should be applied also on the new text:\n\t\t\t// <p>Fo[zxxb]ar</p>\n\t\t\t// <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\n\t\t\t//\n\t\t\t// There is a special case to consider here to consider.\n\t\t\t//\n\t\t\t// Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\n\t\t\t// have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\n\t\t\t//\n\t\t\t// Attribute `highlight=\"yellow\"` should be applied on the following range:\n\t\t\t// <p>Fo[zb]ar<p>\n\t\t\t//\n\t\t\t// In meantime, character `x` with `highlight=\"red\"` is typed:\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\n\t\t\t//\n\t\t\t// In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\n\t\t\t// because that would lead to an exception (`oldValue` is incorrect for `x`).\n\t\t\t//\n\t\t\t// We also cannot break the original range as this would mess up a scenario when there are multiple following\n\t\t\t// insert operations, because then only the first inserted character is included in those ranges:\n\t\t\t// <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\n\t\t\t//\n\t\t\t// So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\n\t\t\t//\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\n\t\t\t//\n\t\t\t// But before that operation would be applied, we will add an additional attribute operation that will change\n\t\t\t// attributes on the inserted nodes in a way which would make the original operation correct:\n\t\t\t//\n\t\t\t// <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\n\t\t\t// <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\n\t\t\t//\n\n\t\t\t// Generate complementary attribute operation. Be sure to add it before the original operation.\n\t\t\tconst op = _getComplementaryAttributeOperations( b, a.key, a.oldValue );\n\n\t\t\tif ( op ) {\n\t\t\t\tresult.unshift( op );\n\t\t\t}\n\t\t}\n\n\t\t// If nodes should not receive new attribute, we are done here.\n\t\treturn result;\n\t}\n\n\t// If insert operation is not expanding the attribute operation range, simply transform the range.\n\ta.range = a.range._getTransformedByInsertion( b.position, b.howMany, false )[ 0 ];\n\n\treturn [ a ];\n} );\n\n/**\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\n *\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\n *\n * @private\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\n * @param {String} key\n * @param {*} newValue\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\n */\nfunction _getComplementaryAttributeOperations( insertOperation, key, newValue ) {\n\tconst nodes = insertOperation.nodes;\n\n\t// At the beginning we store the attribute value from the first node.\n\tconst insertValue = nodes.getNode( 0 ).getAttribute( key );\n\n\tif ( insertValue == newValue ) {\n\t\treturn null;\n\t}\n\n\tconst range = new Range( insertOperation.position, insertOperation.position.getShiftedBy( insertOperation.howMany ) );\n\n\treturn new AttributeOperation( range, key, insertValue, newValue, 0 );\n}\n\nsetTransformation( AttributeOperation, MergeOperation, ( a, b ) => {\n\tconst ranges = [];\n\n\t// Case 1:\n\t//\n\t// Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\n\t// An additional attribute operation that will change the (re)moved element needs to be generated.\n\t//\n\tif ( a.range.start.hasSameParentAs( b.deletionPosition ) ) {\n\t\tif ( a.range.containsPosition( b.deletionPosition ) || a.range.start.isEqual( b.deletionPosition ) ) {\n\t\t\tranges.push( Range._createFromPositionAndShift( b.graveyardPosition, 1 ) );\n\t\t}\n\t}\n\n\tconst range = a.range._getTransformedByMergeOperation( b );\n\n\t// Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\n\tif ( !range.isCollapsed ) {\n\t\tranges.push( range );\n\t}\n\n\t// Create `AttributeOperation`s out of the ranges.\n\treturn ranges.map( range => {\n\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t} );\n} );\n\nsetTransformation( AttributeOperation, MoveOperation, ( a, b ) => {\n\tconst ranges = _breakRangeByMoveOperation( a.range, b );\n\n\t// Create `AttributeOperation`s out of the ranges.\n\treturn ranges.map( range => new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion ) );\n} );\n\n// Helper function for `AttributeOperation` x `MoveOperation` transformation.\n//\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\n// top-level nodes of the original `range`.\n//\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\n// track only how those nodes have been affected by `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\n// @returns {Array.<module:engine/model/range~Range>}\nfunction _breakRangeByMoveOperation( range, moveOp ) {\n\tconst moveRange = Range._createFromPositionAndShift( moveOp.sourcePosition, moveOp.howMany );\n\n\t// We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\n\t// transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\n\tlet common = null;\n\tlet difference = [];\n\n\t// Let's compare the ranges.\n\tif ( moveRange.containsRange( range, true ) ) {\n\t\t// If the whole original range is moved, treat it whole as a common part. There's also no difference part.\n\t\tcommon = range;\n\t} else if ( range.start.hasSameParentAs( moveRange.start ) ) {\n\t\t// If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\n\t\t// that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\n\t\tdifference = range.getDifference( moveRange );\n\t\tcommon = range.getIntersection( moveRange );\n\t} else {\n\t\t// In any other situation we assume that original range is different than move range, that is that move operation\n\t\t// moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\n\t\t//\n\t\t// Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\n\t\t// than `.getDifference` (we would get two ranges).\n\t\tdifference = [ range ];\n\t}\n\n\tconst result = [];\n\n\t// The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\n\t// we do it by hand.\n\tfor ( let diff of difference ) {\n\t\t// First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\n\t\t// as the range is different than the moved range.\n\t\tdiff = diff._getTransformedByDeletion( moveOp.sourcePosition, moveOp.howMany );\n\n\t\t// Transform also `targetPosition`.\n\t\tconst targetPosition = moveOp.getMovedRangeStart();\n\n\t\t// Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\n\t\tconst spread = diff.start.hasSameParentAs( targetPosition );\n\n\t\t// Transform by insertion of moved nodes.\n\t\tdiff = diff._getTransformedByInsertion( targetPosition, moveOp.howMany, spread );\n\n\t\tresult.push( ...diff );\n\t}\n\n\t// Common part can be simply transformed by the move operation. This is because move operation will not target to\n\t// that common part (the operation would have to target inside its own moved range).\n\tif ( common ) {\n\t\tresult.push(\n\t\t\tcommon._getTransformedByMove( moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false )[ 0 ]\n\t\t);\n\t}\n\n\treturn result;\n}\n\nsetTransformation( AttributeOperation, SplitOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// Split node is the last node in `AttributeOperation#range`.\n\t// `AttributeOperation#range` needs to be expanded to include the new (split) node.\n\t//\n\t// Attribute `type` to be changed to `numbered` but the `listItem` is split.\n\t// <listItem type=\"bulleted\">foobar</listItem>\n\t//\n\t// After split:\n\t// <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\n\t//\n\t// After attribute change:\n\t// <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\n\t//\n\tif ( a.range.end.isEqual( b.insertionPosition ) ) {\n\t\tif ( !b.graveyardPosition ) {\n\t\t\ta.range.end.offset++;\n\t\t}\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 2:\n\t//\n\t// Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\n\t// not going to make a flat range.\n\t//\n\t// Content with range-to-change and split position:\n\t// <p>Fo[zb^a]r</p>\n\t//\n\t// After split:\n\t// <p>Fozb</p><p>ar</p>\n\t//\n\t// Make two separate ranges containing all nodes to change:\n\t// <p>Fo[zb]</p><p>[a]r</p>\n\t//\n\tif ( a.range.start.hasSameParentAs( b.splitPosition ) && a.range.containsPosition( b.splitPosition ) ) {\n\t\tconst secondPart = a.clone();\n\n\t\tsecondPart.range = new Range(\n\t\t\tb.moveTargetPosition.clone(),\n\t\t\ta.range.end._getCombined( b.splitPosition, b.moveTargetPosition )\n\t\t);\n\n\t\ta.range.end = b.splitPosition.clone();\n\t\ta.range.end.stickiness = 'toPrevious';\n\n\t\treturn [ a, secondPart ];\n\t}\n\n\t// The default case.\n\t//\n\ta.range = a.range._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, AttributeOperation, ( a, b ) => {\n\tconst result = [ a ];\n\n\t// Case 1:\n\t//\n\t// The attribute operation range includes the position where nodes were inserted.\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n\t// the inserted nodes were elements and they should not receive attributes.\n\t//\n\t// This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\n\t// although this case is a little less complicated. In this case we simply need to change attributes of the\n\t// inserted nodes and that's it.\n\t//\n\tif ( a.shouldReceiveAttributes && a.position.hasSameParentAs( b.range.start ) && b.range.containsPosition( a.position ) ) {\n\t\tconst op = _getComplementaryAttributeOperations( a, b.key, b.newValue );\n\n\t\tif ( op ) {\n\t\t\tresult.push( op );\n\t\t}\n\t}\n\n\t// The default case is: do nothing.\n\t// `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\n\t//\n\treturn result;\n} );\n\nsetTransformation( InsertOperation, InsertOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\n\t// what will be the order of inserted nodes. However, there is no additional information to help in that\n\t// decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\n\t//\n\t// To achieve that, we will check if the operation is strong.\n\t// If it is, it won't get transformed. If it is not, it will be moved.\n\t//\n\tif ( a.position.isEqual( b.position ) && context.aIsStrong ) {\n\t\treturn [ a ];\n\t}\n\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, MoveOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedByMoveOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, SplitOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, MergeOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MarkerOperation, InsertOperation, ( a, b ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedByInsertOperation( b )[ 0 ];\n\t}\n\n\tif ( a.newRange ) {\n\t\ta.newRange = a.newRange._getTransformedByInsertOperation( b )[ 0 ];\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MarkerOperation, ( a, b, context ) => {\n\tif ( a.name == b.name ) {\n\t\tif ( context.aIsStrong ) {\n\t\t\ta.oldRange = b.newRange ? b.newRange.clone() : null;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MergeOperation, ( a, b ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedByMergeOperation( b );\n\t}\n\n\tif ( a.newRange ) {\n\t\ta.newRange = a.newRange._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MoveOperation, ( a, b, context ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = Range._createFromRanges( a.oldRange._getTransformedByMoveOperation( b ) );\n\t}\n\n\tif ( a.newRange ) {\n\t\tif ( context.abRelation ) {\n\t\t\tconst aNewRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\n\n\t\t\tif ( context.abRelation.side == 'left' && b.targetPosition.isEqual( a.newRange.start ) ) {\n\t\t\t\ta.newRange.start.path = context.abRelation.path;\n\t\t\t\ta.newRange.end = aNewRange.end;\n\n\t\t\t\treturn [ a ];\n\t\t\t} else if ( context.abRelation.side == 'right' && b.targetPosition.isEqual( a.newRange.end ) ) {\n\t\t\t\ta.newRange.start = aNewRange.start;\n\t\t\t\ta.newRange.end.path = context.abRelation.path;\n\n\t\t\t\treturn [ a ];\n\t\t\t}\n\t\t}\n\n\t\ta.newRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, SplitOperation, ( a, b, context ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedBySplitOperation( b );\n\t}\n\n\tif ( a.newRange ) {\n\t\tif ( context.abRelation ) {\n\t\t\tconst aNewRange = a.newRange._getTransformedBySplitOperation( b );\n\n\t\t\tif ( a.newRange.start.isEqual( b.splitPosition ) && context.abRelation.wasStartBeforeMergedElement ) {\n\t\t\t\ta.newRange.start = Position._createAt( b.insertionPosition );\n\t\t\t} else if ( a.newRange.start.isEqual( b.splitPosition ) && !context.abRelation.wasInLeftElement ) {\n\t\t\t\ta.newRange.start = Position._createAt( b.moveTargetPosition );\n\t\t\t}\n\n\t\t\tif ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasInRightElement ) {\n\t\t\t\ta.newRange.end = Position._createAt( b.moveTargetPosition );\n\t\t\t} else if ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasEndBeforeMergedElement ) {\n\t\t\t\ta.newRange.end = Position._createAt( b.insertionPosition );\n\t\t\t} else {\n\t\t\t\ta.newRange.end = aNewRange.end;\n\t\t\t}\n\n\t\t\treturn [ a ];\n\t\t}\n\n\t\ta.newRange = a.newRange._getTransformedBySplitOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MergeOperation, InsertOperation, ( a, b ) => {\n\tif ( a.sourcePosition.hasSameParentAs( b.position ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByInsertOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, MergeOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Same merge operations.\n\t//\n\t// Both operations have same source and target positions. So the element already got merged and there is\n\t// theoretically nothing to do.\n\t//\n\tif ( a.sourcePosition.isEqual( b.sourcePosition ) && a.targetPosition.isEqual( b.targetPosition ) ) {\n\t\t// There are two ways that we can provide a do-nothing operation.\n\t\t//\n\t\t// First is simply a NoOperation instance. We will use it if `b` operation was not undone.\n\t\t//\n\t\t// Second is a merge operation that has the source operation in the merged element - in the graveyard -\n\t\t// same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\n\t\t// which is almost the same as NoOperation.\n\t\t//\n\t\t// This way the merge operation can be later transformed by split operation\n\t\t// to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\n\t\t//\n\t\tif ( !context.bWasUndone ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t} else {\n\t\t\tconst path = b.graveyardPosition.path.slice();\n\t\t\tpath.push( 0 );\n\n\t\t\ta.sourcePosition = new Position( b.graveyardPosition.root, path );\n\t\t\ta.howMany = 0;\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Same merge source position but different target position.\n\t//\n\t// This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\n\t// and the other person removed that paragraph and merged the same paragraph to something before:\n\t//\n\t// Client A:\n\t// <p>Foo</p><p>Bar</p><p>[]Xyz</p>\n\t// <p>Foo</p><p>BarXyz</p>\n\t//\n\t// Client B:\n\t// <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\n\t// <p>Foo</p><p>[]Xyz</p>\n\t// <p>FooXyz</p>\n\t//\n\t// In this case we need to decide where finally \"Xyz\" will land:\n\t//\n\t// <p>FooXyz</p>               graveyard: <p>Bar</p>\n\t// <p>Foo</p>                  graveyard: <p>BarXyz</p>\n\t//\n\t// Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\n\t// nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\n\t// end up in the graveyard (see above).\n\t//\n\t// If neither or both operations point to graveyard, then let `aIsStrong` decide.\n\t//\n\tif (\n\t\ta.sourcePosition.isEqual( b.sourcePosition ) && !a.targetPosition.isEqual( b.targetPosition ) &&\n\t\t!context.bWasUndone && context.abRelation != 'splitAtSource'\n\t) {\n\t\tconst aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\n\t\tconst bToGraveyard = b.targetPosition.root.rootName == '$graveyard';\n\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\t\tconst aIsWeak = aToGraveyard && !bToGraveyard;\n\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\t\tconst bIsWeak = bToGraveyard && !aToGraveyard;\n\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\n\n\t\tif ( forceMove ) {\n\t\t\tconst sourcePosition = b.targetPosition._getTransformedByMergeOperation( b );\n\t\t\tconst targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\treturn [ new MoveOperation( sourcePosition, a.howMany, targetPosition, 0 ) ];\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByMergeOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t// Handle positions in graveyard.\n\t// If graveyard positions are same and `a` operation is strong - do not transform.\n\tif ( !a.graveyardPosition.isEqual( b.graveyardPosition ) || !context.aIsStrong ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, MoveOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// The element to merge got removed.\n\t//\n\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\n\t// from technical point of view. However, if the element was removed, the intention of the user deleting it\n\t// was to have it all deleted, together with its children. From user experience point of view, moving back the\n\t// removed nodes might be unexpected. This means that in this scenario we will block the merging.\n\t//\n\t// The exception of this rule would be if the remove operation was later undone.\n\t//\n\tconst removedRange = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\tif ( b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\n\t\tif ( a.deletionPosition.hasSameParentAs( b.sourcePosition ) && removedRange.containsPosition( a.sourcePosition ) ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\tif ( a.sourcePosition.hasSameParentAs( b.sourcePosition ) ) {\n\t\ta.howMany -= b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByMoveOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByMoveOperation( b );\n\n\t// `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\n\t// be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\n\t// Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\n\t// This means that we won't transform graveyard position if it is equal to move operation target position.\n\tif ( !a.graveyardPosition.isEqual( b.targetPosition ) ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, SplitOperation, ( a, b, context ) => {\n\tif ( b.graveyardPosition ) {\n\t\t// If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\n\t\t// transform `a.graveyardPosition` accordingly.\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByDeletion( b.graveyardPosition, 1 );\n\n\t\t// This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\n\t\t//\n\t\t// So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\n\t\t// source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\n\t\t// means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\n\t\t//\n\t\t// If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\n\t\t// `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\n\t\t// properties.\n\t\t//\n\t\tif ( a.deletionPosition.isEqual( b.graveyardPosition ) ) {\n\t\t\ta.howMany = b.howMany;\n\t\t}\n\t}\n\n\t// Case 1:\n\t//\n\t// Merge operation moves nodes to the place where split happens.\n\t// This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\n\t// paragraph and there is a merge (delete) at the beginning of the second paragraph:\n\t//\n\t// <p>Foo{}</p><p>[]Bar</p>.\n\t//\n\t// Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\n\t//\n\t// State after split:\n\t// <p>Foo</p><p></p><p>Bar</p>\n\t//\n\t// Now, `Bar` should be merged to the new paragraph:\n\t// <p>Foo</p><p>Bar</p>\n\t//\n\t// Instead of merging it to the original paragraph:\n\t// <p>FooBar</p><p></p>\n\t//\n\t// This means that `targetPosition` needs to be transformed. This is the default case though.\n\t// For example, if the split would be after `F`, `targetPosition` should also be transformed.\n\t//\n\t// There are three exceptions, though, when we want to keep `targetPosition` as it was.\n\t//\n\t// First exception is when the merge target position is inside an element (not at the end, as usual). This\n\t// happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\n\t// targets inside the element we want to keep the original target position (and not transform it) because\n\t// we have additional context telling us that we want to merge to the original element. We can check if the\n\t// merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\n\t// is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\n\t//\n\t// Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\n\t// if target position would be transformed, the merge operation would target at the source position:\n\t//\n\t// root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\n\t//\n\t// SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\n\t// MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\n\t//\n\t// Since split operation moves the graveyard node back to the root, the merge operation source position changes.\n\t// We would like to merge from the empty <p> to the \"Foo\" <p>:\n\t//\n\t// root: <p>Foo</p><p></p>\t\t\tgraveyard:\n\t//\n\t// MergeOperation#sourcePosition = root [ 1, 0 ]\n\t//\n\t// If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\n\t//\n\t// Third exception is connected with relations. If this happens during undo and we have explicit information\n\t// that target position has not been affected by the operation which is undone by this split then this split should\n\t// not move the target position either.\n\t//\n\tif ( a.targetPosition.isEqual( b.splitPosition ) ) {\n\t\tconst mergeInside = b.howMany != 0;\n\t\tconst mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual( b.graveyardPosition );\n\n\t\tif ( mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved' ) {\n\t\t\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Merge source is at the same position as split position. This sometimes happen, mostly during undo.\n\t// The decision here is mostly to choose whether merge source position should stay where it is (so it will be at the end of the\n\t// split element) or should be move to the beginning of the new element.\n\t//\n\tif ( a.sourcePosition.isEqual( b.splitPosition ) ) {\n\t\t// Use context to check if `SplitOperation` is not undoing a merge operation, that didn't change the `a` operation.\n\t\t// This scenario happens the undone merge operation moved nodes at the source position of `a` operation.\n\t\t// In that case `a` operation source position should stay where it is.\n\t\tif ( context.abRelation == 'mergeSourceNotMoved' ) {\n\t\t\ta.howMany = 0;\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\n\t\t// This merge operation might have been earlier transformed by a merge operation which both merged the same element.\n\t\t// See that case in `MergeOperation` x `MergeOperation` transformation. In that scenario, if the merge operation has been undone,\n\t\t// the special case is not applied.\n\t\t//\n\t\t// Now, the merge operation is transformed by the split which has undone that previous merge operation.\n\t\t// So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\n\t\t//\n\t\tif ( context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0 ) {\n\t\t\ta.sourcePosition = b.moveTargetPosition.clone();\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.splitPosition ) ) {\n\t\ta.howMany = b.splitPosition.offset;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MoveOperation, InsertOperation, ( a, b ) => {\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst transformed = moveRange._getTransformedByInsertOperation( b, false )[ 0 ];\n\n\ta.sourcePosition = transformed.start;\n\ta.howMany = transformed.end.offset - transformed.start.offset;\n\n\t// See `InsertOperation` x `MoveOperation` transformation for details on this case.\n\t//\n\t// In summary, both operations point to the same place, so the order of nodes needs to be decided.\n\t// `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\n\t// between operations.\n\t//\n\tif ( !a.targetPosition.isEqual( b.position ) ) {\n\t\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MoveOperation, MoveOperation, ( a, b, context ) => {\n\t//\n\t// Setting and evaluating some variables that will be used in special cases and default algorithm.\n\t//\n\t// Create ranges from `MoveOperations` properties.\n\tconst rangeA = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst rangeB = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\t// Assign `context.aIsStrong` to a different variable, because the value may change during execution of\n\t// this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\n\tlet aIsStrong = context.aIsStrong;\n\n\t// This will be used to decide the order of nodes if both operations target at the same position.\n\t// By default, use strong/weak operation mechanism.\n\tlet insertBefore = !context.aIsStrong;\n\n\t// If the relation is set, then use it to decide nodes order.\n\tif ( context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter' ) {\n\t\tinsertBefore = true;\n\t} else if ( context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore' ) {\n\t\tinsertBefore = false;\n\t}\n\n\t// `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\tlet newTargetPosition;\n\n\tif ( a.targetPosition.isEqual( b.targetPosition ) && insertBefore ) {\n\t\tnewTargetPosition = a.targetPosition._getTransformedByDeletion(\n\t\t\tb.sourcePosition,\n\t\t\tb.howMany\n\t\t);\n\t} else {\n\t\tnewTargetPosition = a.targetPosition._getTransformedByMove(\n\t\t\tb.sourcePosition,\n\t\t\tb.targetPosition,\n\t\t\tb.howMany\n\t\t);\n\t}\n\n\t//\n\t// Special case #1 + mirror.\n\t//\n\t// Special case when both move operations' target positions are inside nodes that are\n\t// being moved by the other move operation. So in other words, we move ranges into inside of each other.\n\t// This case can't be solved reasonably (on the other hand, it should not happen often).\n\tif ( _moveTargetIntoMovedRange( a, b ) && _moveTargetIntoMovedRange( b, a ) ) {\n\t\t// Instead of transforming operation, we return a reverse of the operation that we transform by.\n\t\t// So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n\t\treturn [ b.getReversed() ];\n\t}\n\t//\n\t// End of special case #1.\n\t//\n\n\t//\n\t// Special case #2.\n\t//\n\t// Check if `b` operation targets inside `rangeA`.\n\tconst bTargetsToA = rangeA.containsPosition( b.targetPosition );\n\n\t// If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n\t// You might say that operation `b` is captured inside operation `a`.\n\tif ( bTargetsToA && rangeA.containsRange( rangeB, true ) ) {\n\t\t// There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n\t\t// we need to transform `a` operation anyway.\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\n\t//\n\t// Special case #2 mirror.\n\t//\n\tconst aTargetsToB = rangeB.containsPosition( a.targetPosition );\n\n\tif ( aTargetsToB && rangeB.containsRange( rangeA, true ) ) {\n\t\t// `a` operation is \"moved together\" with `b` operation.\n\t\t// Here, just move `rangeA` \"inside\" `rangeB`.\n\t\trangeA.start = rangeA.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\trangeA.end = rangeA.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\t//\n\t// End of special case #2.\n\t//\n\n\t//\n\t// Special case #3 + mirror.\n\t//\n\t// `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n\t// but not on the same tree level. In such case ranges have common part but we have to treat it\n\t// differently, because in such case those ranges are not really conflicting and should be treated like\n\t// two separate ranges. Also we have to discard two difference parts.\n\tconst aCompB = compareArrays( a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath() );\n\n\tif ( aCompB == 'prefix' || aCompB == 'extension' ) {\n\t\t// Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n\t\t// Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n\t\t// like a one difference part.\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\t//\n\t// End of special case #3.\n\t//\n\n\t//\n\t// Default case - ranges are on the same level or are not connected with each other.\n\t//\n\t// Modifier for default case.\n\t// Modifies `aIsStrong` flag in certain conditions.\n\t//\n\t// If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n\t// to provide more expected results.\n\tif ( a.type == 'remove' && b.type != 'remove' && !context.aWasUndone && !context.forceWeakRemove ) {\n\t\taIsStrong = true;\n\t} else if ( a.type != 'remove' && b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\n\t\taIsStrong = false;\n\t}\n\n\t// Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n\t// This will aggregate transformed ranges.\n\tconst ranges = [];\n\n\t// Get the \"difference part\" of `a` operation source range.\n\t// This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\tconst difference = rangeA.getDifference( rangeB );\n\n\tfor ( const range of difference ) {\n\t\t// Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n\t\trange.start = range.start._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\trange.end = range.end._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\n\t\t// If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\t\tconst shouldSpread = compareArrays( range.start.getParentPath(), b.getMovedRangeStart().getParentPath() ) == 'same';\n\t\tconst newRanges = range._getTransformedByInsertion( b.getMovedRangeStart(), b.howMany, shouldSpread );\n\n\t\tranges.push( ...newRanges );\n\t}\n\n\t// Then, we have to manage the \"common part\" of both move ranges.\n\tconst common = rangeA.getIntersection( rangeB );\n\n\tif ( common !== null && aIsStrong ) {\n\t\t// Calculate the new position of that part of original range.\n\t\tcommon.start = common.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\tcommon.end = common.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\t// Take care of proper range order.\n\t\t//\n\t\t// Put `common` at appropriate place. Keep in mind that we are interested in original order.\n\t\t// Basically there are only three cases: there is zero, one or two difference ranges.\n\t\t//\n\t\t// If there is zero difference ranges, just push `common` in the array.\n\t\tif ( ranges.length === 0 ) {\n\t\t\tranges.push( common );\n\t\t}\n\t\t// If there is one difference range, we need to check whether common part was before it or after it.\n\t\telse if ( ranges.length == 1 ) {\n\t\t\tif ( rangeB.start.isBefore( rangeA.start ) || rangeB.start.isEqual( rangeA.start ) ) {\n\t\t\t\tranges.unshift( common );\n\t\t\t} else {\n\t\t\t\tranges.push( common );\n\t\t\t}\n\t\t}\n\t\t// If there are more ranges (which means two), put common part between them. This is the only scenario\n\t\t// where there could be two difference ranges so we don't have to make any comparisons.\n\t\telse {\n\t\t\tranges.splice( 1, 0, common );\n\t\t}\n\t}\n\n\tif ( ranges.length === 0 ) {\n\t\t// If there are no \"source ranges\", nothing should be changed.\n\t\t// Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\n\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t}\n\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n} );\n\nsetTransformation( MoveOperation, SplitOperation, ( a, b, context ) => {\n\tlet newTargetPosition = a.targetPosition.clone();\n\n\t// Do not transform if target position is same as split insertion position and this split comes from undo.\n\t// This should be done on relations but it is too much work for now as it would require relations working in collaboration.\n\t// We need to make a decision how we will resolve such conflict and this is less harmful way.\n\tif ( !a.targetPosition.isEqual( b.insertionPosition ) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter' ) {\n\t\tnewTargetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\t}\n\n\t// Case 1:\n\t//\n\t// Last element in the moved range got split.\n\t//\n\t// In this case the default range transformation will not work correctly as the element created by\n\t// split operation would be outside the range. The range to move needs to be fixed manually.\n\t//\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\n\tif ( moveRange.end.isEqual( b.insertionPosition ) ) {\n\t\t// Do it only if this is a \"natural\" split, not a one that comes from undo.\n\t\t// If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\n\t\tif ( !b.graveyardPosition ) {\n\t\t\ta.howMany++;\n\t\t}\n\n\t\ta.targetPosition = newTargetPosition;\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 2:\n\t//\n\t// Split happened between the moved nodes. In this case two ranges to move need to be generated.\n\t//\n\t// Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\n\t// <p>F[oz|ba]r</p><p>Xyz</p>\n\t//\n\t// After split:\n\t// <p>F[oz</p><p>ba]r</p><p>Xyz</p>\n\t//\n\t// Correct ranges:\n\t// <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\n\t//\n\t// After move:\n\t// <p>F</p><p>r</p><p>Xyzozba</p>\n\t//\n\tif ( moveRange.start.hasSameParentAs( b.splitPosition ) && moveRange.containsPosition( b.splitPosition ) ) {\n\t\tlet rightRange = new Range( b.splitPosition, moveRange.end );\n\t\trightRange = rightRange._getTransformedBySplitOperation( b );\n\n\t\tconst ranges = [\n\t\t\tnew Range( moveRange.start, b.splitPosition ),\n\t\t\trightRange\n\t\t];\n\n\t\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n\t}\n\n\t// Case 3:\n\t//\n\t// Move operation targets at the split position. We need to decide if the nodes should be inserted\n\t// at the end of the split element or at the beginning of the new element.\n\t//\n\tif ( a.targetPosition.isEqual( b.splitPosition ) && context.abRelation == 'insertAtSource' ) {\n\t\tnewTargetPosition = b.moveTargetPosition;\n\t}\n\n\t// Case 4:\n\t//\n\t// Move operation targets just after the split element. We need to decide if the nodes should be inserted\n\t// between two parts of split element, or after the new element.\n\t//\n\t// Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\n\t// <p>Foo|bar</p>^<p>baz</p>\n\t// <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\n\t//\n\t// If there is no contextual information between operations (for example, they come from collaborative\n\t// editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\n\t// However, if the split is from undo, in the past, the moved content might be targeting between the\n\t// split parts, meaning that was exactly user's intention:\n\t//\n\t// <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\n\t// <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\n\t// <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\n\t//\n\t// In this case it is pretty clear that the intention was to put new paragraph between those nodes,\n\t// so we need to transform accordingly. We can detect this scenario thanks to relations.\n\t//\n\tif ( a.targetPosition.isEqual( b.insertionPosition ) && context.abRelation == 'insertBetween' ) {\n\t\tnewTargetPosition = a.targetPosition;\n\t}\n\n\t// The default case.\n\t//\n\tconst transformed = moveRange._getTransformedBySplitOperation( b );\n\tconst ranges = [ transformed ];\n\n\t// Case 5:\n\t//\n\t// Moved range contains graveyard element used by split operation. Add extra move operation to the result.\n\t//\n\tif ( b.graveyardPosition ) {\n\t\tconst movesGraveyardElement = moveRange.start.isEqual( b.graveyardPosition ) || moveRange.containsPosition( b.graveyardPosition );\n\n\t\tif ( a.howMany > 1 && movesGraveyardElement && !context.aWasUndone ) {\n\t\t\tranges.push( Range._createFromPositionAndShift( b.insertionPosition, 1 ) );\n\t\t}\n\t}\n\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n} );\n\nsetTransformation( MoveOperation, MergeOperation, ( a, b, context ) => {\n\tconst movedRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\n\tif ( b.deletionPosition.hasSameParentAs( a.sourcePosition ) && movedRange.containsPosition( b.sourcePosition ) ) {\n\t\tif ( a.type == 'remove' && !context.forceWeakRemove ) {\n\t\t\t// Case 1:\n\t\t\t//\n\t\t\t// The element to remove got merged.\n\t\t\t//\n\t\t\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\n\t\t\t// from technical point of view. However, if the element was removed, the intention of the user\n\t\t\t// deleting it was to have it all deleted. From user experience point of view, moving back the\n\t\t\t// removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\n\t\t\t//\n\t\t\tif ( !context.aWasUndone ) {\n\t\t\t\tconst results = [];\n\n\t\t\t\tlet gyMoveSource = b.graveyardPosition.clone();\n\t\t\t\tlet splitNodesMoveSource = b.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\t\tif ( a.howMany > 1 ) {\n\t\t\t\t\tresults.push( new MoveOperation( a.sourcePosition, a.howMany - 1, a.targetPosition, 0 ) );\n\n\t\t\t\t\tgyMoveSource = gyMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\n\t\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\n\t\t\t\t}\n\n\t\t\t\tconst gyMoveTarget = b.deletionPosition._getCombined( a.sourcePosition, a.targetPosition );\n\t\t\t\tconst gyMove = new MoveOperation( gyMoveSource, 1, gyMoveTarget, 0 );\n\n\t\t\t\tconst splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();\n\t\t\t\tsplitNodesMoveTargetPath.push( 0 );\n\n\t\t\t\tconst splitNodesMoveTarget = new Position( gyMove.targetPosition.root, splitNodesMoveTargetPath );\n\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( gyMoveSource, gyMoveTarget, 1 );\n\t\t\t\tconst splitNodesMove = new MoveOperation( splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0 );\n\n\t\t\t\tresults.push( gyMove );\n\t\t\t\tresults.push( splitNodesMove );\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t} else {\n\t\t\t// Case 2:\n\t\t\t//\n\t\t\t// The element to move got merged and it was the only element to move.\n\t\t\t// In this case just don't do anything, leave the node in the graveyard. Without special case\n\t\t\t// it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\n\t\t\t//\n\t\t\tif ( a.howMany == 1 ) {\n\t\t\t\tif ( !context.bWasUndone ) {\n\t\t\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t\t\t} else {\n\t\t\t\t\ta.sourcePosition = b.graveyardPosition.clone();\n\t\t\t\t\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\t\t\treturn [ a ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst transformed = moveRange._getTransformedByMergeOperation( b );\n\n\ta.sourcePosition = transformed.start;\n\ta.howMany = transformed.end.offset - transformed.start.offset;\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( RenameOperation, InsertOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, MergeOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// Element to rename got merged, so it was moved to `b.graveyardPosition`.\n\t//\n\tif ( a.position.isEqual( b.deletionPosition ) ) {\n\t\ta.position = b.graveyardPosition.clone();\n\t\ta.position.stickiness = 'toNext';\n\n\t\treturn [ a ];\n\t}\n\n\ta.position = a.position._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, MoveOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByMoveOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, RenameOperation, ( a, b, context ) => {\n\tif ( a.position.isEqual( b.position ) ) {\n\t\tif ( context.aIsStrong ) {\n\t\t\ta.oldName = b.newName;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, SplitOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// The element to rename has been split. In this case, the new element should be also renamed.\n\t//\n\t// User decides to change the paragraph to a list item:\n\t// <paragraph>Foobar</paragraph>\n\t//\n\t// However, in meantime, split happens:\n\t// <paragraph>Foo</paragraph><paragraph>bar</paragraph>\n\t//\n\t// As a result, rename both elements:\n\t// <listItem>Foo</listItem><listItem>bar</listItem>\n\t//\n\tconst renamePath = a.position.path;\n\tconst splitPath = b.splitPosition.getParentPath();\n\n\tif ( compareArrays( renamePath, splitPath ) == 'same' && !b.graveyardPosition ) {\n\t\tconst extraRename = new RenameOperation( a.position.getShiftedBy( 1 ), a.oldName, a.newName, 0 );\n\n\t\treturn [ a, extraRename ];\n\t}\n\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( RootAttributeOperation, RootAttributeOperation, ( a, b, context ) => {\n\tif ( a.root === b.root && a.key === b.key ) {\n\t\tif ( !context.aIsStrong || a.newValue === b.newValue ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t} else {\n\t\t\ta.oldValue = b.newValue;\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( SplitOperation, InsertOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.position ) && a.splitPosition.offset < b.position.offset ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedByInsertOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, MergeOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Split element got merged. If two different elements were merged, clients will have different content.\n\t//\n\t// Example. Merge at `{}`, split at `[]`:\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n\t//\n\t// On merge side it will look like this:\n\t// <heading>FooB[]ar</heading>\n\t// <heading>FooB</heading><heading>ar</heading>\n\t//\n\t// On split side it will look like this:\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n\t// <heading>FooB</heading><paragraph>ar</paragraph>\n\t//\n\t// Clearly, the second element is different for both clients.\n\t//\n\t// We could use the removed merge element from graveyard as a split element but then clients would have a different\n\t// model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\n\t//\n\t// To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\n\t// in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\n\t// used for splitting. Example below.\n\t//\n\t// Original state:\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n\t//\n\t// Merge side client:\n\t//\n\t// After merge:\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\n\t//\n\t// Extra split:\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\n\t//\n\t// Use the \"cloned\" element from graveyard:\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n\t//\n\t// Split side client:\n\t//\n\t// After split:\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n\t//\n\t// After merge:\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n\t//\n\t// This special case scenario only applies if the original split operation clones the split element.\n\t// If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\n\t// knows exactly which element it should use. So there would be no original problem with different contents.\n\t//\n\t// Additionally, the special case applies only if the merge wasn't already undone.\n\t//\n\tif ( !a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs( b.sourcePosition ) ) {\n\t\tconst splitPath = b.graveyardPosition.path.slice();\n\t\tsplitPath.push( 0 );\n\n\t\tconst splitPosition = new Position( b.graveyardPosition.root, splitPath );\n\t\tconst insertionPosition = SplitOperation.getInsertionPosition( new Position( b.graveyardPosition.root, splitPath ) );\n\n\t\tconst additionalSplit = new SplitOperation( splitPosition, 0, null, 0 );\n\t\tadditionalSplit.insertionPosition = insertionPosition;\n\n\t\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\t\ta.graveyardPosition = additionalSplit.insertionPosition.clone();\n\t\ta.graveyardPosition.stickiness = 'toNext';\n\n\t\treturn [ additionalSplit, a ];\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.deletionPosition ) && !a.splitPosition.isAfter( b.deletionPosition ) ) {\n\t\ta.howMany--;\n\t}\n\n\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\tif ( a.graveyardPosition ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, MoveOperation, ( a, b, context ) => {\n\tconst rangeToMove = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\tif ( a.graveyardPosition ) {\n\t\t// Case 1:\n\t\t//\n\t\t// Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\n\t\t// is already moved to the correct position, we need to only move the nodes after the split position.\n\t\t// This will be done by `MoveOperation` instead of `SplitOperation`.\n\t\t//\n\t\tconst gyElementMoved = rangeToMove.start.isEqual( a.graveyardPosition ) || rangeToMove.containsPosition( a.graveyardPosition );\n\n\t\tif ( !context.bWasUndone && gyElementMoved ) {\n\t\t\tconst sourcePosition = a.splitPosition._getTransformedByMoveOperation( b );\n\n\t\t\tconst newParentPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t\t\tconst newTargetPath = newParentPosition.path.slice();\n\t\t\tnewTargetPath.push( 0 );\n\n\t\t\tconst newTargetPosition = new Position( newParentPosition.root, newTargetPath );\n\t\t\tconst moveOp = new MoveOperation( sourcePosition, a.howMany, newTargetPosition, 0 );\n\n\t\t\treturn [ moveOp ];\n\t\t}\n\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t}\n\n\t// Case 2:\n\t//\n\t// If the split position is inside the moved range, we need to shift the split position to a proper place.\n\t// The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\n\t//\n\t// Characters `bc` should be moved to the second paragraph while split position is between them:\n\t// <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\n\t//\n\t// After move, new split position is incorrect:\n\t// <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\n\t//\n\t// Correct split position:\n\t// <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\n\t//\n\t// After split:\n\t// <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && rangeToMove.containsPosition( a.splitPosition ) ) {\n\t\tconst howManyRemoved = b.howMany - ( a.splitPosition.offset - b.sourcePosition.offset );\n\t\ta.howMany -= howManyRemoved;\n\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\n\t\t\ta.howMany += b.howMany;\n\t\t}\n\n\t\ta.splitPosition = b.sourcePosition.clone();\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 3:\n\t//\n\t// Split is at a position where nodes were moved.\n\t//\n\t// This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\n\t// \"split operation point of view\".\n\t//\n\tconst splitAtTarget = a.splitPosition.isEqual( b.targetPosition );\n\n\tif ( splitAtTarget && ( context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore' ) ) {\n\t\ta.howMany += b.howMany;\n\t\ta.splitPosition = a.splitPosition._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\t\treturn [ a ];\n\t}\n\n\t// The default case.\n\t// Don't change `howMany` if move operation does not really move anything.\n\t//\n\tif ( !b.sourcePosition.isEqual( b.targetPosition ) ) {\n\t\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && a.splitPosition.offset <= b.sourcePosition.offset ) {\n\t\t\ta.howMany -= b.howMany;\n\t\t}\n\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\n\t\t\ta.howMany += b.howMany;\n\t\t}\n\t}\n\n\t// Change position stickiness to force a correct transformation.\n\ta.splitPosition.stickiness = 'toNone';\n\ta.splitPosition = a.splitPosition._getTransformedByMoveOperation( b );\n\ta.splitPosition.stickiness = 'toNext';\n\n\tif ( a.graveyardPosition ) {\n\t\ta.insertionPosition = a.insertionPosition._getTransformedByMoveOperation( b );\n\t} else {\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, SplitOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Split at the same position.\n\t//\n\t// If there already was a split at the same position as in `a` operation, it means that the intention\n\t// conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\n\t//\n\t// However, there is a difference if these are new splits or splits created by undo. These have different\n\t// intentions. Also splits moving back different elements from graveyard have different intentions. They\n\t// are just different operations.\n\t//\n\t// So we cancel split operation only if it was really identical.\n\t//\n\t// Also, there is additional case, where split operations aren't identical and should not be cancelled, however the\n\t// default transformation is incorrect too.\n\t//\n\tif ( a.splitPosition.isEqual( b.splitPosition ) ) {\n\t\tif ( !a.graveyardPosition && !b.graveyardPosition ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\t// Use context to know that the `a.splitPosition` should stay where it is.\n\t\t// This happens during undo when first a merge operation moved nodes to `a.splitPosition` and now `b` operation undoes that merge.\n\t\tif ( context.abRelation == 'splitBefore' ) {\n\t\t\t// Since split is at the same position, there are no nodes left to split.\n\t\t\ta.howMany = 0;\n\n\t\t\t// Note: there was `if ( a.graveyardPosition )` here but it was uncovered in tests and I couldn't find any scenarios for now.\n\t\t\t// That would have to be a `SplitOperation` that didn't come from undo but is transformed by operations that were undone.\n\t\t\t// It could happen if `context` is enabled in collaboration.\n\t\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Same node is using to split different elements. This happens in undo when previously same element was merged to\n\t// two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\n\t//\n\t// In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\n\t// split operations. This might not always be true but in the real cases that were experienced it was. After all,\n\t// if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\n\t// should be same for both of those splits.\n\t//\n\t// Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\n\t//\n\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\n\t\tconst aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\n\t\tconst bInGraveyard = b.splitPosition.root.rootName == '$graveyard';\n\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\t\tconst aIsWeak = aInGraveyard && !bInGraveyard;\n\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\t\tconst bIsWeak = bInGraveyard && !aInGraveyard;\n\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\n\n\t\tif ( forceMove ) {\n\t\t\tconst result = [];\n\n\t\t\t// First we need to move any nodes split by `b` back to where they were.\n\t\t\t// Do it only if `b` actually moved something.\n\t\t\tif ( b.howMany ) {\n\t\t\t\tresult.push( new MoveOperation( b.moveTargetPosition, b.howMany, b.splitPosition, 0 ) );\n\t\t\t}\n\n\t\t\t// Then we need to move nodes from `a` split position to their new element.\n\t\t\t// Do it only if `a` actually should move something.\n\t\t\tif ( a.howMany ) {\n\t\t\t\tresult.push( new MoveOperation( a.splitPosition, a.howMany, a.moveTargetPosition, 0 ) );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\tif ( a.graveyardPosition ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\n\t}\n\n\t// Case 3:\n\t//\n\t// Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\n\t// As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\n\t//\n\tif ( a.splitPosition.isEqual( b.insertionPosition ) && context.abRelation == 'splitBefore' ) {\n\t\ta.howMany++;\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 4:\n\t//\n\t// This is a mirror to the case 2. above.\n\t//\n\tif ( b.splitPosition.isEqual( a.insertionPosition ) && context.baRelation == 'splitBefore' ) {\n\t\tconst newPositionPath = b.insertionPosition.path.slice();\n\t\tnewPositionPath.push( 0 );\n\n\t\tconst newPosition = new Position( b.insertionPosition.root, newPositionPath );\n\t\tconst moveOp = new MoveOperation( a.insertionPosition, 1, newPosition, 0 );\n\n\t\treturn [ a, moveOp ];\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.splitPosition ) && a.splitPosition.offset < b.splitPosition.offset ) {\n\t\ta.howMany -= b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedBySplitOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\treturn [ a ];\n} );\n\n// Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\n// @returns {Boolean}\nfunction _moveTargetIntoMovedRange( a, b ) {\n\treturn a.targetPosition._getTransformedByDeletion( b.sourcePosition, b.howMany ) === null;\n}\n\n// Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\n// move operations and returns them.\n//\n// Ranges and target position will be transformed on-the-fly when generating operations.\n//\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n//\n// Given `targetPosition` is the target position of the first range from `ranges`.\n//\n// @private\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @param {module:engine/model/position~Position} targetPosition\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\nfunction _makeMoveOperationsFromRanges( ranges, targetPosition ) {\n\t// At this moment we have some ranges and a target position, to which those ranges should be moved.\n\t// Order in `ranges` array is the go-to order of after transformation.\n\t//\n\t// We are almost done. We have `ranges` and `targetPosition` to make operations from.\n\t// Unfortunately, those operations may affect each other. Precisely, first operation after move\n\t// may affect source range and target position of second and third operation. Same with second\n\t// operation affecting third.\n\t//\n\t// We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n\tconst operations = [];\n\n\t// Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t// Create new operation out of a range and target position.\n\t\tconst range = ranges[ i ];\n\t\tconst op = new MoveOperation(\n\t\t\trange.start,\n\t\t\trange.end.offset - range.start.offset,\n\t\t\ttargetPosition,\n\t\t\t0\n\t\t);\n\n\t\toperations.push( op );\n\n\t\t// Transform other ranges by the generated operation.\n\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t// All ranges in `ranges` array should be:\n\t\t\t//\n\t\t\t// * non-intersecting (these are part of original operation source range), and\n\t\t\t// * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n\t\t\t//\n\t\t\t// This means that the transformation will be \"clean\" and always return one result.\n\t\t\tranges[ j ] = ranges[ j ]._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany )[ 0 ];\n\t\t}\n\n\t\ttargetPosition = targetPosition._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany );\n\t}\n\n\treturn operations;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/basecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\n\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\nexport default class BaseCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Stack of items stored by the command. These are pairs of:\n\t\t *\n\t\t * * {@link module:engine/model/batch~Batch batch} saved by the command,\n\t\t * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array} #_stack\n\t\t */\n\t\tthis._stack = [];\n\n\t\t/**\n\t\t * Stores all batches that were created by this command.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n\t\t */\n\t\tthis._createdBatches = new WeakSet();\n\n\t\t// Refresh state, so the command is inactive right after initialization.\n\t\tthis.refresh();\n\n\t\tthis.listenTo( editor.data, 'set', () => this.clearStack() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._stack.length > 0;\n\t}\n\n\t/**\n\t * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n\t * created by the editor which this command is registered to.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch The batch to add.\n\t */\n\taddBatch( batch ) {\n\t\tconst docSelection = this.editor.model.document.selection;\n\n\t\tconst selection = {\n\t\t\tranges: docSelection.hasOwnRange ? Array.from( docSelection.getRanges() ) : [],\n\t\t\tisBackward: docSelection.isBackward\n\t\t};\n\n\t\tthis._stack.push( { batch, selection } );\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * Removes all items from the stack.\n\t */\n\tclearStack() {\n\t\tthis._stack = [];\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n\t *\n\t * @protected\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n\t * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n\t * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\n\t * since selection has been stored.\n\t */\n\t_restoreSelection( ranges, isBackward, operations ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\t// This will keep the transformed selection ranges.\n\t\tconst selectionRanges = [];\n\n\t\t// Transform all ranges from the restored selection.\n\t\tconst transformedRangeGroups = ranges.map( range => range.getTransformedByOperations( operations ) );\n\t\tconst allRanges = transformedRangeGroups.flat();\n\n\t\tfor ( const rangeGroup of transformedRangeGroups ) {\n\t\t\t// While transforming there could appear ranges that are contained by other ranges, we shall ignore them.\n\t\t\tconst transformed = rangeGroup.filter( range => !isRangeContainedByAnyOtherRange( range, allRanges ) );\n\n\t\t\t// After the range got transformed, we have an array of ranges. Some of those\n\t\t\t// ranges may be \"touching\" -- they can be next to each other and could be merged.\n\t\t\tnormalizeRanges( transformed );\n\n\t\t\t// For each `range` from `ranges`, we take only one transformed range.\n\t\t\t// This is because we want to prevent situation where single-range selection\n\t\t\t// got transformed to multi-range selection. We will take the first range that\n\t\t\t// is not in the graveyard.\n\t\t\tconst newRange = transformed.find(\n\t\t\t\trange => range.root != document.graveyard\n\t\t\t);\n\n\t\t\t// `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\t\t\tif ( newRange ) {\n\t\t\t\tselectionRanges.push( newRange );\n\t\t\t}\n\t\t}\n\n\t\t// @if CK_DEBUG_ENGINE // console.log( `Restored selection by undo: ${ selectionRanges.join( ', ' ) }` );\n\n\t\t// `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\t\tif ( selectionRanges.length ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( selectionRanges, { backward: isBackward } );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n\t * This is a helper method for {@link #execute}.\n\t *\n\t * @protected\n\t * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n\t * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\n\t */\n\t_undo( batchToUndo, undoingBatch ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\t// All changes done by the command execution will be saved as one batch.\n\t\tthis._createdBatches.add( undoingBatch );\n\n\t\tconst operationsToUndo = batchToUndo.operations.slice().filter( operation => operation.isDocumentOperation );\n\t\toperationsToUndo.reverse();\n\n\t\t// We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\n\t\t// we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\t\tfor ( const operationToUndo of operationsToUndo ) {\n\t\t\tconst nextBaseVersion = operationToUndo.baseVersion + 1;\n\t\t\tconst historyOperations = Array.from( document.history.getOperations( nextBaseVersion ) );\n\n\t\t\tconst transformedSets = transformSets(\n\t\t\t\t[ operationToUndo.getReversed() ],\n\t\t\t\thistoryOperations,\n\t\t\t\t{\n\t\t\t\t\tuseRelations: true,\n\t\t\t\t\tdocument: this.editor.model.document,\n\t\t\t\t\tpadWithNoOps: false,\n\t\t\t\t\tforceWeakRemove: true\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst reversedOperations = transformedSets.operationsA;\n\n\t\t\t// After reversed operation has been transformed by all history operations, apply it.\n\t\t\tfor ( const operation of reversedOperations ) {\n\t\t\t\t// Before applying, add the operation to the `undoingBatch`.\n\t\t\t\tundoingBatch.addOperation( operation );\n\t\t\t\tmodel.applyOperation( operation );\n\n\t\t\t\tdocument.history.setOperationAsUndone( operationToUndo, operation );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Normalizes list of ranges by joining intersecting or \"touching\" ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges\n//\nfunction normalizeRanges( ranges ) {\n\tranges.sort( ( a, b ) => a.start.isBefore( b.start ) ? -1 : 1 );\n\n\tfor ( let i = 1; i < ranges.length; i++ ) {\n\t\tconst previousRange = ranges[ i - 1 ];\n\t\tconst joinedRange = previousRange.getJoined( ranges[ i ], true );\n\n\t\tif ( joinedRange ) {\n\t\t\t// Replace the ranges on the list with the new joined range.\n\t\t\ti--;\n\t\t\tranges.splice( i, 2, joinedRange );\n\t\t}\n\t}\n}\n\nfunction isRangeContainedByAnyOtherRange( range, ranges ) {\n\treturn ranges.some( otherRange => otherRange !== range && otherRange.containsRange( range, true ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class UndoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n\t * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t * @fires revert\n\t * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n\t */\n\texecute( batch = null ) {\n\t\t// If batch is not given, set `batchIndex` to the last index in command stack.\n\t\tconst batchIndex = batch ? this._stack.findIndex( a => a.batch == batch ) : this._stack.length - 1;\n\n\t\tconst item = this._stack.splice( batchIndex, 1 )[ 0 ];\n\t\tconst undoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes has to be done in one `enqueueChange` callback so other listeners will not\n\t\t// step between consecutive operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( undoingBatch, () => {\n\t\t\tthis._undo( item.batch, undoingBatch );\n\n\t\t\tconst operations = this.editor.model.document.history.getOperations( item.batch.baseVersion );\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\n\t\t\tthis.fire( 'revert', item.batch, undoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/redocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class RedoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n\t * the command's stack, applies the reverted and transformed version on the\n\t * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst item = this._stack.pop();\n\t\tconst redoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n\t\t// operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( redoingBatch, () => {\n\t\t\tconst lastOperation = item.batch.operations[ item.batch.operations.length - 1 ];\n\t\t\tconst nextBaseVersion = lastOperation.baseVersion + 1;\n\t\t\tconst operations = this.editor.model.document.history.getOperations( nextBaseVersion );\n\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\t\t\tthis._undo( item.batch, redoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UndoEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n\t\t */\n\n\t\t/**\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n\t\t */\n\n\t\t/**\n\t\t * Keeps track of which batches were registered in undo.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\n\t\t */\n\t\tthis._batchRegistry = new WeakSet();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Create commands.\n\t\tthis._undoCommand = new UndoCommand( editor );\n\t\tthis._redoCommand = new RedoCommand( editor );\n\n\t\t// Register command to the editor.\n\t\teditor.commands.add( 'undo', this._undoCommand );\n\t\teditor.commands.add( 'redo', this._redoCommand );\n\n\t\tthis.listenTo( editor.model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\t// Do not register batch if the operation is not a document operation.\n\t\t\t// This prevents from creating empty undo steps, where all operations where non-document operations.\n\t\t\t// Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n\t\t\t// Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n\t\t\t// Such operations should not be reversed.\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst batch = operation.batch;\n\n\t\t\tconst isRedoBatch = this._redoCommand._createdBatches.has( batch );\n\t\t\tconst isUndoBatch = this._undoCommand._createdBatches.has( batch );\n\t\t\tconst isRegisteredBatch = this._batchRegistry.has( batch );\n\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\tif ( isRegisteredBatch || ( batch.type == 'transparent' && !isRedoBatch && !isUndoBatch ) ) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ( isRedoBatch ) {\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t} else if ( !isUndoBatch ) {\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t\tthis._redoCommand.clearStack();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\tthis._batchRegistry.add( batch );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\n\t\t} );\n\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.042 9.367l2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M14.958 9.367l-2.189 1.837a.75.75 0 0 0 .965 1.149l3.788-3.18a.747.747 0 0 0 .21-.284.75.75 0 0 0-.17-.945L13.77 4.762a.75.75 0 1 0-.964 1.15l2.331 1.955H6.22A.75.75 0 0 0 6 7.9a4 4 0 1 0 1.477 7.718l-.344-1.489A2.5 2.5 0 1 1 6.039 9.4l-.008-.032h8.927z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst t = editor.t;\n\n\t\tconst localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n\t\tconst localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n\n\t\tthis._addButton( 'undo', t( 'Undo' ), 'CTRL+Z', localizedUndoIcon );\n\t\tthis._addButton( 'redo', t( 'Redo' ), 'CTRL+Y', localizedRedoIcon );\n\t}\n\n\t/**\n\t * Creates a button for the specified command.\n\t *\n\t * @private\n\t * @param {String} name Command name.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Command keystroke.\n\t * @param {String} Icon Source of the icon.\n\t */\n\t_addButton( name, label, keystroke, Icon ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst command = editor.commands.get( name );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel,\n\t\t\t\ticon: Icon,\n\t\t\t\tkeystroke,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( name );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undo\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Undo extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ UndoEditing, UndoUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Undo';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module essentials/essentials\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport SelectAll from '@ckeditor/ckeditor5-select-all/src/selectall';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n\n/**\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:select-all/selectall~SelectAll},\n * * {@link module:enter/shiftenter~ShiftEnter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Essentials extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard, Enter, SelectAll, ShiftEnter, Typing, Undo ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Essentials';\n\t}\n}\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","import baseUnset from './_baseUnset.js';\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nexport default unset;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/stylesmap\n */\n\nimport { get, isObject, merge, set, unset } from 'lodash-es';\n\n/**\n * Styles map. Allows handling (adding, removing, retrieving) a set of style rules (usually, of an element).\n *\n * The styles map is capable of normalizing style names so e.g. the following operations are possible:\n */\nexport default class StylesMap {\n\t/**\n\t * Creates Styles instance.\n\t *\n\t * @param {module:engine/view/stylesmap~StylesProcessor} styleProcessor\n\t */\n\tconstructor( styleProcessor ) {\n\t\t/**\n\t\t * Keeps an internal representation of styles map. Normalized styles are kept as object tree to allow unified modification and\n\t\t * value access model using lodash's get, set, unset, etc methods.\n\t\t *\n\t\t * When no style processor rules are defined the it acts as simple key-value storage.\n\t\t *\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._styles = {};\n\n\t\t/**\n\t\t * An instance of the {@link module:engine/view/stylesmap~StylesProcessor}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis._styleProcessor = styleProcessor;\n\t}\n\n\t/**\n\t * Returns true if style map has no styles set.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget isEmpty() {\n\t\tconst entries = Object.entries( this._styles );\n\t\tconst from = Array.from( entries );\n\n\t\treturn !from.length;\n\t}\n\n\t/**\n\t * Number of styles defined.\n\t *\n\t * @type {Number}\n\t */\n\tget size() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.getStyleNames().length;\n\t}\n\n\t/**\n\t * Set styles map to a new value.\n\t *\n\t *\t\tstyles.setTo( 'border:1px solid blue;margin-top:1px;' );\n\t *\n\t * @param {String} inlineStyle\n\t */\n\tsetTo( inlineStyle ) {\n\t\tthis.clear();\n\n\t\tconst parsedStyles = Array.from( parseInlineStyles( inlineStyle ).entries() );\n\n\t\tfor ( const [ key, value ] of parsedStyles ) {\n\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a given style is set.\n\t *\n\t *\t\tstyles.setTo( 'margin-left:1px;' );\n\t *\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\t\tstyles.has( 'padding' );        // -> false\n\t *\n\t * **Note**: This check supports normalized style names.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:2px;' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> true\n\t *\t\tstyles.has( 'margin-top' );     // -> true\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> false\n\t *\t\tstyles.has( 'margin-top' );     // -> false\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Boolean}\n\t */\n\thas( name ) {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( name, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === name );\n\n\t\t// Only return a value if it is set;\n\t\treturn Array.isArray( propertyDescriptor );\n\t}\n\n\t/**\n\t * Sets a given style.\n\t *\n\t * Can insert one by one:\n\t *\n\t *\t\tstyles.set( 'color', 'blue' );\n\t *\t\tstyles.set( 'margin-right', '1em' );\n\t *\n\t * or many styles at once:\n\t *\n\t *\t\tstyles.set( {\n\t *\t\t\tcolor: 'blue',\n\t *\t\t\t'margin-right': '1em'\n\t *\t\t} );\n\t *\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\n\t * enabled style processor rules} to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin', '2px' );\n\t *\n\t * The above code will set margin to:\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// -> { top: '2px', right: '2px', bottom: '2px', left: '2px' }\n\t *\n\t * Which makes it possible to retrieve a \"sub-value\":\n\t *\n\t *\t\tstyles.get( 'margin-left' );       // -> '2px'\n\t *\n\t * Or modify it:\n\t *\n\t *\t\tstyles.remove( 'margin-left' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );  // -> { top: '1px', bottom: '1px', right: '1px' }\n\t *\t\tstyles.toString();                 // -> 'margin-bottom:1px;margin-right:1px;margin-top:1px;'\n\t *\n\t * This method also allows to set normalized values directly (if a particular styles processor rule was enabled):\n\t *\n\t *\t\tstyles.set( 'border-color', { top: 'blue' } );\n\t *\t\tstyles.set( 'margin', { right: '2em' } );\n\t *\n\t *\t\tstyles.toString();                 // -> 'border-color-top:blue;margin-right:2em;'\n\t *\n\t * @param {String|Object} nameOrObject Style property name or object with multiple properties.\n\t * @param {String|Object} valueOrObject Value to set.\n\t */\n\tset( nameOrObject, valueOrObject ) {\n\t\tif ( isObject( nameOrObject ) ) {\n\t\t\tfor ( const [ key, value ] of Object.entries( nameOrObject ) ) {\n\t\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t\t}\n\t\t} else {\n\t\t\tthis._styleProcessor.toNormalizedForm( nameOrObject, valueOrObject, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given style.\n\t *\n\t *\t\tstyles.setTo( 'background:#f00;margin-right:2px;' );\n\t *\n\t *\t\tstyles.remove( 'background' );\n\t *\n\t *\t\tstyles.toString();   // -> 'margin-right:2px;'\n\t *\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\n\t * enabled style processor rules} to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:1px' );\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @param {String} name Style name.\n\t */\n\tremove( name ) {\n\t\tconst path = toPath( name );\n\n\t\tunset( this._styles, path );\n\t\tdelete this._styles[ name ];\n\n\t\tthis._cleanEmptyObjectsOnPath( path );\n\t}\n\n\t/**\n\t * Returns a normalized style object or a single value.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px 2px 3em;' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// will log:\n\t *\t\t// {\n\t *\t\t//     top: '1px',\n\t *\t\t//     right: '2px',\n\t *\t\t//     bottom: '3em',\n\t *\t\t//     left: '2px'     // normalized value from margin shorthand\n\t *\t\t// }\n\t *\n\t *\t\tstyles.getNormalized( 'margin-left' ); // -> '2px'\n\t *\n\t * **Note**: This method will only return normalized styles if a style processor was defined.\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Object|String|undefined}\n\t */\n\tgetNormalized( name ) {\n\t\treturn this._styleProcessor.getNormalized( name, this._styles );\n\t}\n\n\t/**\n\t * Returns a normalized style string. Styles are sorted by name.\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin:1px;'\n\t *\n\t * **Note**: This method supports normalized styles if defined.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @returns {String}\n\t */\n\ttoString() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this._getStylesEntries()\n\t\t\t.map( arr => arr.join( ':' ) )\n\t\t\t.sort()\n\t\t\t.join( ';' ) + ';';\n\t}\n\n\t/**\n\t * Returns property as a value string or undefined if property is not set.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.set( 'margin-bottom', '3em' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * Note, however, that all sub-values must be set for the longhand property name to return a value:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> undefined\n\t *\n\t * In the above scenario, it is not possible to return a `margin` value, so `undefined` is returned.\n\t * Instead, you should use:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin-top', '1px'\n\t *\t\t// 'margin-right', '1px'\n\t *\t\t// 'margin-left', '1px'\n\t *\n\t * In general, it is recommend to iterate over style names like in the example above. This way, you will always get all\n\t * the currently set style values. So, if all the 4 margin values would be set\n\t * the for-of loop above would yield only `'margin'`, `'1px'`:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin', '1px'\n\t *\n\t * **Note**: To get a normalized version of a longhand property use the {@link #getNormalized `#getNormalized()`} method.\n\t *\n\t * @param {String} propertyName\n\t * @returns {String|undefined}\n\t */\n\tgetAsString( propertyName ) {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._styles[ propertyName ] && !isObject( this._styles[ propertyName ] ) ) {\n\t\t\t// Try return styles set directly - values that are not parsed.\n\t\t\treturn this._styles[ propertyName ];\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( propertyName, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === propertyName );\n\n\t\t// Only return a value if it is set;\n\t\tif ( Array.isArray( propertyDescriptor ) ) {\n\t\t\treturn propertyDescriptor[ 1 ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns style property names as they would appear when using {@link #toString `#toString()`}.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tgetStyleNames() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst entries = this._getStylesEntries();\n\n\t\treturn entries.map( ( [ key ] ) => key );\n\t}\n\n\t/**\n\t * Removes all styles.\n\t */\n\tclear() {\n\t\tthis._styles = {};\n\t}\n\n\t/**\n\t * Returns normalized styles entries for further processing.\n\t *\n\t * @private\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\t_getStylesEntries() {\n\t\tconst parsed = [];\n\n\t\tconst keys = Object.keys( this._styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tparsed.push( ...this._styleProcessor.getReducedForm( key, this._styles ) );\n\t\t}\n\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Removes empty objects upon removing an entry from internal object.\n\t *\n\t * @param {String} path\n\t * @private\n\t */\n\t_cleanEmptyObjectsOnPath( path ) {\n\t\tconst pathParts = path.split( '.' );\n\t\tconst isChildPath = pathParts.length > 1;\n\n\t\tif ( !isChildPath ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parentPath = pathParts.splice( 0, pathParts.length - 1 ).join( '.' );\n\n\t\tconst parentObject = get( this._styles, parentPath );\n\n\t\tif ( !parentObject ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isParentEmpty = !Array.from( Object.keys( parentObject ) ).length;\n\n\t\tif ( isParentEmpty ) {\n\t\t\tthis.remove( parentPath );\n\t\t}\n\t}\n}\n\n/**\n * Style processor is responsible for writing and reading a normalized styles object.\n */\nexport class StylesProcessor {\n\t/**\n\t * Creates StylesProcessor instance.\n\t *\n\t * @private\n\t */\n\tconstructor() {\n\t\tthis._normalizers = new Map();\n\t\tthis._extractors = new Map();\n\t\tthis._reducers = new Map();\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Parse style string value to a normalized object and appends it to styles object.\n\t *\n\t *\t\tconst styles = {};\n\t *\n\t *\t\tstylesProcessor.toNormalizedForm( 'margin', '1px', styles );\n\t *\n\t *\t\t// styles will consist: { margin: { top: '1px', right: '1px', bottom: '1px', left: '1px; } }\n\t *\n\t * **Note**: To define normalizer callbacks use {@link #setNormalizer}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {String} propertyValue Value of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t */\n\ttoNormalizedForm( name, propertyValue, styles ) {\n\t\tif ( isObject( propertyValue ) ) {\n\t\t\tappendStyleValue( styles, toPath( name ), propertyValue );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._normalizers.has( name ) ) {\n\t\t\tconst normalizer = this._normalizers.get( name );\n\n\t\t\tconst { path, value } = normalizer( propertyValue );\n\n\t\t\tappendStyleValue( styles, path, value );\n\t\t} else {\n\t\t\tappendStyleValue( styles, name, propertyValue );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a normalized version of a style property.\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '1px', left: '1px; },\n\t *\t\t\tbackground: { color: '#f00' }\n\t *\t\t};\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'background' );\n\t *\t\t// will return: { color: '#f00' }\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'margin-top' );\n\t *\t\t// will return: '1px'\n\t *\n\t * **Note**: In some cases extracting single value requires defining an extractor callback {@link #setExtractor}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {*}\n\t */\n\tgetNormalized( name, styles ) {\n\t\tif ( !name ) {\n\t\t\treturn merge( {}, styles );\n\t\t}\n\n\t\t// Might be empty string.\n\t\tif ( styles[ name ] !== undefined ) {\n\t\t\treturn styles[ name ];\n\t\t}\n\n\t\tif ( this._extractors.has( name ) ) {\n\t\t\tconst extractor = this._extractors.get( name );\n\n\t\t\tif ( typeof extractor === 'string' ) {\n\t\t\t\treturn get( styles, extractor );\n\t\t\t}\n\n\t\t\tconst value = extractor( name, styles );\n\n\t\t\tif ( value ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\treturn get( styles, toPath( name ) );\n\t}\n\n\t/**\n\t * Returns a reduced form of style property form normalized object.\n\t *\n\t * For default margin reducer, the below code:\n\t *\n\t *\t\tstylesProcessor.getReducedForm( 'margin', {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '2px', left: '1px; }\n\t *\t\t} );\n\t *\n\t * will return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t]\n\t *\n\t * because it might be represented as a shorthand 'margin' value. However if one of margin long hand values is missing it should return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ],\n\t *\t\t\t[ 'margin-bottom', '2px' ]\n\t *\t\t\t// the 'left' value is missing - cannot use 'margin' shorthand.\n\t *\t\t]\n\t *\n\t * **Note**: To define reducer callbacks use {@link #setReducer}.\n\t *\n\t * @param {String} name\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\tgetReducedForm( name, styles ) {\n\t\tconst normalizedValue = this.getNormalized( name, styles );\n\n\t\t// Might be empty string.\n\t\tif ( normalizedValue === undefined ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( this._reducers.has( name ) ) {\n\t\t\tconst reducer = this._reducers.get( name );\n\n\t\t\treturn reducer( normalizedValue );\n\t\t}\n\n\t\treturn [ [ name, normalizedValue ] ];\n\t}\n\n\t/**\n\t * Returns related style names.\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin' );\n\t *\t\t// will return: [ 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ];\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin-top' );\n\t *\t\t// will return: [ 'margin' ];\n\t *\n\t * **Note**: To define new style relations load an existing style processor or use\n\t * {@link module:engine/view/stylesmap~StylesProcessor#setStyleRelation `StylesProcessor.setStyleRelation()`}.\n\t *\n\t * @param {String} name\n\t * @returns {Array.<String>}\n\t */\n\tgetRelatedStyles( name ) {\n\t\treturn this._consumables.get( name ) || [];\n\t}\n\n\t/**\n\t * Adds a normalizer method for a style property.\n\t *\n\t * A normalizer returns describing how the value should be normalized.\n\t *\n\t * For instance 'margin' style is a shorthand for four margin values:\n\t *\n\t * - 'margin-top'\n\t * - 'margin-right'\n\t * - 'margin-bottom'\n\t * - 'margin-left'\n\t *\n\t * and can be written in various ways if some values are equal to others. For instance `'margin: 1px 2em;'` is a shorthand for\n\t * `'margin-top: 1px;margin-right: 2em;margin-bottom: 1px;margin-left: 2em'`.\n\t *\n\t * A normalizer should parse various margin notations as a single object:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Thus a normalizer for 'margin' style should return an object defining style path and value to store:\n\t *\n\t *\t\tconst returnValue = {\n\t *\t\t\tpath: 'margin',\n\t *\t\t\tvalue: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Additionally to fully support all margin notations there should be also defined 4 normalizers for longhand margin notations. Below\n\t * is an example for 'margin-top' style property normalizer:\n\t *\n\t *\t\tstylesProcessor.setNormalizer( 'margin-top', valueString => {\n\t *\t\t\treturn {\n\t *\t\t\t\tpath: 'margin.top',\n\t *\t\t\t\tvalue: valueString\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tsetNormalizer( name, callback ) {\n\t\tthis._normalizers.set( name, callback );\n\t}\n\n\t/**\n\t * Adds a extractor callback for a style property.\n\t *\n\t * Most normalized style values are stored as one level objects. It is assumed that `'margin-top'` style will be stored as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: 'value'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * However, some styles can have conflicting notations and thus it might be harder to extract a style value from shorthand. For instance\n\t * the 'border-top-style' can be defined using `'border-top:solid'`, `'border-style:solid none none none'` or by `'border:solid'`\n\t * shorthands. The default border styles processors stores styles as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tborder: {\n\t *\t\t\t\tstyle: {\n\t *\t\t\t\t\ttop: 'solid'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * as it is better to modify border style independently from other values. On the other part the output of the border might be\n\t * desired as `border-top`, `border-left`, etc notation.\n\t *\n\t * In the above example a reducer should return a side border value that combines style, color and width:\n\t *\n\t *\t\tstyleProcessor.setExtractor( 'border-top', styles => {\n\t *\t\t\treturn {\n\t *\t\t\t\tcolor: styles.border.color.top,\n\t *\t\t\t\tstyle: styles.border.style.top,\n\t *\t\t\t\twidth: styles.border.width.top\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function|String} callbackOrPath Callback that return a requested value or path string for single values.\n\t */\n\tsetExtractor( name, callbackOrPath ) {\n\t\tthis._extractors.set( name, callbackOrPath );\n\t}\n\n\t/**\n\t * Adds a reducer callback for a style property.\n\t *\n\t * Reducer returns a minimal notation for given style name. For longhand properties it is not required to write a reducer as\n\t * by default the direct value from style path is taken.\n\t *\n\t * For shorthand styles a reducer should return minimal style notation either by returning single name-value tuple or multiple tuples\n\t * if a shorthand cannot be used. For instance for a margin shorthand a reducer might return:\n\t *\n\t *\t\tconst marginShortHandTuple = [\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t];\n\t *\n\t * or a longhand tuples for defined values:\n\t *\n\t *\t\t// Considering margin.bottom and margin.left are undefined.\n\t *\t\tconst marginLonghandsTuples = [\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ]\n\t *\t\t];\n\t *\n\t * A reducer obtains a normalized style value:\n\t *\n\t *\t\t// Simplified reducer that always outputs 4 values which are always present:\n\t *\t\tstylesProcessor.setReducer( 'margin', margin => {\n\t *\t\t\treturn [\n\t *\t\t\t\t[ 'margin', `${ margin.top } ${ margin.right } ${ margin.bottom } ${ margin.left }` ]\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tsetReducer( name, callback ) {\n\t\tthis._reducers.set( name, callback );\n\t}\n\n\t/**\n\t * Defines a style shorthand relation to other style notations.\n\t *\n\t *\t\tstylesProcessor.setStyleRelation( 'margin', [\n\t *\t\t\t'margin-top',\n\t *\t\t\t'margin-right',\n\t *\t\t\t'margin-bottom',\n\t *\t\t\t'margin-left'\n\t *\t\t] );\n\t *\n\t * This enables expanding of style names for shorthands. For instance, if defined,\n\t * {@link module:engine/conversion/viewconsumable~ViewConsumable view consumable} items are automatically created\n\t * for long-hand margin style notation alongside the `'margin'` item.\n\t *\n\t * This means that when an element being converted has a style `margin`, a converter for `margin-left` will work just\n\t * fine since the view consumable will contain a consumable `margin-left` item (thanks to the relation) and\n\t * `element.getStyle( 'margin-left' )` will work as well assuming that the style processor was correctly configured.\n\t * However, once `margin-left` is consumed, `margin` will not be consumable anymore.\n\t *\n\t * @param {String} shorthandName\n\t * @param {Array.<String>} styleNames\n\t */\n\tsetStyleRelation( shorthandName, styleNames ) {\n\t\tthis._mapStyleNames( shorthandName, styleNames );\n\n\t\tfor ( const alsoName of styleNames ) {\n\t\t\tthis._mapStyleNames( alsoName, [ shorthandName ] );\n\t\t}\n\t}\n\n\t/**\n\t * Set two-way binding of style names.\n\t *\n\t * @param {String} name\n\t * @param {Array.<String>} styleNames\n\t * @private\n\t */\n\t_mapStyleNames( name, styleNames ) {\n\t\tif ( !this._consumables.has( name ) ) {\n\t\t\tthis._consumables.set( name, [] );\n\t\t}\n\n\t\tthis._consumables.get( name ).push( ...styleNames );\n\t}\n}\n\n// Parses inline styles and puts property - value pairs into styles map.\n//\n// @param {String} stylesString Styles to parse.\n// @returns {Map.<String, String>} stylesMap Map of parsed properties and values.\nfunction parseInlineStyles( stylesString ) {\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\n\tlet quoteType = null;\n\tlet propertyNameStart = 0;\n\tlet propertyValueStart = 0;\n\tlet propertyName = null;\n\n\tconst stylesMap = new Map();\n\n\t// Do not set anything if input string is empty.\n\tif ( stylesString === '' ) {\n\t\treturn stylesMap;\n\t}\n\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\tif ( stylesString.charAt( stylesString.length - 1 ) != ';' ) {\n\t\tstylesString = stylesString + ';';\n\t}\n\n\t// Seek the whole string for \"special characters\".\n\tfor ( let i = 0; i < stylesString.length; i++ ) {\n\t\tconst char = stylesString.charAt( i );\n\n\t\tif ( quoteType === null ) {\n\t\t\t// No quote found yet or last found quote was a closing quote.\n\t\t\tswitch ( char ) {\n\t\t\t\tcase ':':\n\t\t\t\t\t// Most of time colon means that property name just ended.\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\n\t\t\t\t\tif ( !propertyName ) {\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\n\t\t\t\t\t\t// Save property name.\n\t\t\t\t\t\tpropertyName = stylesString.substr( propertyNameStart, i - propertyNameStart );\n\t\t\t\t\t\t// Save this point as the start of property value.\n\t\t\t\t\t\tpropertyValueStart = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\"':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\n\t\t\t\t\tquoteType = char;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ';': {\n\t\t\t\t\t// Property value just ended.\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\n\t\t\t\t\tconst propertyValue = stylesString.substr( propertyValueStart, i - propertyValueStart );\n\n\t\t\t\t\tif ( propertyName ) {\n\t\t\t\t\t\t// Save parsed part.\n\t\t\t\t\t\tstylesMap.set( propertyName.trim(), propertyValue.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyName = null;\n\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\n\t\t\t\t\tpropertyNameStart = i + 1;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( char === quoteType ) {\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n\t\t\tquoteType = null;\n\t\t}\n\t}\n\n\treturn stylesMap;\n}\n\n// Return lodash compatible path from style name.\nfunction toPath( name ) {\n\treturn name.replace( '-', '.' );\n}\n\n// Appends style definition to the styles object.\n//\n// @param {String} nameOrPath\n// @param {String|Object} valueOrObject\n// @private\nfunction appendStyleValue( stylesObject, nameOrPath, valueOrObject ) {\n\tlet valueToSet = valueOrObject;\n\n\tif ( isObject( valueOrObject ) ) {\n\t\tvalueToSet = merge( {}, get( stylesObject, nameOrPath ), valueOrObject );\n\t}\n\n\tset( stylesObject, nameOrPath, valueToSet );\n}\n\n/**\n * A CSS style property descriptor that contains tuplet of two strings:\n *\n * - first string describes property name\n * - second string describes property value\n *\n *\t\tconst marginDescriptor = [ 'margin', '2px 3em' ];\n *\t\tconst marginTopDescriptor = [ 'margin-top', '2px' ];\n *\n * @typedef {Array.<String, String>} module:engine/view/stylesmap~PropertyDescriptor\n */\n\n/**\n * An object describing values associated with the sides of a box, for instance margins, paddings,\n * border widths, border colors, etc.\n *\n *\t\tconst margin = {\n *\t\t\ttop: '1px',\n *\t\t\tright: '3px',\n *\t\t\tbottom: '3px',\n *\t\t\tleft: '7px'\n *\t\t};\n *\n *\t\tconst borderColor = {\n *\t\t\ttop: 'red',\n *\t\t\tright: 'blue',\n *\t\t\tbottom: 'blue',\n *\t\t\tleft: 'red'\n *\t\t};\n *\n * @typedef {Object} module:engine/view/stylesmap~BoxSides\n *\n * @property {String} top Top side value.\n * @property {String} right Right side value.\n * @property {String} bottom Bottom side value.\n * @property {String} left Left side value.\n */\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0x89e360 from'@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';import _0x76c0e4 from'@ckeditor/ckeditor5-utils/src/uid';import _0x4b35f5 from'@ckeditor/ckeditor5-ui/src/editorui/editoruiview';import ti from'@ckeditor/ckeditor5-ui/src/label/labelview';export default class xt extends _0x4b35f5{constructor(_0x1e0ac3,_0x213a8c){super(_0x1e0ac3);const _0xbcd8cc=_0x76c0e4();this['main']=this['createCollection'](),this['editable']=new _0x89e360(_0x1e0ac3,_0x213a8c),this['_voiceLabelView']=this['_createVoiceLabel'](_0xbcd8cc,_0x1e0ac3),this['setTemplate']({'tag':'div','attributes':{'class':['ck-reset','ck-editor','ck-rounded-corners','ck-comment__input'],'role':'comment','dir':_0x1e0ac3['uiLanguageDirection'],'lang':_0x1e0ac3['uiLanguage'],'aria-labelledby':'cke-editor__aria-label_'+_0xbcd8cc},'children':[this['_voiceLabelView'],{'tag':'div','attributes':{'class':'ck-editor__main','role':'presentation'},'children':this['main']}]});}['render'](){super['render'](),this['main']['add'](this['editable']);}['focus'](){this['editable']['element']['focus']();}['_createVoiceLabel'](_0x440f47,_0x2ac0a0){const _0xdcdadc=new ti(),{t:t}=_0x2ac0a0;return _0xdcdadc['text']=t('Comment\\x20editor'),_0xdcdadc['extendTemplate']({'attributes':{'id':'ck-editor__aria-label_'+_0x440f47,'class':'ck-voice-label'}}),_0xdcdadc;}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x2406=['rootName','editing','view','render','setEditableElement','element','ready','destroy','bind','focusTracker','add','attachDomRoot','locale','isFocused','name','editor','fire'];(function(_0x539d15,_0x240659){const _0x1cec11=function(_0x17f36d){while(--_0x17f36d){_0x539d15['push'](_0x539d15['shift']());}};_0x1cec11(++_0x240659);}(_0x2406,0x1c3));const _0x1cec=function(_0x539d15,_0x240659){_0x539d15=_0x539d15-0x0;let _0x1cec11=_0x2406[_0x539d15];return _0x1cec11;};import _0x2e8659 from'@ckeditor/ckeditor5-core/src/editor/editorui';import _0x38d1f4 from'./commenteditoruiview';export default class dt extends _0x2e8659{constructor(_0x24740a){super(_0x24740a),this['view']=new _0x38d1f4(_0x24740a[_0x1cec('0x3')],_0x24740a[_0x1cec('0x9')][_0x1cec('0xa')]);}get[_0x1cec('0xd')](){return this[_0x1cec('0xa')][_0x1cec('0xd')];}['init'](){const _0x4e4e3b=this[_0x1cec('0x6')][_0x1cec('0x9')][_0x1cec('0xa')],_0xf1179a=this[_0x1cec('0xa')]['editable'],_0x33a5ed=_0x4e4e3b['document']['getRoot']();_0xf1179a[_0x1cec('0x5')]=_0x33a5ed[_0x1cec('0x8')],this[_0x1cec('0xa')][_0x1cec('0xb')]();const _0x35db5b=_0xf1179a['element'];this[_0x1cec('0xc')](_0xf1179a[_0x1cec('0x5')],_0x35db5b),this['focusTracker'][_0x1cec('0x1')](_0x35db5b),this[_0x1cec('0xa')]['editable'][_0x1cec('0x10')](_0x1cec('0x4'))['to'](this[_0x1cec('0x0')]),_0x4e4e3b[_0x1cec('0x2')](_0x35db5b),this[_0x1cec('0x7')](_0x1cec('0xe'));}[_0x1cec('0xf')](){this[_0x1cec('0xa')][_0x1cec('0xf')](),super['destroy']();}}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class ListCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n\t */\n\tconstructor( editor, type ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The type of the list created by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'numbered'|'bulleted'|'todo'}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A flag indicating whether the command is active, which means that the selection starts in a list of the same type.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.value = this._getValue();\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @protected\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t.filter( block => checkCanBecomeListItem( block, model.schema ) );\n\n\t\t// Whether we are turning off some items.\n\t\tconst turnOff = this.value === true;\n\t\t// If we are turning off items, we are going to rename them to paragraphs.\n\n\t\tmodel.change( writer => {\n\t\t\t// If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n\t\t\t// To be sure that model is all the time in a good state, we first fix items below turned-off item.\n\t\t\tif ( turnOff ) {\n\t\t\t\t// Start from the model item that is just after the last turned-off item.\n\t\t\t\tlet next = blocks[ blocks.length - 1 ].nextSibling;\n\t\t\t\tlet currentIndent = Number.POSITIVE_INFINITY;\n\t\t\t\tlet changes = [];\n\n\t\t\t\t// Correct indent of all items after the last turned off item.\n\t\t\t\t// Rules that should be followed:\n\t\t\t\t// 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n\t\t\t\t//    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n\t\t\t\t// 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n\t\t\t\t//    should not end up as a child of any of list items that they were not children of before.\n\t\t\t\t// 3. All other items should have their indent changed relatively to it's parent.\n\t\t\t\t//\n\t\t\t\t// For example:\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t// 3        * --------\t\t\t<-- this is turned off.\n\t\t\t\t// 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n\t\t\t\t// 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n\t\t\t\t// 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 8     * --------\t\t\t\t<-- this has to become indent = 0.\n\t\t\t\t// 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n\t\t\t\t// 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n\t\t\t\t// 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n\t\t\t\t// 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// After turning off 3 the list becomes:\n\t\t\t\t//\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t//\n\t\t\t\t// 3  --------\n\t\t\t\t//\n\t\t\t\t// 4  * --------\n\t\t\t\t// 5     * --------\n\t\t\t\t// 6  * --------\n\t\t\t\t// 7     * --------\n\t\t\t\t// 8  * --------\n\t\t\t\t// 9     * --------\n\t\t\t\t// 10       * --------\n\t\t\t\t// 11       * --------\n\t\t\t\t// 12 * --------\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n\t\t\t\t// those parent-child connection which are possible to maintain are still maintained. It's worth noting\n\t\t\t\t// that this is the same effect that we would be get by multiple use of outdent command. However doing\n\t\t\t\t// it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n\t\t\t\t// less conversion (faster).\n\t\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'listIndent' ) !== 0 ) {\n\t\t\t\t\t// Check each next list item, as long as its indent is bigger than 0.\n\t\t\t\t\t// If the indent is 0 we are not going to change anything anyway.\n\t\t\t\t\tconst indent = next.getAttribute( 'listIndent' );\n\n\t\t\t\t\t// We check if that's item indent is lower as current relative indent.\n\t\t\t\t\tif ( indent < currentIndent ) {\n\t\t\t\t\t\t// If it is, current relative indent becomes that indent.\n\t\t\t\t\t\tcurrentIndent = indent;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fix indent relatively to current relative indent.\n\t\t\t\t\t// Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\t\t\t\t\tconst newIndent = indent - currentIndent;\n\n\t\t\t\t\t// Save the entry in changes array. We do not apply it at the moment, because we will need to\n\t\t\t\t\t// reverse the changes so the last item is changed first.\n\t\t\t\t\t// This is to keep model in correct state all the time.\n\t\t\t\t\tchanges.push( { element: next, listIndent: newIndent } );\n\n\t\t\t\t\t// Find next item.\n\t\t\t\t\tnext = next.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tchanges = changes.reverse();\n\n\t\t\t\tfor ( const item of changes ) {\n\t\t\t\t\twriter.setAttribute( 'listIndent', item.listIndent, item.element );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are turning on, we might change some items that are already `listItem`s but with different type.\n\t\t\t// Changing one nested list item to other type should also trigger changing all its siblings so the\n\t\t\t// whole nested list is of the same type.\n\t\t\t// Example (assume changing to numbered list):\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ---[--\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t// * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n\t\t\t//   * ---]--\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\tif ( !turnOff ) {\n\t\t\t\t// Find lowest indent among selected items. This will be indicator what is the indent of\n\t\t\t\t// top-most list affected by the command.\n\t\t\t\tlet lowestIndent = Number.POSITIVE_INFINITY;\n\n\t\t\t\tfor ( const item of blocks ) {\n\t\t\t\t\tif ( item.is( 'element', 'listItem' ) && item.getAttribute( 'listIndent' ) < lowestIndent ) {\n\t\t\t\t\t\tlowestIndent = item.getAttribute( 'listIndent' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Do not execute the fix for top-level lists.\n\t\t\t\tlowestIndent = lowestIndent === 0 ? 1 : lowestIndent;\n\n\t\t\t\t// Fix types of list items that are \"before\" the selected blocks.\n\t\t\t\t_fixType( blocks, true, lowestIndent );\n\n\t\t\t\t// Fix types of list items that are \"after\" the selected blocks.\n\t\t\t\t_fixType( blocks, false, lowestIndent );\n\t\t\t}\n\n\t\t\t// Phew! Now it will be easier :).\n\t\t\t// For each block element that was in the selection, we will either: turn it to list item,\n\t\t\t// turn it to paragraph, or change it's type. Or leave it as it is.\n\t\t\t// Do it in reverse as there might be multiple blocks (same as with changing indents).\n\t\t\tfor ( const element of blocks.reverse() ) {\n\t\t\t\tif ( turnOff && element.name == 'listItem' ) {\n\t\t\t\t\t// We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n\t\t\t\t\t// List item specific attributes are removed by post fixer.\n\t\t\t\t\twriter.rename( element, 'paragraph' );\n\t\t\t\t} else if ( !turnOff && element.name != 'listItem' ) {\n\t\t\t\t\t// We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n\t\t\t\t\t// The order of operations is important to keep model in correct state.\n\t\t\t\t\twriter.setAttributes( { listType: this.type, listIndent: 0 }, element );\n\t\t\t\t\twriter.rename( element, 'listItem' );\n\t\t\t\t} else if ( !turnOff && element.name == 'listItem' && element.getAttribute( 'listType' ) != this.type ) {\n\t\t\t\t\t// We are turning on and the element is a `listItem` but has different type - change it's type and\n\t\t\t\t\t// type of it's all siblings that have same indent.\n\t\t\t\t\twriter.setAttribute( 'listType', this.type, element );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Event fired by the {@link #execute} method.\n\t\t\t *\n\t\t\t * It allows to execute an action after executing the {@link ~ListCommand#execute} method, for example adjusting\n\t\t\t * attributes of changed blocks.\n\t\t\t *\n\t\t\t * @protected\n\t\t\t * @event _executeCleanup\n\t\t\t */\n\t\t\tthis.fire( '_executeCleanup', blocks );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the command's {@link #value}.\n\t *\n\t * @private\n\t * @returns {Boolean} The current value.\n\t */\n\t_getValue() {\n\t\t// Check whether closest `listItem` ancestor of the position has a correct type.\n\t\tconst listItem = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\treturn !!listItem && listItem.is( 'element', 'listItem' ) && listItem.getAttribute( 'listType' ) == this.type;\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\t// If command value is true it means that we are in list item, so the command should be enabled.\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst schema = this.editor.model.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Otherwise, check if list item can be inserted at the position start.\n\t\treturn checkCanBecomeListItem( firstBlock, schema );\n\t}\n}\n\n// Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\nfunction _fixType( blocks, isBackward, lowestIndent ) {\n\t// We need to check previous sibling of first changed item and next siblings of last changed item.\n\tconst startingItem = isBackward ? blocks[ 0 ] : blocks[ blocks.length - 1 ];\n\n\tif ( startingItem.is( 'element', 'listItem' ) ) {\n\t\tlet item = startingItem[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t// During processing items, keeps the lowest indent of already processed items.\n\t\t// This saves us from changing too many items.\n\t\t// Following example is for going forward as it is easier to read, however same applies to going backward.\n\t\t// * ------\n\t\t//   * ------\n\t\t//     * --[---\n\t\t//   * ------\t\t<-- `lowestIndent` should be 1\n\t\t//     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n\t\t//     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n\t\t//     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n\t\t// * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\t\tlet currentIndent = startingItem.getAttribute( 'listIndent' );\n\n\t\t// Look back until a list item with indent lower than reference `lowestIndent`.\n\t\t// That would be the parent of nested sublist which contains item having `lowestIndent`.\n\t\twhile ( item && item.is( 'element', 'listItem' ) && item.getAttribute( 'listIndent' ) >= lowestIndent ) {\n\t\t\tif ( currentIndent > item.getAttribute( 'listIndent' ) ) {\n\t\t\t\tcurrentIndent = item.getAttribute( 'listIndent' );\n\t\t\t}\n\n\t\t\t// Found an item that is in the same nested sublist.\n\t\t\tif ( item.getAttribute( 'listIndent' ) == currentIndent ) {\n\t\t\t\t// Just add the item to selected blocks like it was selected by the user.\n\t\t\t\tblocks[ isBackward ? 'unshift' : 'push' ]( item );\n\t\t\t}\n\n\t\t\titem = item[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t}\n\t}\n}\n\n// Checks whether the given block can be replaced by a listItem.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeListItem( block, schema ) {\n\treturn schema.checkChild( block.parent, 'listItem' ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/indentcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class IndentCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {'forward'|'backward'} indentDirection The direction of indent. If it is equal to `backward`, the command\n\t * will outdent a list item.\n\t */\n\tconstructor( editor, indentDirection ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Determines by how much the command will change the list item's indent attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._indentBy = indentDirection == 'forward' ? 1 : -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Indents or outdents (depending on the {@link #constructor}'s `indentDirection` parameter) selected list items.\n\t *\n\t * @fires execute\n\t * @fires _executeCleanup\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tlet itemsToChange = Array.from( doc.selection.getSelectedBlocks() );\n\n\t\tmodel.change( writer => {\n\t\t\tconst lastItem = itemsToChange[ itemsToChange.length - 1 ];\n\n\t\t\t// Indenting a list item should also indent all the items that are already sub-items of indented item.\n\t\t\tlet next = lastItem.nextSibling;\n\n\t\t\t// Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'listIndent' ) > lastItem.getAttribute( 'listIndent' ) ) {\n\t\t\t\titemsToChange.push( next );\n\n\t\t\t\tnext = next.nextSibling;\n\t\t\t}\n\n\t\t\t// We need to be sure to keep model in correct state after each small change, because converters\n\t\t\t// bases on that state and assumes that model is correct.\n\t\t\t// Because of that, if the command outdents items, we will outdent them starting from the last item, as\n\t\t\t// it is safer.\n\t\t\tif ( this._indentBy < 0 ) {\n\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t}\n\n\t\t\tfor ( const item of itemsToChange ) {\n\t\t\t\tconst indent = item.getAttribute( 'listIndent' ) + this._indentBy;\n\n\t\t\t\t// If indent is lower than 0, it means that the item got outdented when it was not indented.\n\t\t\t\t// This means that we need to convert that list item to paragraph.\n\t\t\t\tif ( indent < 0 ) {\n\t\t\t\t\t// To keep the model as correct as possible, first rename listItem, then remove attributes,\n\t\t\t\t\t// as listItem without attributes is very incorrect and will cause problems in converters.\n\t\t\t\t\t// No need to remove attributes, will be removed by post fixer.\n\t\t\t\t\twriter.rename( item, 'paragraph' );\n\t\t\t\t}\n\t\t\t\t// If indent is >= 0, change the attribute value.\n\t\t\t\telse {\n\t\t\t\t\twriter.setAttribute( 'listIndent', indent, item );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Event fired by the {@link #execute} method.\n\t\t\t *\n\t\t\t * It allows to execute an action after executing the {@link ~IndentCommand#execute} method, for example adjusting\n\t\t\t * attributes of changed list items.\n\t\t\t *\n\t\t\t * @protected\n\t\t\t * @event _executeCleanup\n\t\t\t */\n\t\t\tthis.fire( '_executeCleanup', itemsToChange );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\t// Check whether any of position's ancestor is a list item.\n\t\tconst listItem = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\t// If selection is not in a list item, the command is disabled.\n\t\tif ( !listItem || !listItem.is( 'element', 'listItem' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this._indentBy > 0 ) {\n\t\t\t// Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n\t\t\t// To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n\t\t\tconst indent = listItem.getAttribute( 'listIndent' );\n\t\t\tconst type = listItem.getAttribute( 'listType' );\n\n\t\t\tlet prev = listItem.previousSibling;\n\n\t\t\twhile ( prev && prev.is( 'element', 'listItem' ) && prev.getAttribute( 'listIndent' ) >= indent ) {\n\t\t\t\tif ( prev.getAttribute( 'listIndent' ) == indent ) {\n\t\t\t\t\t// The item is on the same level.\n\t\t\t\t\t// If it has same type, it means that we found a preceding sibling from the same list.\n\t\t\t\t\t// If it does not have same type, it means that `listItem` is on different list (this can happen only\n\t\t\t\t\t// on top level lists, though).\n\t\t\t\t\treturn prev.getAttribute( 'listType' ) == type;\n\t\t\t\t}\n\n\t\t\t\tprev = prev.previousSibling;\n\t\t\t}\n\n\t\t\t// Could not find similar list item, this means that `listItem` is first in its list.\n\t\t\treturn false;\n\t\t}\n\n\t\t// If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\t\treturn true;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/utils\n */\n\nimport { getFillerOffset } from '@ckeditor/ckeditor5-engine/src/view/containerelement';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\n\n/**\n * Creates a list item {@link module:engine/view/containerelement~ContainerElement}.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer The writer instance.\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\nexport function createViewListItemElement( writer ) {\n\tconst viewItem = writer.createContainerElement( 'li' );\n\n\tviewItem.getFillerOffset = getListItemFillerOffset;\n\n\treturn viewItem;\n}\n\n/**\n * Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of the given `modelItem` model `listItem` element.\n * Then, it binds the created view list item (`<li>`) with the model `listItem` element.\n * The function then returns the created view list item (`<li>`).\n *\n * @param {module:engine/model/item~Item} modelItem Model list item.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface.\n * @returns {module:engine/view/containerelement~ContainerElement} View list element.\n */\nexport function generateLiInUl( modelItem, conversionApi ) {\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\tconst listType = modelItem.getAttribute( 'listType' ) == 'numbered' ? 'ol' : 'ul';\n\tconst viewItem = createViewListItemElement( viewWriter );\n\n\tconst viewList = viewWriter.createContainerElement( listType, null );\n\n\tviewWriter.insert( viewWriter.createPositionAt( viewList, 0 ), viewItem );\n\n\tmapper.bindElements( modelItem, viewItem );\n\n\treturn viewItem;\n}\n\n/**\n * Helper function that inserts a view list at a correct place and merges it with its siblings.\n * It takes a model list item element (`modelItem`) and a corresponding view list item element (`injectedItem`). The view list item\n * should be in a view list element (`<ul>` or `<ol>`) and should be its only child.\n * See comments below to better understand the algorithm.\n *\n * @param {module:engine/view/item~Item} modelItem Model list item.\n * @param {module:engine/view/containerelement~ContainerElement} injectedItem\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface.\n * @param {module:engine/model/model~Model} model The model instance.\n */\nexport function injectViewList( modelItem, injectedItem, conversionApi, model ) {\n\tconst injectedList = injectedItem.parent;\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\n\t// The position where the view list will be inserted.\n\tlet insertPosition = mapper.toViewPosition( model.createPositionBefore( modelItem ) );\n\n\t// 1. Find the previous list item that has the same or smaller indent. Basically we are looking for the first model item\n\t// that is a \"parent\" or \"sibling\" of the injected model item.\n\t// If there is no such list item, it means that the injected list item is the first item in \"its list\".\n\tconst refItem = getSiblingListItem( modelItem.previousSibling, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tlistIndent: modelItem.getAttribute( 'listIndent' )\n\t} );\n\tconst prevItem = modelItem.previousSibling;\n\n\tif ( refItem && refItem.getAttribute( 'listIndent' ) == modelItem.getAttribute( 'listIndent' ) ) {\n\t\t// There is a list item with the same indent - we found the same-level sibling.\n\t\t// Break the list after it. The inserted view item will be added in the broken space.\n\t\tconst viewItem = mapper.toViewElement( refItem );\n\t\tinsertPosition = viewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\t} else {\n\t\t// There is no list item with the same indent. Check the previous model item.\n\t\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\t\t// If it is a list item, it has to have a lower indent.\n\t\t\t// It means that the inserted item should be added to it as its nested item.\n\t\t\tinsertPosition = mapper.toViewPosition( model.createPositionAt( prevItem, 'end' ) );\n\n\t\t\t// There could be some not mapped elements (eg. span in to-do list) but we need to insert\n\t\t\t// a nested list directly inside the li element.\n\t\t\tconst mappedViewAncestor = mapper.findMappedViewAncestor( insertPosition );\n\t\t\tconst nestedList = findNestedList( mappedViewAncestor );\n\n\t\t\t// If there already is some nested list, then use it's position.\n\t\t\tif ( nestedList ) {\n\t\t\t\tinsertPosition = viewWriter.createPositionBefore( nestedList );\n\t\t\t} else {\n\t\t\t\t// Else just put new list on the end of list item content.\n\t\t\t\tinsertPosition = viewWriter.createPositionAt( mappedViewAncestor, 'end' );\n\t\t\t}\n\t\t} else {\n\t\t\t// The previous item is not a list item (or does not exist at all).\n\t\t\t// Just map the position and insert the view item at the mapped position.\n\t\t\tinsertPosition = mapper.toViewPosition( model.createPositionBefore( modelItem ) );\n\t\t}\n\t}\n\n\tinsertPosition = positionAfterUiElements( insertPosition );\n\n\t// Insert the view item.\n\tviewWriter.insert( insertPosition, injectedList );\n\n\t// 2. Handle possible children of the injected model item.\n\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\tconst prevView = mapper.toViewElement( prevItem );\n\n\t\tconst walkerBoundaries = viewWriter.createRange( viewWriter.createPositionAt( prevView, 0 ), insertPosition );\n\t\tconst walker = walkerBoundaries.getWalker( { ignoreElementEnd: true } );\n\n\t\tfor ( const value of walker ) {\n\t\t\tif ( value.item.is( 'element', 'li' ) ) {\n\t\t\t\tconst breakPosition = viewWriter.breakContainer( viewWriter.createPositionBefore( value.item ) );\n\t\t\t\tconst viewList = value.item.parent;\n\n\t\t\t\tconst targetPosition = viewWriter.createPositionAt( injectedItem, 'end' );\n\t\t\t\tmergeViewLists( viewWriter, targetPosition.nodeBefore, targetPosition.nodeAfter );\n\t\t\t\tviewWriter.move( viewWriter.createRangeOn( viewList ), targetPosition );\n\n\t\t\t\twalker.position = breakPosition;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst nextViewList = injectedList.nextSibling;\n\n\t\tif ( nextViewList && ( nextViewList.is( 'element', 'ul' ) || nextViewList.is( 'element', 'ol' ) ) ) {\n\t\t\tlet lastSubChild = null;\n\n\t\t\tfor ( const child of nextViewList.getChildren() ) {\n\t\t\t\tconst modelChild = mapper.toModelElement( child );\n\n\t\t\t\tif ( modelChild && modelChild.getAttribute( 'listIndent' ) > modelItem.getAttribute( 'listIndent' ) ) {\n\t\t\t\t\tlastSubChild = child;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( lastSubChild ) {\n\t\t\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( lastSubChild ) );\n\t\t\t\tviewWriter.move( viewWriter.createRangeOn( lastSubChild.parent ), viewWriter.createPositionAt( injectedItem, 'end' ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Merge the inserted view list with its possible neighbor lists.\n\tmergeViewLists( viewWriter, injectedList, injectedList.nextSibling );\n\tmergeViewLists( viewWriter, injectedList.previousSibling, injectedList );\n}\n\n/**\n * Helper function that takes two parameters that are expected to be view list elements, and merges them.\n * The merge happens only if both parameters are list elements of the same type (the same element name and the same class attributes).\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter The writer instance.\n * @param {module:engine/view/item~Item} firstList The first element to compare.\n * @param {module:engine/view/item~Item} secondList The second element to compare.\n * @returns {module:engine/view/position~Position|null} The position after merge or `null` when there was no merge.\n */\nexport function mergeViewLists( viewWriter, firstList, secondList ) {\n\t// Check if two lists are going to be merged.\n\tif ( !firstList || !secondList || ( firstList.name != 'ul' && firstList.name != 'ol' ) ) {\n\t\treturn null;\n\t}\n\n\t// Both parameters are list elements, so compare types now.\n\tif ( firstList.name != secondList.name || firstList.getAttribute( 'class' ) !== secondList.getAttribute( 'class' ) ) {\n\t\treturn null;\n\t}\n\n\treturn viewWriter.mergeContainers( viewWriter.createPositionAfter( firstList ) );\n}\n\n/**\n * Helper function that for a given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\n * are after the given position.\n *\n * For example:\n * `<container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</container:p>`\n * For position ^, the position before \"bar\" will be returned.\n *\n * @param {module:engine/view/position~Position} viewPosition\n * @returns {module:engine/view/position~Position}\n */\nexport function positionAfterUiElements( viewPosition ) {\n\treturn viewPosition.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n}\n\n/**\n * Helper function that searches for a previous list item sibling of a given model item that meets the given criteria\n * passed by the options object.\n *\n * @param {module:engine/model/item~Item} modelItem\n * @param {Object} options Search criteria.\n * @param {Boolean} [options.sameIndent=false] Whether the sought sibling should have the same indentation.\n * @param {Boolean} [options.smallerIndent=false] Whether the sought sibling should have a smaller indentation.\n * @param {Number} [options.listIndent] The reference indentation.\n * @param {'forward'|'backward'} [options.direction='backward'] Walking direction.\n * @returns {module:engine/model/item~Item|null}\n */\nexport function getSiblingListItem( modelItem, options ) {\n\tconst sameIndent = !!options.sameIndent;\n\tconst smallerIndent = !!options.smallerIndent;\n\tconst indent = options.listIndent;\n\n\tlet item = modelItem;\n\n\twhile ( item && item.name == 'listItem' ) {\n\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\tif ( ( sameIndent && indent == itemIndent ) || ( smallerIndent && indent > itemIndent ) ) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif ( options.direction === 'forward' ) {\n\t\t\titem = item.nextSibling;\n\t\t} else {\n\t\t\titem = item.previousSibling;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Helper method for creating a UI button and linking it with an appropriate command.\n *\n * @private\n * @param {module:core/editor/editor~Editor} editor The editor instance to which the UI component will be added.\n * @param {String} commandName The name of the command.\n * @param {Object} label The button label.\n * @param {String} icon The source of the icon.\n */\nexport function createUIComponent( editor, commandName, label, icon ) {\n\teditor.ui.componentFactory.add( commandName, locale => {\n\t\tconst command = editor.commands.get( commandName );\n\t\tconst buttonView = new ButtonView( locale );\n\n\t\tbuttonView.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true,\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\t// Bind button model to command.\n\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t// Execute command.\n\t\tbuttonView.on( 'execute', () => {\n\t\t\teditor.execute( commandName );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\treturn buttonView;\n\t} );\n}\n\n/**\n * Returns a first list view element that is direct child of the given view element.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @return {module:engine/view/element~Element|null}\n */\nexport function findNestedList( viewElement ) {\n\tfor ( const node of viewElement.getChildren() ) {\n\t\tif ( node.name == 'ul' || node.name == 'ol' ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns an array with all `listItem` elements that represents the same list.\n *\n * It means that values for `listIndent`, `listType`, and `listStyle` for all items are equal.\n *\n * @param {module:engine/model/position~Position} position Starting position.\n * @param {'forward'|'backward'} direction Walking direction.\n * @returns {Array.<module:engine/model/element~Element>}\n */\nexport function getSiblingNodes( position, direction ) {\n\tconst items = [];\n\tconst listItem = position.parent;\n\tconst walkerOptions = {\n\t\tignoreElementEnd: true,\n\t\tstartPosition: position,\n\t\tshallow: true,\n\t\tdirection\n\t};\n\tconst limitIndent = listItem.getAttribute( 'listIndent' );\n\tconst nodes = [ ...new TreeWalker( walkerOptions ) ]\n\t\t.filter( value => value.item.is( 'element' ) )\n\t\t.map( value => value.item );\n\n\tfor ( const element of nodes ) {\n\t\t// If found something else than `listItem`, we're out of the list scope.\n\t\tif ( !element.is( 'element', 'listItem' ) ) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// If current parsed item has lower indent that element that the element that was a starting point,\n\t\t// it means we left a nested list. Abort searching items.\n\t\t//\n\t\t// ■ List item 1.       [listIndent=0]\n\t\t//     ○ List item 2.[] [listIndent=1], limitIndent = 1,\n\t\t//     ○ List item 3.   [listIndent=1]\n\t\t// ■ List item 4.       [listIndent=0]\n\t\t//\n\t\t// Abort searching when leave nested list.\n\t\tif ( element.getAttribute( 'listIndent' ) < limitIndent ) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// ■ List item 1.[]     [listIndent=0] limitIndent = 0,\n\t\t//     ○ List item 2.   [listIndent=1]\n\t\t//     ○ List item 3.   [listIndent=1]\n\t\t// ■ List item 4.       [listIndent=0]\n\t\t//\n\t\t// Ignore nested lists.\n\t\tif ( element.getAttribute( 'listIndent' ) > limitIndent ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// ■ List item 1.[]  [listType=bulleted]\n\t\t// 1. List item 2.   [listType=numbered]\n\t\t// 2.List item 3.    [listType=numbered]\n\t\t//\n\t\t// Abort searching when found a different kind of a list.\n\t\tif ( element.getAttribute( 'listType' ) !== listItem.getAttribute( 'listType' ) ) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// ■ List item 1.[]  [listType=bulleted]\n\t\t// ■ List item 2.    [listType=bulleted]\n\t\t// ○ List item 3.    [listType=bulleted]\n\t\t// ○ List item 4.    [listType=bulleted]\n\t\t//\n\t\t// Abort searching when found a different list style.\n\t\tif ( element.getAttribute( 'listStyle' ) !== listItem.getAttribute( 'listStyle' ) ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif ( direction === 'backward' ) {\n\t\t\titems.unshift( element );\n\t\t} else {\n\t\t\titems.push( element );\n\t\t}\n\t}\n\n\treturn items;\n}\n\n// Implementation of getFillerOffset for view list item element.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getListItemFillerOffset() {\n\tconst hasOnlyLists = !this.isEmpty && ( this.getChild( 0 ).name == 'ul' || this.getChild( 0 ).name == 'ol' );\n\n\tif ( this.isEmpty || hasOnlyLists ) {\n\t\treturn 0;\n\t}\n\n\treturn getFillerOffset.call( this );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/converters\n */\n\nimport {\n\tgenerateLiInUl,\n\tinjectViewList,\n\tmergeViewLists,\n\tgetSiblingListItem,\n\tpositionAfterUiElements\n} from './utils';\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\n\n/**\n * A model-to-view converter for the `listItem` model element insertion.\n *\n * It creates a `<ul><li></li><ul>` (or `<ol>`) view structure out of a `listItem` model element, inserts it at the correct\n * position, and merges the list with surrounding lists (if available).\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewInsertion( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst consumable = conversionApi.consumable;\n\n\t\tif ( !consumable.test( data.item, 'insert' ) ||\n\t\t\t!consumable.test( data.item, 'attribute:listType' ) ||\n\t\t\t!consumable.test( data.item, 'attribute:listIndent' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsumable.consume( data.item, 'insert' );\n\t\tconsumable.consume( data.item, 'attribute:listType' );\n\t\tconsumable.consume( data.item, 'attribute:listIndent' );\n\n\t\tconst modelItem = data.item;\n\t\tconst viewItem = generateLiInUl( modelItem, conversionApi );\n\n\t\tinjectViewList( modelItem, viewItem, conversionApi, model );\n\t};\n}\n\n/**\n * A model-to-view converter for the `listItem` model element removal.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewRemove( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.position );\n\t\tconst viewStart = viewPosition.getLastMatchingPosition( value => !value.item.is( 'element', 'li' ) );\n\t\tconst viewItem = viewStart.nodeAfter;\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// 1. Break the container after and before the list item.\n\t\t// This will create a view list with one view list item - the one to remove.\n\t\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t\t// 2. Remove the list with the item to remove.\n\t\tconst viewList = viewItem.parent;\n\t\tconst viewListPrev = viewList.previousSibling;\n\t\tconst removeRange = viewWriter.createRangeOn( viewList );\n\t\tconst removed = viewWriter.remove( removeRange );\n\n\t\t// 3. Merge the whole created by breaking and removing the list.\n\t\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\t\tmergeViewLists( viewWriter, viewListPrev, viewListPrev.nextSibling );\n\t\t}\n\n\t\t// 4. Bring back nested list that was in the removed <li>.\n\t\tconst modelItem = conversionApi.mapper.toModelElement( viewItem );\n\n\t\thoistNestedLists( modelItem.getAttribute( 'listIndent' ) + 1, data.position, removeRange.start, viewItem, conversionApi, model );\n\n\t\t// 5. Unbind removed view item and all children.\n\t\tfor ( const child of viewWriter.createRangeIn( removed ).getItems() ) {\n\t\t\tconversionApi.mapper.unbindViewElement( child );\n\t\t}\n\n\t\tevt.stop();\n\t};\n}\n\n/**\n * A model-to-view converter for the `type` attribute change on the `listItem` model element.\n *\n * This change means that the `<li>` element parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished\n * by breaking view elements and changing their name. The next {@link module:list/converters~modelViewMergeAfterChangeType}\n * converter will attempt to merge split nodes.\n *\n * Splitting this conversion into 2 steps makes it possible to add an additional conversion in the middle.\n * Check {@link module:list/todolistconverters~modelViewChangeType} to see an example of it.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewChangeType( evt, data, conversionApi ) {\n\tif ( !conversionApi.consumable.consume( data.item, 'attribute:listType' ) ) {\n\t\treturn;\n\t}\n\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\tconst viewWriter = conversionApi.writer;\n\n\t// Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t// Change name of the view list that holds the changed view item.\n\t// We cannot just change name property, because that would not render properly.\n\tconst viewList = viewItem.parent;\n\tconst listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n\n\tviewWriter.rename( listName, viewList );\n}\n\n/**\n * A model-to-view converter that attempts to merge nodes split by {@link module:list/converters~modelViewChangeType}.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfterChangeType( evt, data, conversionApi ) {\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\tconst viewList = viewItem.parent;\n\tconst viewWriter = conversionApi.writer;\n\n\t// Merge the changed view list with other lists, if possible.\n\tmergeViewLists( viewWriter, viewList, viewList.nextSibling );\n\tmergeViewLists( viewWriter, viewList.previousSibling, viewList );\n\n\t// Consumable insertion of children inside the item. They are already handled by re-building the item in view.\n\tfor ( const child of data.item.getChildren() ) {\n\t\tconversionApi.consumable.consume( child, 'insert' );\n\t}\n}\n\n/**\n * A model-to-view converter for the `listIndent` attribute change on the `listItem` model element.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewChangeIndent( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, 'attribute:listIndent' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// 1. Break the container after and before the list item.\n\t\t// This will create a view list with one view list item -- the one that changed type.\n\t\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t\t// 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\t\tconst viewList = viewItem.parent;\n\t\tconst viewListPrev = viewList.previousSibling;\n\t\tconst removeRange = viewWriter.createRangeOn( viewList );\n\t\tviewWriter.remove( removeRange );\n\n\t\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\t\tmergeViewLists( viewWriter, viewListPrev, viewListPrev.nextSibling );\n\t\t}\n\n\t\t// 3. Bring back nested list that was in the removed <li>.\n\t\thoistNestedLists( data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi, model );\n\n\t\t// 4. Inject view list like it is newly inserted.\n\t\tinjectViewList( data.item, viewItem, conversionApi, model );\n\n\t\t// 5. Consume insertion of children inside the item. They are already handled by re-building the item in view.\n\t\tfor ( const child of data.item.getChildren() ) {\n\t\t\tconversionApi.consumable.consume( child, 'insert' );\n\t\t}\n\t};\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter is fired for\n * insert change of every model item, and should be fired before the actual converter. The converter checks whether the inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewSplitOnInsert( evt, data, conversionApi ) {\n\tif ( data.item.name != 'listItem' ) {\n\t\tlet viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst lists = [];\n\n\t\t// Break multiple ULs/OLs if there are.\n\t\t//\n\t\t// Imagine following list:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// Insert paragraph after item 1.1.1:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// In this case 1.1.2 has to become beginning of a new list.\n\t\t// We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n\t\t// Then we need to move those broken pieces one after another and merge:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t// 1.1.2 --------\n\t\t//   1.1.3 --------\n\t\t//     1.1.3.1 --------\n\t\t// 1.2 --------\n\t\t//   1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\twhile ( viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol' ) {\n\t\t\tviewPosition = viewWriter.breakContainer( viewPosition );\n\n\t\t\tif ( viewPosition.parent.name != 'li' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Remove lists that are after inserted element.\n\t\t\t// They will be brought back later, below the inserted element.\n\t\t\tconst removeStart = viewPosition;\n\t\t\tconst removeEnd = viewWriter.createPositionAt( viewPosition.parent, 'end' );\n\n\t\t\t// Don't remove if there is nothing to remove.\n\t\t\tif ( !removeStart.isEqual( removeEnd ) ) {\n\t\t\t\tconst removed = viewWriter.remove( viewWriter.createRange( removeStart, removeEnd ) );\n\t\t\t\tlists.push( removed );\n\t\t\t}\n\n\t\t\tviewPosition = viewWriter.createPositionAfter( viewPosition.parent );\n\t\t}\n\n\t\t// Bring back removed lists.\n\t\tif ( lists.length > 0 ) {\n\t\t\tfor ( let i = 0; i < lists.length; i++ ) {\n\t\t\t\tconst previousList = viewPosition.nodeBefore;\n\t\t\t\tconst insertedRange = viewWriter.insert( viewPosition, lists[ i ] );\n\t\t\t\tviewPosition = insertedRange.end;\n\n\t\t\t\t// Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tconst mergePos = mergeViewLists( viewWriter, previousList, previousList.nextSibling );\n\n\t\t\t\t\t// If `mergePos` is in `previousList` it means that the lists got merged.\n\t\t\t\t\t// In this case, we need to fix insert position.\n\t\t\t\t\tif ( mergePos && mergePos.parent == previousList ) {\n\t\t\t\t\t\tviewPosition.offset--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge last inserted list with element after it.\n\t\t\tmergeViewLists( viewWriter, viewPosition.nodeBefore, viewPosition.nodeAfter );\n\t\t}\n\t}\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfter( evt, data, conversionApi ) {\n\tconst viewPosition = conversionApi.mapper.toViewPosition( data.position );\n\tconst viewItemPrev = viewPosition.nodeBefore;\n\tconst viewItemNext = viewPosition.nodeAfter;\n\n\t// Merge lists if something (remove, move) was done from inside of list.\n\t// Merging will be done only if both items are view lists of the same type.\n\t// The check is done inside the helper function.\n\tmergeViewLists( conversionApi.writer, viewItemPrev, viewItemNext );\n}\n\n/**\n * A view-to-model converter that converts the `<li>` view elements into the `listItem` model elements.\n *\n * To set correct values of the `listType` and `listIndent` attributes the converter:\n * * checks `<li>`'s parent,\n * * stores and increases the `conversionApi.store.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function viewModelConverter( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\n\t\tconst writer = conversionApi.writer;\n\n\t\t// 1. Create `listItem` model element.\n\t\tconst listItem = writer.createElement( 'listItem' );\n\n\t\t// 2. Handle `listItem` model element attributes.\n\t\tconst indent = getIndent( data.viewItem );\n\n\t\twriter.setAttribute( 'listIndent', indent, listItem );\n\n\t\t// Set 'bulleted' as default. If this item is pasted into a context,\n\t\tconst type = data.viewItem.parent && data.viewItem.parent.name == 'ol' ? 'numbered' : 'bulleted';\n\t\twriter.setAttribute( 'listType', type, listItem );\n\n\t\tif ( !conversionApi.safeInsert( listItem, data.modelCursor ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextPosition = viewToModelListItemChildrenConverter( listItem, data.viewItem.getChildren(), conversionApi );\n\n\t\t// Result range starts before the first item and ends after the last.\n\t\tdata.modelRange = writer.createRange( data.modelCursor, nextPosition );\n\n\t\tconversionApi.updateConversionResult( listItem, data );\n\t}\n}\n\n/**\n * A view-to-model converter for the `<ul>` and `<ol>` view elements that cleans the input view of garbage.\n * This is mostly to clean whitespaces from between the `<li>` view elements inside the view list element, however, also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function cleanList( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.test( data.viewItem, { name: true } ) ) {\n\t\t// Caching children because when we start removing them iterating fails.\n\t\tconst children = Array.from( data.viewItem.getChildren() );\n\n\t\tfor ( const child of children ) {\n\t\t\tconst isWrongElement = !( child.is( 'element', 'li' ) || isList( child ) );\n\n\t\t\tif ( isWrongElement ) {\n\t\t\t\tchild._remove();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A view-to-model converter for the `<li>` elements that cleans whitespace formatting from the input view.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function cleanListItem( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.test( data.viewItem, { name: true } ) ) {\n\t\tif ( data.viewItem.childCount === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst children = [ ...data.viewItem.getChildren() ];\n\n\t\tlet foundList = false;\n\t\tlet firstNode = true;\n\n\t\tfor ( const child of children ) {\n\t\t\tif ( foundList && !isList( child ) ) {\n\t\t\t\tchild._remove();\n\t\t\t}\n\n\t\t\tif ( child.is( '$text' ) ) {\n\t\t\t\t// If this is the first node and it's a text node, left-trim it.\n\t\t\t\tif ( firstNode ) {\n\t\t\t\t\tchild._data = child.data.replace( /^\\s+/, '' );\n\t\t\t\t}\n\n\t\t\t\t// If this is the last text node before <ul> or <ol>, right-trim it.\n\t\t\t\tif ( !child.nextSibling || isList( child.nextSibling ) ) {\n\t\t\t\t\tchild._data = child.data.replace( /\\s+$/, '' );\n\t\t\t\t}\n\t\t\t} else if ( isList( child ) ) {\n\t\t\t\t// If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n\t\t\t\tfoundList = true;\n\t\t\t}\n\n\t\t\tfirstNode = false;\n\t\t}\n\t}\n}\n\n/**\n * Returns a callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between the `listItem` elements that would be incorrectly mapped because of how list items are represented in the model\n * and in the view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:engine/view/view~View} view A view instance.\n * @returns {Function}\n */\nexport function modelToViewPosition( view ) {\n\treturn ( evt, data ) => {\n\t\tif ( data.isPhantom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelItem = data.modelPosition.nodeBefore;\n\n\t\tif ( modelItem && modelItem.is( 'element', 'listItem' ) ) {\n\t\t\tconst viewItem = data.mapper.toViewElement( modelItem );\n\t\t\tconst topmostViewList = viewItem.getAncestors().find( isList );\n\t\t\tconst walker = view.createPositionAt( viewItem, 0 ).getWalker();\n\n\t\t\tfor ( const value of walker ) {\n\t\t\t\tif ( value.type == 'elementStart' && value.item.is( 'element', 'li' ) ) {\n\t\t\t\t\tdata.viewPosition = value.previousPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else if ( value.type == 'elementEnd' && value.item == topmostViewList ) {\n\t\t\t\t\tdata.viewPosition = value.nextPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * The callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between the `<li>` elements that would be incorrectly mapped because of how list items are represented in the model\n * and in the view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function viewToModelPosition( model ) {\n\treturn ( evt, data ) => {\n\t\tconst viewPos = data.viewPosition;\n\t\tconst viewParent = viewPos.parent;\n\t\tconst mapper = data.mapper;\n\n\t\tif ( viewParent.name == 'ul' || viewParent.name == 'ol' ) {\n\t\t\t// Position is directly in <ul> or <ol>.\n\t\t\tif ( !viewPos.isAtEnd ) {\n\t\t\t\t// If position is not at the end, it must be before <li>.\n\t\t\t\t// Get that <li>, map it to `listItem` and set model position before that `listItem`.\n\t\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeAfter );\n\n\t\t\t\tdata.modelPosition = model.createPositionBefore( modelNode );\n\t\t\t} else {\n\t\t\t\t// Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n\t\t\t\t// There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n\t\t\t\t// because that <li> may contain nested items.\n\t\t\t\t// We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n\t\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeBefore );\n\t\t\t\tconst modelLength = mapper.getModelLength( viewPos.nodeBefore );\n\n\t\t\t\t// Then we get model position before mapped `listItem` and shift it accordingly.\n\t\t\t\tdata.modelPosition = model.createPositionBefore( modelNode ).getShiftedBy( modelLength );\n\t\t\t}\n\n\t\t\tevt.stop();\n\t\t} else if (\n\t\t\tviewParent.name == 'li' &&\n\t\t\tviewPos.nodeBefore &&\n\t\t\t( viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol' )\n\t\t) {\n\t\t\t// In most cases when view position is in <li> it is in text and this is a correct position.\n\t\t\t// However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n\t\t\tconst modelNode = mapper.toModelElement( viewParent );\n\n\t\t\t// Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n\t\t\t// Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\t\t\tlet modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\t\t\tlet viewList = viewPos.nodeBefore;\n\n\t\t\twhile ( viewList && isList( viewList ) ) {\n\t\t\t\tmodelLength += mapper.getModelLength( viewList );\n\n\t\t\t\tviewList = viewList.previousSibling;\n\t\t\t}\n\n\t\t\tdata.modelPosition = model.createPositionBefore( modelNode ).getShiftedBy( modelLength );\n\n\t\t\tevt.stop();\n\t\t}\n\t};\n}\n\n/**\n * Post-fixer that reacts to changes on document and fixes incorrect model states.\n *\n * In the example below, there is a correct list structure.\n * Then the middle element is removed so the list structure will become incorrect:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * The list structure after the middle element is removed:\n *\n * \t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 3</listItem>   <--- note that indent got post-fixed.\n *\n * @param {module:engine/model/model~Model} model The data model.\n * @param {module:engine/model/writer~Writer} writer The writer to do changes with.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\nexport function modelChangePostFixer( model, writer ) {\n\tconst changes = model.document.differ.getChanges();\n\tconst itemToListHead = new Map();\n\n\tlet applied = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type == 'insert' && entry.name == 'listItem' ) {\n\t\t\t_addListToFix( entry.position );\n\t\t} else if ( entry.type == 'insert' && entry.name != 'listItem' ) {\n\t\t\tif ( entry.name != '$text' ) {\n\t\t\t\t// In case of renamed element.\n\t\t\t\tconst item = entry.position.nodeAfter;\n\n\t\t\t\tif ( item.hasAttribute( 'listIndent' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listIndent', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tif ( item.hasAttribute( 'listType' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listType', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tif ( item.hasAttribute( 'listStyle' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listStyle', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tfor ( const innerItem of Array.from( model.createRangeIn( item ) ).filter( e => e.item.is( 'element', 'listItem' ) ) ) {\n\t\t\t\t\t_addListToFix( innerItem.previousPosition );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst posAfter = entry.position.getShiftedBy( entry.length );\n\n\t\t\t_addListToFix( posAfter );\n\t\t} else if ( entry.type == 'remove' && entry.name == 'listItem' ) {\n\t\t\t_addListToFix( entry.position );\n\t\t} else if ( entry.type == 'attribute' && entry.attributeKey == 'listIndent' ) {\n\t\t\t_addListToFix( entry.range.start );\n\t\t} else if ( entry.type == 'attribute' && entry.attributeKey == 'listType' ) {\n\t\t\t_addListToFix( entry.range.start );\n\t\t}\n\t}\n\n\tfor ( const listHead of itemToListHead.values() ) {\n\t\t_fixListIndents( listHead );\n\t\t_fixListTypes( listHead );\n\t}\n\n\treturn applied;\n\n\tfunction _addListToFix( position ) {\n\t\tconst previousNode = position.nodeBefore;\n\n\t\tif ( !previousNode || !previousNode.is( 'element', 'listItem' ) ) {\n\t\t\tconst item = position.nodeAfter;\n\n\t\t\tif ( item && item.is( 'element', 'listItem' ) ) {\n\t\t\t\titemToListHead.set( item, item );\n\t\t\t}\n\t\t} else {\n\t\t\tlet listHead = previousNode;\n\n\t\t\tif ( itemToListHead.has( listHead ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (\n\t\t\t\t// Cache previousSibling and reuse for performance reasons. See #6581.\n\t\t\t\tlet previousSibling = listHead.previousSibling;\n\t\t\t\tpreviousSibling && previousSibling.is( 'element', 'listItem' );\n\t\t\t\tpreviousSibling = listHead.previousSibling\n\t\t\t) {\n\t\t\t\tlistHead = previousSibling;\n\n\t\t\t\tif ( itemToListHead.has( listHead ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemToListHead.set( previousNode, listHead );\n\t\t}\n\t}\n\n\tfunction _fixListIndents( item ) {\n\t\tlet maxIndent = 0;\n\t\tlet fixBy = null;\n\n\t\twhile ( item && item.is( 'element', 'listItem' ) ) {\n\t\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\t\tif ( itemIndent > maxIndent ) {\n\t\t\t\tlet newIndent;\n\n\t\t\t\tif ( fixBy === null ) {\n\t\t\t\t\tfixBy = itemIndent - maxIndent;\n\t\t\t\t\tnewIndent = maxIndent;\n\t\t\t\t} else {\n\t\t\t\t\tif ( fixBy > itemIndent ) {\n\t\t\t\t\t\tfixBy = itemIndent;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewIndent = itemIndent - fixBy;\n\t\t\t\t}\n\n\t\t\t\twriter.setAttribute( 'listIndent', newIndent, item );\n\n\t\t\t\tapplied = true;\n\t\t\t} else {\n\t\t\t\tfixBy = null;\n\t\t\t\tmaxIndent = item.getAttribute( 'listIndent' ) + 1;\n\t\t\t}\n\n\t\t\titem = item.nextSibling;\n\t\t}\n\t}\n\n\tfunction _fixListTypes( item ) {\n\t\tlet typesStack = [];\n\t\tlet prev = null;\n\n\t\twhile ( item && item.is( 'element', 'listItem' ) ) {\n\t\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\t\tif ( prev && prev.getAttribute( 'listIndent' ) > itemIndent ) {\n\t\t\t\ttypesStack = typesStack.slice( 0, itemIndent + 1 );\n\t\t\t}\n\n\t\t\tif ( itemIndent != 0 ) {\n\t\t\t\tif ( typesStack[ itemIndent ] ) {\n\t\t\t\t\tconst type = typesStack[ itemIndent ];\n\n\t\t\t\t\tif ( item.getAttribute( 'listType' ) != type ) {\n\t\t\t\t\t\twriter.setAttribute( 'listType', type, item );\n\n\t\t\t\t\t\tapplied = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttypesStack[ itemIndent ] = item.getAttribute( 'listType' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprev = item;\n\t\t\titem = item.nextSibling;\n\t\t}\n\t}\n}\n\n/**\n * A fixer for pasted content that includes list items.\n *\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem listType=\"bulleted\" listIndent=4>X</listItem>\n *\t\t//              <listItem listType=\"bulleted\" listIndent=5>Y</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>BX</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Y/listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Array} args Arguments of {@link module:engine/model/model~Model#insertContent}.\n */\nexport function modelIndentPasteFixer( evt, [ content, selectable ] ) {\n\t// Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n\t// elements before it and there is no need to fix indents, because even if we insert that content into a list,\n\t// that list will be broken.\n\t// Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\n\t// would create incorrect model.\n\tlet item = content.is( 'documentFragment' ) ? content.getChild( 0 ) : content;\n\n\tlet selection;\n\n\tif ( !selectable ) {\n\t\tselection = this.document.selection;\n\t} else {\n\t\tselection = this.createSelection( selectable );\n\t}\n\n\tif ( item && item.is( 'element', 'listItem' ) ) {\n\t\t// Get a reference list item. Inserted list items will be fixed according to that item.\n\t\tconst pos = selection.getFirstPosition();\n\t\tlet refItem = null;\n\n\t\tif ( pos.parent.is( 'element', 'listItem' ) ) {\n\t\t\trefItem = pos.parent;\n\t\t} else if ( pos.nodeBefore && pos.nodeBefore.is( 'element', 'listItem' ) ) {\n\t\t\trefItem = pos.nodeBefore;\n\t\t}\n\n\t\t// If there is `refItem` it means that we do insert list items into an existing list.\n\t\tif ( refItem ) {\n\t\t\t// First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n\t\t\t// to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n\t\t\t// Indent of all those items has to be adjusted to reference item.\n\t\t\tconst indentChange = refItem.getAttribute( 'listIndent' );\n\n\t\t\t// Fix only if there is anything to fix.\n\t\t\tif ( indentChange > 0 ) {\n\t\t\t\t// Adjust indent of all \"first\" list items in inserted data.\n\t\t\t\twhile ( item && item.is( 'element', 'listItem' ) ) {\n\t\t\t\t\titem._setAttribute( 'listIndent', item.getAttribute( 'listIndent' ) + indentChange );\n\n\t\t\t\t\titem = item.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Helper function that converts children of a given `<li>` view element into corresponding model elements.\n// The function maintains proper order of elements if model `listItem` is split during the conversion\n// due to block children conversion.\n//\n// @param {module:engine/model/element~Element} listItemModel List item model element to which converted children will be inserted.\n// @param {Iterable.<module:engine/view/node~Node>} viewChildren View elements which will be converted.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n// @returns {module:engine/model/position~Position} Position on which next elements should be inserted after children conversion.\nfunction viewToModelListItemChildrenConverter( listItemModel, viewChildren, conversionApi ) {\n\tconst { writer, schema } = conversionApi;\n\n\t// A position after the last inserted `listItem`.\n\tlet nextPosition = writer.createPositionAfter( listItemModel );\n\n\t// Check all children of the converted `<li>`. At this point we assume there are no \"whitespace\" view text nodes\n\t// in view list, between view list items. This should be handled by `<ul>` and `<ol>` converters.\n\tfor ( const child of viewChildren ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\t// If the children is a list, we will insert its conversion result after currently handled `listItem`.\n\t\t\t// Then, next insertion position will be set after all the new list items (and maybe other elements if\n\t\t\t// something split list item).\n\t\t\t//\n\t\t\t// If this is a list, we expect that some `listItem`s and possibly other blocks will be inserted, however `.modelCursor`\n\t\t\t// should be set after last `listItem` (or block). This is why it feels safe to use it as `nextPosition`\n\t\t\tnextPosition = conversionApi.convertItem( child, nextPosition ).modelCursor;\n\t\t} else {\n\t\t\t// If this is not a list, try inserting content at the end of the currently handled `listItem`.\n\t\t\tconst result = conversionApi.convertItem( child, writer.createPositionAt( listItemModel, 'end' ) );\n\n\t\t\t// It may end up that the current `listItem` becomes split (if that content cannot be inside `listItem`). For example:\n\t\t\t//\n\t\t\t// <li><p>Foo</p></li>\n\t\t\t//\n\t\t\t// will be converted to:\n\t\t\t//\n\t\t\t// <listItem></listItem><paragraph>Foo</paragraph><listItem></listItem>\n\t\t\t//\n\t\t\tconst convertedChild = result.modelRange.start.nodeAfter;\n\t\t\tconst wasSplit = convertedChild && convertedChild.is( 'element' ) && !schema.checkChild( listItemModel, convertedChild.name );\n\n\t\t\tif ( wasSplit ) {\n\t\t\t\t// As `lastListItem` got split, we need to update it to the second part of the split `listItem` element.\n\t\t\t\t//\n\t\t\t\t// `modelCursor` should be set to a position where the conversion should continue. There are multiple possible scenarios\n\t\t\t\t// that may happen. Usually, `modelCursor` (marked as `#` below) would point to the second list item after conversion:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><p>Foo</p></li>` -> `<listItem></listItem><paragraph>Foo</paragraph><listItem>#</listItem>`\n\t\t\t\t//\n\t\t\t\t// However, in some cases, like auto-paragraphing, the position is placed at the end of the block element:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><div>Foo</div></li>` -> `<listItem></listItem><paragraph>Foo#</paragraph><listItem></listItem>`\n\t\t\t\t//\n\t\t\t\t// or after an element if another element broken auto-paragraphed element:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><div><h2>Foo</h2></div></li>` -> `<listItem></listItem><heading1>Foo</heading1>#<listItem></listItem>`\n\t\t\t\t//\n\t\t\t\t// We need to check for such cases and use proper list item and position based on it.\n\t\t\t\t//\n\t\t\t\tif ( result.modelCursor.parent.is( 'element', 'listItem' ) ) {\n\t\t\t\t\t// (1).\n\t\t\t\t\tlistItemModel = result.modelCursor.parent;\n\t\t\t\t} else {\n\t\t\t\t\t// (2), (3).\n\t\t\t\t\tlistItemModel = findNextListItem( result.modelCursor );\n\t\t\t\t}\n\n\t\t\t\tnextPosition = writer.createPositionAfter( listItemModel );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nextPosition;\n}\n\n// Helper function that seeks for a next list item starting from given `startPosition`.\nfunction findNextListItem( startPosition ) {\n\tconst treeWalker = new TreeWalker( { startPosition } );\n\n\tlet value;\n\n\tdo {\n\t\tvalue = treeWalker.next();\n\t} while ( !value.value.item.is( 'element', 'listItem' ) );\n\n\treturn value.value.item;\n}\n\n// Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\nfunction hoistNestedLists( nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, conversionApi, model ) {\n\t// Find correct previous model list item element.\n\t// The element has to have either same or smaller indent than given reference indent.\n\t// This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n\t// Keep in mind that such element might not be found, if removed item was the first item.\n\tconst prevModelItem = getSiblingListItem( modelRemoveStartPosition.nodeBefore, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tlistIndent: nextIndent,\n\t\tfoo: 'b'\n\t} );\n\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\n\t// Indent of found element or `null` if the element has not been found.\n\tconst prevIndent = prevModelItem ? prevModelItem.getAttribute( 'listIndent' ) : null;\n\n\tlet insertPosition;\n\n\tif ( !prevModelItem ) {\n\t\t// If element has not been found, simply insert lists at the position where the removed item was:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n\t\t//   1.1 --------       <--- this is reference indent.\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1.1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t// 1.2 --------\n\t\tinsertPosition = viewRemoveStartPosition;\n\t} else if ( prevIndent == nextIndent ) {\n\t\t// If element has been found and has same indent as reference indent it means that nested items should\n\t\t// become siblings of found element:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------       <--- this is `prevModelItem`.\n\t\t// 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n\t\t//   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n\t\t//   2.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------\n\t\t//   2.1 --------\n\t\t//   2.2 --------\n\t\tconst prevViewList = mapper.toViewElement( prevModelItem ).parent;\n\t\tinsertPosition = viewWriter.createPositionAfter( prevViewList );\n\t} else {\n\t\t// If element has been found and has smaller indent as reference indent it means that nested items\n\t\t// should become nested items of found item:\n\t\t//\n\t\t// 1 --------           <--- this is `prevModelItem`.\n\t\t//   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n\t\t//     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n\t\t// because following item may have indent bigger only by one. But this is fixed by postfixer.\n\t\tconst modelPosition = model.createPositionAt( prevModelItem, 'end' );\n\t\tinsertPosition = mapper.toViewPosition( modelPosition );\n\t}\n\n\tinsertPosition = positionAfterUiElements( insertPosition );\n\n\t// Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n\t// are inserted after the first list (no need to recalculate insertion position for them).\n\tfor ( const child of [ ...viewRemovedItem.getChildren() ] ) {\n\t\tif ( isList( child ) ) {\n\t\t\tinsertPosition = viewWriter.move( viewWriter.createRangeOn( child ), insertPosition ).end;\n\n\t\t\tmergeViewLists( viewWriter, child, child.nextSibling );\n\t\t\tmergeViewLists( viewWriter, child.previousSibling, child );\n\t\t}\n\t}\n}\n\n// Checks if view element is a list type (ul or ol).\n//\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean}\nfunction isList( viewElement ) {\n\treturn viewElement.is( 'element', 'ol' ) || viewElement.is( 'element', 'ul' );\n}\n\n// Calculates the indent value for a list item. Handles HTML compliant and non-compliant lists.\n//\n// Also, fixes non HTML compliant lists indents:\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> LI (parent LIs: 0)                      |-> LI     (indent: 0)\n//\t\t    |-> OL                                  |-> OL\n//\t\t        |-> OL                                  |\n//\t\t        |   |-> OL                              |\n//\t\t        |       |-> OL                          |\n//\t\t        |           |-> LI (parent LIs: 1)      |-> LI (indent: 1)\n//\t\t        |-> LI (parent LIs: 1)                  |-> LI (indent: 1)\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> OL                                      |\n//\t\t    |-> OL                                  |\n//\t\t         |-> OL                             |\n//\t\t             |-> LI (parent LIs: 0)         |-> LI        (indent: 0)\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> LI (parent LIs: 0)                      |-> LI         (indent: 0)\n//\t\t|-> OL                                          |-> OL\n//\t\t    |-> LI (parent LIs: 0)                          |-> LI (indent: 1)\n//\n// @param {module:engine/view/element~Element} listItem\n// @param {Object} conversionStore\n// @returns {Number}\nfunction getIndent( listItem ) {\n\tlet indent = 0;\n\n\tlet parent = listItem.parent;\n\n\twhile ( parent ) {\n\t\t// Each LI in the tree will result in an increased indent for HTML compliant lists.\n\t\tif ( parent.is( 'element', 'li' ) ) {\n\t\t\tindent++;\n\t\t} else {\n\t\t\t// If however the list is nested in other list we should check previous sibling of any of the list elements...\n\t\t\tconst previousSibling = parent.previousSibling;\n\n\t\t\t// ...because the we might need increase its indent:\n\t\t\t//\t\tbefore:                           fixed list:\n\t\t\t//\t\tOL                                OL\n\t\t\t//\t\t|-> LI (parent LIs: 0)            |-> LI         (indent: 0)\n\t\t\t//\t\t|-> OL                                |-> OL\n\t\t\t//\t\t    |-> LI (parent LIs: 0)                |-> LI (indent: 1)\n\t\t\tif ( previousSibling && previousSibling.is( 'element', 'li' ) ) {\n\t\t\t\tindent++;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n\n\treturn indent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listediting\n */\n\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nimport {\n\tcleanList,\n\tcleanListItem,\n\tmodelViewInsertion,\n\tmodelViewChangeType,\n\tmodelViewMergeAfterChangeType,\n\tmodelViewMergeAfter,\n\tmodelViewRemove,\n\tmodelViewSplitOnInsert,\n\tmodelViewChangeIndent,\n\tmodelChangePostFixer,\n\tmodelIndentPasteFixer,\n\tviewModelConverter,\n\tmodelToViewPosition,\n\tviewToModelPosition\n} from './converters';\n\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n *\n * It registers the `'numberedList'`, `'bulletedList'`, `'indentList'` and `'outdentList'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ListEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Schema.\n\t\t// Note: in case `$block` will ever be allowed in `listItem`, keep in mind that this feature\n\t\t// uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n\t\t// If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\t\teditor.model.schema.register( 'listItem', {\n\t\t\tinheritAllFrom: '$block',\n\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n\t\t} );\n\n\t\t// Converters.\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\teditor.model.document.registerPostFixer( writer => modelChangePostFixer( editor.model, writer ) );\n\n\t\tediting.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t\tdata.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\n\t\tediting.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\t\tediting.mapper.on( 'viewToModelPosition', viewToModelPosition( editor.model ) );\n\t\tdata.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewChangeType, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewMergeAfterChangeType, { priority: 'low' } );\n\t\t\t\tdispatcher.on( 'attribute:listIndent:listItem', modelViewChangeIndent( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove:listItem', modelViewRemove( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove', modelViewMergeAfter, { priority: 'low' } );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'element:ul', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:ol', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', cleanListItem, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', viewModelConverter );\n\t\t\t} );\n\n\t\t// Fix indentation of pasted items.\n\t\teditor.model.on( 'insertContent', modelIndentPasteFixer, { priority: 'high' } );\n\n\t\t// Register commands for numbered and bulleted list.\n\t\teditor.commands.add( 'numberedList', new ListCommand( editor, 'numbered' ) );\n\t\teditor.commands.add( 'bulletedList', new ListCommand( editor, 'bulleted' ) );\n\n\t\t// Register commands for indenting.\n\t\teditor.commands.add( 'indentList', new IndentCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'outdentList', new IndentCommand( editor, 'backward' ) );\n\n\t\tconst viewDocument = editing.view.document;\n\n\t\t// Overwrite default Enter key behavior.\n\t\t// If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.model.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty ) {\n\t\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\n\t\t// Overwrite default Backspace key behavior.\n\t\t// If Backspace key is pressed with selection collapsed on first position in first list item, outdent it. #83\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t// Check conditions from those that require less computations like those immediately available.\n\t\t\tif ( data.direction !== 'backward' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = this.editor.model.document.selection;\n\n\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\t\tif ( !firstPosition.isAtStart ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst positionParent = firstPosition.parent;\n\n\t\t\tif ( positionParent.name !== 'listItem' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst previousIsAListItem = positionParent.previousSibling && positionParent.previousSibling.name === 'listItem';\n\n\t\t\tif ( previousIsAListItem ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\tdata.preventDefault();\n\t\t\tevt.stop();\n\t\t}, { priority: 'high' } );\n\n\t\tconst getCommandExecuter = commandName => {\n\t\t\treturn ( data, cancel ) => {\n\t\t\t\tconst command = this.editor.commands.get( commandName );\n\n\t\t\t\tif ( command.isEnabled ) {\n\t\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\teditor.keystrokes.set( 'Tab', getCommandExecuter( 'indentList' ) );\n\t\teditor.keystrokes.set( 'Shift+Tab', getCommandExecuter( 'outdentList' ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst commands = this.editor.commands;\n\n\t\tconst indent = commands.get( 'indent' );\n\t\tconst outdent = commands.get( 'outdent' );\n\n\t\tif ( indent ) {\n\t\t\tindent.registerChildCommand( commands.get( 'indentList' ) );\n\t\t}\n\n\t\tif ( outdent ) {\n\t\t\toutdent.registerChildCommand( commands.get( 'outdentList' ) );\n\t\t}\n\t}\n}\n\nfunction getViewListItemLength( element ) {\n\tlet length = 1;\n\n\tfor ( const child of element.getChildren() ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\tfor ( const item of child.getChildren() ) {\n\t\t\t\tlength += getViewListItemLength( item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listui\n */\n\nimport { createUIComponent } from './utils';\n\nimport numberedListIcon from '../theme/icons/numberedlist.svg';\nimport bulletedListIcon from '../theme/icons/bulletedlist.svg';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The list UI feature. It introduces the `'numberedList'` and `'bulletedList'` buttons that\n * allow to convert paragraphs to and from list items and indent or outdent them.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst t = this.editor.t;\n\n\t\t// Create two buttons and link them with numberedList and bulletedList commands.\n\t\tcreateUIComponent( this.editor, 'numberedList', t( 'Numbered List' ), numberedListIcon );\n\t\tcreateUIComponent( this.editor, 'bulletedList', t( 'Bulleted List' ), bulletedListIcon );\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 1 0-1.04 0H.302a2 2 0 1 1 3.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 0 1 .75-.75h9.5a.75.75 0 1 1 0 1.5h-9.5a.75.75 0 0 1-.75-.75z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/list\n */\n\nimport ListEditing from './listediting';\nimport ListUI from './listui';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The list feature.\n *\n * This is a \"glue\" plugin that loads the {@link module:list/listediting~ListEditing list editing feature}\n * and {@link module:list/listui~ListUI list UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class List extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ListEditing, ListUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'List';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The block autoformatting engine. It allows to format various block patterns. For example,\n * it can be configured to turn a paragraph starting with `*` and followed by a space into a list item.\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the {@link module:autoformat/blockautoformatediting~blockAutoformatEditing `blockAutoformatEditing`} documentation\n * to learn how to create custom block autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n *\n * @module autoformat/blockautoformatediting\n */\n\n/**\n * Creates a listener triggered on {@link module:engine/model/document~Document#event:change:data `change:data`} event in the document.\n * Calls the callback when inserted text matches the regular expression or the command name\n * if provided instead of the callback.\n *\n * Examples of usage:\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the command name:\n *\n *\t\tblockAutoformatEditing( editor, plugin, /^\\- $/, 'heading1' );\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the callback:\n *\n *\t\tblockAutoformatEditing( editor, plugin, /^\\- $/, ( context ) => {\n *\t\t\tconst { match } = context;\n *\t\t\tconst headingLevel = match[ 1 ].length;\n *\n *\t\t\teditor.execute( 'heading', {\n *\t\t\t\tformatId: `heading${ headingLevel }`\n *\t\t\t} );\n * \t\t} );\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {module:autoformat/autoformat~Autoformat} plugin The autoformat plugin instance.\n * @param {RegExp} pattern The regular expression to execute on just inserted text. The regular expression is tested against the text\n * from the beginning until the caret position.\n * @param {Function|String} callbackOrCommand The callback to execute or the command to run when the text is matched.\n * In case of providing the callback, it receives the following parameter:\n * * {Object} match RegExp.exec() result of matching the pattern to inserted text.\n */\nexport default function blockAutoformatEditing( editor, plugin, pattern, callbackOrCommand ) {\n\tlet callback;\n\tlet command = null;\n\n\tif ( typeof callbackOrCommand == 'function' ) {\n\t\tcallback = callbackOrCommand;\n\t} else {\n\t\t// We assume that the actual command name was provided.\n\t\tcommand = editor.commands.get( callbackOrCommand );\n\n\t\tcallback = () => {\n\t\t\teditor.execute( callbackOrCommand );\n\t\t};\n\t}\n\n\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t\tif ( command && !command.isEnabled || !plugin.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst range = first( editor.model.document.selection.getRanges() );\n\n\t\tif ( !range.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( batch.type == 'transparent' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst changes = Array.from( editor.model.document.differ.getChanges() );\n\t\tconst entry = changes[ 0 ];\n\n\t\t// Typing is represented by only a single change.\n\t\tif ( changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blockToFormat = entry.position.parent;\n\n\t\t// Block formatting should be disabled in codeBlocks (#5800).\n\t\tif ( blockToFormat.is( 'element', 'codeBlock' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case a command is bound, do not re-execute it over an existing block style which would result with a style removal.\n\t\t// Instead just drop processing so that autoformat trigger text is not lost. E.g. writing \"# \" in a level 1 heading.\n\t\tif ( command && command.value === true ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstNode = blockToFormat.getChild( 0 );\n\t\tconst firstNodeRange = editor.model.createRangeOn( firstNode );\n\n\t\t// Range is only expected to be within or at the very end of the first text node.\n\t\tif ( !firstNodeRange.containsRange( range ) && !range.end.isEqual( firstNodeRange.end ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = pattern.exec( firstNode.data.substr( 0, range.end.offset ) );\n\n\t\t// ...and this text node's data match the pattern.\n\t\tif ( !match ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\t\teditor.model.enqueueChange( writer => {\n\t\t\t// Matched range.\n\t\t\tconst start = writer.createPositionAt( blockToFormat, 0 );\n\t\t\tconst end = writer.createPositionAt( blockToFormat, match[ 0 ].length );\n\t\t\tconst range = new LiveRange( start, end );\n\n\t\t\tconst wasChanged = callback( { match } );\n\n\t\t\t// Remove matched text.\n\t\t\tif ( wasChanged !== false ) {\n\t\t\t\twriter.remove( range );\n\t\t\t}\n\n\t\t\trange.detach();\n\t\t} );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * The inline autoformatting engine. It allows to format various inline patterns. For example,\n * it can be configured to make \"foo\" bold when typed `**foo**` (the `**` markers will be removed).\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the {@link module:autoformat/inlineautoformatediting~inlineAutoformatEditing `inlineAutoformatEditing`} documentation\n * to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n *\n * @module autoformat/inlineautoformatediting\n */\n\n/**\n * Enables autoformatting mechanism for a given {@link module:core/editor/editor~Editor}.\n *\n * It formats the matched text by applying the given model attribute or by running the provided formatting callback.\n * On every {@link module:engine/model/document~Document#event:change:data data change} in the model document\n * the autoformatting engine checks the text on the left of the selection\n * and executes the provided action if the text matches given criteria (regular expression or callback).\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {module:autoformat/autoformat~Autoformat} plugin The autoformat plugin instance.\n * @param {Function|RegExp} testRegexpOrCallback The regular expression or callback to execute on text.\n * Provided regular expression *must* have three capture groups. The first and the third capture group\n * should match opening and closing delimiters. The second capture group should match the text to format.\n *\n *\t\t// Matches the `**bold text**` pattern.\n *\t\t// There are three capturing groups:\n *\t\t// - The first to match the starting `**` delimiter.\n *\t\t// - The second to match the text to format.\n *\t\t// - The third to match the ending `**` delimiter.\n *\t\tinlineAutoformatEditing( editor, plugin, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, formatCallback );\n *\n * When a function is provided instead of the regular expression, it will be executed with the text to match as a parameter.\n * The function should return proper \"ranges\" to delete and format.\n *\n *\t\t{\n *\t\t\tremove: [\n *\t\t\t\t[ 0, 1 ],\t// Remove the first letter from the given text.\n *\t\t\t\t[ 5, 6 ]\t// Remove the 6th letter from the given text.\n *\t\t\t],\n *\t\t\tformat: [\n *\t\t\t\t[ 1, 5 ]\t// Format all letters from 2nd to 5th.\n *\t\t\t]\n *\t\t}\n *\n * @param {Function} formatCallback A callback to apply actual formatting.\n * It should return `false` if changes should not be applied (e.g. if a command is disabled).\n *\n *\t\tinlineAutoformatEditing( editor, plugin, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, ( writer, rangesToFormat ) => {\n *\t\t\tconst command = editor.commands.get( 'bold' );\n *\n *\t\t\tif ( !command.isEnabled ) {\n *\t\t\t\treturn false;\n *\t\t\t}\n *\n *\t\t\tconst validRanges = editor.model.schema.getValidRanges( rangesToFormat, 'bold' );\n *\n *\t\t\tfor ( let range of validRanges ) {\n *\t\t\t\twriter.setAttribute( 'bold', true, range );\n *\t\t\t}\n *\t\t} );\n */\nexport default function inlineAutoformatEditing( editor, plugin, testRegexpOrCallback, formatCallback ) {\n\tlet regExp;\n\tlet testCallback;\n\n\tif ( testRegexpOrCallback instanceof RegExp ) {\n\t\tregExp = testRegexpOrCallback;\n\t} else {\n\t\ttestCallback = testRegexpOrCallback;\n\t}\n\n\t// A test callback run on changed text.\n\ttestCallback = testCallback || ( text => {\n\t\tlet result;\n\t\tconst remove = [];\n\t\tconst format = [];\n\n\t\twhile ( ( result = regExp.exec( text ) ) !== null ) {\n\t\t\t// There should be full match and 3 capture groups.\n\t\t\tif ( result && result.length < 4 ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet {\n\t\t\t\tindex,\n\t\t\t\t'1': leftDel,\n\t\t\t\t'2': content,\n\t\t\t\t'3': rightDel\n\t\t\t} = result;\n\n\t\t\t// Real matched string - there might be some non-capturing groups so we need to recalculate starting index.\n\t\t\tconst found = leftDel + content + rightDel;\n\t\t\tindex += result[ 0 ].length - found.length;\n\n\t\t\t// Start and End offsets of delimiters to remove.\n\t\t\tconst delStart = [\n\t\t\t\tindex,\n\t\t\t\tindex + leftDel.length\n\t\t\t];\n\t\t\tconst delEnd = [\n\t\t\t\tindex + leftDel.length + content.length,\n\t\t\t\tindex + leftDel.length + content.length + rightDel.length\n\t\t\t];\n\n\t\t\tremove.push( delStart );\n\t\t\tremove.push( delEnd );\n\n\t\t\tformat.push( [ index + leftDel.length, index + leftDel.length + content.length ] );\n\t\t}\n\n\t\treturn {\n\t\t\tremove,\n\t\t\tformat\n\t\t};\n\t} );\n\n\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t\tif ( batch.type == 'transparent' || !plugin.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\t// Do nothing if selection is not collapsed.\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst changes = Array.from( model.document.differ.getChanges() );\n\t\tconst entry = changes[ 0 ];\n\n\t\t// Typing is represented by only a single change.\n\t\tif ( changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focus = selection.focus;\n\t\tconst block = focus.parent;\n\t\tconst { text, range } = getTextAfterCode( model.createRange( model.createPositionAt( block, 0 ), focus ), model );\n\t\tconst testOutput = testCallback( text );\n\t\tconst rangesToFormat = testOutputToRanges( range.start, testOutput.format, model );\n\t\tconst rangesToRemove = testOutputToRanges( range.start, testOutput.remove, model );\n\n\t\tif ( !( rangesToFormat.length && rangesToRemove.length ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\t\tmodel.enqueueChange( writer => {\n\t\t\t// Apply format.\n\t\t\tconst hasChanged = formatCallback( writer, rangesToFormat );\n\n\t\t\t// Strict check on `false` to have backward compatibility (when callbacks were returning `undefined`).\n\t\t\tif ( hasChanged === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove delimiters - use reversed order to not mix the offsets while removing.\n\t\t\tfor ( const range of rangesToRemove.reverse() ) {\n\t\t\t\twriter.remove( range );\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n// Converts output of the test function provided to the inlineAutoformatEditing and converts it to the model ranges\n// inside provided block.\n//\n// @private\n// @param {module:engine/model/position~Position} start\n// @param {Array.<Array>} arrays\n// @param {module:engine/model/model~Model} model\nfunction testOutputToRanges( start, arrays, model ) {\n\treturn arrays\n\t\t.filter( array => ( array[ 0 ] !== undefined && array[ 1 ] !== undefined ) )\n\t\t.map( array => {\n\t\t\treturn model.createRange( start.getShiftedBy( array[ 0 ] ), start.getShiftedBy( array[ 1 ] ) );\n\t\t} );\n}\n\n// Returns the last text line after the last code element from the given range.\n// It is similar to {@link module:typing/utils/getlasttextline.getLastTextLine `getLastTextLine()`},\n// but it ignores any text before the last `code`.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/model~Model} model\n// @returns {module:typing/utils/getlasttextline~LastTextLineData}\nfunction getTextAfterCode( range, model ) {\n\tlet start = range.start;\n\n\tconst text = Array.from( range.getItems() ).reduce( ( rangeText, node ) => {\n\t\t// Trim text to a last occurrence of an inline element and update range start.\n\t\tif ( !( node.is( '$text' ) || node.is( '$textProxy' ) ) || node.getAttribute( 'code' ) ) {\n\t\t\tstart = model.createPositionAfter( node );\n\n\t\t\treturn '';\n\t\t}\n\n\t\treturn rangeText + node.data;\n\t}, '' );\n\n\treturn { text, range: model.createRange( start, range.end ) };\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module autoformat/autoformat\n */\n\nimport blockAutoformatEditing from './blockautoformatediting';\nimport inlineAutoformatEditing from './inlineautoformatediting';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * Enables a set of predefined autoformatting actions.\n *\n * For a detailed overview, check the {@glink features/autoformat Autoformatting feature documentation}\n * and the {@glink api/autoformat package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Autoformat extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Autoformat';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tthis._addListAutoformats();\n\t\tthis._addBasicStylesAutoformats();\n\t\tthis._addHeadingAutoformats();\n\t\tthis._addBlockQuoteAutoformats();\n\t\tthis._addCodeBlockAutoformats();\n\t}\n\n\t/**\n\t * Adds autoformatting related to the {@link module:list/list~List}.\n\t *\n\t * When typed:\n\t * - `* ` or `- ` &ndash; A paragraph will be changed to a bulleted list.\n\t * - `1. ` or `1) ` &ndash; A paragraph will be changed to a numbered list (\"1\" can be any digit or a list of digits).\n\t *\n\t * @private\n\t */\n\t_addListAutoformats() {\n\t\tconst commands = this.editor.commands;\n\n\t\tif ( commands.get( 'bulletedList' ) ) {\n\t\t\tblockAutoformatEditing( this.editor, this, /^[*-]\\s$/, 'bulletedList' );\n\t\t}\n\n\t\tif ( commands.get( 'numberedList' ) ) {\n\t\t\tblockAutoformatEditing( this.editor, this, /^1[.|)]\\s$/, 'numberedList' );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to the {@link module:basic-styles/bold~Bold},\n\t * {@link module:basic-styles/italic~Italic}, {@link module:basic-styles/code~Code}\n\t * and {@link module:basic-styles/strikethrough~Strikethrough}\n\t *\n\t * When typed:\n\t * - `**foobar**` &ndash; `**` characters are removed and `foobar` is set to bold,\n\t * - `__foobar__` &ndash; `__` characters are removed and `foobar` is set to bold,\n\t * - `*foobar*` &ndash; `*` characters are removed and `foobar` is set to italic,\n\t * - `_foobar_` &ndash; `_` characters are removed and `foobar` is set to italic,\n\t * - ``` `foobar` &ndash; ``` ` ``` characters are removed and `foobar` is set to code,\n\t * - `~~foobar~~` &ndash; `~~` characters are removed and `foobar` is set to strikethrough.\n\t *\n\t * @private\n\t */\n\t_addBasicStylesAutoformats() {\n\t\tconst commands = this.editor.commands;\n\n\t\tif ( commands.get( 'bold' ) ) {\n\t\t\tconst boldCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'bold' );\n\n\t\t\tinlineAutoformatEditing( this.editor, this, /(\\*\\*)([^*]+)(\\*\\*)$/g, boldCallback );\n\t\t\tinlineAutoformatEditing( this.editor, this, /(__)([^_]+)(__)$/g, boldCallback );\n\t\t}\n\n\t\tif ( commands.get( 'italic' ) ) {\n\t\t\tconst italicCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'italic' );\n\n\t\t\t// The italic autoformatter cannot be triggered by the bold markers, so we need to check the\n\t\t\t// text before the pattern (e.g. `(?:^|[^\\*])`).\n\t\t\tinlineAutoformatEditing( this.editor, this, /(?:^|[^*])(\\*)([^*_]+)(\\*)$/g, italicCallback );\n\t\t\tinlineAutoformatEditing( this.editor, this, /(?:^|[^_])(_)([^_]+)(_)$/g, italicCallback );\n\t\t}\n\n\t\tif ( commands.get( 'code' ) ) {\n\t\t\tconst codeCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'code' );\n\n\t\t\tinlineAutoformatEditing( this.editor, this, /(`)([^`]+)(`)$/g, codeCallback );\n\t\t}\n\n\t\tif ( commands.get( 'strikethrough' ) ) {\n\t\t\tconst strikethroughCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'strikethrough' );\n\n\t\t\tinlineAutoformatEditing( this.editor, this, /(~~)([^~]+)(~~)$/g, strikethroughCallback );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:heading/heading~Heading}.\n\t *\n\t * It is using a number at the end of the command name to associate it with the proper trigger:\n\t *\n\t * * `heading` with value `heading1` will be executed when typing `#`,\n\t * * `heading` with value `heading2` will be executed when typing `##`,\n\t * * ... up to `heading6` and `######`.\n\t *\n\t * @private\n\t */\n\t_addHeadingAutoformats() {\n\t\tconst command = this.editor.commands.get( 'heading' );\n\n\t\tif ( command ) {\n\t\t\tcommand.modelElements\n\t\t\t\t.filter( name => name.match( /^heading[1-6]$/ ) )\n\t\t\t\t.forEach( modelName => {\n\t\t\t\t\tconst level = modelName[ 7 ];\n\t\t\t\t\tconst pattern = new RegExp( `^(#{${ level }})\\\\s$` );\n\n\t\t\t\t\tblockAutoformatEditing( this.editor, this, pattern, () => {\n\t\t\t\t\t\t// Should only be active if command is enabled and heading style associated with pattern is inactive.\n\t\t\t\t\t\tif ( !command.isEnabled || command.value === modelName ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.editor.execute( 'heading', { value: modelName } );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:block-quote/blockquote~BlockQuote}.\n\t *\n\t * When typed:\n\t * * `> ` &ndash; A paragraph will be changed to a block quote.\n\t *\n\t * @private\n\t */\n\t_addBlockQuoteAutoformats() {\n\t\tif ( this.editor.commands.get( 'blockQuote' ) ) {\n\t\t\tblockAutoformatEditing( this.editor, this, /^>\\s$/, 'blockQuote' );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:code-block/codeblock~CodeBlock}.\n\t *\n\t * When typed:\n\t * - `` ``` `` &ndash; A paragraph will be changed to a code block.\n\t *\n\t * @private\n\t */\n\t_addCodeBlockAutoformats() {\n\t\tif ( this.editor.commands.get( 'codeBlock' ) ) {\n\t\t\tblockAutoformatEditing( this.editor, this, /^```$/, 'codeBlock' );\n\t\t}\n\t}\n}\n\n// Helper function for getting `inlineAutoformatEditing` callbacks that checks if command is enabled.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {String} attributeKey\n// @returns {Function}\nfunction getCallbackFunctionForInlineAutoformat( editor, attributeKey ) {\n\treturn ( writer, rangesToFormat ) => {\n\t\tconst command = editor.commands.get( attributeKey );\n\n\t\tif ( !command.isEnabled ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst validRanges = editor.model.schema.getValidRanges( rangesToFormat, attributeKey );\n\n\t\tfor ( const range of validRanges ) {\n\t\t\twriter.setAttribute( attributeKey, true, range );\n\t\t}\n\n\t\t// After applying attribute to the text, remove given attribute from the selection.\n\t\t// This way user is able to type a text without attribute used by auto formatter.\n\t\twriter.removeSelectionAttribute( attributeKey );\n\t};\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x551a=['destroy','initPlugins','_updatePlaceholder','low','document','placeholder','model','data','getRoot','childCount','initialData','end','processor','getChild','focus','plugins','create','createRoot','init','defaultPlugins','viewDocument','editing','name','change:placeholder','setSelection','ready','set','assign','placeholderElement','view','fire','config','then'];(function(_0x345874,_0x551a69){const _0x3e147f=function(_0x1a25e9){while(--_0x1a25e9){_0x345874['push'](_0x345874['shift']());}};_0x3e147f(++_0x551a69);}(_0x551a,0x140));const _0x3e14=function(_0x345874,_0x551a69){_0x345874=_0x345874-0x0;let _0x3e147f=_0x551a[_0x345874];return _0x3e147f;};import _0xe9918e from'@ckeditor/ckeditor5-core/src/editor/editor';import _0x3be9d5 from'@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';import _0x150919 from'@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';import _0x2b9e4d from'./commenteditorui';import _0x1efc8b from'@ckeditor/ckeditor5-utils/src/observablemixin';import _0x4e2a84 from'@ckeditor/ckeditor5-utils/src/mix';import{enablePlaceholder as _0x8b7312,disablePlaceholder as _0x529c70}from'@ckeditor/ckeditor5-engine/src/view/placeholder';import _0x5284ac from'@ckeditor/ckeditor5-essentials/src/essentials';import _0x1b09cd from'@ckeditor/ckeditor5-paragraph/src/paragraph';import _0x1dbca7 from'@ckeditor/ckeditor5-basic-styles/src/bold';import _0x3762dc from'@ckeditor/ckeditor5-basic-styles/src/italic';import _0x3d94f1 from'@ckeditor/ckeditor5-list/src/list';import _0x1311eb from'@ckeditor/ckeditor5-autoformat/src/autoformat';export default class ut extends _0xe9918e{constructor(_0x4cdc07={}){(_0x4cdc07=Object[_0x3e14('0x4')]({},_0x4cdc07))['plugins']||(_0x4cdc07[_0x3e14('0x19')]=ut['defaultPlugins']),super(_0x4cdc07),this['ui']=new _0x2b9e4d(this),this[_0x3e14('0x3')](_0x3e14('0xf'),''),this[_0x3e14('0x10')][_0x3e14('0xe')]['on']('change',()=>this['_updatePlaceholder'](),{'priority':_0x3e14('0xd')}),this['on'](_0x3e14('0x0'),()=>this[_0x3e14('0xc')]()),this[_0x3e14('0x10')][_0x3e14('0xe')][_0x3e14('0x1b')](),this['data'][_0x3e14('0x16')]=new _0x150919(this[_0x3e14('0x11')][_0x3e14('0x1e')]);}[_0x3e14('0x1a')](){const _0x47b2e4=this[_0x3e14('0x8')]['get'](_0x3e14('0x14'))||'';return this[_0x3e14('0xb')]()[_0x3e14('0x9')](()=>this['ui'][_0x3e14('0x1c')]())['then'](()=>this[_0x3e14('0x11')][_0x3e14('0x1c')](_0x47b2e4))['then'](()=>this[_0x3e14('0x7')](_0x3e14('0x2')));}['destroy'](){return super[_0x3e14('0xa')]()[_0x3e14('0x9')](()=>this['ui'][_0x3e14('0xa')]());}[_0x3e14('0x18')](){this['model']['change'](_0x30bd1a=>{const _0x1fa41d=this[_0x3e14('0x10')][_0x3e14('0xe')][_0x3e14('0x12')](),_0x480d65=_0x1fa41d['getChild'](_0x1fa41d['childCount']-0x1);_0x30bd1a[_0x3e14('0x1')](_0x480d65,_0x3e14('0x15')),this[_0x3e14('0x1f')][_0x3e14('0x6')]['focus']();});}[_0x3e14('0xc')](){const _0x1b5761=this[_0x3e14('0x1f')][_0x3e14('0x6')],_0x2ee8cc=_0x1b5761[_0x3e14('0xe')][_0x3e14('0x12')](),_0x4423d3=_0x2ee8cc[_0x3e14('0x17')](0x0);_0x2ee8cc[_0x3e14('0x13')]>0x1||!_0x4423d3||'p'!=_0x4423d3[_0x3e14('0x20')]?this[_0x3e14('0x5')]&&(_0x529c70(_0x1b5761,this[_0x3e14('0x5')]),this[_0x3e14('0x5')]=void 0x0):(_0x8b7312({'view':_0x1b5761,'element':_0x4423d3,'text':this[_0x3e14('0xf')]}),this['placeholderElement']=_0x4423d3);}}_0x4e2a84(ut,_0x1efc8b),_0x4e2a84(ut,_0x3be9d5),ut[_0x3e14('0x1d')]=[_0x5284ac,_0x1311eb,_0x1b09cd,_0x1dbca7,_0x3762dc,_0x3d94f1];","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0x5be759 from'@ckeditor/ckeditor5-ui/src/view';import gt from'@ckeditor/ckeditor5-ui/src/viewcollection';import ut from'../commenteditor/commenteditor';import _0x1ca537 from'@ckeditor/ckeditor5-ui/src/button/buttonview';import _0x2b296c from'@ckeditor/ckeditor5-utils/src/focustracker';import Bt from'@ckeditor/ckeditor5-ui/src/focuscycler';import _0x597895 from'@ckeditor/ckeditor5-utils/src/keystrokehandler';import Ot from'@ckeditor/ckeditor5-core/theme/icons/check.svg';import St from'@ckeditor/ckeditor5-core/theme/icons/cancel.svg';export default class Mt extends _0x5be759{constructor(_0x3ba593,_0x1ad749={}){super(_0x3ba593);const {t:t}=_0x3ba593;this['editor']=new ut(_0x1ad749),this['keystrokes']=new _0x597895(),this['focusTracker']=new _0x2b296c(),this['set']('value',_0x1ad749['initialData']||''),this['set']('disabledSubmit',!0x1),this['set']('showButtons',!0x0),this['set']('placeholder',t('Reply...')),this['submitButtonView']=this['_createSubmitButton'](),this['cancelButtonView']=this['_createCancelButton'](),this['setTemplate']({'tag':'div','attributes':{'class':['ck-comment__input-wrapper']},'children':[{'tag':'div','attributes':{'class':['ck-comment__input-actions',this['bindTemplate']['if']('showButtons','ck-comment__input-actions--active')]},'children':[this['submitButtonView'],this['cancelButtonView']]}]}),this['keystrokes']['set']('Esc',(_0x46fd44,_0x5a051e)=>{this['cancelButtonView']['fire']('execute'),_0x5a051e();}),this['on']('submit',(_0x337d4f,_0x462881)=>{_0x462881['length']>0xfa0?(alert(t({'string':'Comment\\x20content\\x20is\\x20too\\x20long.\\x20Your\\x20comment\\x20has\\x20%0\\x20characters\\x20but\\x20the\\x20limit\\x20is\\x20%1\\x20characters.','id':'TOO_LONG_COMMENT_ALERT'},[_0x462881['length'],0xfa0])),_0x337d4f['stop']()):this['editor']['setData']('');},{'priority':'high'});}['render'](){super['render']();const {editor:_0x1fa377,element:_0x96d57d}=this;this['keystrokes']['listenTo'](_0x96d57d),this['focusTracker']['add'](_0x96d57d),this['_editorCreationPromise']=_0x1fa377['create']()['then'](()=>{_0x96d57d['insertBefore'](_0x1fa377['ui']['element'],_0x96d57d['firstChild']),_0x1fa377['model']['document']['on']('change',()=>this['value']=_0x1fa377['getData']()),_0x1fa377['bind']('placeholder')['to'](this),this['_initializeFocusCycling'](_0x1fa377),this['fire']('editorReady');});}['focus'](){this['editor']['focus']();}async['destroy'](){this['_isDestroyed']||(this['_isDestroyed']=!0x0,this['isRendered']&&(await this['_editorCreationPromise'],await this['editor']['destroy']()),await super['destroy']());}['_createSubmitButton'](){const _0x5b2b2e=new _0x1ca537(this['locale']),{t:t}=this['locale'];return _0x5b2b2e['extendTemplate']({'attributes':{'class':['ck-comment__input-actions--submit']}}),_0x5b2b2e['label']=t('Submit'),_0x5b2b2e['icon']=Ot,_0x5b2b2e['on']('execute',()=>{this['fire']('submit',this['value']);}),_0x5b2b2e['bind']('isEnabled')['to'](this,'value',this,'disabledSubmit',(_0x12cb64,_0x166cad)=>!_0x166cad&&!!_0x12cb64['trim']()),_0x5b2b2e;}['_createCancelButton'](){const _0x1dbc01=new _0x1ca537(this['locale']),{t:t}=this['locale'];return _0x1dbc01['extendTemplate']({'attributes':{'class':['ck-comment__input-actions--cancel']}}),_0x1dbc01['label']=t('Cancel'),_0x1dbc01['icon']=St,_0x1dbc01['on']('execute',()=>{this['editor']['setData'](''),this['fire']('cancel');}),_0x1dbc01;}['_initializeFocusCycling'](_0x119149){const _0x593aa7=this['focusTracker'],_0x2b18c2=new gt();[_0x119149['ui']['view'],this['submitButtonView'],this['cancelButtonView']]['forEach'](_0x487287=>{_0x2b18c2['add'](_0x487287),_0x593aa7['add'](_0x487287['element']);});const _0x4318b0=new Bt({'focusables':_0x2b18c2,'focusTracker':_0x593aa7});this['keystrokes']['set']('tab',(_0x297ec3,_0x18f7d9)=>{_0x4318b0['focusNext'](),_0x18f7d9();},{'priority':'low'}),this['keystrokes']['set']('shift\\x20+\\x20tab',(_0x2f08ac,_0x2d30cd)=>{_0x4318b0['focusPrevious'](),_0x2d30cd();},{'priority':'low'});}}","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nexport default class DataTransfer {\n\tconstructor( nativeDataTransfer ) {\n\t\t/**\n\t\t * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<File>} #files\n\t\t */\n\t\tthis.files = getFiles( nativeDataTransfer );\n\n\t\t/**\n\t\t * The native DataTransfer object.\n\t\t *\n\t\t * @private\n\t\t * @member {DataTransfer} #_native\n\t\t */\n\t\tthis._native = nativeDataTransfer;\n\t}\n\n\t/**\n\t * Returns an array of available native content types.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tget types() {\n\t\treturn this._native.types;\n\t}\n\n\t/**\n\t * Gets data from the data transfer by its mime type.\n\t *\n\t *\t\tdataTransfer.getData( 'text/plain' );\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @returns {String}\n\t */\n\tgetData( type ) {\n\t\treturn this._native.getData( type );\n\t}\n\n\t/**\n\t * Sets data in the data transfer.\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @param {String} data\n\t */\n\tsetData( type, data ) {\n\t\tthis._native.setData( type, data );\n\t}\n}\n\nfunction getFiles( nativeDataTransfer ) {\n\t// DataTransfer.files and items are Array-like and might not have an iterable interface.\n\tconst files = nativeDataTransfer.files ? Array.from( nativeDataTransfer.files ) : [];\n\tconst items = nativeDataTransfer.items ? Array.from( nativeDataTransfer.items ) : [];\n\n\tif ( files.length ) {\n\t\treturn files;\n\t}\n\t// Chrome have empty DataTransfer.files, but let get files through the items interface.\n\treturn items\n\t\t.filter( item => item.kind === 'file' )\n\t\t.map( item => item.getAsFile() );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport DataTransfer from './datatransfer';\n\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClipboardObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst viewDocument = this.document;\n\n\t\tthis.domEventType = [ 'paste', 'copy', 'cut', 'drop', 'dragover' ];\n\n\t\tthis.listenTo( viewDocument, 'paste', handleInput, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'drop', handleInput, { priority: 'low' } );\n\n\t\tfunction handleInput( evt, data ) {\n\t\t\tdata.preventDefault();\n\n\t\t\tconst targetRanges = data.dropRange ? [ data.dropRange ] : Array.from( viewDocument.selection.getRanges() );\n\n\t\t\tconst eventInfo = new EventInfo( viewDocument, 'clipboardInput' );\n\n\t\t\tviewDocument.fire( eventInfo, {\n\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\ttargetRanges\n\t\t\t} );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tdata.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tconst evtData = {\n\t\t\tdataTransfer: new DataTransfer( domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer )\n\t\t};\n\n\t\tif ( domEvent.type == 'drop' ) {\n\t\t\tevtData.dropRange = getDropViewRange( this.view, domEvent );\n\t\t}\n\n\t\tthis.fire( domEvent.type, domEvent, evtData );\n\t}\n}\n\nfunction getDropViewRange( view, domEvent ) {\n\tconst domDoc = domEvent.target.ownerDocument;\n\tconst x = domEvent.clientX;\n\tconst y = domEvent.clientY;\n\tlet domRange;\n\n\t// Webkit & Blink.\n\tif ( domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint( x, y ) ) {\n\t\tdomRange = domDoc.caretRangeFromPoint( x, y );\n\t}\n\t// FF.\n\telse if ( domEvent.rangeParent ) {\n\t\tdomRange = domDoc.createRange();\n\t\tdomRange.setStart( domEvent.rangeParent, domEvent.rangeOffset );\n\t\tdomRange.collapse( true );\n\t}\n\n\tif ( domRange ) {\n\t\treturn view.domConverter.domRangeToView( domRange );\n\t} else {\n\t\treturn view.document.selection.getFirstRange();\n\t}\n}\n\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboard\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport ClipboardObserver from './clipboardobserver';\n\n/**\n * The plugin detects user intentions for pasting plain text.\n *\n * For example, it detects <kbd>ctrl/cmd</kbd> + <kbd>shift</kbd> + <kbd>ctrl/v</kbd> keystroke.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class PastePlainText extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PastePlainText';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet shiftPressed = false;\n\n\t\tview.addObserver( ClipboardObserver );\n\n\t\tthis.listenTo( viewDocument, 'keydown', ( evt, data ) => {\n\t\t\tshiftPressed = data.shiftKey;\n\t\t} );\n\n\t\tthis.listenTo( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tif ( shiftPressed ) {\n\t\t\t\tdata.asPlainText = true;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboard\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport PastePlainText from './pasteplaintext';\n\nimport ClipboardObserver from './clipboardobserver';\n\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\n\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\n\n/**\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\n *\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Clipboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Clipboard';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ PastePlainText ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * Data processor used to convert pasted HTML to a view structure.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n\t\t */\n\t\tthis._htmlDataProcessor = new HtmlDataProcessor( viewDocument );\n\n\t\tview.addObserver( ClipboardObserver );\n\n\t\t// The clipboard paste pipeline.\n\n\t\t// Pasting and dropping is disabled when editor is read-only.\n\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\tthis.listenTo( viewDocument, 'clipboardInput', evt => {\n\t\t\tif ( editor.isReadOnly ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\t\t\tlet content = '';\n\n\t\t\tif ( dataTransfer.getData( 'text/html' ) ) {\n\t\t\t\tcontent = normalizeClipboardHtml( dataTransfer.getData( 'text/html' ) );\n\t\t\t} else if ( dataTransfer.getData( 'text/plain' ) ) {\n\t\t\t\tcontent = plainTextToHtml( dataTransfer.getData( 'text/plain' ) );\n\t\t\t}\n\n\t\t\tcontent = this._htmlDataProcessor.toView( content );\n\n\t\t\tconst eventInfo = new EventInfo( this, 'inputTransformation' );\n\t\t\tthis.fire( eventInfo, {\n\t\t\t\tcontent,\n\t\t\t\tdataTransfer,\n\t\t\t\tasPlainText: data.asPlainText\n\t\t\t} );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( this, 'inputTransformation', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tconst dataController = this.editor.data;\n\t\t\t\tconst model = this.editor.model;\n\n\t\t\t\t// Convert the pasted content to a model document fragment.\n\t\t\t\t// Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n\t\t\t\t// we use the $clipboardHolder item.\n\t\t\t\tconst modelFragment = dataController.toModel( data.content, '$clipboardHolder' );\n\n\t\t\t\tif ( modelFragment.childCount == 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Plain text can be determined based on event flag (#7799) or auto detection (#1006). If detected\n\t\t\t\t// preserve selection attributes on pasted items.\n\t\t\t\tif ( data.asPlainText || isPlainTextFragment( modelFragment ) ) {\n\t\t\t\t\t// Consider only formatting attributes.\n\t\t\t\t\tconst textAttributes = new Map( Array.from( modelDocument.selection.getAttributes() ).filter(\n\t\t\t\t\t\tkeyValuePair => editor.model.schema.getAttributeProperties( keyValuePair[ 0 ] ).isFormatting\n\t\t\t\t\t) );\n\n\t\t\t\t\tmodel.change( writer => {\n\t\t\t\t\t\tconst range = writer.createRangeIn( modelFragment );\n\n\t\t\t\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\t\t\t\tif ( item.is( '$text' ) || item.is( '$textProxy' ) ) {\n\t\t\t\t\t\t\t\twriter.setAttributes( textAttributes, item );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tmodel.insertContent( modelFragment );\n\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// The clipboard copy/cut pipeline.\n\n\t\tfunction onCopyCut( evt, data ) {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\n\t\t\tdata.preventDefault();\n\n\t\t\tconst content = editor.data.toView( editor.model.getSelectedContent( modelDocument.selection ) );\n\n\t\t\tviewDocument.fire( 'clipboardOutput', { dataTransfer, content, method: evt.name } );\n\t\t}\n\n\t\tthis.listenTo( viewDocument, 'copy', onCopyCut, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'cut', ( evt, data ) => {\n\t\t\t// Cutting is disabled when editor is read-only.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\t\tif ( editor.isReadOnly ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t} else {\n\t\t\t\tonCopyCut( evt, data );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( viewDocument, 'clipboardOutput', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tdata.dataTransfer.setData( 'text/html', this._htmlDataProcessor.toData( data.content ) );\n\t\t\t\tdata.dataTransfer.setData( 'text/plain', viewToPlainText( data.content ) );\n\t\t\t}\n\n\t\t\tif ( data.method == 'cut' ) {\n\t\t\t\teditor.model.deleteContent( modelDocument.selection );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n/**\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\n * in case the transformation functions needs access to a raw clipboard data.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Boolean} data.asPlainText If set to `true` content is pasted as plain text.\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n\n// Returns true if specified `documentFragment` represents a plain text.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment\n// @returns {Boolean}\nfunction isPlainTextFragment( documentFragment ) {\n\tif ( documentFragment.childCount > 1 ) {\n\t\treturn false;\n\t}\n\n\tconst child = documentFragment.getChild( 0 );\n\n\treturn [ ...child.getAttributeKeys() ].length == 0;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml( text ) {\n\ttext = text\n\t\t// Encode <>.\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t// Creates a paragraph for each double line break.\n\t\t.replace( /\\r?\\n\\r?\\n/g, '</p><p>' )\n\t\t// Creates a line break for each single line break.\n\t\t.replace( /\\r?\\n/g, '<br>' )\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t\t.replace( /^\\s/, '&nbsp;' )\n\t\t.replace( /\\s$/, '&nbsp;' )\n\t\t// Preserve other subsequent spaces now.\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\n\n\tif ( text.includes( '</p><p>' ) || text.includes( '<br>' ) ) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = `<p>${ text }</p>`;\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData( data ) {\n\treturn data\n\t\t.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\t\t// Handle the most popular and problematic case when even a single space becomes an nbsp;.\n\t\t\t// Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n\t\t\tif ( spaces.length == 1 ) {\n\t\t\t\treturn ' ';\n\t\t\t}\n\n\t\t\treturn spaces;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst BOLD = 'bold';\n\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BoldEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\t// Allow bold attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: BOLD } );\n\t\teditor.model.schema.setAttributeProperties( BOLD, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: BOLD,\n\t\t\tview: 'strong',\n\t\t\tupcastAlso: [\n\t\t\t\t'b',\n\t\t\t\tviewElement => {\n\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n\n\t\t\t\t\tif ( !fontWeight ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Value of the `font-weight` attribute can be defined as a string or a number.\n\t\t\t\t\tif ( fontWeight == 'bold' || Number( fontWeight ) >= 600 ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create bold command.\n\t\teditor.commands.add( BOLD, new AttributeCommand( editor, BOLD ) );\n\n\t\t// Set the Ctrl+B keystroke.\n\t\teditor.keystrokes.set( 'CTRL+B', BOLD );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport boldIcon from '../../theme/icons/bold.svg';\n\nconst BOLD = 'bold';\n\n/**\n * The bold UI feature. It introduces the Bold button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( BOLD, locale => {\n\t\t\tconst command = editor.commands.get( BOLD );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Bold' ),\n\t\t\t\ticon: boldIcon,\n\t\t\t\tkeystroke: 'CTRL+B',\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( BOLD );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEditing from './bold/boldediting';\nimport BoldUI from './bold/boldui';\n\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Bold extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ BoldEditing, BoldUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Bold';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic/italicediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst ITALIC = 'italic';\n\n/**\n * The italic editing feature.\n *\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\n * which renders to the view as an `<i>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ItalicEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow italic attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: ITALIC } );\n\t\teditor.model.schema.setAttributeProperties( ITALIC, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: ITALIC,\n\t\t\tview: 'i',\n\t\t\tupcastAlso: [\n\t\t\t\t'em',\n\t\t\t\t{\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t'font-style': 'italic'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create italic command.\n\t\teditor.commands.add( ITALIC, new AttributeCommand( editor, ITALIC ) );\n\n\t\t// Set the Ctrl+I keystroke.\n\t\teditor.keystrokes.set( 'CTRL+I', ITALIC );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic/italicui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport italicIcon from '../../theme/icons/italic.svg';\n\nconst ITALIC = 'italic';\n\n/**\n * The italic UI feature. It introduces the Italic button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( ITALIC, locale => {\n\t\t\tconst command = editor.commands.get( ITALIC );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Italic' ),\n\t\t\t\ticon: italicIcon,\n\t\t\t\tkeystroke: 'CTRL+I',\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( ITALIC );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.586 14.633l.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 1 1 0 1.2H5.304a.6.6 0 0 1 0-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 0 0-.281-.823 1.12 1.12 0 0 0-.442-.296H8.15a.6.6 0 0 1 0-1.2h6.443a.6.6 0 1 1 0 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEditing from './italic/italicediting';\nimport ItalicUI from './italic/italicui';\n\n/**\n * The italic feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Italic extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ItalicEditing, ItalicUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Italic';\n\t}\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\n/* globals document */\n\nimport Template from '../template';\nimport ViewCollection from '../viewcollection';\n\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\n\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\n * from the DOM structure of the editor, like panels, icons, etc.\n *\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n * These views will render in a container placed directly in the `<body>` element.\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\n *\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\n * elements created directly in the body and remove it when the last body collection will be\n * {@link ~BodyCollection#detachFromDom detached}.\n *\n * @extends module:ui/viewcollection~ViewCollection\n */\nexport default class BodyCollection extends ViewCollection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n\t */\n\tconstructor( locale, initialItems = [] ) {\n\t\tsuper( initialItems );\n\n\t\t/**\n\t\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n\t\t * See the view {@link module:ui/view~View#locale locale} property.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\t}\n\n\t/**\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n\t * the body collection.\n\t */\n\tattachToDom() {\n\t\t/**\n\t\t * The element holding elements of the body region.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement} #_bodyCollectionContainer\n\t\t */\n\t\tthis._bodyCollectionContainer = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset_all',\n\t\t\t\t\t'ck-body',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tdir: this.locale.uiLanguageDirection\n\t\t\t},\n\t\t\tchildren: this\n\t\t} ).render();\n\n\t\tlet wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( !wrapper ) {\n\t\t\twrapper = createElement( document, 'div', { class: 'ck-body-wrapper' } );\n\t\t\tdocument.body.appendChild( wrapper );\n\t\t}\n\n\t\twrapper.appendChild( this._bodyCollectionContainer );\n\t}\n\n\t/**\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n\t * anymore to clean-up the DOM structure.\n\t */\n\tdetachFromDom() {\n\t\tsuper.destroy();\n\n\t\tif ( this._bodyCollectionContainer ) {\n\t\t\tthis._bodyCollectionContainer.remove();\n\t\t}\n\n\t\tconst wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( wrapper && wrapper.childElementCount == 0 ) {\n\t\t\twrapper.remove();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/createelement\n */\n\nimport isIterable from '../isiterable';\nimport { isString } from 'lodash-es';\n\n/**\n * Creates element with attributes and children.\n *\n *\t\tcreateElement( document, 'p' ); // <p>\n *\t\tcreateElement( document, 'p', { class: 'foo' } ); // <p class=\"foo\">\n *\t\tcreateElement( document, 'p', null, 'foo' ); // <p>foo</p>\n *\t\tcreateElement( document, 'p', null, [ 'foo', createElement( document, 'img' ) ] ); // <p>foo<img></p>\n *\n * @param {Document} doc Document used to create element.\n * @param {String} name Name of the element.\n * @param {Object} [attributes] Object keys will become attributes keys and object values will became attributes values.\n * @param {Node|String|Array.<Node|String>} [children] Child or array of children. Strings will be automatically turned\n * into Text nodes.\n * @returns {Element} Created element.\n */\nexport default function createElement( doc, name, attributes = {}, children = [] ) {\n\tconst namespace = attributes && attributes.xmlns;\n\tconst element = namespace ? doc.createElementNS( namespace, name ) : doc.createElement( name );\n\n\tfor ( const key in attributes ) {\n\t\telement.setAttribute( key, attributes[ key ] );\n\t}\n\n\tif ( isString( children ) || !isIterable( children ) ) {\n\t\tchildren = [ children ];\n\t}\n\n\tfor ( let child of children ) {\n\t\tif ( isString( child ) ) {\n\t\t\tchild = doc.createTextNode( child );\n\t\t}\n\n\t\telement.appendChild( child );\n\t}\n\n\treturn element;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/componentfactory\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that names are case insensitive.\n *\n *\t\t// The editor provides localization tools for the factory.\n *\t\tconst factory = new ComponentFactory( editor );\n *\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\n *\n *\t\t// An instance of FooView.\n *\t\tconst fooInstance = factory.create( 'foo' );\n *\n *\t\t// Names are case insensitive so this is also allowed:\n *\t\tconst barInstance = factory.create( 'Bar' );\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\nexport default class ComponentFactory {\n\t/**\n\t * Creates an instance of the factory.\n\t *\n\t * @constructor\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance that the factory belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Registered component factories.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._components = new Map();\n\t}\n\n\t/**\n\t * Returns an iterator of registered component names. Names are returned in lower case.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tfor ( const value of this._components.values() ) {\n\t\t\tyield value.originalName;\n\t\t}\n\t}\n\n\t/**\n\t * Registers a component factory function that will be used by the\n\t * {@link #create create} method and called with the\n\t * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n\t * allowing localization of the {@link module:ui/view~View view}.\n\t *\n\t * @param {String} name The name of the component.\n\t * @param {Function} callback The callback that returns the component.\n\t */\n\tadd( name, callback ) {\n\t\tthis._components.set( getNormalized( name ), { callback, originalName: name } );\n\t}\n\n\t/**\n\t * Creates an instance of a component registered in the factory under a specific name.\n\t *\n\t * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n\t * the previously {@link #add added} factory function, allowing localization of the\n\t * {@link module:ui/view~View view}.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {module:ui/view~View} The instantiated component view.\n\t */\n\tcreate( name ) {\n\t\tif ( !this.has( name ) ) {\n\t\t\t/**\n\t\t\t * The required component is not registered in the component factory. Please make sure\n\t\t\t * the provided name is correct and the component has been correctly\n\t\t\t * {@link #add added} to the factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-missing\n\t\t\t * @param {String} name The name of the missing component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-missing',\n\t\t\t\tthis,\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\treturn this._components.get( getNormalized( name ) ).callback( this.editor.locale );\n\t}\n\n\t/**\n\t * Checks if a component of a given name is registered in the factory.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {Boolean}\n\t */\n\thas( name ) {\n\t\treturn this._components.has( getNormalized( name ) );\n\t}\n}\n\n//\n// Ensures that the component name used as the key in the internal map is in lower case.\n//\n// @private\n// @param {String} name\n// @returns {String}\nfunction getNormalized( name ) {\n\treturn String( name ).toLowerCase();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editorui\n */\n\n/* globals console */\n\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class EditorUI {\n\t/**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor that the UI belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n\t\t * to register factories of specific UI components.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n\t\t */\n\t\tthis.componentFactory = new ComponentFactory( editor );\n\n\t\t/**\n\t\t * Stores the information about the editor UI focus and propagates it so various plugins and components\n\t\t * are unified as a focus group.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Stores all editable elements used by the editor instance.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,HTMLElement>}\n\t\t */\n\t\tthis._editableElementsMap = new Map();\n\n\t\t// Informs UI components that should be refreshed after layout change.\n\t\tthis.listenTo( editor.editing.view.document, 'layoutChanged', () => this.update() );\n\t}\n\n\t/**\n\t * The main (outermost) DOM element of the editor UI.\n\t *\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n\t * it is the editable element itself (as there is no other wrapper). However, in\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n\t *\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n\t * considers to be its main DOM element.\n\t *\n\t * @readonly\n\t * @member {HTMLElement|null} #element\n\t */\n\tget element() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n\t *\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n\t */\n\tupdate() {\n\t\tthis.fire( 'update' );\n\t}\n\n\t/**\n\t * Destroys the UI.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis.focusTracker.destroy();\n\n\t\t// Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n\t\tfor ( const domElement of this._editableElementsMap.values() ) {\n\t\t\tdomElement.ckeditorInstance = null;\n\t\t}\n\n\t\tthis._editableElementsMap = new Map();\n\t}\n\n\t/**\n\t * Store the native DOM editable element used by the editor under\n\t * a unique name.\n\t *\n\t * @param {String} rootName The unique name of the editable element.\n\t * @param {HTMLElement} domElement The native DOM editable element.\n\t */\n\tsetEditableElement( rootName, domElement ) {\n\t\tthis._editableElementsMap.set( rootName, domElement );\n\n\t\t// Put a reference to the CKEditor instance in the editable native DOM element.\n\t\t// It helps 3rd–party software (browser extensions, other libraries) access and recognize\n\t\t// CKEditor 5 instances (editing roots) and use their API (there is no global editor\n\t\t// instance registry).\n\t\tif ( !domElement.ckeditorInstance ) {\n\t\t\tdomElement.ckeditorInstance = this.editor;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the editable editor element with the given name or null if editable does not exist.\n\t *\n\t * @param {String} [rootName=main] The editable name.\n\t * @returns {HTMLElement|undefined}\n\t */\n\tgetEditableElement( rootName = 'main' ) {\n\t\treturn this._editableElementsMap.get( rootName );\n\t}\n\n\t/**\n\t * Returns array of names of all editor editable elements.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetEditableElementsNames() {\n\t\treturn this._editableElementsMap.keys();\n\t}\n\n\t/**\n\t * Stores all editable elements used by the editor instance.\n\t *\n\t * @protected\n\t * @deprecated\n\t * @member {Map.<String,HTMLElement>}\n\t */\n\tget _editableElements() {\n\t\t/**\n\t\t * The {@link module:core/editor/editorui~EditorUI#_editableElements `EditorUI#_editableElements`} property has been\n\t\t * deprecated and will be removed in the near future. Please use {@link #setEditableElement `setEditableElement()`} and\n\t\t * {@link #getEditableElement `getEditableElement()`} methods instead.\n\t\t *\n\t\t * @error editor-ui-deprecated-editable-elements\n\t\t * @param {module:core/editor/editorui~EditorUI} editorUI Editor UI instance the deprecated property belongs to.\n\t\t */\n\t\tconsole.warn(\n\t\t\t'editor-ui-deprecated-editable-elements: ' +\n\t\t\t'The EditorUI#_editableElements property has been deprecated and will be removed in the near future.',\n\t\t\t{ editorUI: this } );\n\n\t\treturn this._editableElementsMap;\n\t}\n\n\t/**\n\t * Fired when the editor UI is ready.\n\t *\n\t * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Fired whenever the UI (all related components) should be refreshed.\n\t *\n\t * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n\t * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n\t *\n\t * @event update\n\t */\n}\n\nmix( EditorUI, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\n\nimport View from '../view';\n\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\nexport default class EditableUIView extends View {\n\t/**\n\t * Creates an instance of EditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n\t * should create it. Otherwise, the existing element should be used.\n\t */\n\tconstructor( locale, editingView, editableElement ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-content',\n\t\t\t\t\t'ck-editor__editable',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tlang: locale.contentLanguage,\n\t\t\t\tdir: locale.contentLanguageDirection\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The name of the editable UI view.\n\t\t *\n\t\t * @member {String} #name\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * Controls whether the editable is focused, i.e. the user is typing in it.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n\t\t *\n\t\t * @private\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis._editableElement = editableElement;\n\n\t\t/**\n\t\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t\t * the view will not render its {@link #template}.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasExternalElement = !!this._editableElement;\n\n\t\t/**\n\t\t * The editing view instance the editable is related to. Editable uses the editing\n\t\t * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n\t\t *\n\t\t * **Note**: The DOM attributes are performed by the editing view and not UI\n\t\t * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n\t\t * the editable DOM element must remain under the full control of the engine to work properly.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:engine/view/view~View}\n\t\t */\n\t\tthis._editingView = editingView;\n\t}\n\n\t/**\n\t * Renders the view by either applying the {@link #template} to the existing\n\t * {@link #_editableElement} or assigning {@link #element} as {@link #_editableElement}.\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template.apply( this.element = this._editableElement );\n\t\t} else {\n\t\t\tthis._editableElement = this.element;\n\t\t}\n\n\t\tthis.on( 'change:isFocused', () => this._updateIsFocusedClasses() );\n\t\tthis._updateIsFocusedClasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template.revert( this._editableElement );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n\t * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n\t *\n\t * @private\n\t */\n\t_updateIsFocusedClasses() {\n\t\tconst editingView = this._editingView;\n\n\t\tif ( editingView.isRenderingInProgress ) {\n\t\t\tupdateAfterRender( this );\n\t\t} else {\n\t\t\tupdate( this );\n\t\t}\n\n\t\tfunction update( view ) {\n\t\t\teditingView.change( writer => {\n\t\t\t\tconst viewRoot = editingView.document.getRoot( view.name );\n\n\t\t\t\twriter.addClass( view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot );\n\t\t\t\twriter.removeClass( view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot );\n\t\t\t} );\n\t\t}\n\n\t\t// In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n\t\t// While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n\t\t// callback and render is called inside the already pending render.\n\t\t// We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1676.\n\t\tfunction updateAfterRender( view ) {\n\t\t\teditingView.once( 'change:isRenderingInProgress', ( evt, name, value ) => {\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tupdate( view );\n\t\t\t\t} else {\n\t\t\t\t\tupdateAfterRender( view );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n\nimport EditableUIView from '../../editableui/editableuiview';\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nexport default class InlineEditableUIView extends EditableUIView {\n\t/**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * will create it. Otherwise, the existing element will be used.\n\t */\n\tconstructor( locale, editingView, editableElement ) {\n\t\tsuper( locale, editingView, editableElement );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\trole: 'textbox',\n\t\t\t\tclass: 'ck-editor__editable_inline'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst editingView = this._editingView;\n\t\tconst t = this.t;\n\n\t\teditingView.change( writer => {\n\t\t\tconst viewRoot = editingView.document.getRoot( this.name );\n\n\t\t\twriter.setAttribute( 'aria-label', t( 'Rich Text Editor, %0', this.name ), viewRoot );\n\t\t} );\n\t}\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0x5a4fec from'@ckeditor/ckeditor5-ui/src/view';import _0x5d9a5e from'@ckeditor/ckeditor5-ui/src/button/buttonview';import Nt from'@ckeditor/ckeditor5-core/theme/icons/check.svg';import Vt from'@ckeditor/ckeditor5-core/theme/icons/cancel.svg';export default class si extends _0x5a4fec{constructor(_0x5768ce){super(_0x5768ce);const {t:t}=_0x5768ce,_0x2c4498=this['bindTemplate'];this['submitView']=this['_createButtonView'](_0x5768ce,t('Yes'),Nt,'submit'),this['cancelView']=this['_createButtonView'](_0x5768ce,t('No'),Vt,'cancel'),this['set']('message',t('Are\\x20you\\x20sure?')),this['setTemplate']({'tag':'div','attributes':{'class':['ck-thread__remove-confirm']},'children':[{'tag':'div','attributes':{'class':'ck-thread__remove-confirm-inner'},'children':[{'tag':'p','children':[{'text':_0x2c4498['to']('message')}]},{'tag':'div','attributes':{'class':'ck-thread__remove-confirm-actions'},'children':[this['submitView'],this['cancelView']]}]}]});}['_createButtonView'](_0x4f5011,_0x3fe6ed,_0x5df786,_0x526d1d){const _0x313b77=new _0x5d9a5e(_0x4f5011);return _0x313b77['label']=_0x3fe6ed,_0x313b77['icon']=_0x5df786,_0x313b77['extendTemplate']({'attributes':{'class':'ck-thread__remove-confirm-'+_0x526d1d}}),_0x313b77['on']('execute',()=>this['fire'](_0x526d1d)),_0x313b77;}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nvar _0x42b5=['set','destroy','fire','element','deregisterChild','message','isConfirm','submit','render','remove','confirmView','registerChild','cancel','_removeConfirm'];(function(_0x2f1e03,_0x42b5ac){var _0x3e8bd4=function(_0x3bb60d){while(--_0x3bb60d){_0x2f1e03['push'](_0x2f1e03['shift']());}};_0x3e8bd4(++_0x42b5ac);}(_0x42b5,0x12a));var _0x3e8b=function(_0x2f1e03,_0x42b5ac){_0x2f1e03=_0x2f1e03-0x0;var _0x3e8bd4=_0x42b5[_0x2f1e03];return _0x3e8bd4;};import _0x11034a from'./confirmview';export default{'showConfirm'(_0x47a58f,_0x562505){return this[_0x3e8b('0x6')]=new _0x11034a(this['locale']),this[_0x3e8b('0x6')][_0x3e8b('0x4')](),this[_0x3e8b('0x6')][_0x3e8b('0x1')]=_0x47a58f,this['confirmView']['once'](_0x3e8b('0x8'),()=>{this[_0x3e8b('0x9')]();}),this[_0x3e8b('0x6')]['once']('submit',()=>{this[_0x3e8b('0x9')]();}),_0x562505['appendChild'](this[_0x3e8b('0x6')]['element']),this[_0x3e8b('0x7')](this[_0x3e8b('0x6')]),this[_0x3e8b('0xa')](_0x3e8b('0x2'),!0x0),new Promise(_0x2fb42b=>this[_0x3e8b('0x6')]['on'](_0x3e8b('0x3'),_0x2fb42b));},'cancelConfirm'(){this[_0x3e8b('0x2')]&&this[_0x3e8b('0x6')][_0x3e8b('0xc')](_0x3e8b('0x8'));},'_removeConfirm'(){this['confirmView'][_0x3e8b('0xd')][_0x3e8b('0x5')](),this[_0x3e8b('0x0')](this['confirmView']),this[_0x3e8b('0x2')]=!0x1,this[_0x3e8b('0x6')][_0x3e8b('0xb')](),delete this[_0x3e8b('0x6')];}};","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0xee249a from'@ckeditor/ckeditor5-core/src/contextplugin';import _0x461ef2 from'@ckeditor/ckeditor5-utils/src/collection';import'../theme/usercolors.css';import _0x4d6326 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';export default class r extends _0xee249a{static get['pluginName'](){return'Users';}constructor(_0x6f4f33){super(_0x6f4f33),_0x6f4f33['config']['define']('users.anonymousUserId','anonymous-user'),_0x6f4f33['config']['define']('users.colorsCount',0x8),this['users']=new _0x461ef2(),this['_locale']=_0x6f4f33['locale'],this['_licenseKeyCheckInterval']=null,this['_lastColor']=0x0,this['_myId']=null,this['decorate']('getOperationAuthor');}['init'](){const _0x135cc2=this['context'];this['licenseKey']=_0x135cc2['config']['get']('licenseKey'),this['_licenseKeyCheckInterval']=setInterval(()=>{let _0x6be246;for(const _0x4962fc in _0x135cc2){const _0x437866=_0x135cc2[_0x4962fc];if('licenseKeyTrial'===_0x437866||'licenseKeyInvalid'===_0x437866||'licenseKeyValid'===_0x437866||'licenseKeyTrialLimit'==_0x437866){delete _0x135cc2[_0x4962fc],_0x6be246=_0x437866;break;}}if('licenseKeyInvalid'===_0x6be246)throw clearInterval(this['_licenseKeyCheckInterval']),new _0x4d6326('invalid-license-key',null);if('licenseKeyTrial'===_0x6be246&&console['info']('You\\x20are\\x20using\\x20the\\x20trial\\x20version\\x20of\\x20CKEditor\\x205\\x20collaboration\\x20plugin\\x20with\\x20limited\\x20usage.\\x20Make\\x20sure\\x20you\\x20will\\x20not\\x20use\\x20it\\x20in\\x20the\\x20production\\x20environment.'),'licenseKeyTrialLimit'===_0x6be246)throw clearInterval(this['_licenseKeyCheckInterval']),new _0x4d6326('trial-license-key-reached-limit',null);'licenseKeyValid'===_0x6be246&&clearInterval(this['_licenseKeyCheckInterval']);},0x3e8);}get['me'](){return null==this['_myId']?null:this['getUser'](this['_myId']);}['addUser'](_0x43ad5e){if(!(_0x43ad5e=Object['assign']({},_0x43ad5e,{'color':this['_getNextColor']()}))['id']||'string'!=typeof _0x43ad5e['id'])throw new _0x4d6326('users-add-invalid-id');if(this['users']['has'](_0x43ad5e['id']))throw new _0x4d6326('users-add-duplicated-id',null,{'id':_0x43ad5e['id']});_0x43ad5e['name']=function(_0x218ca8,_0x912ac0=''){const {t:t}=_0x218ca8;return''==(_0x912ac0=_0x912ac0['trim']())?t('Anonymous'):_0x912ac0;}(this['_locale'],_0x43ad5e['name']);const _0x57367d=new n(_0x43ad5e);return this['users']['add'](_0x57367d),_0x57367d;}['getUser'](_0x234937){return this['users']['get'](_0x234937);}['useAnonymousUser'](){const _0x43b3a4=this['context']['config']['get']('users.anonymousUserId'),{t:t}=this['_locale'];if(this['users']['has'](_0x43b3a4))return;this['addUser']({'id':_0x43b3a4,'name':t('Anonymous')})['_isAnonymous']=!0x0,this['defineMe'](_0x43b3a4);}['defineMe'](_0x4a49a9){if(this['_myId'])throw new _0x4d6326('users-me-already-defined',null);if(!this['getUser'](_0x4a49a9))throw new _0x4d6326('users-me-missing-user',null);this['_myId']=_0x4a49a9;}['getOperationAuthor'](){return this['me'];}['destroy'](){super['destroy'](),clearInterval(this['_licenseKeyCheckInterval']);}['_getNextColor'](){const _0x27d065=this['context']['config']['get']('users.colorsCount');return this['_lastColor']>=_0x27d065&&(this['_lastColor']=0x0),new o(this['_lastColor']++);}}class n{constructor(_0x3ca6e1){this['id']=_0x3ca6e1['id'],this['color']=_0x3ca6e1['color'],this['name']=_0x3ca6e1['name'],this['avatar']=_0x3ca6e1['avatar'],this['_isAnonymous']=!0x1;}get['isAnonymous'](){return this['_isAnonymous'];}get['initials'](){return this['name']['split']('\\x20')['map'](_0x485285=>_0x485285['charAt'](0x0))['slice'](0x0,0x2)['join']('')['toUpperCase']();}}class o{constructor(_0x1810dc){this['_id']=_0x1810dc;}['getBackgroundColorClass'](){return'ck-user__bg-color--'+this['_id'];}['getSelectionClass'](){return'ck-user__selection--'+this['_id'];}['getMarkerClass'](){return'ck-user__marker--'+this['_id'];}}","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./heading.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/pendingactions\n */\n\nimport ContextPlugin from './contextplugin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The list of pending editor actions.\n *\n * This plugin should be used to synchronise plugins that execute long-lasting actions\n * (e.g. file upload) with the editor integration. It gives the developer who integrates the editor\n * an easy way to check if there are any actions pending whenever such information is needed.\n * All plugins that register a pending action also provide a message about the action that is ongoing\n * which can be displayed to the user. This lets them decide if they want to interrupt the action or wait.\n *\n * Adding and updating a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Upload in progress: 0%.' );\n *\n *\t\t// You can update the message:\n * \t\taction.message = 'Upload in progress: 10%.';\n *\n * Removing a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Unsaved changes.' );\n *\n * \t\tpendingActions.remove( action );\n *\n * Getting pending actions:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n *\n * \t\tconst action1 = pendingActions.add( 'Action 1' );\n * \t\tconst action2 = pendingActions.add( 'Action 2' );\n *\n * \t\tpendingActions.first; // Returns action1\n * \t\tArray.from( pendingActions ); // Returns [ action1, action2 ]\n *\n * This plugin is used by features like {@link module:upload/filerepository~FileRepository} to register their ongoing actions\n * and by features like {@link module:autosave/autosave~Autosave} to detect whether there are any ongoing actions.\n * Read more about saving the data in the {@glink builds/guides/integration/saving-data Saving and getting data} guide.\n *\n * @extends module:core/contextplugin~ContextPlugin\n */\nexport default class PendingActions extends ContextPlugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PendingActions';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * Defines whether there is any registered pending action.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #hasAny\n\t\t */\n\t\tthis.set( 'hasAny', false );\n\n\t\t/**\n\t\t * A list of pending actions.\n\t\t *\n\t\t * @private\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis._actions = new Collection( { idProperty: '_id' } );\n\t\tthis._actions.delegate( 'add', 'remove' ).to( this );\n\t}\n\n\t/**\n\t * Adds an action to the list of pending actions.\n\t *\n\t * This method returns an action object with an observable message property.\n\t * The action object can be later used in the {@link #remove} method. It also allows you to change the message.\n\t *\n\t * @param {String} message The action message.\n\t * @returns {Object} An observable object that represents a pending action.\n\t */\n\tadd( message ) {\n\t\tif ( typeof message !== 'string' ) {\n\t\t\t/**\n\t\t\t * The message must be a string.\n\t\t\t *\n\t\t\t * @error pendingactions-add-invalid-message\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'pendingactions-add-invalid-message', this );\n\t\t}\n\n\t\tconst action = Object.create( ObservableMixin );\n\n\t\taction.set( 'message', message );\n\t\tthis._actions.add( action );\n\t\tthis.hasAny = true;\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Removes an action from the list of pending actions.\n\t *\n\t * @param {Object} action An action object.\n\t */\n\tremove( action ) {\n\t\tthis._actions.remove( action );\n\t\tthis.hasAny = !!this._actions.length;\n\t}\n\n\t/**\n\t * Returns the first action from the list or null when list is empty\n\t *\n\t * returns {Object|null} The pending action object.\n\t */\n\tget first() {\n\t\treturn this._actions.get( 0 );\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._actions[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an action is added to the list.\n\t *\n\t * @event add\n\t * @param {Object} action The added action.\n\t */\n\n\t/**\n\t * Fired when an action is removed from the list.\n\t *\n\t * @event remove\n\t * @param {Object} action The removed action.\n\t */\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nvar _0x188a=['destroy','removeCommentThread','getComment','remove','removeComment','listenTo','_localUser','addComment','_isAttached','stopListening','model','updateComment','view'];(function(_0x31839f,_0x188a18){var _0x5d43c1=function(_0x478368){while(--_0x478368){_0x31839f['push'](_0x31839f['shift']());}};_0x5d43c1(++_0x188a18);}(_0x188a,0x134));var _0x5d43=function(_0x31839f,_0x188a18){_0x31839f=_0x31839f-0x0;var _0x5d43c1=_0x188a[_0x31839f];return _0x5d43c1;};import _0x4c1669 from'@ckeditor/ckeditor5-utils/src/observablemixin';import _0x5259e2 from'@ckeditor/ckeditor5-utils/src/mix';export default class ot{constructor(_0x171656,_0x38b896){this[_0x5d43('0x1')]=_0x171656,this[_0x5d43('0x1')][_0x5d43('0xc')]=!0x0,this[_0x5d43('0x3')]=_0x38b896,this['listenTo'](_0x38b896,_0x5d43('0x5'),()=>this['remove']()),this[_0x5d43('0x9')](_0x38b896,_0x5d43('0xb'),(_0xdd6bdd,_0x4c1603)=>this[_0x5d43('0xb')](_0x4c1603)),this[_0x5d43('0x9')](_0x38b896,_0x5d43('0x2'),(_0x358119,_0x13438b,_0x498f0d)=>this[_0x5d43('0x2')](_0x13438b,_0x498f0d)),this['listenTo'](_0x38b896,_0x5d43('0x8'),(_0x191c0c,_0x2c92a6)=>this['removeComment'](_0x2c92a6));}['remove'](){this[_0x5d43('0x1')][_0x5d43('0x7')]();}[_0x5d43('0xb')](_0x278082){this['model'][_0x5d43('0xb')]({'content':_0x278082,'authorId':this[_0x5d43('0x3')][_0x5d43('0xa')]['id']});}[_0x5d43('0x2')](_0x27763c,_0x50257b){this[_0x5d43('0x1')]['getComment'](_0x27763c)['update']({'content':_0x50257b});}['removeComment'](_0x435e27){this[_0x5d43('0x1')][_0x5d43('0x6')](_0x435e27)[_0x5d43('0x7')]();}[_0x5d43('0x4')](){this[_0x5d43('0x0')](),this[_0x5d43('0x1')][_0x5d43('0xc')]=!0x1;}}_0x5259e2(ot,_0x4c1669);","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x5e5b=['MM-DD-YYYY\\x20hh:mmA','[Yesterday]\\x20hh:mmA','dateTimeFormat','[Today]\\x20hh:mmA','invalid-date-time-format'];(function(_0x10db86,_0x5e5ba0){const _0x142441=function(_0x18f478){while(--_0x18f478){_0x10db86['push'](_0x10db86['shift']());}};_0x142441(++_0x5e5ba0);}(_0x5e5b,0xaa));const _0x1424=function(_0x10db86,_0x5e5ba0){_0x10db86=_0x10db86-0x0;let _0x142441=_0x5e5b[_0x10db86];return _0x142441;};import _0x59247c from'date-fns/format';import _0x22ae53 from'date-fns/difference_in_calendar_days';import _0x54b424 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';export default function H(_0x3be520={}){if(void 0x0!==_0x3be520[_0x1424('0x2')]&&'function'!=typeof _0x3be520['dateTimeFormat'])throw new _0x54b424(_0x1424('0x4'));return _0x5bd0c1=>{const _0x5c6d1a=new Date(),_0x30aa30=_0x22ae53(_0x5c6d1a,_0x5bd0c1);return _0x3be520[_0x1424('0x2')]?_0x3be520[_0x1424('0x2')](_0x5bd0c1):_0x59247c(_0x5bd0c1,0x0===_0x30aa30?_0x1424('0x3'):0x1===_0x30aa30?_0x1424('0x1'):_0x30aa30<0x7?'[Last]\\x20dddd\\x20hh:mmA':_0x1424('0x0'));};}","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nvar _0x127a=['content','innerHTML','set','element','change:content','div','ck-annotation__content'];(function(_0x240efa,_0x127ad9){var _0x2a6595=function(_0x186151){while(--_0x186151){_0x240efa['push'](_0x240efa['shift']());}};_0x2a6595(++_0x127ad9);}(_0x127a,0xfb));var _0x2a65=function(_0x240efa,_0x127ad9){_0x240efa=_0x240efa-0x0;var _0x2a6595=_0x127a[_0x240efa];return _0x2a6595;};import _0x22ce96 from'@ckeditor/ckeditor5-ui/src/view';export default class bt extends _0x22ce96{constructor(_0x12e13c){super(_0x12e13c),this[_0x2a65('0x3')](_0x2a65('0x1'),''),this['setTemplate']({'tag':_0x2a65('0x6'),'attributes':{'class':['ck-comment__content',_0x2a65('0x0')]}});}['render'](){super['render'](),this['on'](_0x2a65('0x5'),(_0xe452fd,_0x2f8c87,_0x153bea)=>{this[_0x2a65('0x4')]['innerHTML']=_0x153bea;}),this[_0x2a65('0x4')][_0x2a65('0x2')]=this[_0x2a65('0x1')];}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x9166=['startsWith','slice','join','split','push','match','length','replace','...'];(function(_0x3d3004,_0x9166ad){const _0x55a31f=function(_0x3afe46){while(--_0x3afe46){_0x3d3004['push'](_0x3d3004['shift']());}};_0x55a31f(++_0x9166ad);}(_0x9166,0x165));const _0x55a3=function(_0x3d3004,_0x9166ad){_0x3d3004=_0x3d3004-0x0;let _0x55a31f=_0x9166[_0x3d3004];return _0x55a31f;};export default function Z(_0x566756,{limit:_0x38fdef,suffix:_0x4011d3=_0x55a3('0x2')}){const _0x399b7a=[];let _0x262c64=0x0;const _0x581d38=_0x566756['replace'](/</g,'\\x0a<')[_0x55a3('0x1')](/>/g,'>\\x0a')[_0x55a3('0x1')](/^\\n/g,'')[_0x55a3('0x1')](/\\n$/g,'')[_0x55a3('0x6')]('\\x0a');for(let _0x610cde=0x0;_0x610cde<_0x581d38[_0x55a3('0x0')];_0x610cde++){let _0x586114=_0x581d38[_0x610cde];const _0x33f3b6=K(_0x586114);if(_0x586114[_0x55a3('0x3')]('<')){if(_0x262c64>=_0x38fdef){const _0x3c3cc0=_0x586114[_0x55a3('0x8')](/[a-zA-Z]+/)[0x0];_0x586114[_0x55a3('0x3')]('</')?(_0x399b7a[_0x55a3('0x0')]&&(_0x586114=''),_0x399b7a['pop']()):(_0x399b7a[_0x55a3('0x7')](_0x3c3cc0),_0x586114='');}}else{if(_0x262c64>=_0x38fdef)_0x586114='';else{if(_0x262c64+_0x33f3b6['length']>=_0x38fdef){let _0x3e4b56=_0x38fdef-_0x262c64;if('\\x20'===_0x33f3b6[_0x3e4b56-0x1])_0x3e4b56--;else{const _0x37acac=_0x33f3b6[_0x55a3('0x4')](_0x3e4b56)['indexOf']('\\x20');-0x1!==_0x37acac?_0x3e4b56+=_0x37acac:_0x3e4b56=_0x586114['length'];}_0x586114=_0x33f3b6['slice'](0x0,_0x3e4b56)[_0x55a3('0x5')]('')+_0x4011d3,_0x262c64=_0x38fdef;}else _0x262c64+=_0x33f3b6[_0x55a3('0x0')];}}_0x581d38[_0x610cde]=_0x586114;}return _0x581d38[_0x55a3('0x5')]('\\x0a')[_0x55a3('0x1')](/\\n/g,'');}function K(_0x58a0b2){const _0x217ae8=[];for(let _0x4bc00b=0x0;_0x4bc00b<_0x58a0b2[_0x55a3('0x0')];_0x4bc00b++){const _0x4c4762=_0x58a0b2['substring'](_0x4bc00b)[_0x55a3('0x8')](/^&[a-z0-9#]+;/);if(_0x4c4762){const _0x9948e3=_0x4c4762[0x0];_0x217ae8['push'](_0x9948e3),_0x4bc00b+=_0x9948e3[_0x55a3('0x0')]-0x1;}else _0x217ae8[_0x55a3('0x7')](_0x58a0b2[_0x4bc00b]);}return _0x217ae8;}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x35d4=['element','visibleView','switchToDisplayMode','isCollapsed','bind','isReadOnly','expand','_createCommentContentView','createCollection','switchToEditMode','add','cancel','fire','_config','once','focus','get','editorReady','_model','_createCommentInputView','content','locale','set','collapse','editorConfig','submit','isEditMode','destroy'];(function(_0x2ced10,_0x35d4d5){const _0x23aecf=function(_0x3a77e5){while(--_0x3a77e5){_0x2ced10['push'](_0x2ced10['shift']());}};_0x23aecf(++_0x35d4d5);}(_0x35d4,0x120));const _0x23ae=function(_0x2ced10,_0x35d4d5){_0x2ced10=_0x2ced10-0x0;let _0x23aecf=_0x35d4[_0x2ced10];return _0x23aecf;};import _0x1fcb86 from'@ckeditor/ckeditor5-ui/src/view';import _0x4be3ba from'./commentcontentview';import _0x41ebcd from'./commentinputview';import _0x57f1fc from'../../../utils/trim-html';export default class Et extends _0x1fcb86{constructor(_0x52fd3f,_0x3d2c71,_0x4b09f9){super(_0x52fd3f),this['_model']=_0x3d2c71,this[_0x23ae('0x5')]=_0x4b09f9,this['set']('isEditMode',!0x1),this[_0x23ae('0xe')](_0x23ae('0x17'),!0x0),this['visibleView']=this[_0x23ae('0x0')](),this['visibleView'][_0x23ae('0x2')](this[_0x23ae('0x1b')]());}[_0x23ae('0x1a')](){this[_0x23ae('0x17')]=!0x1;}[_0x23ae('0xf')](){this[_0x23ae('0x12')]||(this[_0x23ae('0x17')]=!0x0);}['focus'](){this[_0x23ae('0x14')]['focus']();}async['destroy'](){await this[_0x23ae('0x15')][_0x23ae('0x8')](0x0)[_0x23ae('0x13')](),super[_0x23ae('0x13')]();}[_0x23ae('0x1')](){this[_0x23ae('0x12')]||(this['isEditMode']=!0x0,this[_0x23ae('0x15')]['remove'](0x0)[_0x23ae('0x13')](),this['visibleView']['add'](this[_0x23ae('0xb')]()));}[_0x23ae('0x16')](){this[_0x23ae('0x12')]&&(this['isEditMode']=!0x1,this[_0x23ae('0x15')]['remove'](0x0)[_0x23ae('0x13')](),this[_0x23ae('0x15')][_0x23ae('0x2')](this[_0x23ae('0x1b')]()));}[_0x23ae('0x1b')](){const _0x1b7790=new _0x4be3ba(this[_0x23ae('0xd')]);return _0x1b7790[_0x23ae('0x18')](_0x23ae('0xc'))['to'](this['_model'],_0x23ae('0xc'),this,_0x23ae('0x17'),(_0x4fc806,_0x4bcf3c)=>_0x4bcf3c?_0x57f1fc(_0x4fc806,{'limit':this[_0x23ae('0x5')]['maxCommentCharsWhenCollapsed']}):_0x4fc806),_0x1b7790;}[_0x23ae('0xb')](){this[_0x23ae('0x5')][_0x23ae('0x10')]||(this[_0x23ae('0x5')][_0x23ae('0x10')]={}),this[_0x23ae('0x5')][_0x23ae('0x10')]['initialData']=this[_0x23ae('0xa')]['content'];const _0x5b71a2=new _0x41ebcd(this[_0x23ae('0xd')],this[_0x23ae('0x5')][_0x23ae('0x10')]);return _0x5b71a2['value']=this[_0x23ae('0xa')][_0x23ae('0xc')],_0x5b71a2[_0x23ae('0x18')]('disabledSubmit')['to'](this[_0x23ae('0xa')],_0x23ae('0x19')),_0x5b71a2['on'](_0x23ae('0x11'),(_0x3a7d40,_0xb21143)=>{this[_0x23ae('0x4')]('updateComment',this[_0x23ae('0xa')]['id'],_0xb21143),this[_0x23ae('0x16')](),this[_0x23ae('0x7')]();}),_0x5b71a2['on'](_0x23ae('0x3'),()=>{this['switchToDisplayMode'](),this[_0x23ae('0x7')]();}),_0x5b71a2[_0x23ae('0x6')](_0x23ae('0x9'),()=>{_0x5b71a2['focus']();}),_0x5b71a2;}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport it from'@ckeditor/ckeditor5-utils/src/mix';import _0x11d1ec from'@ckeditor/ckeditor5-ui/src/button/buttonview';import Et from'./basecommentview';import It from'@ckeditor/ckeditor5-collaboration-core/src/users/view/userview';import Rt from'@ckeditor/ckeditor5-core/theme/icons/pencil.svg';import Vt from'../../../../theme/icons/remove-comment.svg';import Tt from'./confirmmixin';export default class jt extends Et{constructor(_0x51759d,_0x5e216f,_0x509fb7){super(_0x51759d,_0x5e216f,_0x509fb7);const {t:t}=this['locale'];this['set']('actionIndicator',null),this['set']('placeholder',t('Reply...')),this['set']('createdAt',null),this['bind']('createdAt')['to'](_0x5e216f),this['editButton']=this['_createEditButton'](),this['removeButton']=this['_createRemoveButton'](),this['userView']=new It(_0x51759d,_0x5e216f['author']),this['userView']['extendTemplate']({'attributes':{'class':['ck-comment__user','ck-annotation__user']}}),this['listenTo'](_0x5e216f,'change:isRemovable',()=>this['cancelConfirm']()),this['setTemplate'](this['_getTemplate']());}['_getTemplate'](){const _0x250794=this['bindTemplate'];return{'tag':'li','attributes':{'class':['ck-comment__wrapper',_0x250794['if']('isConfirm','ck-comment--remove-confirmation')],'tabindex':-0x1},'children':[{'tag':'div','attributes':{'class':['ck-comment','ck-annotation',_0x250794['if']('isEditMode','ck-comment--edit'),_0x250794['to']('actionIndicator',_0x1486f2=>_0x1486f2?'ck-comment--'+_0x1486f2:'')],'data-author-id':this['_model']['author']['id'],'data-comment-id':this['_model']['id']},'children':[this['userView'],{'tag':'div','attributes':{'class':['ck-comment__main','ck-annotation__main']},'children':[{'tag':'div','attributes':{'class':['ck-comment__info','ck-annotation__info']},'children':[{'tag':'span','children':[{'text':this['userView']['name']}],'attributes':{'class':['ck-comment__info-name','ck-annotation__info-name']}},{'tag':'time','attributes':{'datetime':_0x250794['to']('createdAt'),'class':['ck-comment__info-time','ck-annotation__info-time']},'children':[{'text':_0x250794['to']('createdAt',_0xd7c792=>this['_config']['formatDateTime'](_0xd7c792))}]}]},{'tag':'div','attributes':{'class':['ck-comment__actions','ck-annotation__actions',_0x250794['if']('isEditMode','ck-comment__actions--hidden'),_0x250794['if']('isEditMode','ck-annotation__actions--hidden')]},'children':[this['editButton'],this['removeButton']]},{'tag':'div','attributes':{'class':['ck-annotation__content-wrapper']},'children':this['visibleView']}]}]}]};}['_createEditButton'](){const {t:t}=this['locale'],_0x36fb27=new _0x11d1ec(this['locale']);return _0x36fb27['label']=t('Edit'),_0x36fb27['icon']=Rt,_0x36fb27['extendTemplate']({'attributes':{'class':'ck-comment--edit'}}),_0x36fb27['bind']('isEnabled')['to'](this['_model'],'isReadOnly',_0x452b99=>!_0x452b99),_0x36fb27['bind']('isVisible')['to'](this['_model'],'isEditable'),_0x36fb27['on']('execute',()=>this['switchToEditMode']()),_0x36fb27;}['_createRemoveButton'](){const {t:t}=this['locale'],_0x270a12=new _0x11d1ec(this['locale']);return _0x270a12['label']=t('Remove'),_0x270a12['icon']=Vt,_0x270a12['extendTemplate']({'attributes':{'class':'ck-comment--remove'}}),_0x270a12['bind']('isEnabled')['to'](this['_model'],'isReadOnly',_0x142e56=>!_0x142e56),_0x270a12['bind']('isVisible')['to'](this['_model'],'isRemovable'),_0x270a12['on']('execute',()=>{this['showConfirm'](t('Delete\\x20comment?'),this['element'])['then'](()=>{this['fire']('removeComment',this['_model']['id']);});}),_0x270a12;}['_attachActions'](_0x44f988,_0x6ba498){this['listenTo'](_0x44f988,'mouseenter',()=>this['actionIndicator']=_0x6ba498),this['listenTo'](_0x44f988,'focus',()=>this['actionIndicator']=_0x6ba498),this['listenTo'](_0x44f988,'mouseleave',()=>this['actionIndicator']=null),this['listenTo'](_0x44f988,'blur',()=>this['actionIndicator']=null);}['_createCommentInputView'](){const _0x2cc1b7=super['_createCommentInputView']();return _0x2cc1b7['bind']('placeholder')['to'](this),_0x2cc1b7;}['render'](){super['render'](),this['_attachActions'](this['editButton']['element'],'edit'),this['_attachActions'](this['removeButton']['element'],'remove');}}it(jt,Tt);","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7.3 17.37l-.061.088a1.518 1.518 0 0 1-.934.535l-4.178.663-.806-4.153a1.495 1.495 0 0 1 .187-1.058l.056-.086L8.77 2.639c.958-1.351 2.803-1.076 4.296-.03 1.497 1.047 2.387 2.693 1.433 4.055L7.3 17.37zM9.14 4.728l-5.545 8.346 3.277 2.294 5.544-8.346L9.14 4.728zM6.07 16.512l-3.276-2.295.53 2.73 2.746-.435zM9.994 3.506L13.271 5.8c.316-.452-.16-1.333-1.065-1.966-.905-.634-1.895-.78-2.212-.328zM8 18.5L9.375 17H19v1.5H8z\\\"/></svg>\";","export default \"<!--\\n\\n What you're currently looking at is the source code of a legally protected, proprietary software.\\n CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,\\n all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.\\n\\n Copyright (c) 2003-2019, CKSource Frederico Knabben. All rights reserved.\\n\\n!-->\\n\\n<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.2 7h9.2c.6 0 1 .4 1 1v9.9c0 .5-.4 1-1 1H5.2a1 1 0 0 1-1-1V8c0-.6.4-1 1-1zm1 1.5c-.3 0-.5.2-.5.5v8c0 .3.2.5.5.5h.5c.2 0 .5-.2.5-.5V9c0-.3-.3-.5-.5-.5h-.5zm3.2 0c-.2 0-.5.2-.5.5v8c0 .3.3.5.5.5h.5c.3 0 .5-.2.5-.5V9c0-.3-.2-.5-.5-.5h-.4zm3.5 0c-.2 0-.5.2-.5.5v8c0 .3.3.5.5.5h.5c.3 0 .5-.2.5-.5V9c0-.3-.2-.5-.5-.5h-.5zm-1.4-7.1H8.3L6.5 3.6H3.8c-.5 0-.7.3-.7.8s.2.7.7.7h12c.6 0 .9-.2.9-.7 0-.5-.3-.8-1-.8h-2.4l-1.8-2.2z\\\"/></svg>\\n\";","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nvar _0x128b=['set','destroy','isFocused','focusTracker','showInput','commentInputView','userView','setTemplate','value','div'];(function(_0x4248e6,_0x128b7b){var _0xb6646=function(_0x3cf43b){while(--_0x3cf43b){_0x4248e6['push'](_0x4248e6['shift']());}};_0xb6646(++_0x128b7b);}(_0x128b,0x17a));var _0xb664=function(_0x4248e6,_0x128b7b){_0x4248e6=_0x4248e6-0x0;var _0xb6646=_0x128b[_0x4248e6];return _0xb6646;};import _0x4a731c from'@ckeditor/ckeditor5-ui/src/view';import _0x4107e9 from'./commentinputview';import _0x46081d from'@ckeditor/ckeditor5-collaboration-core/src/users/view/userview';export default class vt extends _0x4a731c{constructor(_0x396be4,_0x1f0447,_0x23679b){super(_0x396be4),this['commentInputView']=new _0x4107e9(_0x396be4,_0x23679b),this[_0xb664('0x7')]['bind']('showButtons')['to'](this[_0xb664('0x7')][_0xb664('0x5')],_0xb664('0x4'),this[_0xb664('0x7')],_0xb664('0x0'),(_0x28f296,_0x506775)=>_0x28f296||!!_0x506775),this[_0xb664('0x2')](_0xb664('0x6'),!0x1),this['userView']=new _0x46081d(_0x396be4,_0x1f0447),this[_0xb664('0x8')]['extendTemplate']({'attributes':{'class':'ck-thread__user'}}),this['commentInputView']['extendTemplate']({'attributes':{'class':'ck-thread__input'}}),this[_0xb664('0x9')]({'tag':_0xb664('0x1'),'attributes':{'class':['ck-comment__input-container',this['bindTemplate']['if'](_0xb664('0x6'),'ck-comment__input-container--active')]},'children':[this['userView'],this[_0xb664('0x7')]]});}['destroy'](){return this['commentInputView'][_0xb664('0x3')]()['then'](()=>super[_0xb664('0x3')]());}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0x628797 from'@ckeditor/ckeditor5-ui/src/view';export default class _t extends _0x628797{constructor(_0x5595d4){super(_0x5595d4);const {t:t}=_0x5595d4,_0x27092c=this['bindTemplate'];this['set']('count'),this['setTemplate']({'tag':'li','attributes':{'class':'ck-thread__comment-count'},'children':[{'text':_0x27092c['to']('count',_0x4f0683=>t({'string':'%0\\x20Comment','plural':'%0\\x20Comments','id':'NUMBER_OF_COMMENTS'},_0x4f0683))}]});}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x208f=['from','commentViews','updateComment','add','isActive','get','destroy','CommentView','setTemplate','count','listenTo','commentUpdated','comments','_config','some','_collapsedCommentsView','length','maxCommentsWhenCollapsed','_model','refreshVisibleViews','_shouldCollapse','_rearrangeCollapse','collapse','delete','locale','remove','ck-thread__comments','isEditMode','insert','_rearrangeExpand','maxThreadTotalWeight','weight','set','delegate','createCollection','_handleRemoveCommentModel','expand','render','_updateHasDirtyComment','editorConfig','removeComment','_handleNewCommentModel','visibleViews','focus','hasDirtyComment'];(function(_0x5e5b2d,_0x208ff8){const _0x5d006c=function(_0x492740){while(--_0x492740){_0x5e5b2d['push'](_0x5e5b2d['shift']());}};_0x5d006c(++_0x208ff8);}(_0x208f,0x1f0));const _0x5d00=function(_0x5e5b2d,_0x208ff8){_0x5e5b2d=_0x5e5b2d-0x0;let _0x5d006c=_0x208f[_0x5e5b2d];return _0x5d006c;};import _0x16554e from'@ckeditor/ckeditor5-ui/src/view';import _0x12427a from'@ckeditor/ckeditor5-utils/src/diff';import _0x2890a9 from'./collapsedcommentsview';import _0x56e19f from'@ckeditor/ckeditor5-utils/src/collection';export default class Ct extends _0x16554e{constructor(_0xd28a13,_0x1113d7,_0x327e88){super(_0xd28a13),this[_0x5d00('0x1f')](_0x5d00('0x2b'),!0x1),this[_0x5d00('0x1f')](_0x5d00('0xf'),_0x1113d7['comments'][_0x5d00('0xf')]),this[_0x5d00('0x1f')]('isActive',!0x1),this[_0x5d00('0x11')]=_0x1113d7,this[_0x5d00('0xc')]=_0x327e88,this[_0x5d00('0x0')]=this[_0x5d00('0x21')](),this['visibleViews']=this['createCollection'](),this[_0x5d00('0xe')]=new _0x2890a9(_0xd28a13),this[_0x5d00('0xe')]['bind'](_0x5d00('0x8'))['to'](this,_0x5d00('0xf'),_0x20add2=>_0x20add2-this['_config'][_0x5d00('0x10')]);for(const _0x4dc079 of _0x1113d7['comments'])this[_0x5d00('0x28')](_0x4dc079);this[_0x5d00('0x9')](_0x1113d7[_0x5d00('0xb')],_0x5d00('0x2'),(_0x29ae4c,_0x4796b9)=>{this['length']++,this[_0x5d00('0x28')](_0x4796b9),this[_0x5d00('0x12')]();}),this['listenTo'](_0x1113d7[_0x5d00('0xb')],'remove',(_0x429a27,_0xf29d77)=>{this[_0x5d00('0xf')]--,this[_0x5d00('0x22')](_0xf29d77),this['refreshVisibleViews']();}),this[_0x5d00('0x9')](_0x1113d7,_0x5d00('0xa'),()=>this[_0x5d00('0x12')]()),this['on']('change:isActive',()=>this[_0x5d00('0x12')]()),this['on']('change:hasDirtyComment',()=>this[_0x5d00('0x12')]()),this[_0x5d00('0x7')]({'tag':'ul','attributes':{'class':[_0x5d00('0x19')]},'children':this[_0x5d00('0x29')]});}get[_0x5d00('0x13')](){return this[_0x5d00('0x11')][_0x5d00('0x1e')]>this[_0x5d00('0xc')][_0x5d00('0x1d')]&&!this[_0x5d00('0x3')]&&!this[_0x5d00('0x2b')];}['render'](){super[_0x5d00('0x24')](),this['refreshVisibleViews']();}[_0x5d00('0x2a')](){this['element'][_0x5d00('0x2a')]();}[_0x5d00('0x5')](){this[_0x5d00('0xe')][_0x5d00('0x5')]();for(const _0x258cf7 of this[_0x5d00('0x0')])_0x258cf7[_0x5d00('0x5')]();super[_0x5d00('0x5')]();}[_0x5d00('0x12')](){this[_0x5d00('0x13')]?this[_0x5d00('0x14')]():this['_rearrangeExpand']();}[_0x5d00('0x28')](_0x1b7237){const _0x229e20=new this[(_0x5d00('0xc'))][(_0x5d00('0x6'))](this[_0x5d00('0x17')],_0x1b7237,{'maxCommentCharsWhenCollapsed':this[_0x5d00('0xc')]['maxCommentCharsWhenCollapsed'],'formatDateTime':this[_0x5d00('0xc')]['formatDateTime'],'editorConfig':this[_0x5d00('0xc')][_0x5d00('0x26')]});_0x229e20['viewUid']=_0x1b7237['id'],_0x229e20[_0x5d00('0x20')](_0x5d00('0x27'))['to'](this),_0x229e20[_0x5d00('0x20')](_0x5d00('0x1'))['to'](this),this[_0x5d00('0x9')](_0x229e20,'change:isEditMode',()=>this['_updateHasDirtyComment']()),this[_0x5d00('0x0')][_0x5d00('0x2')](_0x229e20);}['_handleRemoveCommentModel'](_0x28dca0){const _0x5c48e9=this[_0x5d00('0x0')]['remove'](_0x28dca0['id']);this['stopListening'](_0x5c48e9),_0x5c48e9[_0x5d00('0x1a')]&&this[_0x5d00('0x25')](),_0x5c48e9['destroy']();}[_0x5d00('0x25')](){this[_0x5d00('0x2b')]=Array[_0x5d00('0x2c')](this[_0x5d00('0x0')])[_0x5d00('0xd')](_0x14b19d=>_0x14b19d[_0x5d00('0x1a')]);}['_rearrangeCollapse'](){const _0x2d0280=function(_0x3c4522){const _0x1381cb=new _0x56e19f();for(const _0x505661 of _0x3c4522)_0x1381cb['add'](_0x505661);return _0x1381cb;}(this['commentViews']),_0x340821=this[_0x5d00('0xe')][_0x5d00('0x8')];for(let _0x578190=0x1;_0x578190<=_0x340821;_0x578190++)_0x2d0280[_0x5d00('0x18')](0x1);for(const _0x145037 of _0x2d0280)_0x145037[_0x5d00('0x15')]();_0x340821>0x0&&_0x2d0280[_0x5d00('0x2')](this[_0x5d00('0xe')],0x1),Dt(_0x12427a(Array['from'](this[_0x5d00('0x29')]),Array[_0x5d00('0x2c')](_0x2d0280)),this[_0x5d00('0x29')],_0x2d0280);}[_0x5d00('0x1c')](){Dt(_0x12427a(Array[_0x5d00('0x2c')](this['visibleViews']),Array[_0x5d00('0x2c')](this[_0x5d00('0x0')])),this['visibleViews'],this[_0x5d00('0x0')]);for(const _0x3b8b60 of this[_0x5d00('0x29')])_0x3b8b60[_0x5d00('0x23')]();}}function Dt(_0x4bbc80,_0x2fd6aa,_0x3acf2c){let _0x48ba03=0x0;for(const _0xdc4c9a of _0x4bbc80)switch(_0xdc4c9a){case _0x5d00('0x1b'):_0x2fd6aa[_0x5d00('0x2')](_0x3acf2c[_0x5d00('0x4')](_0x48ba03),_0x48ba03),_0x48ba03++;break;case _0x5d00('0x16'):_0x2fd6aa[_0x5d00('0x18')](_0x48ba03);break;case'equal':_0x48ba03++;}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0x277974 from'@ckeditor/ckeditor5-ui/src/view';import vt from'./commentthreadinputview';import Ct from'./commentslistview';export default class yt extends _0x277974{constructor(_0x2c68b0,_0x53c427,_0x1e9ae7,_0xdbbd40){super(_0x2c68b0),this['set']('isActive',!0x1),this['set']('isDirty',!0x1),this['_model']=_0x53c427,this['_localUser']=_0x1e9ae7,this['_config']=_0xdbbd40,this['commentsListView']=new Ct(_0x2c68b0,_0x53c427,Object['assign']({'CommentView':this['_config']['CommentView']},_0xdbbd40)),this['commentsListView']['delegate']('removeComment')['to'](this),this['commentsListView']['delegate']('updateComment')['to'](this),this['commentsListView']['bind']('isActive')['to'](this),this['set']('length',this['commentsListView']['length']),this['bind']('length')['to'](this['commentsListView'],'length'),this['commentThreadInputView']=this['_createCommentThreadInputView'](),this['on']('removeComment',()=>this['focus']()),this['bind']('isDirty')['to'](this['commentsListView'],'hasDirtyComment',this['commentThreadInputView']['commentInputView'],'value',(_0x261abf,_0xf0336b)=>_0x261abf||!!_0xf0336b);}['focus'](){this['element']['focus']();}['destroy'](){this['isDirty']=!0x1,this['commentsListView']['destroy'](),this['commentThreadInputView']['destroy'](),super['destroy']();}['_createCommentThreadInputView'](){const {t:t}=this['locale'],_0x148a2c=new vt(this['locale'],this['_localUser'],this['_config']['editorConfig']),_0x21d0b5=_0x148a2c['commentInputView'];return _0x148a2c['bind']('showInput')['to'](this,'isActive',this['_model'],'isReadOnly',_0x21d0b5,'value',(_0x24c320,_0x19d638,_0x14ca36)=>!!_0x14ca36||_0x24c320&&!_0x19d638),_0x21d0b5['bind']('placeholder')['to'](this,'length',_0x12ef39=>t(_0x12ef39?'Reply...':'Write\\x20a\\x20comment...')),_0x21d0b5['on']('submit',(_0x539096,_0x4f8870)=>{this['fire']('addComment',_0x4f8870);}),_0x21d0b5['on']('cancel',()=>{this['focus']();}),_0x21d0b5['bind']('disabledSubmit')['to'](this['_model'],'isReadOnly'),_0x21d0b5['on']('cancel',_0x16eae5=>{0x0==this['length']&&(this['fire']('removeCommentThread'),_0x16eae5['stop']());}),this['on']('change:isActive',(_0x5149a4,_0x24ca4e,_0x5b8749)=>{_0x5b8749||this['length']||_0x21d0b5['value']||this['fire']('removeCommentThread');}),_0x148a2c;}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport yt from'./basecommentthreadview';import it from'@ckeditor/ckeditor5-utils/src/mix';import Tt from'./confirmmixin';export default class Ft extends yt{constructor(_0x1659d9,_0x451913,_0x2610e5,_0x530b2d){super(_0x1659d9,_0x451913,_0x2610e5,_0x530b2d),this['set']('actionIndicator',null),this['containerElement']=null,this['locale']=_0x1659d9,this['setTemplate'](this['_getTemplate']()),this['on']('change:isActive',(_0x42f5b1,_0xa64b6b,_0x436862)=>{_0x436862||this['_cancelAllConfirms']();}),this['listenTo'](this['_model'],'change:isReadOnly',(_0x3cef63,_0x1e0f96,_0x3f7c38)=>{_0x3f7c38&&this['_cancelAllConfirms']();}),this['length']>0x0?this['_bindFirstCommentView']():this['listenTo'](this['commentsListView']['commentViews'],'add',_0x3c41e8=>{this['_bindFirstCommentView'](),_0x3c41e8['off']();});}['_getTemplate'](){const _0x3bc9a2=this['bindTemplate'];return{'tag':'div','attributes':{'class':['ck-thread',_0x3bc9a2['if']('isActive','ck-thread--active'),_0x3bc9a2['if']('isConfirm','ck-thread--remove-confirmation'),_0x3bc9a2['to']('actionIndicator',_0x21cfce=>_0x21cfce?'ck-thread--'+_0x21cfce:'')],'data-thread-id':this['_model']['id'],'tabindex':-0x1},'children':[{'tag':'div','attributes':{'class':'ck-thread__container'},'children':[this['commentsListView'],this['commentThreadInputView']]}]};}['render'](){super['render'](),this['containerElement']=this['element']['querySelector']('.ck-thread__container');}['_cancelAllConfirms'](){this['cancelConfirm']();for(const _0x430e14 of this['commentsListView']['commentViews'])_0x430e14['cancelConfirm']();}['_bindFirstCommentView'](){const {t:t}=this['locale'],_0x52f87c=this['commentsListView']['commentViews']['get'](0x0);this['bind']('actionIndicator')['to'](_0x52f87c,'actionIndicator',_0x4ba74f=>'remove'===_0x4ba74f?'remove':null),_0x52f87c['placeholder']=t('Write\\x20a\\x20comment...'),_0x52f87c['removeButton']['on']('execute',_0x376412=>{_0x376412['stop'](),this['showConfirm'](t('Delete\\x20comment\\x20thread?'),this['containerElement'])['then'](()=>{this['fire']('removeCommentThread');});},{'priority':'high'});}}it(Ft,Tt);","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./placeholder.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-placeholder:before,.ck .ck-placeholder:before{content:attr(data-placeholder);pointer-events:none}.ck.ck-read-only .ck-placeholder:before{display:none}.ck.ck-placeholder:before,.ck .ck-placeholder:before{cursor:text;color:var(--ck-color-engine-placeholder-text)}\"","var api = require(\"!../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../postcss-loader/src/index.js??ref--5-1!./globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck-hidden{display:none!important}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{box-sizing:border-box;width:auto;height:auto;position:static}:root{--ck-z-default:1;--ck-z-modal:calc(var(--ck-z-default) + 999);--ck-color-base-foreground:#fafafa;--ck-color-base-background:#fff;--ck-color-base-border:#c4c4c4;--ck-color-base-action:#61b045;--ck-color-base-focus:#6cb5f9;--ck-color-base-text:#333;--ck-color-base-active:#198cf0;--ck-color-base-active-focus:#0e7fe1;--ck-color-base-error:#db3700;--ck-color-focus-border-coordinates:208,79%,51%;--ck-color-focus-border:hsl(var(--ck-color-focus-border-coordinates));--ck-color-focus-outer-shadow:#bcdefb;--ck-color-focus-disabled-shadow:rgba(119,186,248,0.3);--ck-color-focus-error-shadow:rgba(255,64,31,0.3);--ck-color-text:var(--ck-color-base-text);--ck-color-shadow-drop:rgba(0,0,0,0.15);--ck-color-shadow-drop-active:rgba(0,0,0,0.2);--ck-color-shadow-inner:rgba(0,0,0,0.1);--ck-color-button-default-background:transparent;--ck-color-button-default-hover-background:#e6e6e6;--ck-color-button-default-active-background:#d9d9d9;--ck-color-button-default-active-shadow:#bfbfbf;--ck-color-button-default-disabled-background:transparent;--ck-color-button-on-background:#dedede;--ck-color-button-on-hover-background:#c4c4c4;--ck-color-button-on-active-background:#bababa;--ck-color-button-on-active-shadow:#a1a1a1;--ck-color-button-on-disabled-background:#dedede;--ck-color-button-action-background:var(--ck-color-base-action);--ck-color-button-action-hover-background:#579e3d;--ck-color-button-action-active-background:#53973b;--ck-color-button-action-active-shadow:#498433;--ck-color-button-action-disabled-background:#7ec365;--ck-color-button-action-text:var(--ck-color-base-background);--ck-color-button-save:#008a00;--ck-color-button-cancel:#db3700;--ck-color-switch-button-off-background:#b0b0b0;--ck-color-switch-button-off-hover-background:#a3a3a3;--ck-color-switch-button-on-background:var(--ck-color-button-action-background);--ck-color-switch-button-on-hover-background:#579e3d;--ck-color-switch-button-inner-background:var(--ck-color-base-background);--ck-color-switch-button-inner-shadow:rgba(0,0,0,0.1);--ck-color-dropdown-panel-background:var(--ck-color-base-background);--ck-color-dropdown-panel-border:var(--ck-color-base-border);--ck-color-input-background:var(--ck-color-base-background);--ck-color-input-border:#c7c7c7;--ck-color-input-error-border:var(--ck-color-base-error);--ck-color-input-text:var(--ck-color-base-text);--ck-color-input-disabled-background:#f2f2f2;--ck-color-input-disabled-border:#c7c7c7;--ck-color-input-disabled-text:#5c5c5c;--ck-color-list-background:var(--ck-color-base-background);--ck-color-list-button-hover-background:var(--ck-color-button-default-hover-background);--ck-color-list-button-on-background:var(--ck-color-base-active);--ck-color-list-button-on-background-focus:var(--ck-color-base-active-focus);--ck-color-list-button-on-text:var(--ck-color-base-background);--ck-color-panel-background:var(--ck-color-base-background);--ck-color-panel-border:var(--ck-color-base-border);--ck-color-toolbar-background:var(--ck-color-base-foreground);--ck-color-toolbar-border:var(--ck-color-base-border);--ck-color-tooltip-background:var(--ck-color-base-text);--ck-color-tooltip-text:var(--ck-color-base-background);--ck-color-engine-placeholder-text:#707070;--ck-color-upload-bar-background:#6cb5f9;--ck-color-link-default:#0000f0;--ck-color-link-selected-background:rgba(31,177,255,0.1);--ck-color-link-fake-selection:rgba(31,177,255,0.3);--ck-disabled-opacity:.5;--ck-focus-outer-shadow-geometry:0 0 0 3px;--ck-focus-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-outer-shadow);--ck-focus-disabled-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);--ck-focus-error-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);--ck-focus-ring:1px solid var(--ck-color-focus-border);--ck-font-size-base:13px;--ck-line-height-base:1.84615;--ck-font-face:Helvetica,Arial,Tahoma,Verdana,Sans-Serif;--ck-font-size-tiny:0.7em;--ck-font-size-small:0.75em;--ck-font-size-normal:1em;--ck-font-size-big:1.4em;--ck-font-size-large:1.8em;--ck-ui-component-min-height:2.3em}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none;word-wrap:break-word}.ck.ck-reset_all,.ck.ck-reset_all *{border-collapse:collapse;font:normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);color:var(--ck-color-text);text-align:left;white-space:nowrap;cursor:auto;float:none}.ck.ck-reset_all .ck-rtl *{text-align:right}.ck.ck-reset_all iframe{vertical-align:inherit}.ck.ck-reset_all textarea{white-space:pre-wrap}.ck.ck-reset_all input[type=password],.ck.ck-reset_all input[type=text],.ck.ck-reset_all textarea{cursor:text}.ck.ck-reset_all input[type=password][disabled],.ck.ck-reset_all input[type=text][disabled],.ck.ck-reset_all textarea[disabled]{cursor:default}.ck.ck-reset_all fieldset{padding:10px;border:2px groove #dfdee3}.ck.ck-reset_all button::-moz-focus-inner{padding:0;border:0}.ck[dir=rtl],.ck[dir=rtl] .ck{text-align:right}:root{--ck-border-radius:2px;--ck-inner-shadow:2px 2px 3px var(--ck-color-shadow-inner) inset;--ck-drop-shadow:0 1px 2px 1px var(--ck-color-shadow-drop);--ck-drop-shadow-active:0 3px 6px 1px var(--ck-color-shadow-drop-active);--ck-spacing-unit:0.6em;--ck-spacing-large:calc(var(--ck-spacing-unit)*1.5);--ck-spacing-standard:var(--ck-spacing-unit);--ck-spacing-medium:calc(var(--ck-spacing-unit)*0.8);--ck-spacing-small:calc(var(--ck-spacing-unit)*0.5);--ck-spacing-tiny:calc(var(--ck-spacing-unit)*0.3);--ck-spacing-extra-tiny:calc(var(--ck-spacing-unit)*0.16)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./editorui.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-color-editable-blur-selection:#d9d9d9}.ck.ck-editor__editable:not(.ck-editor__nested-editable){border-radius:0}.ck-rounded-corners .ck.ck-editor__editable:not(.ck-editor__nested-editable),.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0}.ck.ck-editor__editable_inline{overflow:auto;padding:0 var(--ck-spacing-standard);border:1px solid transparent}.ck.ck-editor__editable_inline[dir=ltr]{text-align:left}.ck.ck-editor__editable_inline[dir=rtl]{text-align:right}.ck.ck-editor__editable_inline>:first-child{margin-top:var(--ck-spacing-large)}.ck.ck-editor__editable_inline>:last-child{margin-bottom:var(--ck-spacing-large)}.ck.ck-editor__editable_inline.ck-blurred ::selection{background:var(--ck-color-editable-blur-selection)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_n]:after{border-bottom-color:var(--ck-color-base-foreground)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_s]:after{border-top-color:var(--ck-color-base-foreground)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./label.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-label{display:block}.ck.ck-voice-label{display:none}.ck.ck-label{font-weight:700}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./stickypanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-sticky-panel .ck-sticky-panel__content_sticky{z-index:var(--ck-z-modal);position:fixed;top:0}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky_bottom-limit{top:auto;position:absolute}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky{box-shadow:var(--ck-drop-shadow),0 0;border-width:0 1px 1px;border-top-left-radius:0;border-top-right-radius:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./dropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-dropdown{display:inline-block;position:relative}.ck.ck-dropdown .ck-dropdown__arrow{pointer-events:none;z-index:var(--ck-z-default)}.ck.ck-dropdown .ck-button.ck-dropdown__button{width:100%}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on .ck-tooltip{display:none}.ck.ck-dropdown .ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:var(--ck-z-modal);position:absolute}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel-visible{display:inline-block}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw{bottom:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{top:100%;bottom:auto}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se{left:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{right:0}.ck.ck-toolbar .ck-dropdown__panel{z-index:calc(var(--ck-z-modal) + 1)}:root{--ck-dropdown-arrow-size:calc(var(--ck-icon-size)*0.5)}.ck.ck-dropdown{font-size:inherit}.ck.ck-dropdown .ck-dropdown__arrow{width:var(--ck-dropdown-arrow-size)}[dir=ltr] .ck.ck-dropdown .ck-dropdown__arrow{right:var(--ck-spacing-standard);margin-left:var(--ck-spacing-standard)}[dir=rtl] .ck.ck-dropdown .ck-dropdown__arrow{left:var(--ck-spacing-standard);margin-right:var(--ck-spacing-small)}.ck.ck-dropdown.ck-disabled .ck-dropdown__arrow{opacity:var(--ck-disabled-opacity)}[dir=ltr] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-left:var(--ck-spacing-small)}[dir=rtl] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-right:var(--ck-spacing-small)}.ck.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on{border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-dropdown__button_label-width_auto .ck-button__label{width:auto}.ck.ck-dropdown__panel{border-radius:0}.ck-rounded-corners .ck.ck-dropdown__panel,.ck.ck-dropdown__panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-dropdown__panel{box-shadow:var(--ck-drop-shadow),0 0;background:var(--ck-color-dropdown-panel-background);border:1px solid var(--ck-color-dropdown-panel-border);bottom:0;min-width:100%}.ck.ck-dropdown__panel.ck-dropdown__panel_se{border-top-left-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_sw{border-top-right-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_ne{border-bottom-left-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_nw{border-bottom-right-radius:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./icon.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-icon{vertical-align:middle}:root{--ck-icon-size:calc(var(--ck-line-height-base)*var(--ck-font-size-normal))}.ck.ck-icon{width:var(--ck-icon-size);height:var(--ck-icon-size);font-size:.8333350694em;will-change:transform}.ck.ck-icon,.ck.ck-icon *{color:inherit;cursor:inherit}.ck.ck-icon :not([fill]){fill:currentColor}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./tooltip.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{position:absolute;pointer-events:none;-webkit-backface-visibility:hidden}.ck.ck-tooltip{visibility:hidden;opacity:0;display:none;z-index:var(--ck-z-modal)}.ck.ck-tooltip .ck-tooltip__text{display:inline-block}.ck.ck-tooltip .ck-tooltip__text:after{content:\\\"\\\";width:0;height:0}:root{--ck-tooltip-arrow-size:5px}.ck.ck-tooltip{left:50%;top:0;transition:opacity .2s ease-in-out .2s}.ck.ck-tooltip .ck-tooltip__text{border-radius:0}.ck-rounded-corners .ck.ck-tooltip .ck-tooltip__text,.ck.ck-tooltip .ck-tooltip__text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-tooltip .ck-tooltip__text{font-size:.9em;line-height:1.5;color:var(--ck-color-tooltip-text);padding:var(--ck-spacing-small) var(--ck-spacing-medium);background:var(--ck-color-tooltip-background);position:relative;left:-50%}.ck.ck-tooltip .ck-tooltip__text:after{transition:opacity .2s ease-in-out .2s;border-style:solid;left:50%}.ck.ck-tooltip.ck-tooltip_s,.ck.ck-tooltip.ck-tooltip_sw{bottom:calc(var(--ck-tooltip-arrow-size)*-1);transform:translateY(100%)}.ck.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after,.ck.ck-tooltip.ck-tooltip_sw .ck-tooltip__text:after{top:calc(var(--ck-tooltip-arrow-size)*-1 + 1px);transform:translateX(-50%);border-left-color:transparent;border-bottom-color:var(--ck-color-tooltip-background);border-right-color:transparent;border-top-color:transparent;border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:var(--ck-tooltip-arrow-size);border-right-width:var(--ck-tooltip-arrow-size);border-top-width:0}.ck.ck-tooltip.ck-tooltip_sw{right:50%;left:auto}.ck.ck-tooltip.ck-tooltip_sw .ck-tooltip__text{left:auto;right:calc(var(--ck-tooltip-arrow-size)*-2)}.ck.ck-tooltip.ck-tooltip_sw .ck-tooltip__text:after{left:auto;right:0}.ck.ck-tooltip.ck-tooltip_n{top:calc(var(--ck-tooltip-arrow-size)*-1);transform:translateY(-100%)}.ck.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{bottom:calc(var(--ck-tooltip-arrow-size)*-1);transform:translateX(-50%);border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;border-top-color:var(--ck-color-tooltip-background);border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:0;border-right-width:var(--ck-tooltip-arrow-size);border-top-width:var(--ck-tooltip-arrow-size)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./button.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-button,a.ck.ck-button{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:block}@media (hover:none){.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:none}}.ck.ck-button,a.ck.ck-button{position:relative;display:inline-flex;align-items:center;justify-content:left}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{display:none}.ck.ck-button.ck-button_with-text .ck-button__label,a.ck.ck-button.ck-button_with-text .ck-button__label{display:inline-block}.ck.ck-button:not(.ck-button_with-text),a.ck.ck-button:not(.ck-button_with-text){justify-content:center}.ck.ck-button:hover .ck-tooltip,a.ck.ck-button:hover .ck-tooltip{visibility:visible;opacity:1}.ck.ck-button:focus:not(:hover) .ck-tooltip,a.ck.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck.ck-button,a.ck.ck-button{background:var(--ck-color-button-default-background)}.ck.ck-button:not(.ck-disabled):hover,a.ck.ck-button:not(.ck-disabled):hover{background:var(--ck-color-button-default-hover-background)}.ck.ck-button:not(.ck-disabled):active,a.ck.ck-button:not(.ck-disabled):active{background:var(--ck-color-button-default-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-default-active-shadow)}.ck.ck-button.ck-disabled,a.ck.ck-button.ck-disabled{background:var(--ck-color-button-default-disabled-background)}.ck.ck-button,a.ck.ck-button{border-radius:0}.ck-rounded-corners .ck.ck-button,.ck-rounded-corners a.ck.ck-button,.ck.ck-button.ck-rounded-corners,a.ck.ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button,a.ck.ck-button{white-space:nowrap;cursor:default;vertical-align:middle;padding:var(--ck-spacing-tiny);text-align:center;min-width:var(--ck-ui-component-min-height);min-height:var(--ck-ui-component-min-height);line-height:1;font-size:inherit;border:1px solid transparent;transition:box-shadow .2s ease-in-out,border .2s ease-in-out;-webkit-appearance:none}.ck.ck-button:active,.ck.ck-button:focus,a.ck.ck-button:active,a.ck.ck-button:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0}.ck.ck-button .ck-button__icon use,.ck.ck-button .ck-button__icon use *,a.ck.ck-button .ck-button__icon use,a.ck.ck-button .ck-button__icon use *{color:inherit}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit;vertical-align:middle}[dir=ltr] .ck.ck-button .ck-button__label,[dir=ltr] a.ck.ck-button .ck-button__label{text-align:left}[dir=rtl] .ck.ck-button .ck-button__label,[dir=rtl] a.ck.ck-button .ck-button__label{text-align:right}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{color:inherit}[dir=ltr] .ck.ck-button .ck-button__keystroke,[dir=ltr] a.ck.ck-button .ck-button__keystroke{margin-left:var(--ck-spacing-large)}[dir=rtl] .ck.ck-button .ck-button__keystroke,[dir=rtl] a.ck.ck-button .ck-button__keystroke{margin-right:var(--ck-spacing-large)}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{font-weight:700;opacity:.7}.ck.ck-button.ck-disabled:active,.ck.ck-button.ck-disabled:focus,a.ck.ck-button.ck-disabled:active,a.ck.ck-button.ck-disabled:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-button.ck-disabled .ck-button__icon,a.ck.ck-button.ck-disabled .ck-button__icon{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__label,a.ck.ck-button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__keystroke,a.ck.ck-button.ck-disabled .ck-button__keystroke{opacity:.3}.ck.ck-button.ck-button_with-text,a.ck.ck-button.ck-button_with-text{padding:var(--ck-spacing-tiny) var(--ck-spacing-standard)}[dir=ltr] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=ltr] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:calc(var(--ck-spacing-small)*-1);margin-right:var(--ck-spacing-small)}[dir=rtl] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=rtl] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-right:calc(var(--ck-spacing-small)*-1);margin-left:var(--ck-spacing-small)}.ck.ck-button.ck-button_with-keystroke .ck-button__label,a.ck.ck-button.ck-button_with-keystroke .ck-button__label{flex-grow:1}.ck.ck-button.ck-on,a.ck.ck-button.ck-on{background:var(--ck-color-button-on-background)}.ck.ck-button.ck-on:not(.ck-disabled):hover,a.ck.ck-button.ck-on:not(.ck-disabled):hover{background:var(--ck-color-button-on-hover-background)}.ck.ck-button.ck-on:not(.ck-disabled):active,a.ck.ck-button.ck-on:not(.ck-disabled):active{background:var(--ck-color-button-on-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-on-active-shadow)}.ck.ck-button.ck-on.ck-disabled,a.ck.ck-button.ck-on.ck-disabled{background:var(--ck-color-button-on-disabled-background)}.ck.ck-button.ck-button-save,a.ck.ck-button.ck-button-save{color:var(--ck-color-button-save)}.ck.ck-button.ck-button-cancel,a.ck.ck-button.ck-button-cancel{color:var(--ck-color-button-cancel)}.ck.ck-button-action,a.ck.ck-button-action{background:var(--ck-color-button-action-background)}.ck.ck-button-action:not(.ck-disabled):hover,a.ck.ck-button-action:not(.ck-disabled):hover{background:var(--ck-color-button-action-hover-background)}.ck.ck-button-action:not(.ck-disabled):active,a.ck.ck-button-action:not(.ck-disabled):active{background:var(--ck-color-button-action-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-action-active-shadow)}.ck.ck-button-action.ck-disabled,a.ck.ck-button-action.ck-disabled{background:var(--ck-color-button-action-disabled-background)}.ck.ck-button-action,a.ck.ck-button-action{color:var(--ck-color-button-action-text)}.ck.ck-button-bold,a.ck.ck-button-bold{font-weight:700}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./list.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column}.ck.ck-list .ck-list__item,.ck.ck-list .ck-list__separator{display:block}.ck.ck-list .ck-list__item>:focus{position:relative;z-index:var(--ck-z-default)}.ck.ck-list{border-radius:0}.ck-rounded-corners .ck.ck-list,.ck.ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-list{list-style-type:none;background:var(--ck-color-list-background)}.ck.ck-list__item{cursor:default;min-width:12em}.ck.ck-list__item .ck-button{min-height:unset;width:100%;text-align:left;border-radius:0;padding:calc(var(--ck-line-height-base)*0.2*var(--ck-font-size-base)) calc(var(--ck-line-height-base)*0.4*var(--ck-font-size-base))}.ck.ck-list__item .ck-button .ck-button__label{line-height:calc(var(--ck-line-height-base)*1.2*var(--ck-font-size-base))}.ck.ck-list__item .ck-button:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on{background:var(--ck-color-list-button-on-background);color:var(--ck-color-list-button-on-text)}.ck.ck-list__item .ck-button.ck-on:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-on-background-focus)}.ck.ck-list__item .ck-button.ck-on:focus:not(.ck-disabled){border-color:var(--ck-color-base-background)}.ck.ck-list__item .ck-button:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background)}.ck.ck-list__item .ck-switchbutton.ck-on{background:var(--ck-color-list-background);color:inherit}.ck.ck-list__item .ck-switchbutton.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background);color:inherit}.ck.ck-list__separator{height:1px;width:100%;background:var(--ck-color-base-border)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./switchbutton.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{display:block}:root{--ck-switch-button-toggle-width:2.6153846154em;--ck-switch-button-toggle-inner-size:1.0769230769em;--ck-switch-button-toggle-spacing:1px;--ck-switch-button-translation:calc(var(--ck-switch-button-toggle-width) - var(--ck-switch-button-toggle-inner-size) - var(--ck-switch-button-toggle-spacing)*2)}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__label{margin-right:calc(var(--ck-spacing-large)*2)}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__label{margin-left:calc(var(--ck-spacing-large)*2)}.ck.ck-button.ck-switchbutton .ck-button__toggle{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle.ck-rounded-corners{border-radius:var(--ck-border-radius)}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-left:auto}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-right:auto}.ck.ck-button.ck-switchbutton .ck-button__toggle{transition:background .4s ease;width:var(--ck-switch-button-toggle-width);background:var(--ck-color-switch-button-off-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:calc(var(--ck-border-radius)*0.5)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{margin:var(--ck-switch-button-toggle-spacing);width:var(--ck-switch-button-toggle-inner-size);height:var(--ck-switch-button-toggle-inner-size);background:var(--ck-color-switch-button-inner-background);transition:all .3s ease}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover{background:var(--ck-color-switch-button-off-hover-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover .ck-button__toggle__inner{box-shadow:0 0 0 5px var(--ck-color-switch-button-inner-shadow)}.ck.ck-button.ck-switchbutton.ck-disabled .ck-button__toggle{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle{background:var(--ck-color-switch-button-on-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle:hover{background:var(--ck-color-switch-button-on-hover-background)}[dir=ltr] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(var(--ck-switch-button-translation))}[dir=rtl] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(calc(var(--ck-switch-button-translation)*-1))}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./toolbardropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-toolbar-dropdown .ck.ck-toolbar .ck.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar-dropdown .ck-dropdown__panel .ck-button:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-toolbar-dropdown .ck-toolbar{border:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./listdropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-dropdown .ck-dropdown__panel .ck-list{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list,.ck.ck-dropdown .ck-dropdown__panel .ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./toolbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-toolbar{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-flow:row nowrap;align-items:center}.ck.ck-toolbar>.ck-toolbar__items{display:flex;flex-flow:row wrap;align-items:center;flex-grow:1}.ck.ck-toolbar .ck.ck-toolbar__separator{display:inline-block}.ck.ck-toolbar .ck.ck-toolbar__separator:first-child,.ck.ck-toolbar .ck.ck-toolbar__separator:last-child{display:none}.ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items{flex-direction:column}.ck.ck-toolbar.ck-toolbar_floating>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck-dropdown__button .ck-dropdown__arrow{display:none}.ck.ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-toolbar,.ck.ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-toolbar{background:var(--ck-color-toolbar-background);padding:0 var(--ck-spacing-small);border:1px solid var(--ck-color-toolbar-border)}.ck.ck-toolbar .ck.ck-toolbar__separator{align-self:stretch;width:1px;min-width:1px;background:var(--ck-color-toolbar-border);margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck.ck-toolbar>.ck-toolbar__items>*{margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small);margin-right:var(--ck-spacing-small)}.ck.ck-toolbar>.ck-toolbar__items:empty+.ck.ck-toolbar__separator{display:none}.ck.ck-toolbar>.ck-toolbar__items>*,.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown{margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck.ck-toolbar.ck-toolbar_vertical{padding:0}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items>.ck{width:100%;margin:0;border-radius:0;border:0}.ck.ck-toolbar.ck-toolbar_compact{padding:0}.ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>*{margin:0}.ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>:not(:first-child):not(:last-child){border-radius:0}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck.ck-button.ck-dropdown__button{padding-left:var(--ck-spacing-tiny)}.ck-toolbar-container .ck.ck-toolbar{border:0}.ck.ck-toolbar[dir=rtl]>.ck-toolbar__items>.ck,[dir=rtl] .ck.ck-toolbar>.ck-toolbar__items>.ck{margin-right:0}.ck.ck-toolbar[dir=rtl]:not(.ck-toolbar_compact)>.ck-toolbar__items>.ck,[dir=rtl] .ck.ck-toolbar:not(.ck-toolbar_compact)>.ck-toolbar__items>.ck{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl]>.ck-toolbar__items>.ck:last-child,[dir=rtl] .ck.ck-toolbar>.ck-toolbar__items>.ck:last-child{margin-left:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_compact>.ck-toolbar__items>.ck:first-child,[dir=rtl] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:first-child{border-top-left-radius:0;border-bottom-left-radius:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_compact>.ck-toolbar__items>.ck:last-child,[dir=rtl] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:last-child{border-top-right-radius:0;border-bottom-right-radius:0}.ck.ck-toolbar[dir=rtl]>.ck.ck-toolbar__separator,[dir=rtl] .ck.ck-toolbar>.ck.ck-toolbar__separator{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl].ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child),[dir=rtl] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child){margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr]>.ck-toolbar__items>.ck:last-child,[dir=ltr] .ck.ck-toolbar>.ck-toolbar__items>.ck:last-child{margin-right:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_compact>.ck-toolbar__items>.ck:first-child,[dir=ltr] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_compact>.ck-toolbar__items>.ck:last-child,[dir=ltr] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.ck.ck-toolbar[dir=ltr]>.ck.ck-toolbar__separator,[dir=ltr] .ck.ck-toolbar>.ck.ck-toolbar__separator{margin-right:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr].ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child),[dir=ltr] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child){margin-right:var(--ck-spacing-small)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./classiceditor.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-editor{position:relative}.ck.ck-editor .ck-editor__top .ck-sticky-panel .ck-toolbar{z-index:var(--ck-z-modal)}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-bottom-width:0}.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar{border-bottom-width:1px;border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:0}.ck.ck-editor__main>.ck-editor__editable{background:var(--ck-color-base-background);border-radius:0}.ck-rounded-corners .ck.ck-editor__main>.ck-editor__editable,.ck.ck-editor__main>.ck-editor__editable.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}.ck.ck-editor__main>.ck-editor__editable:not(.ck-focused){border-color:var(--ck-color-base-border)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./annotation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-color-annotation-icon:grey;--ck-color-annotation-info:#757575;--ck-annotation-button-size:0.85em}.ck .ck-annotation{--ck-user-avatar-size:28px;font-size:var(--ck-font-size-base);display:flex;position:relative;animation:fadeInLeft .3s;transition:background-color .3s ease;padding:var(--ck-spacing-standard)}.ck .ck-annotation .ck-button{background-color:initial;min-width:unset;min-height:unset;cursor:pointer;color:var(--ck-color-annotation-icon);border-radius:var(--ck-border-radius);font-size:var(--ck-annotation-button-size)}.ck .ck-annotation__main{display:flex;flex-wrap:wrap;justify-content:space-between;width:calc(100% - var(--ck-user-avatar-size));transition:all .2s ease;border-radius:var(--ck-border-radius);padding-left:var(--ck-spacing-standard)}.ck .ck-annotation__main p{margin:0;white-space:normal;font-size:var(--ck-font-size-base);line-height:1.5em}.ck .ck-annotation__user{margin-top:var(--ck-spacing-small)}.ck .ck-annotation__info{display:flex;align-items:center;color:var(--ck-color-annotation-info);min-height:2.4em}.ck .ck-annotation__info-name,.ck .ck-annotation__info-time{font-weight:700;max-width:150px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:var(--ck-color-annotation-info);font-size:var(--ck-font-size-small)}.ck .ck-annotation__info-time{margin-left:var(--ck-spacing-large)}.ck .ck-annotation__actions{transition:opacity .2s ease;opacity:.5}.ck .ck-annotation__content-wrapper{width:100%}@keyframes fadeInLeft{0%{transform:translate3d(-5%,0,0);opacity:0}to{transform:translateZ(0);opacity:1}}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./usercolors.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-user-colors--0:#6d78e8;--ck-user-colors--0-alpha:rgba(109,120,232,0.15);--ck-user-colors--1:#007a6c;--ck-user-colors--1-alpha:rgba(0,122,108,0.15);--ck-user-colors--2:#ba4545;--ck-user-colors--2-alpha:rgba(186,69,69,0.15);--ck-user-colors--3:#5635b1;--ck-user-colors--3-alpha:rgba(86,53,177,0.15);--ck-user-colors--4:#548a2e;--ck-user-colors--4-alpha:rgba(84,138,46,0.15);--ck-user-colors--5:#c3185d;--ck-user-colors--5-alpha:rgba(195,24,93,0.15);--ck-user-colors--6:#ea4343;--ck-user-colors--6-alpha:rgba(234,67,67,0.15);--ck-user-colors--7:#0bc3d0;--ck-user-colors--7-alpha:rgba(11,195,208,0.15);--ck-user-dot-size:6px}.ck .ck-user__color--0{color:var(--ck-user-colors--0)}.ck .ck-user__bg-color--0{background-color:var(--ck-user-colors--0)}.ck .ck-user__selection--0{background-color:var(--ck-user-colors--0-alpha)}.ck .ck-user__selection--0.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--0)}.ck .ck-user__marker--0,.ck .ck-user__marker--0 .ck-user__marker-dot,.ck .ck-user__marker--0:after{background-color:var(--ck-user-colors--0)}.ck .ck-user__marker--0 .ck-user__marker-line{border:1px solid var(--ck-user-colors--0)}.ck .ck-user__color--1{color:var(--ck-user-colors--1)}.ck .ck-user__bg-color--1{background-color:var(--ck-user-colors--1)}.ck .ck-user__selection--1{background-color:var(--ck-user-colors--1-alpha)}.ck .ck-user__selection--1.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--1)}.ck .ck-user__marker--1,.ck .ck-user__marker--1 .ck-user__marker-dot,.ck .ck-user__marker--1:after{background-color:var(--ck-user-colors--1)}.ck .ck-user__marker--1 .ck-user__marker-line{border:1px solid var(--ck-user-colors--1)}.ck .ck-user__color--2{color:var(--ck-user-colors--2)}.ck .ck-user__bg-color--2{background-color:var(--ck-user-colors--2)}.ck .ck-user__selection--2{background-color:var(--ck-user-colors--2-alpha)}.ck .ck-user__selection--2.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--2)}.ck .ck-user__marker--2,.ck .ck-user__marker--2 .ck-user__marker-dot,.ck .ck-user__marker--2:after{background-color:var(--ck-user-colors--2)}.ck .ck-user__marker--2 .ck-user__marker-line{border:1px solid var(--ck-user-colors--2)}.ck .ck-user__color--3{color:var(--ck-user-colors--3)}.ck .ck-user__bg-color--3{background-color:var(--ck-user-colors--3)}.ck .ck-user__selection--3{background-color:var(--ck-user-colors--3-alpha)}.ck .ck-user__selection--3.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--3)}.ck .ck-user__marker--3,.ck .ck-user__marker--3 .ck-user__marker-dot,.ck .ck-user__marker--3:after{background-color:var(--ck-user-colors--3)}.ck .ck-user__marker--3 .ck-user__marker-line{border:1px solid var(--ck-user-colors--3)}.ck .ck-user__color--4{color:var(--ck-user-colors--4)}.ck .ck-user__bg-color--4{background-color:var(--ck-user-colors--4)}.ck .ck-user__selection--4{background-color:var(--ck-user-colors--4-alpha)}.ck .ck-user__selection--4.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--4)}.ck .ck-user__marker--4,.ck .ck-user__marker--4 .ck-user__marker-dot,.ck .ck-user__marker--4:after{background-color:var(--ck-user-colors--4)}.ck .ck-user__marker--4 .ck-user__marker-line{border:1px solid var(--ck-user-colors--4)}.ck .ck-user__color--5{color:var(--ck-user-colors--5)}.ck .ck-user__bg-color--5{background-color:var(--ck-user-colors--5)}.ck .ck-user__selection--5{background-color:var(--ck-user-colors--5-alpha)}.ck .ck-user__selection--5.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--5)}.ck .ck-user__marker--5,.ck .ck-user__marker--5 .ck-user__marker-dot,.ck .ck-user__marker--5:after{background-color:var(--ck-user-colors--5)}.ck .ck-user__marker--5 .ck-user__marker-line{border:1px solid var(--ck-user-colors--5)}.ck .ck-user__color--6{color:var(--ck-user-colors--6)}.ck .ck-user__bg-color--6{background-color:var(--ck-user-colors--6)}.ck .ck-user__selection--6{background-color:var(--ck-user-colors--6-alpha)}.ck .ck-user__selection--6.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--6)}.ck .ck-user__marker--6,.ck .ck-user__marker--6 .ck-user__marker-dot,.ck .ck-user__marker--6:after{background-color:var(--ck-user-colors--6)}.ck .ck-user__marker--6 .ck-user__marker-line{border:1px solid var(--ck-user-colors--6)}.ck .ck-user__color--7{color:var(--ck-user-colors--7)}.ck .ck-user__bg-color--7{background-color:var(--ck-user-colors--7)}.ck .ck-user__selection--7{background-color:var(--ck-user-colors--7-alpha)}.ck .ck-user__selection--7.ck-widget{background-color:initial;border:3px solid var(--ck-user-colors--7)}.ck .ck-user__marker--7,.ck .ck-user__marker--7 .ck-user__marker-dot,.ck .ck-user__marker--7:after{background-color:var(--ck-user-colors--7)}.ck .ck-user__marker--7 .ck-user__marker-line{border:1px solid var(--ck-user-colors--7)}\"","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./users.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-user-avatar-size:40px;--ck-user-avatar-background:#3670ab;--ck-user-avatar-color:#fff}.ck.ck-user{display:flex;justify-content:center;align-items:center;position:relative;border-radius:50%;overflow:hidden;background-color:var(--ck-user-avatar-background);height:var(--ck-user-avatar-size);width:var(--ck-user-avatar-size);min-width:var(--ck-user-avatar-size);min-height:var(--ck-user-avatar-size)}.ck.ck-user__name{color:var(--ck-user-avatar-color);cursor:default;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-user__name.ck-user__name--hidden{display:none}.ck.ck-user__img{display:none;width:inherit;height:inherit;background-position:50%;background-repeat:no-repeat;background-size:cover;background-color:var(--ck-user-avatar-background);border-radius:50%;border:2px solid var(--ck-user-avatar-background)}.ck.ck-user__img.ck-user__anonymous{display:block;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='%23FFF' d='M9.8 20H2c0-5.7 5-5.7 6-7l.2-.8c-1.6-.8-2.7-2.7-2.7-5 0-2.8 2-5.2 4.3-5.2S14 4.4 14 7.3c0 2.2-1 4-2.6 5l.2.6c1.2 1.3 6 1.4 6 7H9.8z'/%3E%3C/svg%3E\\\")}.ck.ck-user__img.ck-user__anonymous+.ck-user__name{display:none}.ck.ck-user__img.ck-user__avatar{display:block;background-color:#fff}.ck.ck-user__img.ck-user__img--hidden{display:none}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./comment.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-color-comment-background:#f3f7fb;--ck-color-comment-separator:#cddeef;--ck-color-comment-remove-background:#fcc;--ck-color-comment-input-background:var(--ck-color-comment-background)}.ck .ck-comment__wrapper{font-size:var(--ck-font-size-base);position:relative;outline:0;transition:all .3s linear}.ck .ck-comment__wrapper.ck-comment--remove-confirmation{transform:translate3d(-100%,0,0)}.ck .ck-comment__wrapper:first-of-type{border-top-right-radius:var(--ck-border-radius);border-top-left-radius:var(--ck-border-radius)}.ck .ck-comment:after{content:\\\"\\\";display:block;position:absolute;opacity:1;top:calc(var(--ck-user-avatar-size) + var(--ck-spacing-small));left:calc(var(--ck-spacing-standard) + var(--ck-user-avatar-size)/2 - 2px);width:4px;height:100%;background-color:var(--ck-color-comment-separator)}.ck .ck-comment--remove{background-color:var(--ck-color-comment-remove-background)}.ck .ck-comment--remove:after{opacity:0}.ck .ck-comment--edit{background-color:var(--ck-color-comment-input-background)}.ck .ck-comment--edit:after{opacity:0}.ck .ck-comment__main .ck-comment__input-wrapper{display:flex;flex-direction:column;position:relative;transition:all .3s linear}.ck .ck-comment__main .ck-comment__input-wrapper .ck-comment__input{padding:0}.ck .ck-comment__content{word-break:break-word}.ck .ck-comment__user{z-index:var(--ck-z-default)}.ck-comment__input-actions .ck.ck-button.ck-comment__input-actions--submit{color:var(--ck-color-button-save)}.ck-comment__input-actions .ck.ck-button.ck-comment__input-actions--cancel{color:var(--ck-color-button-cancel)}.ck .ck-comment__input p,.ck .ck-comment p{margin:0}.ck .ck-comment__input ol,.ck .ck-comment__input ul,.ck .ck-comment ol,.ck .ck-comment ul{padding-left:10px;margin-left:10px}.ck .ck-comment__input ul,.ck .ck-comment ul{list-style:disc;margin-bottom:5px;margin-top:0}.ck .ck-comment__input ul ul,.ck .ck-comment ul ul{list-style:circle}.ck .ck-comment__input ul ul ul,.ck .ck-comment ul ul ul{list-style:square}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./commentthread.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-color-thread-remove-background:var(--ck-color-comment-remove-background);--ck-color-comment-count:#5891ca}.ck .ck-thread{width:100%;color:var(--ck-color-base-text);outline:0;background-color:var(--ck-color-base-background);overflow:hidden;transition:all .3s ease;border-radius:var(--ck-border-radius)}.ck .ck-thread__comments .ck-comment__wrapper:last-of-type .ck-comment:after{opacity:0}.ck .ck-thread__container{transition:transform .3s ease}.ck .ck-thread__comments{position:relative;z-index:var(--ck-z-default);list-style:none;margin:0;padding:0;border-radius:var(--ck-border-radius);overflow:hidden}.ck .ck-thread__comment-count{--ck-user-avatar-size:28px;padding-left:calc(var(--ck-user-avatar-size) + var(--ck-spacing-standard)*2);color:var(--ck-color-comment-count);font-size:var(--ck-font-size-base);font-weight:700;cursor:pointer;transition:background-color .3s ease}.ck .ck-thread__comment-count:before{content:\\\"\\\\25BC\\\";margin-right:var(--ck-spacing-small)}.ck .ck-thread--active .ck-comment__options.ck-dropdown{display:block}.ck .ck-thread--active .ck-thread__input{display:block;background-color:var(--ck-color-comment-background)}.ck .ck-thread--remove .ck-comment{background-color:var(--ck-color-comment-remove-background)}.ck .ck-thread--remove .ck-thread__input--active{background-color:var(--ck-color-base-background)}.ck .ck-thread--remove .ck-thread__comment-count,.ck .ck-thread--remove .ck-thread__input--active.ck-thread__input{background-color:var(--ck-color-comment-remove-background)}.ck .ck-thread--remove .ck-comment__wrapper .ck-comment:after{opacity:0}.ck .ck-thread--remove-confirmation .ck-thread__container{transform:translate3d(-100%,0,0)}.ck.ck-button.ck-thread__remove-confirm-submit{color:var(--ck-color-button-save)}.ck.ck-button.ck-thread__remove-confirm-cancel{color:var(--ck-color-button-cancel)}.ck .ck-thread__remove-confirm{font-size:var(--ck-font-size-base);position:absolute;display:flex;justify-content:flex-start;top:0;left:100%;width:100%;height:100%;background-color:var(--ck-color-comment-remove-background)}.ck .ck-thread__remove-confirm .ck-thread__remove-confirm-inner{display:flex;flex-direction:column;align-items:center;justify-content:center;padding-top:var(--ck-spacing-standard);height:100%;width:100%;max-height:400px}.ck .ck-thread__remove-confirm p{font-weight:700;margin:0}.ck .ck-thread__input{width:calc(100% - var(--ck-user-avatar-size));transition:background-color .2s ease-in-out;border-radius:var(--ck-border-radius)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./commentinput.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck .ck-comment__input-container{--ck-user-avatar-size:28px;font-size:var(--ck-font-size-base);display:none;padding:var(--ck-spacing-standard);background:var(--ck-color-comment-background)}.ck .ck-comment__input-container--active{display:flex}.ck .ck-comment__input{padding:var(--ck-spacing-standard);padding-top:var(--ck-spacing-medium);color:var(--ck-color-base-text);border-width:0;resize:none;background-color:initial;transition:color .3s ease-in-out}.ck .ck-comment__input:focus{outline:none}.ck .ck-comment__input .ck-editor__editable_inline{--ck-focus-ring:none;--ck-inner-shadow:none;padding:0;overflow:visible;border:0;background-color:initial;word-break:break-word}.ck-comment__input-wrapper .ck.ck-editor__editable_inline :first-child{margin-top:0}.ck-comment__input-wrapper .ck.ck-editor__editable_inline :last-child{margin-bottom:0}.ck .ck-comment__input-actions{width:100%;text-align:right;display:none}.ck .ck-comment__input-actions.ck-comment__input-actions--active{display:block}.ck .ck-comment__input-actions .ck-button{background-color:initial;min-width:unset;min-height:unset;cursor:pointer;color:var(--ck-color-annotations-icon);border-radius:var(--ck-border-radius);font-size:var(--ck-annotation-button-size)}.ck .ck-comment__input-actions .ck-button.ck-disabled{opacity:.3}.ck .ck-comment__input-textarea{display:block}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./commentmarker.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-color-comment-marker:#fef7a9;--ck-color-comment-marker-active:#fdf05d}.ck-comment-marker{background:var(--ck-color-comment-marker);border-top:3px solid transparent;border-bottom:3px solid transparent}.ck-comment-marker.ck-widget{background-color:initial;border:3px solid var(--ck-color-comment-marker)}.ck-comment-marker--active{background:var(--ck-color-comment-marker-active)}.ck-comment-marker--active.ck-widget{border-color:var(--ck-color-comment-marker-active)}.ck-comment-marker--active.ck-widget .ck-comment-marker{background-color:var(--ck-color-comment-marker)}.ck-comment-marker--active .ck-comment-marker{background:var(--ck-color-comment-marker-active)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./balloonpanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-balloon-panel-arrow-z-index:calc(var(--ck-z-default) - 3)}.ck.ck-balloon-panel{display:none;position:absolute;z-index:var(--ck-z-modal)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{content:\\\"\\\";position:absolute}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_n]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_n]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_s]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_s]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel.ck-balloon-panel_visible{display:block}:root{--ck-balloon-arrow-offset:2px;--ck-balloon-arrow-height:10px;--ck-balloon-arrow-half-width:8px;--ck-balloon-arrow-drop-shadow:0 2px 2px var(--ck-color-shadow-drop)}.ck.ck-balloon-panel{border-radius:0}.ck-rounded-corners .ck.ck-balloon-panel,.ck.ck-balloon-panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-balloon-panel{box-shadow:var(--ck-drop-shadow),0 0;min-height:15px;background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{width:0;height:0;border-style:solid}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-left-width:var(--ck-balloon-arrow-half-width);border-bottom-width:var(--ck-balloon-arrow-height);border-right-width:var(--ck-balloon-arrow-half-width);border-top-width:0}.ck.ck-balloon-panel[class*=arrow_n]:before{border-bottom-color:var(--ck-color-panel-border)}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-left-color:transparent;border-right-color:transparent;border-top-color:transparent}.ck.ck-balloon-panel[class*=arrow_n]:after{border-bottom-color:var(--ck-color-panel-background);margin-top:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-left-width:var(--ck-balloon-arrow-half-width);border-bottom-width:0;border-right-width:var(--ck-balloon-arrow-half-width);border-top-width:var(--ck-balloon-arrow-height)}.ck.ck-balloon-panel[class*=arrow_s]:before{border-top-color:var(--ck-color-panel-border);filter:drop-shadow(var(--ck-balloon-arrow-drop-shadow))}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent}.ck.ck-balloon-panel[class*=arrow_s]:after{border-top-color:var(--ck-color-panel-background);margin-bottom:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:before{left:50%;margin-left:calc(var(--ck-balloon-arrow-half-width)*-1);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{left:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:before{right:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:before{left:50%;margin-left:calc(var(--ck-balloon-arrow-half-width)*-1);bottom:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{left:calc(var(--ck-balloon-arrow-half-width)*2);bottom:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:before{right:calc(var(--ck-balloon-arrow-half-width)*2);bottom:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sme:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sme:before{right:25%;margin-right:calc(var(--ck-balloon-arrow-half-width)*2);bottom:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_smw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_smw:before{left:25%;margin-left:calc(var(--ck-balloon-arrow-half-width)*2);bottom:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nme:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nme:before{right:25%;margin-right:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nmw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nmw:before{left:25%;margin-left:calc(var(--ck-balloon-arrow-half-width)*2);top:calc(var(--ck-balloon-arrow-height)*-1)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./balloonrotator.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck .ck-balloon-rotator__navigation{display:flex;align-items:center;justify-content:center}.ck .ck-balloon-rotator__content .ck-toolbar{justify-content:center}.ck .ck-balloon-rotator__navigation{background:var(--ck-color-toolbar-background);border-bottom:1px solid var(--ck-color-toolbar-border);padding:0 var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation>*{margin-right:var(--ck-spacing-small);margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation .ck-balloon-rotator__counter{margin-right:var(--ck-spacing-standard);margin-left:var(--ck-spacing-small)}.ck .ck-balloon-rotator__content .ck.ck-annotation-wrapper{box-shadow:none}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./fakepanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck .ck-fake-panel{position:absolute;z-index:calc(var(--ck-z-modal) - 1)}.ck .ck-fake-panel div{position:absolute}.ck .ck-fake-panel div:first-child{z-index:2}.ck .ck-fake-panel div:nth-child(2){z-index:1}:root{--ck-balloon-fake-panel-offset-horizontal:6px;--ck-balloon-fake-panel-offset-vertical:6px}.ck .ck-fake-panel div{box-shadow:var(--ck-drop-shadow),0 0;min-height:15px;background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border);border-radius:var(--ck-border-radius);width:100%;height:100%}.ck .ck-fake-panel div:first-child{margin-left:var(--ck-balloon-fake-panel-offset-horizontal);margin-top:var(--ck-balloon-fake-panel-offset-vertical)}.ck .ck-fake-panel div:nth-child(2){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*2);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*2)}.ck .ck-fake-panel div:nth-child(3){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*3);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*3)}.ck .ck-balloon-panel_arrow_s+.ck-fake-panel,.ck .ck-balloon-panel_arrow_se+.ck-fake-panel,.ck .ck-balloon-panel_arrow_sw+.ck-fake-panel{--ck-balloon-fake-panel-offset-vertical:-6px}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./annotation-inline.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-inline-annotation-container-width:300px;--ck-inline-annotation-container-max-height:400px}.ck.ck-balloon-panel .ck-annotation-wrapper{position:static;width:var(--ck-inline-annotation-container-width);max-height:var(--ck-inline-annotation-container-max-height);overflow-y:auto;overscroll-behavior-y:contain;overflow-x:hidden}.ck.ck-balloon-panel .ck-annotation{animation:none}.ck.ck-balloon-panel .ck-annotation-wrapper *{white-space:normal}.ck.ck-balloon-panel .ck-annotation-wrapper strong{font-weight:700}.ck.ck-balloon-panel .ck-annotation-wrapper i{font-style:italic}.ck.ck-balloon-panel button.ck-suggestion--accept .ck-tooltip__text,.ck.ck-balloon-panel button.ck-suggestion--discard .ck-tooltip__text{text-align:center}.ck.ck-balloon-panel button.ck-suggestion--discard .ck-tooltip{left:unset;right:0}.ck.ck-balloon-panel button.ck-suggestion--discard .ck-tooltip__text{left:unset}.ck.ck-balloon-panel button.ck-suggestion--discard .ck-tooltip__text:after{left:calc(100% - 10px)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./sidebar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-color-annotation-wrapper-background:#fff;--ck-color-annotation-wrapper-drop-shadow:0 1px 1px 1px #e6e6e6}.ck.ck-sidebar{position:relative;transition:min-height .25s ease;outline:0}.ck-sidebar-item{position:absolute;width:100%;transition:top .3s ease,box-shadow .3s ease}.ck-sidebar-item--no-animation{transition:top 0s ease!important}.ck.ck-annotation-wrapper{outline:0;border-radius:var(--ck-border-radius);background:var(--ck-color-annotation-wrapper-background);box-shadow:var(--ck-color-annotation-wrapper-drop-shadow)}.ck.ck-annotation-wrapper:not(.ck-annotation-wrapper--active):hover{box-shadow:var(--ck-drop-shadow)}.ck.ck-annotation-wrapper--active{box-shadow:var(--ck-drop-shadow-active)}.ck.ck-annotation-wrapper--active .ck-annotation__actions,.ck.ck-annotation-wrapper:hover .ck-annotation__actions{opacity:1}.ck.ck-annotation-wrapper--active .ck-suggestion--accept,.ck.ck-annotation-wrapper:hover .ck-suggestion--accept{color:var(--ck-color-button-save)}.ck.ck-annotation-wrapper--active .ck-suggestion--discard,.ck.ck-annotation-wrapper:hover .ck-suggestion--discard{color:var(--ck-color-button-cancel)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./sidebar-narrow.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-annotation-counter-icon-size:18px;--ck-annotation-counter-number-size:10px;--ck-color-annotation-counter-comment:#f2de02;--ck-color-annotation-counter-suggestion-insertion:#5ad86b;--ck-color-annotation-counter-suggestion-deletion:#d85a79;--ck-color-annotation-counter-suggestion-format:#5ac1d8}.ck.ck-sidebar--narrow .ck-sidebar-item{display:flex;justify-content:center}.ck.ck-sidebar--narrow .ck-annotation-counter{font-size:var(--ck-annotation-counter-icon-size);min-height:unset;padding:0;cursor:pointer;color:grey}.ck.ck-sidebar--narrow .ck-annotation-counter:focus,.ck.ck-sidebar--narrow .ck-annotation-counter:hover{background:transparent;box-shadow:none;color:#4d4d4d}.ck.ck-sidebar--narrow .ck-annotation-counter__badge{border-radius:50%;position:absolute;width:16px;height:16px;background:#333;font-weight:700;color:#fff;font-size:var(--ck-annotation-counter-number-size);font-family:var(--ck-font-face);right:0;top:0;text-shadow:-1px 0 2px #444,1px 0 2px #444;display:flex;justify-content:center;line-height:16px;z-index:1}.ck.ck-sidebar--narrow .ck-annotation-counter__badge--edit-mode{line-height:1}.ck.ck-sidebar--narrow .ck-annotation-counter__badge--suggestion-insertion,.ck.ck-sidebar--narrow .ck-annotation-counter__badge--suggestion-replace{background:var(--ck-color-annotation-counter-suggestion-insertion)}.ck.ck-sidebar--narrow .ck-annotation-counter__badge--suggestion-deletion{background:var(--ck-color-annotation-counter-suggestion-deletion)}.ck.ck-sidebar--narrow .ck-annotation-counter__badge--suggestion-format{background:var(--ck-color-annotation-counter-suggestion-format)}.ck.ck-sidebar--narrow .ck-annotation-counter__badge--comment{background:var(--ck-color-annotation-counter-comment)}\"","module.exports = \".ck.ck-heading_heading1{font-size:20px}.ck.ck-heading_heading2{font-size:17px}.ck.ck-heading_heading3{font-size:14px}.ck[class*=ck-heading_heading]{font-weight:700}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__panel .ck-list__item{min-width:18em}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./splitbutton.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \".ck.ck-splitbutton{font-size:inherit}.ck.ck-splitbutton .ck-splitbutton__action:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-button .ck-tooltip{display:none}:root{--ck-color-split-button-hover-background:#ebebeb;--ck-color-split-button-hover-border:#b3b3b3}[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__action{border-top-right-radius:unset;border-bottom-right-radius:unset}[dir=rtl] .ck.ck-splitbutton>.ck-splitbutton__action{border-top-left-radius:unset;border-bottom-left-radius:unset}.ck.ck-splitbutton>.ck-splitbutton__arrow{min-width:unset}[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow{border-radius:0}.ck-rounded-corners [dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow,[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:unset;border-bottom-left-radius:unset}[dir=rtl] .ck.ck-splitbutton>.ck-splitbutton__arrow{border-top-right-radius:unset;border-bottom-right-radius:unset}.ck.ck-splitbutton>.ck-splitbutton__arrow svg{width:var(--ck-dropdown-arrow-size)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-button:not(.ck-on):not(.ck-disabled):not(:hover),.ck.ck-splitbutton:hover>.ck-button:not(.ck-on):not(.ck-disabled):not(:hover){background:var(--ck-color-split-button-hover-background)}[dir=ltr] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled),[dir=ltr] .ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled){border-left-color:var(--ck-color-split-button-hover-border)}[dir=rtl] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled),[dir=rtl] .ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled){border-right-color:var(--ck-color-split-button-hover-border)}.ck.ck-splitbutton.ck-splitbutton_open{border-radius:0}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__action,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners>.ck-splitbutton__action{border-bottom-left-radius:0}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners>.ck-splitbutton__arrow{border-bottom-right-radius:0}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./highlight.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","module.exports = \":root{--ck-highlight-marker-yellow:#fdfd77;--ck-highlight-marker-green:#62f962;--ck-highlight-marker-pink:#fc7899;--ck-highlight-marker-blue:#72ccfd;--ck-highlight-pen-red:#e71313;--ck-highlight-pen-green:#128a00}.ck-content .marker-yellow{background-color:var(--ck-highlight-marker-yellow)}.ck-content .marker-green{background-color:var(--ck-highlight-marker-green)}.ck-content .marker-pink{background-color:var(--ck-highlight-marker-pink)}.ck-content .marker-blue{background-color:var(--ck-highlight-marker-blue)}.ck-content .pen-red{color:var(--ck-highlight-pen-red);background-color:initial}.ck-content .pen-green{color:var(--ck-highlight-pen-green);background-color:initial}\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\nconst ElementApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tupdateSourceElement() {\n\t\tif ( !this.sourceElement ) {\n\t\t\t/**\n\t\t\t * Cannot update the source element of a detached editor.\n\t\t\t *\n\t\t\t * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n\t\t\t * pass an element to `Editor.create()`.\n\t\t\t *\n\t\t\t * @error editor-missing-sourceelement\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'editor-missing-sourceelement',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tsetDataInElement( this.sourceElement, this.data.get() );\n\t}\n};\n\nexport default ElementApiMixin;\n\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement( el, data ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\tel.value = data;\n\t}\n\n\tel.innerHTML = data;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nexport default class ElementReplacer {\n\tconstructor() {\n\t\t/**\n\t\t * The elements replaced by {@link #replace} and their replacements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis._replacedElements = [];\n\t}\n\n\t/**\n\t * Hides the `element` and, if specified, inserts the the given element next to it.\n\t *\n\t * The effect of this method can be reverted by {@link #restore}.\n\t *\n\t * @param {HTMLElement} element The element to replace.\n\t * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n\t */\n\treplace( element, newElement ) {\n\t\tthis._replacedElements.push( { element, newElement } );\n\n\t\telement.style.display = 'none';\n\n\t\tif ( newElement ) {\n\t\t\telement.parentNode.insertBefore( newElement, element.nextSibling );\n\t\t}\n\t}\n\n\t/**\n\t * Restores what {@link #replace} did.\n\t */\n\trestore() {\n\t\tthis._replacedElements.forEach( ( { element, newElement } ) => {\n\t\t\telement.style.display = '';\n\n\t\t\tif ( newElement ) {\n\t\t\t\tnewElement.remove();\n\t\t\t}\n\t\t} );\n\n\t\tthis._replacedElements = [];\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\n\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\nimport normalizeToolbarConfig from '@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig';\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\n\n/**\n * The classic editor UI class.\n *\n * @extends module:core/editor/editorui~EditorUI\n */\nexport default class ClassicEditorUI extends EditorUI {\n\t/**\n\t * Creates an instance of the classic editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n\t */\n\tconstructor( editor, view ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The main (top–most) view of the editor UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editorui/editoruiview~EditorUIView} #view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * A normalized `config.toolbar` object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._toolbarConfig = normalizeToolbarConfig( editor.config.get( 'toolbar' ) );\n\n\t\t/**\n\t\t * The element replacer instance used to hide the editor's source element.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/elementreplacer~ElementReplacer}\n\t\t */\n\t\tthis._elementReplacer = new ElementReplacer();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget element() {\n\t\treturn this.view.element;\n\t}\n\n\t/**\n\t * Initializes the UI.\n\t *\n\t * @param {HTMLElement|null} replacementElement The DOM element that will be the source for the created editor.\n\t */\n\tinit( replacementElement ) {\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\t\tconst editingView = editor.editing.view;\n\t\tconst editable = view.editable;\n\t\tconst editingRoot = editingView.document.getRoot();\n\n\t\t// The editable UI and editing root should share the same name. Then name is used\n\t\t// to recognize the particular editable, for instance in ARIA attributes.\n\t\teditable.name = editingRoot.rootName;\n\n\t\tview.render();\n\n\t\t// The editable UI element in DOM is available for sure only after the editor UI view has been rendered.\n\t\t// But it can be available earlier if a DOM element has been passed to BalloonEditor.create().\n\t\tconst editableElement = editable.element;\n\n\t\t// Register the editable UI view in the editor. A single editor instance can aggregate multiple\n\t\t// editable areas (roots) but the classic editor has only one.\n\t\tthis.setEditableElement( editable.name, editableElement );\n\n\t\t// Let the global focus tracker know that the editable UI element is focusable and\n\t\t// belongs to the editor. From now on, the focus tracker will sustain the editor focus\n\t\t// as long as the editable is focused (e.g. the user is typing).\n\t\tthis.focusTracker.add( editableElement );\n\n\t\t// Let the editable UI element respond to the changes in the global editor focus\n\t\t// tracker. It has been added to the same tracker a few lines above but, in reality, there are\n\t\t// many focusable areas in the editor, like balloons, toolbars or dropdowns and as long\n\t\t// as they have focus, the editable should act like it is focused too (although technically\n\t\t// it isn't), e.g. by setting the proper CSS class, visually announcing focus to the user.\n\t\t// Doing otherwise will result in editable focus styles disappearing, once e.g. the\n\t\t// toolbar gets focused.\n\t\tview.editable.bind( 'isFocused' ).to( this.focusTracker );\n\n\t\t// Bind the editable UI element to the editing view, making it an end– and entry–point\n\t\t// of the editor's engine. This is where the engine meets the UI.\n\t\teditingView.attachDomRoot( editableElement );\n\n\t\t// If an element containing the initial data of the editor was provided, replace it with\n\t\t// an editor instance's UI in DOM until the editor is destroyed. For instance, a <textarea>\n\t\t// can be such element.\n\t\tif ( replacementElement ) {\n\t\t\tthis._elementReplacer.replace( replacementElement, this.element );\n\t\t}\n\n\t\tthis._initPlaceholder();\n\t\tthis._initToolbar();\n\t\tthis.fire( 'ready' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tconst view = this.view;\n\t\tconst editingView = this.editor.editing.view;\n\n\t\tthis._elementReplacer.restore();\n\t\teditingView.detachDomRoot( view.editable.name );\n\t\tview.destroy();\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Initializes the editor toolbar.\n\t *\n\t * @private\n\t */\n\t_initToolbar() {\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\t\tconst editingView = editor.editing.view;\n\n\t\t// Set–up the sticky panel with toolbar.\n\t\tview.stickyPanel.bind( 'isActive' ).to( this.focusTracker, 'isFocused' );\n\t\tview.stickyPanel.limiterElement = view.element;\n\n\t\tif ( this._toolbarConfig.viewportTopOffset ) {\n\t\t\tview.stickyPanel.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n\t\t}\n\n\t\tview.toolbar.fillFromConfig( this._toolbarConfig.items, this.componentFactory );\n\n\t\tenableToolbarKeyboardFocus( {\n\t\t\torigin: editingView,\n\t\t\toriginFocusTracker: this.focusTracker,\n\t\t\toriginKeystrokeHandler: editor.keystrokes,\n\t\t\ttoolbar: view.toolbar\n\t\t} );\n\t}\n\n\t/**\n\t * Enable the placeholder text on the editing root, if any was configured.\n\t *\n\t * @private\n\t */\n\t_initPlaceholder() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst editingRoot = editingView.document.getRoot();\n\t\tconst sourceElement = editor.sourceElement;\n\n\t\tconst placeholderText = editor.config.get( 'placeholder' ) ||\n\t\t\tsourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute( 'placeholder' );\n\n\t\tif ( placeholderText ) {\n\t\t\tenablePlaceholder( {\n\t\t\t\tview: editingView,\n\t\t\t\telement: editingRoot,\n\t\t\t\ttext: placeholderText,\n\t\t\t\tisDirectHost: false\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n *\n * * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n *\t\t\t...\n *\t\t}\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nexport default function normalizeToolbarConfig( config ) {\n\tif ( Array.isArray( config ) ) {\n\t\treturn {\n\t\t\titems: config\n\t\t};\n\t}\n\n\tif ( !config ) {\n\t\treturn {\n\t\t\titems: []\n\t\t};\n\t}\n\n\treturn Object.assign( {\n\t\titems: []\n\t}, config );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus( {\n\torigin,\n\toriginKeystrokeHandler,\n\toriginFocusTracker,\n\ttoolbar,\n\tbeforeFocus,\n\tafterBlur\n} ) {\n\t// Because toolbar items can get focus, the overall state of the toolbar must\n\t// also be tracked.\n\toriginFocusTracker.add( toolbar.element );\n\n\t// Focus the toolbar on the keystroke, if not already focused.\n\toriginKeystrokeHandler.set( 'Alt+F10', ( data, cancel ) => {\n\t\tif ( originFocusTracker.isFocused && !toolbar.focusTracker.isFocused ) {\n\t\t\tif ( beforeFocus ) {\n\t\t\t\tbeforeFocus();\n\t\t\t}\n\n\t\t\ttoolbar.focus();\n\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// Blur the toolbar and bring the focus back to origin.\n\ttoolbar.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\tif ( toolbar.focusTracker.isFocused ) {\n\t\t\torigin.focus();\n\n\t\t\tif ( afterBlur ) {\n\t\t\t\tafterBlur();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\n\nimport EditorUIView from '../../editorui/editoruiview';\nimport LabelView from '../../label/labelview';\n\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nexport default class BoxedEditorUIView extends EditorUIView {\n\t/**\n\t * Creates an instance of the boxed editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance..\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views located in the top (`.ck-editor__top`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.top = this.createCollection();\n\n\t\t/**\n\t\t * Collection of the child views located in the main (`.ck-editor__main`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.main = this.createCollection();\n\n\t\t/**\n\t\t * Voice label of the UI.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #_voiceLabelView\n\t\t */\n\t\tthis._voiceLabelView = this._createVoiceLabel();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-editor',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\trole: 'application',\n\t\t\t\tdir: locale.uiLanguageDirection,\n\t\t\t\tlang: locale.uiLanguage,\n\t\t\t\t'aria-labelledby': this._voiceLabelView.id\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis._voiceLabelView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-editor__top',\n\t\t\t\t\t\t\t'ck-reset_all'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.top\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-editor__main'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.main\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a voice label view instance.\n\t *\n\t * @private\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n\t_createVoiceLabel() {\n\t\tconst t = this.t;\n\t\tconst voiceLabel = new LabelView();\n\n\t\tvoiceLabel.text = t( 'Rich Text Editor' );\n\n\t\tvoiceLabel.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-voice-label'\n\t\t\t}\n\t\t} );\n\n\t\treturn voiceLabel;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit( unit ) {\n\t/**\n\t * A function, which adds a pre–defined trailing `unit`\n\t * to the passed `value`.\n\t *\n\t * @function helper\n \t * @param {*} value A value to be given the unit.\n \t * @returns {String} A value with the trailing unit.\n\t */\n\treturn value => value + unit;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport View from '../../view';\nimport Template from '../../template';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\n\nimport '../../../theme/components/panel/stickypanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The sticky panel view class.\n */\nexport default class StickyPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the sticky panel should be active.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isActive\n\t\t */\n\t\tthis.set( 'isActive', false );\n\n\t\t/**\n\t\t * Controls whether the sticky panel is in the \"sticky\" state.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isSticky\n\t\t */\n\t\tthis.set( 'isSticky', false );\n\n\t\t/**\n\t\t * The limiter element for the sticky panel instance. Its bounding rect limits\n\t\t * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n\t\t * edge of the limiter, it becomes sticky to that edge and does not float\n\t\t * off the limiter. It is mandatory for the panel to work properly and once\n\t\t * set, it cannot be changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement} #limiterElement\n\t\t */\n\t\tthis.set( 'limiterElement', null );\n\n\t\t/**\n\t\t * The offset from the bottom edge of {@link #limiterElement}\n\t\t * which stops the panel from stickying any further to prevent limiter's content\n\t\t * from being completely covered.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 50\n\t\t * @member {Number} #limiterBottomOffset\n\t\t */\n\t\tthis.set( 'limiterBottomOffset', 50 );\n\n\t\t/**\n\t\t * The offset from the top edge of the web browser's viewport which makes the\n\t\t * panel become sticky. The default value is `0`, which means the panel becomes\n\t\t * sticky when it's upper edge touches the top of the page viewport.\n\t\t *\n\t\t * This attribute is useful when the web page has UI elements positioned to the top\n\t\t * either using `position: fixed` or `position: sticky`, which would cover the\n\t\t * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #viewportTopOffset\n\t\t */\n\t\tthis.set( 'viewportTopOffset', 0 );\n\n\t\t/**\n\t\t * Controls the `margin-left` CSS style of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String} #_marginLeft\n\t\t */\n\t\tthis.set( '_marginLeft', null );\n\n\t\t/**\n\t\t * Set `true` if the sticky panel reached the bottom edge of the\n\t\t * {@link #limiterElement}.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_isStickyToTheLimiter\n\t\t */\n\t\tthis.set( '_isStickyToTheLimiter', false );\n\n\t\t/**\n\t\t * Set `true` if the sticky panel uses the {@link #viewportTopOffset},\n\t\t * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n\t\t * is not `0`.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_hasViewportTopOffset\n\t\t */\n\t\tthis.set( '_hasViewportTopOffset', false );\n\n\t\t/**\n\t\t * Collection of the child views which creates balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link module:ui/view~View#element} of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_panelRect\n\t\t */\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link #limiterElement}\n\t\t * of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_limiterRect\n\t\t */\n\n\t\t/**\n\t\t * A dummy element which visually fills the space as long as the\n\t\t * actual panel is sticky. It prevents flickering of the UI.\n\t\t *\n\t\t * @protected\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._contentPanelPlaceholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__placeholder'\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.to( 'isSticky', isSticky => isSticky ? 'block' : 'none' ),\n\t\t\t\t\theight: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._panelRect.height ) : null;\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t}\n\t\t} ).render();\n\n\t\t/**\n\t\t * The panel which accepts children into {@link #content} collection.\n\t\t * Also an element which is positioned when {@link #isSticky}.\n\t\t *\n\t\t * @protected\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._contentPanel = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__content',\n\t\t\t\t\t// Toggle class of the panel when \"sticky\" state changes in the view.\n\t\t\t\t\tbind.if( 'isSticky', 'ck-sticky-panel__content_sticky' ),\n\t\t\t\t\tbind.if( '_isStickyToTheLimiter', 'ck-sticky-panel__content_sticky_bottom-limit' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._contentPanelPlaceholder.getBoundingClientRect().width ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\ttop: bind.to( '_hasViewportTopOffset', _hasViewportTopOffset => {\n\t\t\t\t\t\treturn _hasViewportTopOffset ? toPx( this.viewportTopOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tbottom: bind.to( '_isStickyToTheLimiter', _isStickyToTheLimiter => {\n\t\t\t\t\t\treturn _isStickyToTheLimiter ? toPx( this.limiterBottomOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tmarginLeft: bind.to( '_marginLeft' )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} ).render();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis._contentPanelPlaceholder,\n\t\t\t\tthis._contentPanel\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Check if the panel should go into the sticky state immediately.\n\t\tthis._checkIfShouldBeSticky();\n\n\t\t// Update sticky state of the panel as the window is being scrolled.\n\t\tthis.listenTo( global.window, 'scroll', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\n\t\t// Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\t\tthis.listenTo( this, 'change:isActive', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\t}\n\n\t/**\n\t * Analyzes the environment to decide whether the panel should\n\t * be sticky or not.\n\t *\n\t * @protected\n\t */\n\t_checkIfShouldBeSticky() {\n\t\tconst panelRect = this._panelRect = this._contentPanel.getBoundingClientRect();\n\t\tlet limiterRect;\n\n\t\tif ( !this.limiterElement ) {\n\t\t\tthis.isSticky = false;\n\t\t} else {\n\t\t\tlimiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect();\n\n\t\t\t// The panel must be active to become sticky.\n\t\t\tthis.isSticky = this.isActive &&\n\t\t\t\t// The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n\t\t\t\tlimiterRect.top < this.viewportTopOffset &&\n\t\t\t\t// The model#limiterElement's height mustn't be smaller than the panel's height and model#limiterBottomOffset.\n\t\t\t\t// There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n\t\t\t\t// it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the panel\n\t\t\t\t// would be positioned before the model#limiterElement.\n\t\t\t\tthis._panelRect.height + this.limiterBottomOffset < limiterRect.height;\n\t\t}\n\n\t\t// Stick the panel to the top edge of the viewport simulating CSS position:sticky.\n\t\t// TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\t\tif ( this.isSticky ) {\n\t\t\tthis._isStickyToTheLimiter =\n\t\t\t\tlimiterRect.bottom < panelRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n\t\t\tthis._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n\t\t\tthis._marginLeft = this._isStickyToTheLimiter ? null : toPx( -global.window.scrollX );\n\t\t}\n\t\t// Detach the panel from the top edge of the viewport.\n\t\telse {\n\t\t\tthis._isStickyToTheLimiter = false;\n\t\t\tthis._hasViewportTopOffset = false;\n\t\t\tthis._marginLeft = null;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\n\nimport View from '../view';\n\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ToolbarSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/resizeobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport mix from '../mix';\nimport global from './global';\nimport Rect from './rect';\nimport DomEmitterMixin from './emittermixin';\n\nconst RESIZE_CHECK_INTERVAL = 100;\n\n/**\n * A helper class which instances allow performing custom actions when native DOM elements are resized.\n *\n *\t\tconst editableElement = editor.editing.view.getDomRoot();\n *\n *\t\tconst observer = new ResizeObserver( editableElement, entry => {\n *\t\t\tconsole.log( 'The editable element has been resized in DOM.' );\n *\t\t\tconsole.log( entry.target ); // -> editableElement\n *\t\t\tconsole.log( entry.contentRect.width ); // -> e.g. '423px'\n *\t\t} );\n *\n * By default, it uses the [native DOM resize observer](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n * under the hood and in browsers that do not support the native API yet, a polyfilled observer is\n * used instead.\n */\nexport default class ResizeObserver {\n\t/**\n\t * Creates an instance of the `ResizeObserver` class.\n\t *\n\t * @param {HTMLElement} element A DOM element that is to be observed for resizing. Note that\n\t * the element must be visible (i.e. not detached from DOM) for the observer to work.\n\t * @param {Function} callback A function called when the observed element was resized. It passes\n\t * the [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\n\t * object with information about the resize event.\n\t */\n\tconstructor( element, callback ) {\n\t\t// **Note**: For the maximum performance, this class ensures only a single instance of the native\n\t\t// (or polyfilled) observer is used no matter how many instances of this class were created.\n\t\tif ( !ResizeObserver._observerInstance ) {\n\t\t\tResizeObserver._createObserver();\n\t\t}\n\n\t\t/**\n\t\t * The element observer by this observer.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._element = element;\n\n\t\t/**\n\t\t * The callback executed each time {@link #_element} is resized.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Function}\n\t\t */\n\t\tthis._callback = callback;\n\n\t\tResizeObserver._addElementCallback( element, callback );\n\t\tResizeObserver._observerInstance.observe( element );\n\t}\n\n\t/**\n\t * Destroys the observer which disables the `callback` passed to the {@link #constructor}.\n\t */\n\tdestroy() {\n\t\tResizeObserver._deleteElementCallback( this._element, this._callback );\n\t}\n\n\t/**\n\t * Registers a new resize callback for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @param {Function} callback\n\t */\n\tstatic _addElementCallback( element, callback ) {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\tResizeObserver._elementCallbacks = new Map();\n\t\t}\n\n\t\tlet callbacks = ResizeObserver._elementCallbacks.get( element );\n\n\t\tif ( !callbacks ) {\n\t\t\tcallbacks = new Set();\n\t\t\tResizeObserver._elementCallbacks.set( element, callbacks );\n\t\t}\n\n\t\tcallbacks.add( callback );\n\t}\n\n\t/**\n\t * Removes a resize callback from the DOM element. If no callbacks are left\n\t * for the element, it removes the element from the native observer.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @param {Function} callback\n\t */\n\tstatic _deleteElementCallback( element, callback ) {\n\t\tconst callbacks = ResizeObserver._getElementCallbacks( element );\n\n\t\t// Remove the element callback. Check if exist first in case someone\n\t\t// called destroy() twice.\n\t\tif ( callbacks ) {\n\t\t\tcallbacks.delete( callback );\n\n\t\t\t// If no callbacks left for the element, also remove the element.\n\t\t\tif ( !callbacks.size ) {\n\t\t\t\tResizeObserver._elementCallbacks.delete( element );\n\t\t\t\tResizeObserver._observerInstance.unobserve( element );\n\t\t\t}\n\t\t}\n\n\t\tif ( ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size ) {\n\t\t\tResizeObserver._observerInstance = null;\n\t\t\tResizeObserver._elementCallbacks = null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns are registered resize callbacks for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @returns {Set.<HTMLElement>|null}\n\t */\n\tstatic _getElementCallbacks( element ) {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ResizeObserver._elementCallbacks.get( element );\n\t}\n\n\t/**\n\t * Creates the single native observer shared across all `ResizeObserver` instances.\n\t * If the browser does not support the native API, it creates a polyfill.\n\t *\n\t * @private\n\t * @static\n\t */\n\tstatic _createObserver() {\n\t\tlet ObserverConstructor;\n\n\t\t// TODO: One day, the `ResizeObserver` API will be supported in all modern web browsers.\n\t\t// When it happens, this module will no longer make sense and should be removed and\n\t\t// the native implementation should be used across the project to save bytes.\n\t\t// Check out https://caniuse.com/#feat=resizeobserver.\n\t\tif ( typeof global.window.ResizeObserver === 'function' ) {\n\t\t\tObserverConstructor = global.window.ResizeObserver;\n\t\t} else {\n\t\t\tObserverConstructor = ResizeObserverPolyfill;\n\t\t}\n\n\t\tResizeObserver._observerInstance = new ObserverConstructor( entries => {\n\t\t\tfor ( const entry of entries ) {\n\t\t\t\tconst callbacks = ResizeObserver._getElementCallbacks( entry.target );\n\n\t\t\t\tif ( callbacks ) {\n\t\t\t\t\tfor ( const callback of callbacks ) {\n\t\t\t\t\t\tcallback( entry );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * The single native observer instance (or polyfill in browsers that do not support the API)\n * shared across all {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n *\n * @static\n * @protected\n * @readonly\n * @property {Object|null} module:utils/dom/resizeobserver~ResizeObserver#_observerInstance\n */\nResizeObserver._observerInstance = null;\n\n/**\n * A mapping of native DOM elements and their callbacks shared across all\n * {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n *\n * @static\n * @private\n * @readonly\n * @property {Map.<HTMLElement,Set>|null} module:utils/dom/resizeobserver~ResizeObserver#_elementCallbacks\n */\nResizeObserver._elementCallbacks = null;\n\n/**\n * A polyfill class for the native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver).\n *\n * @private\n * @mixes module:utils/domemittermixin~DomEmitterMixin\n */\nclass ResizeObserverPolyfill {\n\t/**\n\t * Creates an instance of the {@link module:utils/dom/resizeobserver~ResizeObserverPolyfill} class.\n\t *\n\t * It synchronously reacts to resize of the window to check if observed elements' geometry changed.\n\t *\n\t * Additionally, the polyfilled observer uses a timeout to check if observed elements' geometry has changed\n\t * in some other way (dynamic layouts, scrollbars showing up, etc.), so its response can also be asynchronous.\n\t *\n\t * @param {Function} callback A function called when any observed element was resized. Refer to the\n\t * native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) API to\n\t * learn more.\n\t */\n\tconstructor( callback ) {\n\t\t/**\n\t\t * A function called when any observed {@link #_elements element} was resized.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Function}\n\t\t */\n\t\tthis._callback = callback;\n\n\t\t/**\n\t\t * DOM elements currently observed by the observer instance.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Cached DOM {@link #_elements elements} bounding rects to compare to upon the next check.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\n\t\t */\n\t\tthis._previousRects = new Map();\n\n\t\t/**\n\t\t * An UID of the current timeout upon which the observed elements rects\n\t\t * will be compared to the {@link #_previousRects previous rects} from the past.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\n\t\t */\n\t\tthis._periodicCheckTimeout = null;\n\t}\n\n\t/**\n\t * Starts observing a DOM element.\n\t *\n\t * Learn more in the\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe).\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tobserve( element ) {\n\t\tthis._elements.add( element );\n\n\t\tthis._checkElementRectsAndExecuteCallback();\n\n\t\tif ( this._elements.size === 1 ) {\n\t\t\tthis._startPeriodicCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Stops observing a DOM element.\n\t *\n\t * Learn more in the\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve).\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tunobserve( element ) {\n\t\tthis._elements.delete( element );\n\t\tthis._previousRects.delete( element );\n\n\t\tif ( !this._elements.size ) {\n\t\t\tthis._stopPeriodicCheck();\n\t\t}\n\t}\n\n\t/**\n\t * When called, the observer calls the {@link #_callback resize callback} for all observed\n\t * {@link #_elements elements} but also starts checking periodically for changes in the elements' geometry.\n\t * If some are detected, {@link #_callback resize callback} is called for relevant elements that were resized.\n\t *\n\t * @protected\n\t */\n\t_startPeriodicCheck() {\n\t\tconst periodicCheck = () => {\n\t\t\tthis._checkElementRectsAndExecuteCallback();\n\t\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\n\t\t};\n\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis._checkElementRectsAndExecuteCallback();\n\t\t} );\n\n\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\n\t}\n\n\t/**\n\t * Stops checking for changes in all observed {@link #_elements elements} geometry.\n\t *\n\t * @protected\n\t */\n\t_stopPeriodicCheck() {\n\t\tclearTimeout( this._periodicCheckTimeout );\n\t\tthis.stopListening();\n\t\tthis._previousRects.clear();\n\t}\n\n\t/**\n\t * Checks if the geometry of any of the {@link #_elements element} has changed. If so, executes\n\t * the {@link #_callback resize callback} with element geometry data.\n\t *\n\t * @protected\n\t */\n\t_checkElementRectsAndExecuteCallback() {\n\t\tconst entries = [];\n\n\t\tfor ( const element of this._elements ) {\n\t\t\tif ( this._hasRectChanged( element ) ) {\n\t\t\t\tentries.push( {\n\t\t\t\t\ttarget: element,\n\t\t\t\t\tcontentRect: this._previousRects.get( element )\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tif ( entries.length ) {\n\t\t\tthis._callback( entries );\n\t\t}\n\t}\n\n\t/**\n\t * Compares the DOM element geometry to the {@link #_previousRects cached geometry} from the past.\n\t * Returns `true` if geometry has changed or the element is checked for the first time.\n\t *\n\t * @protected\n\t * @param {HTMLElement} element\n\t * @returns {Boolean}\n\t */\n\t_hasRectChanged( element ) {\n\t\tif ( !element.ownerDocument.body.contains( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst currentRect = new Rect( element );\n\t\tconst previousRect = this._previousRects.get( element );\n\n\t\t// The first check should always yield true despite no Previous rect to compare to.\n\t\t// The native ResizeObserver does that and... that makes sense. Sort of.\n\t\tconst hasChanged = !previousRect || !previousRect.isEqual( currentRect );\n\n\t\tthis._previousRects.set( element, currentRect );\n\n\t\treturn hasChanged;\n\t}\n}\n\nmix( ResizeObserverPolyfill, DomEmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\n\nimport View from '../view';\n\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the panel is visible.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * The position of the panel, relative to the parent.\n\t\t *\n\t\t * This property is reflected in the CSS class set to {@link #element} that controls\n\t\t * the position of the panel.\n\t\t *\n\t\t * @observable\n\t\t * @default 'se'\n\t\t * @member {'se'|'sw'|'ne'|'nw'} #position\n\t\t */\n\t\tthis.set( 'position', 'se' );\n\n\t\t/**\n\t\t * Collection of the child views in this panel.\n\t\t *\n\t\t * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n\t\t * See {@link module:ui/dropdown/utils~addListToDropdown} and\n\t\t * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-dropdown__panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-dropdown__panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-dropdown__panel-visible' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to( evt => evt.preventDefault() )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the view element or first item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tfocus() {\n\t\tif ( this.children.length ) {\n\t\t\tthis.children.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the view element or last item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tfocusLast() {\n\t\tif ( this.children.length ) {\n\t\t\tconst lastChild = this.children.last;\n\n\t\t\tif ( typeof lastChild.focusLast === 'function' ) {\n\t\t\t\tlastChild.focusLast();\n\t\t\t} else {\n\t\t\t\tlastChild.focus();\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/position\n */\n\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\nexport function getOptimalPosition( { element, target, positions, limiter, fitInViewport } ) {\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\n\tif ( isFunction( target ) ) {\n\t\ttarget = target();\n\t}\n\n\t// If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-ui/issues/260\n\tif ( isFunction( limiter ) ) {\n\t\tlimiter = limiter();\n\t}\n\n\tconst positionedElementAncestor = getPositionedAncestor( element );\n\tconst elementRect = new Rect( element );\n\tconst targetRect = new Rect( target );\n\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\t// If there are no limits, just grab the very first position and be done with that drama.\n\tif ( !limiter && !fitInViewport ) {\n\t\t[ bestPositionName, bestPositionRect ] = getPositionNameAndRect( positions[ 0 ], targetRect, elementRect );\n\t} else {\n\t\tconst limiterRect = limiter && new Rect( limiter ).getVisible();\n\t\tconst viewportRect = fitInViewport && new Rect( global.window );\n\t\tconst bestPosition = getBestPositionNameAndRect( positions, { targetRect, elementRect, limiterRect, viewportRect } );\n\n\t\t// If there's no best position found, i.e. when all intersections have no area because\n\t\t// rects have no width or height, then just use the first available position.\n\t\t[ bestPositionName, bestPositionRect ] = bestPosition || getPositionNameAndRect( positions[ 0 ], targetRect, elementRect );\n\t}\n\n\tlet absoluteRectCoordinates = getAbsoluteRectCoordinates( bestPositionRect );\n\n\tif ( positionedElementAncestor ) {\n\t\tabsoluteRectCoordinates = shiftRectCoordinatesDueToPositionedAncestor( absoluteRectCoordinates, positionedElementAncestor );\n\t}\n\n\treturn {\n\t\tleft: absoluteRectCoordinates.left,\n\t\ttop: absoluteRectCoordinates.top,\n\t\tname: bestPositionName\n\t};\n}\n\n// For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array|null} An array containing position name and its Rect (or null if position should be ignored).\nfunction getPositionNameAndRect( position, targetRect, elementRect ) {\n\tconst positionData = position( targetRect, elementRect );\n\n\tif ( !positionData ) {\n\t\treturn null;\n\t}\n\n\tconst { left, top, name } = positionData;\n\n\treturn [ name, elementRect.clone().moveTo( left, top ) ];\n}\n\n// For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n//\n// @param {Object} options\n// @param {module:utils/dom/position~Options#positions} positions Functions returning {@link module:utils/dom/position~Position}\n// to be checked, in the order of preference.\n// @param {Object} options\n// @param {utils/dom/rect~Rect} options.targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} options.elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} options.limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} options.viewportRect A rect of the viewport.\n//\n// @returns {Array} An array containing the name of the position and it's rect.\nfunction getBestPositionNameAndRect( positions, options ) {\n\tconst { elementRect, viewportRect } = options;\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\t// Let's calculate intersection areas for positions. It will end early if best match is found.\n\tconst processedPositions = processPositionsToAreas( positions, options );\n\n\t// First let's check all positions that fully fit in the viewport.\n\tif ( viewportRect ) {\n\t\tconst processedPositionsInViewport = processedPositions.filter( ( { viewportIntersectArea } ) => {\n\t\t\treturn viewportIntersectArea === elementRectArea;\n\t\t} );\n\n\t\t// Try to find best position from those which fit completely in viewport.\n\t\tconst bestPositionData = getBestOfProcessedPositions( processedPositionsInViewport, elementRectArea );\n\n\t\tif ( bestPositionData ) {\n\t\t\treturn bestPositionData;\n\t\t}\n\t}\n\n\t// Either there is no viewportRect or there is no position that fits completely in the viewport.\n\treturn getBestOfProcessedPositions( processedPositions, elementRectArea );\n}\n\n// For a given array of positioning functions, calculates intersection areas for them.\n//\n// Note: If some position fully fits into the `limiterRect`, it will be returned early, without further consideration\n// of other positions.\n//\n// @private\n//\n// @param {module:utils/dom/position~Options#positions} positions Functions returning {@link module:utils/dom/position~Position}\n// to be checked, in the order of preference.\n// @param {Object} options\n// @param {utils/dom/rect~Rect} options.targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} options.elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} options.limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} options.viewportRect A rect of the viewport.\n//\n// @returns {Array.<Object>} Array of positions with calculated intersection areas. Each item is an object containing:\n// * {String} positionName Name of position.\n// * {utils/dom/rect~Rect} positionRect Rect of position.\n// * {Number} limiterIntersectArea Area of intersection of the position with limiter part that is in the viewport.\n// * {Number} viewportIntersectArea Area of intersection of the position with viewport.\nfunction processPositionsToAreas( positions, { targetRect, elementRect, limiterRect, viewportRect } ) {\n\tconst processedPositions = [];\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\tfor ( const position of positions ) {\n\t\tconst positionData = getPositionNameAndRect( position, targetRect, elementRect );\n\n\t\tif ( !positionData ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [ positionName, positionRect ] = positionData;\n\t\tlet limiterIntersectArea = 0;\n\t\tlet viewportIntersectArea = 0;\n\n\t\tif ( limiterRect ) {\n\t\t\tif ( viewportRect ) {\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n\t\t\t\tconst limiterViewportIntersectRect = limiterRect.getIntersection( viewportRect );\n\n\t\t\t\tif ( limiterViewportIntersectRect ) {\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\n\t\t\t\t\t// limiter and actual position.\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea( positionRect );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea( positionRect );\n\t\t\t}\n\t\t}\n\n\t\tif ( viewportRect ) {\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea( positionRect );\n\t\t}\n\n\t\tconst processedPosition = {\n\t\t\tpositionName,\n\t\t\tpositionRect,\n\t\t\tlimiterIntersectArea,\n\t\t\tviewportIntersectArea\n\t\t};\n\n\t\t// If a such position is found that element is fully contained by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\tif ( limiterIntersectArea === elementRectArea ) {\n\t\t\treturn [ processedPosition ];\n\t\t}\n\n\t\tprocessedPositions.push( processedPosition );\n\t}\n\n\treturn processedPositions;\n}\n\n// For a given array of processed position data (with calculated Rects for positions and intersection areas)\n// returns such that provides the best fit of the `elementRect` into the `limiterRect` and `viewportRect` at the same time.\n//\n// **Note**: It will return early if some position fully fits into the `limiterRect`.\n//\n// @private\n// @param {Array.<Object>} Array of positions with calculated intersection areas (in order of preference).\n// Each item is an object containing:\n//\n//\t* {String} positionName Name of position.\n//\t* {utils/dom/rect~Rect} positionRect Rect of position.\n//\t* {Number} limiterIntersectArea Area of intersection of the position with limiter part that is in the viewport.\n//\t* {Number} viewportIntersectArea Area of intersection of the position with viewport.\n//\n// @param {Number} elementRectArea Area of positioned {@link module:utils/dom/position~Options#element}.\n// @returns {Array|null} An array containing the name of the position and it's rect, or null if not found.\nfunction getBestOfProcessedPositions( processedPositions, elementRectArea ) {\n\tlet maxFitFactor = 0;\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\tfor ( const { positionName, positionRect, limiterIntersectArea, viewportIntersectArea } of processedPositions ) {\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\tif ( limiterIntersectArea === elementRectArea ) {\n\t\t\treturn [ positionName, positionRect ];\n\t\t}\n\n\t\t// To maximize both viewport and limiter intersection areas we use distance on viewportIntersectArea\n\t\t// and limiterIntersectArea plane (without sqrt because we are looking for max value).\n\t\tconst fitFactor = viewportIntersectArea ** 2 + limiterIntersectArea ** 2;\n\n\t\tif ( fitFactor > maxFitFactor ) {\n\t\t\tmaxFitFactor = fitFactor;\n\t\t\tbestPositionRect = positionRect;\n\t\t\tbestPositionName = positionName;\n\t\t}\n\t}\n\n\treturn bestPositionRect ? [ bestPositionName, bestPositionRect ] : null;\n}\n\n// For a given absolute Rect coordinates object and a positioned element ancestor, it returns an object with\n// new Rect coordinates that make up for the position and the scroll of the ancestor.\n//\n// This is necessary because while Rects (and DOMRects) are relative to the browser's viewport, their coordinates\n// are used in real–life to position elements with `position: absolute`, which are scoped by any positioned\n// (and scrollable) ancestors.\n//\n// @private\n//\n// @param {Object} absoluteRectCoordinates An object with absolute rect coordinates.\n// @param {Object} absoluteRectCoordinates.top\n// @param {Object} absoluteRectCoordinates.left\n// @param {HTMLElement} positionedElementAncestor An ancestor element that should be considered.\n//\n// @returns {Object} An object corresponding to `absoluteRectCoordinates` input but with values shifted\n// to make up for the positioned element ancestor.\nfunction shiftRectCoordinatesDueToPositionedAncestor( { left, top }, positionedElementAncestor ) {\n\tconst ancestorPosition = getAbsoluteRectCoordinates( new Rect( positionedElementAncestor ) );\n\tconst ancestorBorderWidths = getBorderWidths( positionedElementAncestor );\n\n\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\n\t// with respect to that positioned ancestor.\n\tleft -= ancestorPosition.left;\n\ttop -= ancestorPosition.top;\n\n\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t// If there's some positioned ancestor of the panel, not only its position must be taken into\n\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n\t// must compensate that scrolling.\n\tleft += positionedElementAncestor.scrollLeft;\n\ttop += positionedElementAncestor.scrollTop;\n\n\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n\t// while `position: absolute` positioning does not consider it.\n\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n\t// not upper-left corner of its border.\n\tleft -= ancestorBorderWidths.left;\n\ttop -= ancestorBorderWidths.top;\n\n\treturn { left, top };\n}\n\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\nfunction getAbsoluteRectCoordinates( { left, top } ) {\n\tconst { scrollX, scrollY } = global.window;\n\n\treturn {\n\t\tleft: left + scrollX,\n\t\ttop: top + scrollY\n\t};\n}\n\n/**\n * The `getOptimalPosition()` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * **Note**: If a function returns `null`, it is ignored by the `getOptimalPosition()`.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\n\nimport global from './global';\n\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element The native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\nexport default function getPositionedAncestor( element ) {\n\tif ( !element || !element.parentNode ) {\n\t\treturn null;\n\t}\n\n\tif ( element.offsetParent === global.document.body ) {\n\t\treturn null;\n\t}\n\n\treturn element.offsetParent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport View from '../view';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/dropdown/dropdown.css';\n\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownView extends View {\n\t/**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n\t */\n\tconstructor( locale, buttonView, panelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView} #buttonView\n\t\t */\n\t\tthis.buttonView = buttonView;\n\n\t\t/**\n\t\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n\t\t *\n\t\t * Child views can be added to the panel's `children` collection:\n\t\t *\n\t\t *\t\tdropdown.panelView.children.add( childView );\n\t\t *\n\t\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n\t\t */\n\t\tthis.panelView = panelView;\n\n\t\t/**\n\t\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOpen\n\t\t */\n\t\tthis.set( 'isOpen', false );\n\n\t\t/**\n\t\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n\t\t *\n\t\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * (Optional) The `id` attribute of the dropdown (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The position of the panel, relative to the dropdown.\n\t\t *\n\t\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n\t\t * in the viewport, visible to the user. The positions correspond directly to\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n\t\t *\n\t\t * **Note**: This value has an impact on the\n\t\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n\t\t * each time the panel becomes {@link #isOpen open}.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n\t\t */\n\t\tthis.set( 'panelPosition', 'auto' );\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the dropdown:\n\t\t *\n\t\t * * <kbd>▼</kbd> opens the dropdown,\n\t\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/list/listview~ListView} #listView\n\t\t */\n\n\t\t/**\n\t\t * A child toolbar of the dropdown located in the\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n\t\t */\n\n\t\t/**\n\t\t * Fired when the toolbar button or list item is executed.\n\t\t *\n\t\t * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n\t\t * fired `execute`.\n\t\t *\n\t\t * For {@link #toolbarView} It fires when one of the buttons has been\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n\t\t * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @event execute\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Toggle the dropdown when its button has been clicked.\n\t\tthis.listenTo( this.buttonView, 'open', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\t// Let the dropdown control the position of the panel. The position must\n\t\t// be updated every time the dropdown is open.\n\t\tthis.on( 'change:isOpen', () => {\n\t\t\tif ( !this.isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\n\t\t\t// Otherwise, simply assign the static position.\n\t\t\tif ( this.panelPosition === 'auto' ) {\n\t\t\t\tthis.panelView.position = DropdownView._getOptimalPosition( {\n\t\t\t\t\telement: this.panelView.element,\n\t\t\t\t\ttarget: this.buttonView.element,\n\t\t\t\t\tfitInViewport: true,\n\t\t\t\t\tpositions: this._panelPositions\n\t\t\t\t} ).name;\n\t\t\t} else {\n\t\t\t\tthis.panelView.position = this.panelPosition;\n\t\t\t}\n\t\t} );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\tconst closeDropdown = ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.buttonView.focus();\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t *\n\t * @type {module:utils/dom/position~Options#positions}\n\t * @private\n\t */\n\tget _panelPositions() {\n\t\tconst { southEast, southWest, northEast, northWest } = DropdownView.defaultPanelPositions;\n\n\t\tif ( this.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\treturn [ southEast, southWest, northEast, northWest ];\n\t\t} else {\n\t\t\treturn [ southWest, southEast, northWest, northEast ];\n\t\t}\n\t}\n}\n\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\nDropdownView.defaultPanelPositions = {\n\tsouthEast: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'se'\n\t\t};\n\t},\n\tsouthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'sw'\n\t\t};\n\t},\n\tnorthEast: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'ne'\n\t\t};\n\t},\n\tnorthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'nw'\n\t\t};\n\t}\n};\n\n/**\n * A function used to calculate the optimal position for the dropdown panel.\n *\n * @protected\n * @member {Function} module:ui/dropdown/dropdownview~DropdownView._getOptimalPosition\n */\nDropdownView._getOptimalPosition = getOptimalPosition;\n","export default \"<svg viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\n\nimport ButtonView from '../../button/buttonview';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class DropdownButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * An icon that displays arrow to indicate a dropdown button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-haspopup': true\n\t\t\t}\n\t\t} );\n\n\t\t// The DropdownButton interface expects the open event upon which will open the dropdown.\n\t\tthis.delegate( 'execute' ).to( this, 'open' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n\t *\n\t * @private\n\t * @returns {module:ui/icon/iconview~IconView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-dropdown__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/list/list.css';\n\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ListView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Collection of the child list views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-list'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listitemview\n */\n\nimport View from '../view';\n\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListItemView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views inside of the list item {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__item'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the list item.\n\t */\n\tfocus() {\n\t\tthis.children.first.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listseparatorview\n */\n\nimport View from '../view';\n\n/**\n * The list separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\n\nimport View from '../view';\nimport ButtonView from './buttonview';\n\nimport '../../theme/components/button/switchbutton.css';\n\n/**\n * The switch button view class.\n *\n *\t\tconst view = new SwitchButtonView();\n *\n *\t\tview.set( {\n *\t\t\twithText: true,\n *\t\t\tlabel: 'Switch me!'\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class SwitchButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.isToggleable = true;\n\n\t\t/**\n\t\t * The toggle switch of the button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #toggleSwitchView\n\t\t */\n\t\tthis.toggleSwitchView = this._createToggleView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-switchbutton'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.toggleSwitchView );\n\t}\n\n\t/**\n\t * Creates a toggle child view.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createToggleView() {\n\t\tconst toggleSwitchView = new View();\n\n\t\ttoggleSwitchView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__toggle'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-button__toggle__inner'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn toggleSwitchView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/utils\n */\n\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\n\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\n\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n *\t\tconst dropdown = createDropdown( model );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.buttonView.on( 'execute', () => {\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\n * \t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nexport function createDropdown( locale, ButtonClass = DropdownButtonView ) {\n\tconst buttonView = new ButtonClass( locale );\n\n\tconst panelView = new DropdownPanelView( locale );\n\tconst dropdownView = new DropdownView( locale, buttonView, panelView );\n\n\tbuttonView.bind( 'isEnabled' ).to( dropdownView );\n\n\tif ( buttonView instanceof DropdownButtonView ) {\n\t\tbuttonView.bind( 'isOn' ).to( dropdownView, 'isOpen' );\n\t} else {\n\t\tbuttonView.arrowView.bind( 'isOn' ).to( dropdownView, 'isOpen' );\n\t}\n\n\taddDefaultBehavior( dropdownView );\n\n\treturn dropdownView;\n}\n\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n *\t\tconst buttons = [];\n *\n *\t\t// Either create a new ButtonView instance or create existing.\n *\t\tbuttons.push( new ButtonView() );\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddToolbarToDropdown( dropdown, buttons );\n *\n *\t\tdropdown.toolbarView.isVertical = true;\n *\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\n *\t\t// with a button group in the panel containing two buttons.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\n */\nexport function addToolbarToDropdown( dropdownView, buttons ) {\n\tconst locale = dropdownView.locale;\n\tconst t = locale.t;\n\tconst toolbarView = dropdownView.toolbarView = new ToolbarView( locale );\n\n\ttoolbarView.set( 'ariaLabel', t( 'Dropdown toolbar' ) );\n\n\tdropdownView.extendTemplate( {\n\t\tattributes: {\n\t\t\tclass: [ 'ck-toolbar-dropdown' ]\n\t\t}\n\t} );\n\n\tbuttons.map( view => toolbarView.items.add( view ) );\n\n\tdropdownView.panelView.children.add( toolbarView );\n\ttoolbarView.items.delegate( 'execute' ).to( dropdownView );\n}\n\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n *\t\tconst items = new Collection();\n *\n *\t\titems.add( {\n *\t\t\ttype: 'button',\n *\t\t\tmodel: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'First item',\n *\t\t\t\tlabelStyle: 'color: red'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\titems.add( {\n *\t\t\t type: 'button',\n *\t\t\t model: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'Second item',\n *\t\t\t\tlabelStyle: 'color: green',\n *\t\t\t\tclass: 'foo'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddListToDropdown( dropdown, items );\n *\n *\t\t// Will render a dropdown with a list in the panel containing two items.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\n * A collection of the list item definitions to populate the list.\n */\nexport function addListToDropdown( dropdownView, items ) {\n\tconst locale = dropdownView.locale;\n\tconst listView = dropdownView.listView = new ListView( locale );\n\n\tlistView.items.bindTo( items ).using( ( { type, model } ) => {\n\t\tif ( type === 'separator' ) {\n\t\t\treturn new ListSeparatorView( locale );\n\t\t} else if ( type === 'button' || type === 'switchbutton' ) {\n\t\t\tconst listItemView = new ListItemView( locale );\n\t\t\tlet buttonView;\n\n\t\t\tif ( type === 'button' ) {\n\t\t\t\tbuttonView = new ButtonView( locale );\n\t\t\t} else {\n\t\t\t\tbuttonView = new SwitchButtonView( locale );\n\t\t\t}\n\n\t\t\t// Bind all model properties to the button view.\n\t\t\tbuttonView.bind( ...Object.keys( model ) ).to( model );\n\t\t\tbuttonView.delegate( 'execute' ).to( listItemView );\n\n\t\t\tlistItemView.children.add( buttonView );\n\n\t\t\treturn listItemView;\n\t\t}\n\t} );\n\n\tdropdownView.panelView.children.add( listView );\n\n\tlistView.items.delegate( 'execute' ).to( dropdownView );\n}\n\n// Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction addDefaultBehavior( dropdownView ) {\n\tcloseDropdownOnBlur( dropdownView );\n\tcloseDropdownOnExecute( dropdownView );\n\tfocusDropdownContentsOnArrows( dropdownView );\n}\n\n// Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnBlur( dropdownView ) {\n\tdropdownView.on( 'render', () => {\n\t\tclickOutsideHandler( {\n\t\t\temitter: dropdownView,\n\t\t\tactivator: () => dropdownView.isOpen,\n\t\t\tcallback: () => {\n\t\t\t\tdropdownView.isOpen = false;\n\t\t\t},\n\t\t\tcontextElements: [ dropdownView.element ]\n\t\t} );\n\t} );\n}\n\n// Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnExecute( dropdownView ) {\n\t// Close the dropdown when one of the list items has been executed.\n\tdropdownView.on( 'execute', evt => {\n\t\t// Toggling a switch button view should not close the dropdown.\n\t\tif ( evt.source instanceof SwitchButtonView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdropdownView.isOpen = false;\n\t} );\n}\n\n// Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction focusDropdownContentsOnArrows( dropdownView ) {\n\t// If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n\tdropdownView.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tdropdownView.panelView.focus();\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n\tdropdownView.keystrokes.set( 'arrowup', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tdropdownView.panelView.focusLast();\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n\n/**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n *\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\n *\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\n * should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\n * handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param {Function} options.callback An action executed by the handler.\n */\nexport default function clickOutsideHandler( { emitter, activator, callback, contextElements } ) {\n\temitter.listenTo( document, 'mousedown', ( evt, domEvt ) => {\n\t\tif ( !activator() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if `composedPath` is `undefined` in case the browser does not support native shadow DOM.\n\t\t// Can be removed when all supported browsers support native shadow DOM.\n\t\tconst path = typeof domEvt.composedPath == 'function' ? domEvt.composedPath() : [];\n\n\t\tfor ( const contextElement of contextElements ) {\n\t\t\tif ( contextElement.contains( domEvt.target ) || path.includes( contextElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tcallback();\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\nimport preventDefault from '../bindings/preventdefault.js';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { createDropdown, addToolbarToDropdown } from '../dropdown/utils';\nimport { logWarning } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport verticalDotsIcon from '@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg';\n\nimport '../../theme/components/toolbar/toolbar.css';\n\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ToolbarView extends View {\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~ToolbarView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t * @param {module:ui/toolbar/toolbarview~ToolbarOptions} [options] Configuration options of the toolbar.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = this.t;\n\n\t\t/**\n\t\t * A reference to the options object passed to the constructor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarOptions}\n\t\t */\n\t\tthis.options = options || {};\n\n\t\t/**\n\t\t * Label used by assistive technologies to describe this toolbar element.\n\t\t *\n\t\t * @default 'Editor toolbar'\n\t\t * @member {String} #ariaLabel\n\t\t */\n\t\tthis.set( 'ariaLabel', t( 'Editor toolbar' ) );\n\n\t\t/**\n\t\t * The maximum width of the toolbar element.\n\t\t *\n\t\t * **Note**: When set to a specific value (e.g. `'200px'`), the value will affect the behavior of the\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull}\n\t\t * option by changing the number of {@link #items} that will be displayed in the toolbar at a time.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {String} #maxWidth\n\t\t */\n\t\tthis.set( 'maxWidth', 'auto' );\n\n\t\t/**\n\t\t * A collection of toolbar items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t\t * to handle keyboard navigation in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * When set true, makes the toolbar look compact with {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {String} #isCompact\n\t\t */\n\t\tthis.set( 'isCompact', false );\n\n\t\t/**\n\t\t * A (child) view containing {@link #items toolbar items}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\n\t\t */\n\t\tthis.itemsView = new ItemsView( locale );\n\n\t\t/**\n\t\t * A top–level collection aggregating building blocks of the toolbar.\n\t\t *\n\t\t *\t┌───────────────── ToolbarView ─────────────────┐\n\t\t *\t| ┌──────────────── #children ────────────────┐ |\n\t\t *\t| |   ┌──────────── #itemsView ───────────┐   | |\n\t\t *\t| |   | [ item1 ] [ item2 ] ... [ itemN ] |   | |\n\t\t *\t| |   └──────────────────────────────────-┘   | |\n\t\t *\t| └───────────────────────────────────────────┘ |\n\t\t *\t└───────────────────────────────────────────────┘\n\t\t *\n\t\t * By default, it contains the {@link #itemsView} but it can be extended with additional\n\t\t * UI elements when necessary.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\t\tthis.children.add( this.itemsView );\n\n\t\t/**\n\t\t * A collection of {@link #items} that take part in the focus cycling\n\t\t * (i.e. navigation using the keyboard). Usually, it contains a subset of {@link #items} with\n\t\t * some optional UI elements that also belong to the toolbar and should be focusable\n\t\t * by the user.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.focusables = this.createCollection();\n\n\t\t/**\n\t\t * Controls the orientation of toolbar items. Only available when\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull dynamic items grouping}\n\t\t * is **disabled**.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVertical\n\t\t */\n\n\t\t/**\n\t\t * Helps cycling over {@link #focusables focusable items} in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate toolbar items backwards using the arrow[left,up] keys.\n\t\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\n\t\t\t\t// Navigate toolbar items forwards using the arrow[right,down] keys.\n\t\t\t\tfocusNext: [ 'arrowright', 'arrowdown' ]\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isCompact', 'ck-toolbar_compact' )\n\t\t\t\t],\n\t\t\t\trole: 'toolbar',\n\t\t\t\t'aria-label': bind.to( 'ariaLabel' ),\n\t\t\t\tstyle: {\n\t\t\t\t\tmaxWidth: bind.to( 'maxWidth' )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: preventDefault( this )\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * An instance of the active toolbar behavior that shapes its look and functionality.\n\t\t *\n\t\t * See {@link module:ui/toolbar/toolbarview~ToolbarBehavior} to learn more.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarBehavior}\n\t\t */\n\t\tthis._behavior = this.options.shouldGroupWhenFull ? new DynamicGrouping( this ) : new StaticLayout( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Children added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\tthis._behavior.render( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis._behavior.destroy();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #focusables}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #focusables}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * A utility that expands the plain toolbar configuration into\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n\t *\n\t * @param {Array.<String>} config The toolbar items configuration.\n\t * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n\t */\n\tfillFromConfig( config, factory ) {\n\t\tthis.items.addMany( config.map( name => {\n\t\t\tif ( name == '|' ) {\n\t\t\t\treturn new ToolbarSeparatorView();\n\t\t\t} else if ( factory.has( name ) ) {\n\t\t\t\treturn factory.create( name );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n\t\t\t\t * name does not exist so it was omitted when rendering the toolbar.\n\t\t\t\t *\n\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t * to provide a toolbar item has not been loaded or there is a typo in the configuration.\n\t\t\t\t *\n\t\t\t\t * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n\t\t\t\t *\n\t\t\t\t * You can use the following snippet to retrieve all available toolbar items:\n\t\t\t\t *\n\t\t\t\t *\t\tArray.from( editor.ui.componentFactory.names() );\n\t\t\t\t *\n\t\t\t\t * @error toolbarview-item-unavailable\n\t\t\t\t * @param {String} name The name of the component.\n\t\t\t\t */\n\t\t\t\tlogWarning( 'toolbarview-item-unavailable', { name } );\n\t\t\t}\n\t\t} ).filter( item => item !== undefined ) );\n\t}\n\n\t/**\n\t * Fired when some toolbar {@link #items} were grouped or ungrouped as a result of some change\n\t * in the toolbar geometry.\n\t *\n\t * **Note**: This event is always fired **once** regardless of the number of items that were be\n\t * grouped or ungrouped at a time.\n\t *\n\t * **Note**: This event is fired only if the items grouping functionality was enabled in\n\t * the first place (see {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull}).\n\t *\n\t * @event groupedItemsUpdate\n\t */\n}\n\n/**\n * An inner block of the {@link module:ui/toolbar/toolbarview~ToolbarView} hosting its\n * {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n *\n * @private\n * @extends module:ui/view~View\n */\nclass ItemsView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A collection of items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__items'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n\n/**\n * A toolbar behavior that makes it static and unresponsive to the changes of the environment.\n * At the same time, it also makes it possible to display a toolbar with a vertical layout\n * using the {@link module:ui/toolbar/toolbarview~ToolbarView#isVertical} property.\n *\n * @private\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\n */\nclass StaticLayout {\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~StaticLayout} toolbar\n\t * behavior.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n\tconstructor( view ) {\n\t\tconst bind = view.bindTemplate;\n\n\t\t// Static toolbar can be vertical when needed.\n\t\tview.set( 'isVertical', false );\n\n\t\t// 1:1 pass–through binding, all ToolbarView#items are visible.\n\t\tview.itemsView.children.bindTo( view.items ).using( item => item );\n\n\t\t// 1:1 pass–through binding, all ToolbarView#items are focusable.\n\t\tview.focusables.bindTo( view.items ).using( item => item );\n\n\t\tview.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t// When vertical, the toolbar has an additional CSS class.\n\t\t\t\t\tbind.if( 'isVertical', 'ck-toolbar_vertical' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {}\n}\n\n/**\n * A toolbar behavior that makes the items respond to changes in the geometry.\n *\n * In a nutshell, it groups {@link module:ui/toolbar/toolbarview~ToolbarView#items}\n * that do not fit visually into a single row of the toolbar (due to limited space).\n * Items that do not fit are aggregated in a dropdown displayed at the end of the toolbar.\n *\n *\t┌──────────────────────────────────────── ToolbarView ──────────────────────────────────────────┐\n *\t| ┌─────────────────────────────────────── #children ─────────────────────────────────────────┐ |\n *\t| |   ┌─────── #itemsView ────────┐ ┌──────────────────────┐ ┌── #groupedItemsDropdown ───┐   | |\n *\t| |   |       #ungroupedItems     | | ToolbarSeparatorView | |        #groupedItems       |   | |\n *\t| |   └──────────────────────────-┘ └──────────────────────┘ └────────────────────────────┘   | |\n *\t| |                                  \\---------- only when toolbar items overflow --------/    | |\n *\t| └───────────────────────────────────────────────────────────────────────────────────────────┘ |\n *\t└───────────────────────────────────────────────────────────────────────────────────────────────┘\n *\n * @private\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\n */\nclass DynamicGrouping {\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~DynamicGrouping} toolbar\n\t * behavior.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n\tconstructor( view ) {\n\t\t/**\n\t\t * A toolbar view this behavior belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar~ToolbarView}\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * A collection of toolbar children.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.viewChildren = view.children;\n\n\t\t/**\n\t\t * A collection of focusable toolbar elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.viewFocusables = view.focusables;\n\n\t\t/**\n\t\t * A view containing toolbar items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\n\t\t */\n\t\tthis.viewItemsView = view.itemsView;\n\n\t\t/**\n\t\t * Toolbar focus tracker.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.viewFocusTracker = view.focusTracker;\n\n\t\t/**\n\t\t * Toolbar locale.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.viewLocale = view.locale;\n\n\t\t/**\n\t\t * Toolbar element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} #viewElement\n\t\t */\n\n\t\t/**\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t\t * Aggregates items that fit into a single row of the toolbar and were not {@link #groupedItems grouped}\n\t\t * into a {@link #groupedItemsDropdown dropdown}. Items of this collection are displayed in the\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#itemsView}.\n\t\t *\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped, it\n\t\t * matches the {@link module:ui/toolbar/toolbarview~ToolbarView#items} collection in size and order.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.ungroupedItems = view.createCollection();\n\n\t\t/**\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t\t * A collection of the toolbar items that do not fit into a single row of the toolbar.\n\t\t * Grouped items are displayed in a dedicated {@link #groupedItemsDropdown dropdown}.\n\t\t *\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped,\n\t\t * this collection is empty.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.groupedItems = view.createCollection();\n\n\t\t/**\n\t\t * The dropdown that aggregates {@link #groupedItems grouped items} that do not fit into a single\n\t\t * row of the toolbar. It is displayed on demand as the last of\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#children toolbar children} and offers another\n\t\t * (nested) toolbar which displays items that would normally overflow.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownview~DropdownView}\n\t\t */\n\t\tthis.groupedItemsDropdown = this._createGroupedItemsDropdown();\n\n\t\t/**\n\t\t * An instance of the resize observer that helps dynamically determine the geometry of the toolbar\n\t\t * and manage items that do not fit into a single row.\n\t\t *\n\t\t * **Note:** Created in {@link #_enableGroupingOnResize}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\n\t\t */\n\t\tthis.resizeObserver = null;\n\n\t\t/**\n\t\t * A cached value of the horizontal padding style used by {@link #_updateGrouping}\n\t\t * to manage the {@link module:ui/toolbar/toolbarview~ToolbarView#items} that do not fit into\n\t\t * a single toolbar line. This value can be reused between updates because it is unlikely that\n\t\t * the padding will change and re–using `Window.getComputedStyle()` is expensive.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.cachedPadding = null;\n\n\t\t/**\n\t\t * A flag indicating that an items grouping update has been queued (e.g. due to the toolbar being visible)\n\t\t * and should be executed immediately the next time the toolbar shows up.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.shouldUpdateGroupingOnNextResize = false;\n\n\t\t// Only those items that were not grouped are visible to the user.\n\t\tview.itemsView.children.bindTo( this.ungroupedItems ).using( item => item );\n\n\t\t// Make sure all #items visible in the main space of the toolbar are \"focuscycleable\".\n\t\tthis.ungroupedItems.on( 'add', this._updateFocusCycleableItems.bind( this ) );\n\t\tthis.ungroupedItems.on( 'remove', this._updateFocusCycleableItems.bind( this ) );\n\n\t\t// Make sure the #groupedItemsDropdown is also included in cycling when it appears.\n\t\tview.children.on( 'add', this._updateFocusCycleableItems.bind( this ) );\n\t\tview.children.on( 'remove', this._updateFocusCycleableItems.bind( this ) );\n\n\t\t// ToolbarView#items is dynamic. When an item is added or removed, it should be automatically\n\t\t// represented in either grouped or ungrouped items at the right index.\n\t\t// In other words #items == concat( #ungroupedItems, #groupedItems )\n\t\t// (in length and order).\n\t\tview.items.on( 'change', ( evt, changeData ) => {\n\t\t\tconst index = changeData.index;\n\n\t\t\t// Removing.\n\t\t\tfor ( const removedItem of changeData.removed ) {\n\t\t\t\tif ( index >= this.ungroupedItems.length ) {\n\t\t\t\t\tthis.groupedItems.remove( removedItem );\n\t\t\t\t} else {\n\t\t\t\t\tthis.ungroupedItems.remove( removedItem );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adding.\n\t\t\tfor ( let currentIndex = index; currentIndex < index + changeData.added.length; currentIndex++ ) {\n\t\t\t\tconst addedItem = changeData.added[ currentIndex - index ];\n\n\t\t\t\tif ( currentIndex > this.ungroupedItems.length ) {\n\t\t\t\t\tthis.groupedItems.add( addedItem, currentIndex - this.ungroupedItems.length );\n\t\t\t\t} else {\n\t\t\t\t\tthis.ungroupedItems.add( addedItem, currentIndex );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// When new ungrouped items join in and land in #ungroupedItems, there's a chance it causes\n\t\t\t// the toolbar to overflow.\n\t\t\t// Consequently if removed from grouped or ungrouped items, there is a chance\n\t\t\t// some new space is available and we could do some ungrouping.\n\t\t\tthis._updateGrouping();\n\t\t} );\n\n\t\tview.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t// To group items dynamically, the toolbar needs a dedicated CSS class.\n\t\t\t\t\t'ck-toolbar_grouping'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Enables dynamic items grouping based on the dimensions of the toolbar.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n\trender( view ) {\n\t\tthis.viewElement = view.element;\n\n\t\tthis._enableGroupingOnResize();\n\t\tthis._enableGroupingOnMaxWidthChange( view );\n\t}\n\n\t/**\n\t * Cleans up the internals used by this behavior.\n\t */\n\tdestroy() {\n\t\t// The dropdown may not be in ToolbarView#children at the moment of toolbar destruction\n\t\t// so let's make sure it's actually destroyed along with the toolbar.\n\t\tthis.groupedItemsDropdown.destroy();\n\n\t\tthis.resizeObserver.destroy();\n\t}\n\n\t/**\n\t * When called, it will check if any of the {@link #ungroupedItems} do not fit into a single row of the toolbar,\n\t * and it will move them to the {@link #groupedItems} when it happens.\n\t *\n\t * At the same time, it will also check if there is enough space in the toolbar for the first of the\n\t * {@link #groupedItems} to be returned back to {@link #ungroupedItems} and still fit into a single row\n\t * without the toolbar wrapping.\n\t *\n\t * @protected\n\t */\n\t_updateGrouping() {\n\t\t// Do no grouping–related geometry analysis when the toolbar is detached from visible DOM,\n\t\t// for instance before #render(), or after render but without a parent or a parent detached\n\t\t// from DOM. DOMRects won't work anyway and there will be tons of warning in the console and\n\t\t// nothing else. This happens, for instance, when the toolbar is detached from DOM and\n\t\t// some logic adds or removes its #items.\n\t\tif ( !this.viewElement.ownerDocument.body.contains( this.viewElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not update grouping when the element is invisible. Such toolbar has DOMRect filled with zeros\n\t\t// and that would cause all items to be grouped. Instead, queue the grouping so it runs next time\n\t\t// the toolbar is visible (the next ResizeObserver callback execution). This is handy because\n\t\t// the grouping could be caused by increasing the #maxWidth when the toolbar was invisible and the next\n\t\t// time it shows up, some items could actually be ungrouped (https://github.com/ckeditor/ckeditor5/issues/6575).\n\t\tif ( !this.viewElement.offsetParent ) {\n\t\t\tthis.shouldUpdateGroupingOnNextResize = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember how many items were initially grouped so at the it is possible to figure out if the number\n\t\t// of grouped items has changed. If the number has changed, geometry of the toolbar has also changed.\n\t\tconst initialGroupedItemsCount = this.groupedItems.length;\n\t\tlet wereItemsGrouped;\n\n\t\t// Group #items as long as some wrap to the next row. This will happen, for instance,\n\t\t// when the toolbar is getting narrow and there is not enough space to display all items in\n\t\t// a single row.\n\t\twhile ( this._areItemsOverflowing ) {\n\t\t\tthis._groupLastItem();\n\n\t\t\twereItemsGrouped = true;\n\t\t}\n\n\t\t// If none were grouped now but there were some items already grouped before,\n\t\t// then, what the hell, maybe let's see if some of them can be ungrouped. This happens when,\n\t\t// for instance, the toolbar is stretching and there's more space in it than before.\n\t\tif ( !wereItemsGrouped && this.groupedItems.length ) {\n\t\t\t// Ungroup items as long as none are overflowing or there are none to ungroup left.\n\t\t\twhile ( this.groupedItems.length && !this._areItemsOverflowing ) {\n\t\t\t\tthis._ungroupFirstItem();\n\t\t\t}\n\n\t\t\t// If the ungrouping ended up with some item wrapping to the next row,\n\t\t\t// put it back to the group toolbar (\"undo the last ungroup\"). We don't know whether\n\t\t\t// an item will wrap or not until we ungroup it (that's a DOM/CSS thing) so this\n\t\t\t// clean–up is vital for the algorithm.\n\t\t\tif ( this._areItemsOverflowing ) {\n\t\t\t\tthis._groupLastItem();\n\t\t\t}\n\t\t}\n\n\t\tif ( this.groupedItems.length !== initialGroupedItemsCount ) {\n\t\t\tthis.view.fire( 'groupedItemsUpdate' );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when {@link module:ui/toolbar/toolbarview~ToolbarView#element} children visually overflow,\n\t * for instance if the toolbar is narrower than its members. Returns `false` otherwise.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _areItemsOverflowing() {\n\t\t// An empty toolbar cannot overflow.\n\t\tif ( !this.ungroupedItems.length ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.viewElement;\n\t\tconst uiLanguageDirection = this.viewLocale.uiLanguageDirection;\n\t\tconst lastChildRect = new Rect( element.lastChild );\n\t\tconst toolbarRect = new Rect( element );\n\n\t\tif ( !this.cachedPadding ) {\n\t\t\tconst computedStyle = global.window.getComputedStyle( element );\n\t\t\tconst paddingProperty = uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n\n\t\t\t// parseInt() is essential because of quirky floating point numbers logic and DOM.\n\t\t\t// If the padding turned out too big because of that, the grouped items dropdown would\n\t\t\t// always look (from the Rect perspective) like it overflows (while it's not).\n\t\t\tthis.cachedPadding = Number.parseInt( computedStyle[ paddingProperty ] );\n\t\t}\n\n\t\tif ( uiLanguageDirection === 'ltr' ) {\n\t\t\treturn lastChildRect.right > toolbarRect.right - this.cachedPadding;\n\t\t} else {\n\t\t\treturn lastChildRect.left < toolbarRect.left + this.cachedPadding;\n\t\t}\n\t}\n\n\t/**\n\t * Enables the functionality that prevents {@link #ungroupedItems} from overflowing (wrapping to the next row)\n\t * upon resize when there is little space available. Instead, the toolbar items are moved to the\n\t * {@link #groupedItems} collection and displayed in a dropdown at the end of the row (which has its own nested toolbar).\n\t *\n\t * When called, the toolbar will automatically analyze the location of its {@link #ungroupedItems} and \"group\"\n\t * them in the dropdown if necessary. It will also observe the browser window for size changes in\n\t * the future and respond to them by grouping more items or reverting already grouped back, depending\n\t * on the visual space available.\n\t *\n\t * @private\n\t */\n\t_enableGroupingOnResize() {\n\t\tlet previousWidth;\n\n\t\t// TODO: Consider debounce.\n\t\tthis.resizeObserver = new ResizeObserver( this.viewElement, entry => {\n\t\t\tif ( !previousWidth || previousWidth !== entry.contentRect.width || this.shouldUpdateGroupingOnNextResize ) {\n\t\t\t\tthis.shouldUpdateGroupingOnNextResize = false;\n\n\t\t\t\tthis._updateGrouping();\n\n\t\t\t\tpreviousWidth = entry.contentRect.width;\n\t\t\t}\n\t\t} );\n\n\t\tthis._updateGrouping();\n\t}\n\n\t/**\n\t * Enables the grouping functionality, just like {@link #_enableGroupingOnResize} but the difference is that\n\t * it listens to the changes of {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth} instead.\n\t *\n\t * @private\n\t */\n\t_enableGroupingOnMaxWidthChange( view ) {\n\t\tview.on( 'change:maxWidth', () => {\n\t\t\tthis._updateGrouping();\n\t\t} );\n\t}\n\n\t/**\n\t * When called, it will remove the last item from {@link #ungroupedItems} and move it back\n\t * to the {@link #groupedItems} collection.\n\t *\n\t * The opposite of {@link #_ungroupFirstItem}.\n\t *\n\t * @private\n\t */\n\t_groupLastItem() {\n\t\tif ( !this.groupedItems.length ) {\n\t\t\tthis.viewChildren.add( new ToolbarSeparatorView() );\n\t\t\tthis.viewChildren.add( this.groupedItemsDropdown );\n\t\t\tthis.viewFocusTracker.add( this.groupedItemsDropdown.element );\n\t\t}\n\n\t\tthis.groupedItems.add( this.ungroupedItems.remove( this.ungroupedItems.last ), 0 );\n\t}\n\n\t/**\n\t * Moves the very first item belonging to {@link #groupedItems} back\n\t * to the {@link #ungroupedItems} collection.\n\t *\n\t * The opposite of {@link #_groupLastItem}.\n\t *\n\t * @private\n\t */\n\t_ungroupFirstItem() {\n\t\tthis.ungroupedItems.add( this.groupedItems.remove( this.groupedItems.first ) );\n\n\t\tif ( !this.groupedItems.length ) {\n\t\t\tthis.viewChildren.remove( this.groupedItemsDropdown );\n\t\t\tthis.viewChildren.remove( this.viewChildren.last );\n\t\t\tthis.viewFocusTracker.remove( this.groupedItemsDropdown.element );\n\t\t}\n\t}\n\n\t/**\n\t * Creates the {@link #groupedItemsDropdown} that hosts the members of the {@link #groupedItems}\n\t * collection when there is not enough space in the toolbar to display all items in a single row.\n\t *\n\t * @private\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n\t_createGroupedItemsDropdown() {\n\t\tconst locale = this.viewLocale;\n\t\tconst t = locale.t;\n\t\tconst dropdown = createDropdown( locale );\n\n\t\tdropdown.class = 'ck-toolbar__grouped-dropdown';\n\n\t\t// Make sure the dropdown never sticks out to the left/right. It should be under the main toolbar.\n\t\t// (https://github.com/ckeditor/ckeditor5/issues/5608)\n\t\tdropdown.panelPosition = locale.uiLanguageDirection === 'ltr' ? 'sw' : 'se';\n\n\t\taddToolbarToDropdown( dropdown, [] );\n\n\t\tdropdown.buttonView.set( {\n\t\t\tlabel: t( 'Show more items' ),\n\t\t\ttooltip: true,\n\t\t\ticon: verticalDotsIcon\n\t\t} );\n\n\t\t// 1:1 pass–through binding.\n\t\tdropdown.toolbarView.items.bindTo( this.groupedItems ).using( item => item );\n\n\t\treturn dropdown;\n\t}\n\n\t/**\n\t * Updates the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables focus–cycleable items}\n\t * collection so it represents the up–to–date state of the UI from the perspective of the user.\n\t *\n\t * For instance, the {@link #groupedItemsDropdown} can show up and hide but when it is visible,\n\t * it must be subject to focus cycling in the toolbar.\n\t *\n\t * See the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables collection} documentation\n\t * to learn more about the purpose of this method.\n\t *\n\t * @private\n\t */\n\t_updateFocusCycleableItems() {\n\t\tthis.viewFocusables.clear();\n\n\t\tthis.ungroupedItems.map( item => {\n\t\t\tthis.viewFocusables.add( item );\n\t\t} );\n\n\t\tif ( this.groupedItems.length ) {\n\t\t\tthis.viewFocusables.add( this.groupedItemsDropdown );\n\t\t}\n\t}\n}\n\n/**\n * Options passed to the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n *\n * @interface module:ui/toolbar/toolbarview~ToolbarOptions\n */\n\n/**\n * When set to `true`, the toolbar will automatically group {@link module:ui/toolbar/toolbarview~ToolbarView#items} that\n * would normally wrap to the next line when there is not enough space to display them in a single row, for\n * instance, if the parent container of the toolbar is narrow.\n *\n * Also see: {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth}.\n *\n * @member {Boolean} module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull\n */\n\n/**\n * A class interface defining the behavior of the {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * Toolbar behaviors extend its look and functionality and have an impact on the\n * {@link module:ui/toolbar/toolbarview~ToolbarView#element} template or\n * {@link module:ui/toolbar/toolbarview~ToolbarView#render rendering}. They can be enabled\n * conditionally, e.g. depending on the configuration of the toolbar.\n *\n * @private\n * @interface module:ui/toolbar/toolbarview~ToolbarBehavior\n */\n\n/**\n * Creates a new toolbar behavior instance.\n *\n * The instance is created in the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n * This is the right place to extend the {@link module:ui/toolbar/toolbarview~ToolbarView#template} of\n * the toolbar, define extra toolbar properties, etc.\n *\n * @method #constructor\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior is added to.\n */\n\n/**\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#render rendered}.\n * It can be used to, for example, customize the behavior of the toolbar when its {@link module:ui/toolbar/toolbarview~ToolbarView#element}\n * is available.\n *\n * @readonly\n * @member {Function} #render\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar being rendered.\n */\n\n/**\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#destroy destroyed}.\n * It allows cleaning up after the toolbar behavior, for instance, this is the right place to detach\n * event listeners, free up references, etc.\n *\n * @readonly\n * @member {Function} #destroy\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n *\t\t// In a class extending View.\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n *\t\t// ...\n *\n *\t\tthis.setTemplate( {\n *\t\t\ttag: 'div',\n *\n *\t\t\ton: {\n *\t\t\t\t// Prevent the default mousedown action on this view.\n *\t\t\t\tmousedown: preventDefault( this )\n *\t\t\t}\n *\t\t} );\n *\n * @param {module:ui/view~View} view View instance that defines the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault( view ) {\n\treturn view.bindTemplate.to( evt => {\n\t\tif ( evt.target === view.element ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"9.5\\\" cy=\\\"4.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"10.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\n\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyPanelView from '@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\n\nimport '../theme/classiceditor.css';\n\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\nexport default class ClassicEditorUIView extends BoxedEditorUIView {\n\t/**\n\t * Creates an instance of the classic editor UI view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n\t * @param {Object} [options={}] Configuration options fo the view instance.\n\t * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n\t * in the main {@link module:editor-classic/classiceditoruiview~ClassicEditorUIView#toolbar toolbar}.\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n\t */\n\tconstructor( locale, editingView, options = {} ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n\t\t * that makes toolbar sticky.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n\t\t */\n\t\tthis.stickyPanel = new StickyPanelView( locale );\n\n\t\t/**\n\t\t * Toolbar view instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbar = new ToolbarView( locale, {\n\t\t\tshouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n\t\t} );\n\n\t\t/**\n\t\t * Editable UI view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n\t\t */\n\t\tthis.editable = new InlineEditableUIView( locale, editingView );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\t\tthis.stickyPanel.content.add( this.toolbar );\n\n\t\tthis.top.add( this.stickyPanel );\n\t\tthis.main.add( this.editable );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditor\n */\n\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isElement } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The {@glink builds/guides/overview#classic-editor classic editor} implementation.\n * It uses an inline editable and a sticky toolbar, all enclosed in a boxed UI.\n * See the {@glink examples/builds/classic-editor demo}.\n *\n * In order to create a classic editor instance, use the static\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method.\n *\n * # Classic editor and classic build\n *\n * The classic editor can be used directly from source (if you installed the\n * [`@ckeditor/ckeditor5-editor-classic`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-classic) package)\n * but it is also available in the {@glink builds/guides/overview#classic-editor classic build}.\n *\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\n * source you need to take care of loading all plugins by yourself\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\n * Using the editor from source gives much better flexibility and allows easier customization.\n *\n * Read more about initializing the editor from source or as a build in\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n *\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\n * @implements module:core/editor/editorwithui~EditorWithUI\n * @extends module:core/editor/editor~Editor\n */\nexport default class ClassicEditor extends Editor {\n\t/**\n\t * Creates an instance of the classic editor.\n\t *\n\t * **Note:** do not use the constructor to create editor instances. Use the static\n\t * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method instead.\n\t *\n\t * @protected\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n\t * or the editor's initial data. For more information see\n\t * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n\t * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n\t */\n\tconstructor( sourceElementOrData, config ) {\n\t\tsuper( config );\n\n\t\tif ( isElement( sourceElementOrData ) ) {\n\t\t\tthis.sourceElement = sourceElementOrData;\n\t\t}\n\n\t\tthis.data.processor = new HtmlDataProcessor( this.data.viewDocument );\n\n\t\tthis.model.document.createRoot();\n\n\t\tconst shouldToolbarGroupWhenFull = !this.config.get( 'toolbar.shouldNotGroupWhenFull' );\n\t\tconst view = new ClassicEditorUIView( this.locale, this.editing.view, {\n\t\t\tshouldToolbarGroupWhenFull\n\t\t} );\n\n\t\tthis.ui = new ClassicEditorUI( this, view );\n\n\t\tattachToForm( this );\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * Updates the editor's source element with the data.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tif ( this.sourceElement ) {\n\t\t\tthis.updateSourceElement();\n\t\t}\n\n\t\tthis.ui.destroy();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Creates a new classic editor instance.\n\t *\n\t * There are three ways how the editor can be initialized.\n\t *\n\t * # Replacing a DOM element (and loading data from it)\n\t *\n\t * You can initialize the editor using an existing DOM element:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ) )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * The element's content will be used as the editor data and the element will be replaced by the editor UI.\n\t *\n\t * # Creating a detached editor\n\t *\n\t * Alternatively, you can initialize the editor by passing the initial data directly as a string.\n\t * In this case, the editor will render an element that must be inserted into the DOM:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( '<p>Hello world!</p>' )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\n\t *\t\t\t\t// Initial data was provided so the editor UI element needs to be added manually to the DOM.\n\t *\t\t\t\tdocument.body.appendChild( editor.ui.element );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * This lets you dynamically append the editor to your web page whenever it is convenient for you. You may use this method if your\n\t * web page content is generated on the client side and the DOM structure is not ready at the moment when you initialize the editor.\n\t *\n\t * # Replacing a DOM element (and data provided in `config.initialData`)\n\t *\n\t * You can also mix these two ways by providing a DOM element to be used and passing the initial data through the configuration:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tinitialData: '<h2>Initial data</h2><p>Foo bar.</p>'\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * This method can be used to initialize the editor on an existing element with the specified content in case if your integration\n\t * makes it difficult to set the content of the source element.\n\t *\n\t * Note that an error will be thrown if you pass the initial data both as the first parameter and also in the configuration.\n\t *\n\t * # Configuring the editor\n\t *\n\t * See the {@link module:core/editor/editorconfig~EditorConfig editor configuration documentation} to learn more about\n\t * customizing plugins, toolbar and more.\n\t *\n\t * # Using the editor from source\n\t *\n\t * The code samples listed in the previous sections of this documentation assume that you are using an\n\t * {@glink builds/guides/overview editor build} (for example – `@ckeditor/ckeditor5-build-classic`).\n\t *\n\t * If you want to use the classic editor from source (`@ckeditor/ckeditor5-editor-classic/src/classiceditor`),\n\t * you need to define the list of\n\t * {@link module:core/editor/editorconfig~EditorConfig#plugins plugins to be initialized} and\n\t * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar items}. Read more about using the editor from\n\t * source in the {@glink builds/guides/integration/advanced-setup \"Advanced setup\" guide}.\n\t *\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n\t * or the editor's initial data.\n\t *\n\t * If a DOM element is passed, its content will be automatically loaded to the editor upon initialization\n\t * and the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element editor element} will replace the passed element\n\t * in the DOM (the original one will be hidden and the editor will be injected next to it).\n\t *\n\t * Moreover, the editor data will be set back to the original element once the editor is destroyed and when a form, in which\n\t * this element is contained, is submitted (if the original element is a `<textarea>`). This ensures seamless integration with native\n\t * web forms.\n\t *\n\t * If the initial data is passed, a detached editor will be created. In this case you need to insert it into the DOM manually.\n\t * It is available under the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element `editor.ui.element`} property.\n\t *\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @returns {Promise} A promise resolved once the editor is ready. The promise resolves with the created editor instance.\n\t */\n\tstatic create( sourceElementOrData, config = {} ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst editor = new this( sourceElementOrData, config );\n\n\t\t\tresolve(\n\t\t\t\teditor.initPlugins()\n\t\t\t\t\t.then( () => editor.ui.init( isElement( sourceElementOrData ) ? sourceElementOrData : null ) )\n\t\t\t\t\t.then( () => {\n\t\t\t\t\t\tif ( !isElement( sourceElementOrData ) && config.initialData ) {\n\t\t\t\t\t\t\t// Documented in core/editor/editorconfig.jdoc.\n\t\t\t\t\t\t\t// eslint-disable-next-line ckeditor5-rules/ckeditor-error-message\n\t\t\t\t\t\t\tthrow new CKEditorError( 'editor-create-initial-data', null );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst initialData = config.initialData || getInitialData( sourceElementOrData );\n\n\t\t\t\t\t\treturn editor.data.init( initialData );\n\t\t\t\t\t} )\n\t\t\t\t\t.then( () => editor.fire( 'ready' ) )\n\t\t\t\t\t.then( () => editor )\n\t\t\t);\n\t\t} );\n\t}\n}\n\nmix( ClassicEditor, DataApiMixin );\nmix( ClassicEditor, ElementApiMixin );\n\nfunction getInitialData( sourceElementOrData ) {\n\treturn isElement( sourceElementOrData ) ? getDataFromElement( sourceElementOrData ) : sourceElementOrData;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\nexport default function attachToForm( editor ) {\n\tif ( !isFunction( editor.updateSourceElement ) ) {\n\t\t/**\n\t\t * The editor passed to `attachToForm()` must implement the\n\t\t * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n\t\t *\n\t\t * @error attachtoform-missing-elementapi-interface\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'attachtoform-missing-elementapi-interface',\n\t\t\teditor\n\t\t);\n\t}\n\n\tconst sourceElement = editor.sourceElement;\n\n\t// Only when replacing a textarea which is inside of a form element.\n\tif ( sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form ) {\n\t\tlet originalSubmit;\n\t\tconst form = sourceElement.form;\n\t\tconst onSubmit = () => editor.updateSourceElement();\n\n\t\t// Replace the original form#submit() to call a custom submit function first.\n\t\t// Check if #submit is a function because the form might have an input named \"submit\".\n\t\tif ( isFunction( form.submit ) ) {\n\t\t\toriginalSubmit = form.submit;\n\n\t\t\tform.submit = () => {\n\t\t\t\tonSubmit();\n\t\t\t\toriginalSubmit.apply( form );\n\t\t\t};\n\t\t}\n\n\t\t// Update the replaced textarea with data before each form#submit event.\n\t\tform.addEventListener( 'submit', onSubmit );\n\n\t\t// Remove the submit listener and revert the original submit method on\n\t\t// editor#destroy.\n\t\teditor.on( 'destroy', () => {\n\t\t\tform.removeEventListener( 'submit', onSubmit );\n\n\t\t\tif ( originalSubmit ) {\n\t\t\t\tform.submit = originalSubmit;\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement( el ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\treturn el.value;\n\t}\n\n\treturn el.innerHTML;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module word-count/utils\n */\n\n/**\n * Returns a plain text representation of an element and its children.\n *\n * @param {module:engine/model/element~Element} element\n * @returns {String} Plain text representing the model's data.\n */\nexport function modelElementToPlainText( element ) {\n\tif ( element.is( '$text' ) || element.is( '$textProxy' ) ) {\n\t\treturn element.data;\n\t}\n\n\tlet text = '';\n\tlet prev = null;\n\n\tfor ( const child of element.getChildren() ) {\n\t\tconst childText = modelElementToPlainText( child );\n\n\t\t// If last block was finish, start from new line.\n\t\tif ( prev && prev.is( 'element' ) ) {\n\t\t\ttext += '\\n';\n\t\t}\n\n\t\ttext += childText;\n\n\t\tprev = child;\n\t}\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module word-count/wordcount\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { modelElementToPlainText } from './utils';\nimport { throttle, isElement } from 'lodash-es';\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * The word count plugin.\n *\n * This plugin calculates all words and characters in all {@link module:engine/model/text~Text text nodes} available in the model.\n * It also provides an HTML element that updates its state whenever the editor content is changed.\n *\n * The model's data is first converted to plain text using {@link module:word-count/utils~modelElementToPlainText}.\n * The number of words and characters in your text are determined based on the created plain text. Please keep in mind\n * that every block in the editor is separated with a newline character, which is included in the calculation.\n *\n * Here are some examples of how the word and character calculations are made:\n *\n * \t\t<paragraph>foo</paragraph>\n * \t\t<paragraph>bar</paragraph>\n * \t\t// Words: 2, Characters: 7\n *\n * \t\t<paragraph><$text bold=\"true\">foo</$text>bar</paragraph>\n * \t\t// Words: 1, Characters: 6\n *\n * \t\t<paragraph>*&^%)</paragraph>\n * \t\t// Words: 0, Characters: 5\n *\n * \t\t<paragraph>foo(bar)</paragraph>\n * \t\t//Words: 2, Characters: 8\n *\n * \t\t<paragraph>12345</paragraph>\n * \t\t// Words: 1, Characters: 5\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class WordCount extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The number of characters in the editor.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Number} module:word-count/wordcount~WordCount#characters\n\t\t */\n\t\tthis.set( 'characters', 0 );\n\n\t\t/**\n\t\t * The number of words in the editor.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Number} module:word-count/wordcount~WordCount#words\n\t\t */\n\t\tthis.set( 'words', 0 );\n\n\t\t// Don't wait for the #update event to set the value of the properties but obtain it right away.\n\t\t// This way, accessing the properties directly returns precise numbers, e.g. for validation, etc.\n\t\t// If not accessed directly, the properties will be refreshed upon #update anyway.\n\t\tObject.defineProperties( this, {\n\t\t\tcharacters: {\n\t\t\t\tget() {\n\t\t\t\t\treturn ( this.characters = this._getCharacters() );\n\t\t\t\t}\n\t\t\t},\n\t\t\twords: {\n\t\t\t\tget() {\n\t\t\t\t\treturn ( this.words = this._getWords() );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The label used to display the words value in the {@link #wordCountContainer output container}.\n\t\t *\n\t\t * @observable\n\t\t * @private\n\t\t * @readonly\n\t\t * @member {String} module:word-count/wordcount~WordCount#_wordsLabel\n\t\t */\n\t\tthis.set( '_wordsLabel' );\n\n\t\t/**\n\t\t * The label used to display the characters value in the {@link #wordCountContainer output container}.\n\t\t *\n\t\t * @observable\n\t\t * @private\n\t\t * @readonly\n\t\t * @member {String} module:word-count/wordcount~WordCount#_charactersLabel\n\t\t */\n\t\tthis.set( '_charactersLabel' );\n\n\t\t/**\n\t\t * The configuration of this plugin.\n\t\t *\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._config = editor.config.get( 'wordCount' ) || {};\n\n\t\t/**\n\t\t * The reference to a {@link module:ui/view~View view object} that contains the self-updating HTML container.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @type {module:ui/view~View}\n\t\t */\n\t\tthis._outputView = undefined;\n\n\t\t/**\n\t\t * A regular expression used to recognize words in the editor's content.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @type {RegExp}\n\t\t */\n\t\tthis._wordsMatchRegExp = env.features.isRegExpUnicodePropertySupported ?\n\t\t\t// Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n\t\t\t// Groups:\n\t\t\t// {L} - Any kind of letter from any language.\n\t\t\t// {N} - Any kind of numeric character in any script.\n\t\t\t// {M} - A character intended to be combined with another character (e.g. accents, umlauts, enclosing boxes, etc.).\n\t\t\t// {Pd} - Any kind of hyphen or dash.\n\t\t\t// {Pc} - A punctuation character such as an underscore that connects words.\n\t\t\tnew RegExp( '[\\\\p{L}\\\\p{N}\\\\p{M}\\\\p{Pd}\\\\p{Pc}]+', 'gu' ) :\n\t\t\t/[_\\-a-zA-Z0-9À-ž]+/gu;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'WordCount';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.model.document.on( 'change:data', throttle( this._refreshStats.bind( this ), 250 ) );\n\n\t\tif ( typeof this._config.onUpdate == 'function' ) {\n\t\t\tthis.on( 'update', ( evt, data ) => {\n\t\t\t\tthis._config.onUpdate( data );\n\t\t\t} );\n\t\t}\n\n\t\tif ( isElement( this._config.container ) ) {\n\t\t\tthis._config.container.appendChild( this.wordCountContainer );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._outputView ) {\n\t\t\tthis._outputView.element.remove();\n\t\t\tthis._outputView.destroy();\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Creates a self-updating HTML element. Repeated executions return the same element.\n\t * The returned element has the following HTML structure:\n\t *\n\t * \t\t<div class=\"ck ck-word-count\">\n\t * \t\t\t<div class=\"ck-word-count__words\">Words: 4</div>\n\t * \t\t\t<div class=\"ck-word-count__characters\">Characters: 28</div>\n\t * \t\t</div>\n\t *\n\t * @type {HTMLElement}\n\t */\n\tget wordCountContainer() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst displayWords = editor.config.get( 'wordCount.displayWords' );\n\t\tconst displayCharacters = editor.config.get( 'wordCount.displayCharacters' );\n\t\tconst bind = Template.bind( this, this );\n\t\tconst children = [];\n\n\t\tif ( !this._outputView ) {\n\t\t\tthis._outputView = new View();\n\n\t\t\tif ( displayWords || displayWords === undefined ) {\n\t\t\t\tthis.bind( '_wordsLabel' ).to( this, 'words', words => {\n\t\t\t\t\treturn t( 'Words: %0', words );\n\t\t\t\t} );\n\n\t\t\t\tchildren.push( {\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: [ bind.to( '_wordsLabel' ) ]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-word-count__words'\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( displayCharacters || displayCharacters === undefined ) {\n\t\t\t\tthis.bind( '_charactersLabel' ).to( this, 'characters', words => {\n\t\t\t\t\treturn t( 'Characters: %0', words );\n\t\t\t\t} );\n\n\t\t\t\tchildren.push( {\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: [ bind.to( '_charactersLabel' ) ]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-word-count__characters'\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tthis._outputView.setTemplate( {\n\t\t\t\ttag: 'div',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-word-count'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tchildren\n\t\t\t} );\n\n\t\t\tthis._outputView.render();\n\t\t}\n\n\t\treturn this._outputView.element;\n\t}\n\n\t/**\n\t * Determines the number of characters in the current editor's model.\n\t *\n\t * @private\n\t * @returns {Number}\n\t */\n\t_getCharacters() {\n\t\tconst txt = modelElementToPlainText( this.editor.model.document.getRoot() );\n\n\t\treturn txt.replace( /\\n/g, '' ).length;\n\t}\n\n\t/**\n\t * Determines the number of words in the current editor's model.\n\t *\n\t * @private\n\t * @returns {Number}\n\t */\n\t_getWords() {\n\t\tconst txt = modelElementToPlainText( this.editor.model.document.getRoot() );\n\t\tconst detectedWords = txt.match( this._wordsMatchRegExp ) || [];\n\n\t\treturn detectedWords.length;\n\t}\n\n\t/**\n\t * Determines the number of words and characters in the current editor's model and assigns it to {@link #characters} and {@link #words}.\n\t * It also fires the {@link #event:update}.\n\t *\n\t * @private\n\t * @fires update\n\t */\n\t_refreshStats() {\n\t\tconst words = this.words = this._getWords();\n\t\tconst characters = this.characters = this._getCharacters();\n\n\t\tthis.fire( 'update', {\n\t\t\twords,\n\t\t\tcharacters\n\t\t} );\n\t}\n}\n\n/**\n * An event fired after {@link #words} and {@link #characters} are updated.\n *\n * @event update\n * @param {Object} data\n * @param {Number} data.words The number of words in the current model.\n * @param {Number} data.characters The number of characters in the current model.\n */\n\n/**\n * The configuration of the word count feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n *\t\t\t\twordCount: ... // Word count feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:word-count/wordcount~WordCountConfig\n */\n\n/**\n * The configuration of the word count feature.\n * It is introduced by the {@link module:word-count/wordcount~WordCount} feature.\n *\n * Read more in {@link module:word-count/wordcount~WordCountConfig}.\n *\n * @member {module:word-count/wordcount~WordCountConfig} module:core/editor/editorconfig~EditorConfig#wordCount\n */\n\n/**\n * This option allows for hiding the word counter. The element obtained through\n * {@link module:word-count/wordcount~WordCount#wordCountContainer} will only preserve\n * the characters part. Word counter is displayed by default when this configuration option is not defined.\n *\n *\t\tconst wordCountConfig = {\n *\t\t\tdisplayWords: false\n *\t\t};\n *\n * The configuration above will result in the following container:\n *\n *\t\t<div class=\"ck ck-word-count\">\n *\t\t\t<div class=\"ck-word-count__characters\">Characters: 28</div>\n *\t\t</div>\n *\n * @member {Boolean} module:word-count/wordcount~WordCountConfig#displayWords\n */\n\n/**\n * This option allows for hiding the character counter. The element obtained through\n * {@link module:word-count/wordcount~WordCount#wordCountContainer} will only preserve\n * the words part. Character counter is displayed by default when this configuration option is not defined.\n *\n *\t\tconst wordCountConfig = {\n *\t\t\tdisplayCharacters: false\n *\t\t};\n *\n * The configuration above will result in the following container:\n *\n *\t\t<div class=\"ck ck-word-count\">\n *\t\t\t<div class=\"ck-word-count__words\">Words: 4</div>\n *\t\t</div>\n *\n * @member {Boolean} module:word-count/wordcount~WordCountConfig#displayCharacters\n */\n\n/**\n * This configuration takes a function that is executed whenever the word count plugin updates its values.\n * This function is called with one argument, which is an object with the `words` and `characters` keys containing\n * the number of detected words and characters in the document.\n *\n *\t\tconst wordCountConfig = {\n *\t\t\tonUpdate: function( stats ) {\n *\t\t\t\tdoSthWithWordNumber( stats.words );\n *\t\t\t\tdoSthWithCharacterNumber( stats.characters );\n *\t\t\t}\n *\t\t};\n *\n * @member {Function} module:word-count/wordcount~WordCountConfig#onUpdate\n */\n\n/**\n * Allows for providing the HTML element that the\n * {@link module:word-count/wordcount~WordCount#wordCountContainer word count container} will be appended to automatically.\n *\n *\t\tconst wordCountConfig = {\n *\t\t\tcontainer: document.getElementById( 'container-for-word-count' );\n *\t\t};\n *\n * @member {HTMLElement} module:word-count/wordcount~WordCountConfig#container\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/underline/underlineediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst UNDERLINE = 'underline';\n\n/**\n * The underline editing feature.\n *\n * It registers the `'underline'` command, the <kbd>Ctrl+U</kbd> keystroke\n * and introduces the `underline` attribute in the model which renders to the view as an `<u>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UnderlineEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UnderlineEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow strikethrough attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: UNDERLINE } );\n\t\teditor.model.schema.setAttributeProperties( UNDERLINE, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: UNDERLINE,\n\t\t\tview: 'u',\n\t\t\tupcastAlso: {\n\t\t\t\tstyles: {\n\t\t\t\t\t'text-decoration': 'underline'\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Create underline command.\n\t\teditor.commands.add( UNDERLINE, new AttributeCommand( editor, UNDERLINE ) );\n\n\t\t// Set the Ctrl+U keystroke.\n\t\teditor.keystrokes.set( 'CTRL+U', 'underline' );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/underline/underlineui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport underlineIcon from '../../theme/icons/underline.svg';\n\nconst UNDERLINE = 'underline';\n\n/**\n * The underline UI feature. It introduces the Underline button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UnderlineUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( UNDERLINE, locale => {\n\t\t\tconst command = editor.commands.get( UNDERLINE );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Underline' ),\n\t\t\t\ticon: underlineIcon,\n\t\t\t\tkeystroke: 'CTRL+U',\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( UNDERLINE );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3 18v-1.5h14V18zm2.2-8V3.6c0-.4.4-.6.8-.6.3 0 .7.2.7.6v6.2c0 2 1.3 2.8 3.2 2.8 1.9 0 3.4-.9 3.4-2.9V3.6c0-.3.4-.5.8-.5.3 0 .7.2.7.5V10c0 2.7-2.2 4-4.9 4-2.6 0-4.7-1.2-4.7-4z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/underline\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UnderlineEditing from './underline/underlineediting';\nimport UnderlineUI from './underline/underlineui';\n\n/**\n * The underline feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/underline/underlineediting~UnderlineEditing} and\n * {@link module:basic-styles/underline/underlineui~UnderlineUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Underline extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ UnderlineEditing, UnderlineUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Underline';\n\t}\n}\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x3e4d=['end','_trimToContent','textProxy','editor','model','getRanges','start','document','getItems','push','addMarker','refresh','isEnabled','backward','comment:','getLastMatchingPosition','_hasContent','execute','change','_itemIsContent','tableCell','createRange','substr','item'];(function(_0x4a7c56,_0x3e4d56){const _0x5ee6af=function(_0x201143){while(--_0x201143){_0x4a7c56['push'](_0x4a7c56['shift']());}};_0x5ee6af(++_0x3e4d56);}(_0x3e4d,0x19d));const _0x5ee6=function(_0x4a7c56,_0x3e4d56){_0x4a7c56=_0x4a7c56-0x0;let _0x5ee6af=_0x3e4d[_0x4a7c56];return _0x5ee6af;};import _0x5ed30f from'@ckeditor/ckeditor5-core/src/command';import _0x5e7f4c from'@ckeditor/ckeditor5-utils/src/uid';export default class P extends _0x5ed30f{[_0x5ee6('0x6')](){const _0x450559=this[_0x5ee6('0x16')][_0x5ee6('0x17')][_0x5ee6('0x2')]['selection'];for(const _0x155bf7 of _0x450559[_0x5ee6('0x0')]())if(this[_0x5ee6('0xb')](_0x155bf7))return void(this[_0x5ee6('0x7')]=!0x0);this[_0x5ee6('0x7')]=!0x1;}[_0x5ee6('0xc')]({threadId:_0x38c3d0=_0x5e7f4c()}={}){const _0x479795=this[_0x5ee6('0x16')][_0x5ee6('0x17')],_0x529470=[];for(const _0x5d7b8e of _0x479795[_0x5ee6('0x2')]['selection'][_0x5ee6('0x0')]())this[_0x5ee6('0xb')](_0x5d7b8e)&&_0x529470[_0x5ee6('0x4')](this[_0x5ee6('0x14')](_0x5d7b8e));_0x479795[_0x5ee6('0xd')](_0x484a0b=>{for(const _0x48b82f of _0x529470){const _0x5e2a39=_0x5e7f4c()[_0x5ee6('0x11')](0x1,0x5),_0x48fbf5=_0x5ee6('0x9')+_0x38c3d0+':'+_0x5e2a39;_0x484a0b[_0x5ee6('0x5')](_0x48fbf5,{'range':_0x48b82f,'usingOperation':!0x1,'affectData':!0x1});}});}[_0x5ee6('0xb')](_0x5e0398){for(const _0x1f8763 of _0x5e0398[_0x5ee6('0x3')]())if(this[_0x5ee6('0xe')](_0x1f8763))return!0x0;return!0x1;}[_0x5ee6('0xe')](_0x26ef77){return _0x26ef77['is'](_0x5ee6('0x15'))||this[_0x5ee6('0x16')]['model']['schema']['isObject'](_0x26ef77)&&!_0x26ef77['is']('element',_0x5ee6('0xf'));}[_0x5ee6('0x14')](_0x4b28d6){const _0x5f143b=_0x36a9b3=>!this[_0x5ee6('0xe')](_0x36a9b3[_0x5ee6('0x12')]),_0xd25a0c=_0x4b28d6[_0x5ee6('0x1')][_0x5ee6('0xa')](_0x5f143b),_0x2d0bab=_0x4b28d6[_0x5ee6('0x13')][_0x5ee6('0xa')](_0x5f143b,{'direction':_0x5ee6('0x8')});return this[_0x5ee6('0x16')]['model'][_0x5ee6('0x10')](_0xd25a0c,_0x2d0bab);}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x161c=['name','values','view','domConverter','mapper','mapViewToDom','markerNameToElements'];(function(_0x37bce1,_0x161c1f){const _0x1db1bc=function(_0x478b30){while(--_0x478b30){_0x37bce1['push'](_0x37bce1['shift']());}};_0x1db1bc(++_0x161c1f);}(_0x161c,0x14e));const _0x1db1=function(_0x37bce1,_0x161c1f){_0x37bce1=_0x37bce1-0x0;let _0x1db1bc=_0x161c[_0x37bce1];return _0x1db1bc;};import _0x2f9f19 from'@ckeditor/ckeditor5-utils/src/first';export default function M(_0x37e59d,_0x4dbf15){const _0x408d16=_0x37e59d[_0x1db1('0x6')][_0x1db1('0x1')](_0x4dbf15[_0x1db1('0x2')]),_0x3ae212=_0x2f9f19(_0x408d16[_0x1db1('0x3')]());return _0x37e59d[_0x1db1('0x4')][_0x1db1('0x5')][_0x1db1('0x0')](_0x3ae212);}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x13d9=['afterInit','plugins','RestrictedEditingModeEditing','editor','has','enableCommand','addCommentThread'];(function(_0x1d68b5,_0x13d90f){const _0x111cb4=function(_0x18c681){while(--_0x18c681){_0x1d68b5['push'](_0x1d68b5['shift']());}};_0x111cb4(++_0x13d90f);}(_0x13d9,0xdf));const _0x111c=function(_0x1d68b5,_0x13d90f){_0x1d68b5=_0x1d68b5-0x0;let _0x111cb4=_0x13d9[_0x1d68b5];return _0x111cb4;};import _0x1fb580 from'@ckeditor/ckeditor5-core/src/plugin';export default class R extends _0x1fb580{[_0x111c('0x1')](){const _0x416075=this[_0x111c('0x4')];if(!_0x416075[_0x111c('0x2')][_0x111c('0x5')](_0x111c('0x3')))return;_0x416075['plugins']['get']('RestrictedEditingModeEditing')[_0x111c('0x6')](_0x111c('0x0'));}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x5f9a=['editor','getAllMarkersForId','upcast','data','add','end','_handleMarkerAddAndRemove','getWalker','elementToElement','set','registerPostFixer','sort','removeCommentThread','rootName','split','markerName','managedUsingOperations','getAttribute','init','editingDowncast','isThreadsLoadingPaused','updateMarker','removeMarker','then','change','openNewCommentThread','map','push','listenTo','differ','markerToHighlight','addComment','_changedMarkers','markers','destroy','_threads','isEqual','$marker','for','_initializeMarkerConverters','isObject','requires','CommentsRepository','_attachThreadToMarker','start','model','getMarkersGroup','editing','collaboration.channelId','$graveyard','plugins','get','affectsData','top','newRange','config','render','length','getCommentThread','low','_attachedThreads','left','hasMarkerForId','state','document','text','conversion','dataToMarker','createRange','activeMarker','commands','once','attachTo','fetchCommentThread','update:comment','isCollapsed','CommentsEditing','comment:','name','comment','has','root','hasContent','delete','change:isThreadsLoadingPaused','from','addCommentThread','change:activeMarker','stop'];(function(_0x1c4551,_0x5f9a91){const _0x2e4198=function(_0x5cbbaf){while(--_0x5cbbaf){_0x1c4551['push'](_0x1c4551['shift']());}};_0x2e4198(++_0x5f9a91);}(_0x5f9a,0xda));const _0x2e41=function(_0x1c4551,_0x5f9a91){_0x1c4551=_0x1c4551-0x0;let _0x2e4198=_0x5f9a[_0x1c4551];return _0x2e4198;};import _0x2f7c82 from'@ckeditor/ckeditor5-core/src/plugin';import _0x254e60 from'@ckeditor/ckeditor5-utils/src/dom/rect';import _0x3b3b5c from'./commentsrepository';import _0x11a244 from'./addcommentthreadcommand';import _0x20068c from'../utils/getmarkerdomelement';import _0x431d67 from'./integrations/commentsrestrictededitingmode';import'../../theme/commentmarker.css';export default class r extends _0x2f7c82{static get[_0x2e41('0x1')](){return[_0x3b3b5c,_0x431d67];}static get['pluginName'](){return _0x2e41('0x24');}constructor(_0x94440b){super(_0x94440b),this[_0x2e41('0x3a')](_0x2e41('0x45'),!0x0),_0x94440b[_0x2e41('0x34')][_0x2e41('0x1f')]('ready',()=>this[_0x2e41('0x45')]=!0x1),this['set'](_0x2e41('0x1d'),null),this['on'](_0x2e41('0x2f'),(_0xf6ebd3,_0x4e6096,_0x2e0c2f,_0x457eab)=>{_0x94440b[_0x2e41('0x5')]['change'](_0x198e5c=>{if(_0x2e0c2f){const {id:_0x122105}=q(_0x2e0c2f),_0x5c34b3=this[_0x2e41('0x32')](_0x122105);for(const _0x11d5a7 of _0x5c34b3)_0x198e5c[_0x2e41('0x46')](_0x11d5a7);}if(_0x457eab){const {id:_0x19b695}=q(_0x457eab),_0x56bfad=this[_0x2e41('0x32')](_0x19b695);for(const _0x46bed9 of _0x56bfad)_0x198e5c[_0x2e41('0x46')](_0x46bed9);}});}),this[_0x2e41('0x14')]=new Set();}[_0x2e41('0x43')](){const _0x88df5e=this[_0x2e41('0x31')],_0x4a9ef9=_0x88df5e[_0x2e41('0xa')][_0x2e41('0xb')](_0x2e41('0x2')),_0x36805f=_0x88df5e['config'][_0x2e41('0xb')](_0x2e41('0x8'));_0x88df5e[_0x2e41('0x1e')][_0x2e41('0x35')](_0x2e41('0x2e'),new _0x11a244(_0x88df5e)),this[_0x2e41('0x4d')](_0x88df5e,'change:isReadOnly',(_0x12f1f3,_0x4bb284,_0x11ef04)=>{_0x4a9ef9['switchReadOnly'](_0x11ef04,_0x88df5e[_0x2e41('0xf')][_0x2e41('0xb')]('collaboration.channelId'));}),this[_0x2e41('0x4d')](_0x4a9ef9,F(_0x2e41('0x3d'),_0x36805f),(_0x4d91ed,{threadId:_0x10bfb1})=>{_0x88df5e['model'][_0x2e41('0x49')](_0x302089=>{for(const _0x2bf6ed of this[_0x2e41('0x32')](_0x10bfb1))_0x302089[_0x2e41('0x47')](_0x2bf6ed);});const _0x251a1f=_0x4a9ef9[_0x2e41('0x12')](_0x10bfb1);_0x4a9ef9['hasCommentThread'](_0x10bfb1)&&!_0x251a1f[_0x2e41('0x11')]||_0x4d91ed[_0x2e41('0x30')]();},{'priority':'high'}),this[_0x2e41('0x4d')](_0x4a9ef9,F(_0x2e41('0x50'),_0x36805f),(_0x5b90be,{threadId:_0x53a6d4,isFromAdapter:_0x45dac3})=>{const _0x2f8ed6=this[_0x2e41('0x32')](_0x53a6d4);if(_0x45dac3||0x0==_0x2f8ed6[_0x2e41('0x11')]||!_0x4a9ef9['hasCommentThread'](_0x53a6d4))return;0x1===_0x4a9ef9[_0x2e41('0x12')](_0x53a6d4)['length']&&_0x88df5e[_0x2e41('0x5')][_0x2e41('0x49')](_0x5722f5=>{for(const _0x29a4d7 of _0x2f8ed6)_0x5722f5[_0x2e41('0x46')](_0x29a4d7,{'usingOperation':!0x0,'affectsData':!0x0});});},{'priority':_0x2e41('0x13')}),this[_0x2e41('0x58')](),this[_0x2e41('0x37')]();}[_0x2e41('0x53')](){const _0x4444c0=this[_0x2e41('0x31')]['plugins'][_0x2e41('0xb')]('CommentsRepository'),_0x217a0f=this[_0x2e41('0x31')]['config'][_0x2e41('0xb')](_0x2e41('0x8'));for(const _0x364fbe of _0x4444c0['getCommentThreads']({'channelId':_0x217a0f}))_0x4444c0['_detachCommentThread'](_0x364fbe['id']),_0x4444c0[_0x2e41('0x54')][_0x2e41('0x2b')](_0x364fbe['id']);super['destroy']();}[_0x2e41('0x16')](_0x43b484){return this[_0x2e41('0x32')](_0x43b484)[_0x2e41('0x11')]>0x0;}['getAllMarkersForId'](_0x28836f){const _0x138c5b=this[_0x2e41('0x31')][_0x2e41('0x5')][_0x2e41('0x52')][_0x2e41('0xb')](_0x2e41('0x25')+_0x28836f);return _0x138c5b?[_0x138c5b]:Array[_0x2e41('0x2d')](this[_0x2e41('0x31')][_0x2e41('0x5')]['markers'][_0x2e41('0x6')](_0x2e41('0x25')+_0x28836f));}[_0x2e41('0x58')](){const _0x589561=this['editor'];_0x589561[_0x2e41('0x1a')]['for'](_0x2e41('0x44'))[_0x2e41('0x4f')]({'model':_0x2e41('0x27'),'view':_0x613754=>{const {id:_0x203bc9}=q(_0x613754[_0x2e41('0x40')]),_0x38771a=['ck-comment-marker'];return this['activeMarker']&&q(this[_0x2e41('0x1d')])['id']===_0x203bc9&&_0x38771a[_0x2e41('0x4c')]('ck-comment-marker--active'),{'classes':_0x38771a,'attributes':{'data-comment':_0x203bc9}};}}),_0x589561[_0x2e41('0x1a')]['for']('dataDowncast')['markerToData']({'model':_0x2e41('0x27'),'view':_0x54eadf=>{const _0x334237=_0x589561[_0x2e41('0x5')][_0x2e41('0x52')][_0x2e41('0xb')](_0x54eadf),{id:_0x4fe7ee,part:_0x371923}=q(_0x54eadf);return _0x334237[_0x2e41('0xc')]?{'group':'comment','name':_0x371923?_0x4fe7ee+':'+_0x371923:_0x4fe7ee}:null;}}),_0x589561[_0x2e41('0x1a')][_0x2e41('0x57')](_0x2e41('0x33'))[_0x2e41('0x39')]({'view':{'name':_0x2e41('0x27'),'attribute':{'id':/^\\w/}},'model':(_0xe76ccd,{writer:_0x6bb1a2})=>_0x6bb1a2['createElement'](_0x2e41('0x56'),{'data-name':'comment:'+_0xe76ccd[_0x2e41('0x42')]('id')})}),_0x589561['conversion'][_0x2e41('0x57')](_0x2e41('0x33'))[_0x2e41('0x1b')]({'view':'comment'});}[_0x2e41('0x37')](){const _0x166b44=this[_0x2e41('0x31')],_0x1fe0b6=_0x166b44[_0x2e41('0xa')]['get'](_0x2e41('0x2')),_0x5a0afd=new Set();_0x166b44['model']['document'][_0x2e41('0x3b')](_0x31c08b=>{let _0x40f9c0=!0x1;for(const [_0x5f4abc,_0x32f6d6]of _0x166b44[_0x2e41('0x5')][_0x2e41('0x18')][_0x2e41('0x4e')][_0x2e41('0x51')]){const {group:_0x54992a,id:_0x3f0a68}=q(_0x5f4abc);let _0xbb1e95=_0x32f6d6['newRange'];if(_0x2e41('0x27')!==_0x54992a||!_0xbb1e95)continue;const _0x22f3f7=_0x2e41('0x9')===_0xbb1e95[_0x2e41('0x29')][_0x2e41('0x3e')];_0x22f3f7||(_0xbb1e95=z(_0xbb1e95,_0x166b44[_0x2e41('0x5')]),!_0xbb1e95||_0xbb1e95[_0x2e41('0x55')](_0x32f6d6[_0x2e41('0xe')]))?!_0xbb1e95||!_0x166b44['model'][_0x2e41('0x2a')](_0xbb1e95)||this[_0x2e41('0x14')][_0x2e41('0x28')](_0x3f0a68)&&_0x22f3f7?(_0x31c08b[_0x2e41('0x47')](_0x5f4abc),_0x40f9c0=!0x0):_0x22f3f7||(this[_0x2e41('0x45')]?_0x5a0afd[_0x2e41('0x35')](_0x3f0a68):this[_0x2e41('0x3')](_0x3f0a68)):(_0x31c08b[_0x2e41('0x46')](_0x5f4abc,{'range':_0xbb1e95}),_0x40f9c0=!0x0);}return _0x40f9c0;}),this['on'](_0x2e41('0x2c'),(_0x5955e2,_0xd38044,_0x5cbe4d)=>{if(!_0x5cbe4d&&_0x5a0afd['size'])for(const _0x4eb69f of _0x5a0afd)this[_0x2e41('0x3')](_0x4eb69f),_0x5a0afd[_0x2e41('0x2b')](_0x4eb69f);}),this[_0x2e41('0x4d')](_0x166b44[_0x2e41('0x5')]['markers'],_0x2e41('0x22'),(_0x5f3ecb,_0x465dfe,_0xf044ea,_0xcc0b06)=>{if(_0xcc0b06)return;const {id:_0x4245ea}=q(_0x465dfe[_0x2e41('0x26')]),_0x31a2a5=_0x166b44['plugins'][_0x2e41('0xb')](_0x2e41('0x2'))[_0x2e41('0x12')](_0x4245ea);_0x5a0afd[_0x2e41('0x2b')](_0x4245ea),_0x31a2a5&&!this[_0x2e41('0x16')](_0x4245ea)&&(this[_0x2e41('0x14')][_0x2e41('0x2b')](_0x4245ea),_0x1fe0b6['_detachCommentThread'](_0x4245ea));});}[_0x2e41('0x3')](_0x3d1804){if(this[_0x2e41('0x14')][_0x2e41('0x28')](_0x3d1804))return;this[_0x2e41('0x14')][_0x2e41('0x35')](_0x3d1804);const _0x12e030=this[_0x2e41('0x31')],_0x3aa2e0=_0x12e030[_0x2e41('0xa')]['get'](_0x2e41('0x2')),_0x1724fd=_0x12e030[_0x2e41('0xf')][_0x2e41('0xb')](_0x2e41('0x8')),_0x5d8ef8=()=>{const _0x423909=this[_0x2e41('0x32')](_0x3d1804);if(0x0==_0x423909['length'])return null;const _0x5a28d6=_0x423909[_0x2e41('0x4b')](_0x264089=>_0x20068c(_0x12e030[_0x2e41('0x7')],_0x264089));return _0x5a28d6[_0x2e41('0x3c')]((_0x47c616,_0x3848ea)=>{const _0x8e2a1=new _0x254e60(_0x47c616),_0x39dc81=new _0x254e60(_0x3848ea),_0x1892f9=_0x8e2a1[_0x2e41('0xd')]-_0x39dc81['top'];return 0x0==_0x1892f9?_0x8e2a1[_0x2e41('0x15')]-_0x39dc81[_0x2e41('0x15')]:_0x1892f9;}),_0x5a28d6[0x0];};!this['getAllMarkersForId'](_0x3d1804)[0x0][_0x2e41('0x41')]?_0x12e030[_0x2e41('0x7')]['view']['once'](_0x2e41('0x10'),()=>{_0x3aa2e0[_0x2e41('0x4a')]({'channelId':_0x1724fd,'threadId':_0x3d1804,'target':_0x5d8ef8});},{'priority':'low'}):_0x3aa2e0[_0x2e41('0x21')]({'channelId':_0x1724fd,'threadId':_0x3d1804})[_0x2e41('0x48')](_0x560d32=>{if('destroyed'!==_0x12e030[_0x2e41('0x17')]){if(_0x560d32)_0x560d32[_0x2e41('0x20')](_0x5d8ef8);else{const _0x4b7cfc=this[_0x2e41('0x32')](_0x3d1804);_0x12e030[_0x2e41('0x5')][_0x2e41('0x49')](_0x376e00=>{for(const _0x2a022e of _0x4b7cfc)_0x376e00[_0x2e41('0x47')](_0x2a022e);});}}});}}function F(_0x357ccf,_0x3ca30c){return _0x3ca30c?_0x357ccf+':'+_0x3ca30c:_0x357ccf;}function q(_0xdf4f6d){const _0x1f3008=_0xdf4f6d[_0x2e41('0x3f')](':');return{'group':_0x1f3008[0x0],'id':_0x1f3008[0x1],'part':_0x1f3008[0x2]};}function z(_0x4578f1,_0x13486a){const _0xd836c0=_0x13486a['schema'],_0x1b80db=_0x13486a[_0x2e41('0x1c')](_0x4578f1[_0x2e41('0x4')]);for(const _0xc491ef of _0x4578f1[_0x2e41('0x38')]()){const {type:_0x5aa97f,item:_0x4f0a7b,nextPosition:_0x1616b3}=_0xc491ef;if(_0x2e41('0x19')===_0x5aa97f||_0xd836c0[_0x2e41('0x0')](_0x4f0a7b)){const _0x3b0a82=_0x13486a['createPositionBefore'](_0x4f0a7b);_0x1b80db[_0x2e41('0x23')]&&(_0x1b80db['start']=_0x3b0a82),_0x1b80db[_0x2e41('0x36')]=_0x1616b3;}}return _0x1b80db[_0x2e41('0x23')]?null:_0x1b80db;}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\n\nimport '../../../theme/components/panel/balloonpanel.css';\n\nconst toPx = toUnit( 'px' );\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The absolute top position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * The absolute left position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\t/**\n\t\t * The balloon panel's current position. The position name is reflected in the CSS class set\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n\t\t * controls the minor aspects of the balloon's visual appearance like the placement\n\t\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n\t\t *\n\t\t * Default position names correspond with\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t\t *\n\t\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n\t\t *\n\t\t * @observable\n\t\t * @default 'arrow_nw'\n\t\t * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n\t\t */\n\t\tthis.set( 'position', 'arrow_nw' );\n\n\t\t/**\n\t\t * Controls whether the balloon panel is visible or not.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n\t\t *\n\t\t * @observable\n\t\t * @default true\n\t\t * @member {Boolean} #withArrow\n\t\t */\n\t\tthis.set( 'withArrow', true );\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t\t * `true`. Used by {@link #pin}.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\n\t\t */\n\n\t\t/**\n\t\t * A collection of the child views that creates the balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tshow() {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\thide() {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~Options options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Attach the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.attachTo( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tattachTo( options ) {\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleWest,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleEast,\n\t\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.northArrowSouth,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleWest,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleEast,\n\t\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\t\tdefaultPositions.northArrowSouthEast\n\t\t\t],\n\t\t\tlimiter: defaultLimiterElement,\n\t\t\tfitInViewport: true\n\t\t}, options );\n\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions );\n\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\n\t\t// so it is better to use int values.\n\t\tconst left = parseInt( optimalPosition.left );\n\t\tconst top = parseInt( optimalPosition.top );\n\t\tconst position = optimalPosition.name;\n\n\t\tObject.assign( this, { top, left, position } );\n\t}\n\n\t/**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~Options#target}\n\t * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n\t * and is immune to the changing environment.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Pin the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.pin( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpin( options ) {\n\t\tthis.unpin();\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\tthis._startPinning( options );\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tunpin() {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}.\n\t */\n\t_startPinning( options ) {\n\t\tthis.attachTo( options );\n\n\t\tconst targetElement = getDomElement( options.target );\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : defaultLimiterElement;\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\n\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\n\t\t\t// There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t */\n\t_stopPinning() {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\t}\n}\n\n// Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\nfunction getDomElement( object ) {\n\tif ( isElement( object ) ) {\n\t\treturn object;\n\t}\n\n\tif ( isRange( object ) ) {\n\t\treturn object.commonAncestorContainer;\n\t}\n\n\tif ( typeof object == 'function' ) {\n\t\treturn getDomElement( object() );\n\t}\n\n\treturn null;\n}\n\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 30\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\nBalloonPanelView.arrowHorizontalOffset = 25;\n\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 15\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\nBalloonPanelView.arrowVerticalOffset = 10;\n\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n *\n *\n * **North west**\n *\n * * `northWestArrowSouthWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t V\n *\t\t [ Target ]\n *\n * * `northWestArrowSouthMiddleWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t    [ Target ]\n *\n * * `northWestArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t         [ Target ]\n *\n * * `northWestArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t             [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t                 [ Target ]\n *\n *\n *\n * **North**\n *\n * * `northArrowSouthWest`\n *\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouthMiddleWest`\n *\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t    [ Target ]\n *\n * * `northArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t        [ Target ]\n *\n * * `northArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                V\n *\t\t           [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouthWest`\n *\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n *\n * * `northEastArrowSouthMiddleWest`\n *\n *\t\t     +-----------------+\n *\t\t     |     Balloon     |\n *\t\t     +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t    [ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t        [ Target ]\n *\n *\n *\n * **South**\n *\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t        ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthMiddleEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South west**\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t [ Target ]\n *\t\t ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleWest`\n *\n *\t\t     [ Target ]\n *\t\t     ^\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleEast`\n *\n *\t\t              [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t                 [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South east**\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n* * `southEastArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t            ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthMiddleEast`\n *\n *\t\t     [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t        [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = {\n\n\t// ------- North west\n\n\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthWestArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthWestArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North\n\n\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North east\n\n\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthEastArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthEastArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\t// ------- South west\n\n\tsouthWestArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthWestArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthWestArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South\n\n\tsouthArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\tsouthArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South east\n\n\tsouthEastArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthEastArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthEastArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} )\n\n};\n\n// Returns the top coordinate for positions starting with `north*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getNorthTop( targetRect, balloonRect ) {\n\treturn targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\n}\n\n// Returns the top coordinate for positions starting with `south*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getSouthTop( targetRect ) {\n\treturn targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BalloonPanelView from './balloonpanelview';\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport prevIcon from '../../../theme/icons/previous-arrow.svg';\nimport nextIcon from '../../../theme/icons/next-arrow.svg';\n\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ContextualBalloon extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ContextualBalloon';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The {@link module:utils/dom/position~Options#limiter position limiter}\n\t\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t\t * or {@link #updatePosition}.\n\t\t *\n\t\t * By default, a function that obtains the farthest DOM\n\t\t * {@link module:engine/view/rooteditableelement~RootEditableElement}\n\t\t * of the {@link module:engine/view/document~Document#selection}.\n\t\t *\n\t\t * @member {module:utils/dom/position~Options#limiter} #positionLimiter\n\t\t */\n\t\tthis.positionLimiter = () => {\n\t\t\tconst view = this.editor.editing.view;\n\t\t\tconst viewDocument = view.document;\n\t\t\tconst editableElement = viewDocument.selection.editableElement;\n\n\t\t\tif ( editableElement ) {\n\t\t\t\treturn view.domConverter.mapViewToDom( editableElement.root );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * The currently visible view or `null` when there are no views in any stack.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {module:ui/view~View|null} #visibleView\n\t\t */\n\t\tthis.set( 'visibleView', null );\n\n\t\t/**\n\t\t * The common balloon panel view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n\t\t */\n\t\tthis.view = new BalloonPanelView( editor.locale );\n\t\teditor.ui.view.body.add( this.view );\n\t\teditor.ui.focusTracker.add( this.view.element );\n\n\t\t/**\n\t\t * The map of views and their stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:ui/view~View,Set>}\n\t\t */\n\t\tthis._viewToStack = new Map();\n\n\t\t/**\n\t\t * The map of IDs and stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._idToStack = new Map();\n\n\t\t/**\n\t\t * A total number of all stacks in the balloon.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #_numberOfStacks\n\t\t */\n\t\tthis.set( '_numberOfStacks', 0 );\n\n\t\t/**\n\t\t * A flag that controls the single view mode.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_singleViewMode\n\t\t */\n\t\tthis.set( '_singleViewMode', false );\n\n\t\t/**\n\t\t * Rotator view embedded in the contextual balloon.\n\t\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t\t */\n\t\tthis._rotatorView = this._createRotatorView();\n\n\t\t/**\n\t\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/view~View}\n\t\t */\n\t\tthis._fakePanelsView = this._createFakePanelsView();\n\t}\n\n\t/**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t *\n\t * @param {module:ui/view~View} view\n\t * @returns {Boolean}\n\t */\n\thasView( view ) {\n\t\treturn Array.from( this._viewToStack.keys() ).includes( view );\n\t}\n\n\t/**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param {Object} data The configuration of the view.\n\t * @param {String} [data.stackId='main'] The ID of the stack that the view is added to.\n\t * @param {module:ui/view~View} [data.view] The content of the balloon.\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n\t * @param {String} [data.balloonClassName] An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t * @param {Boolean} [data.singleViewMode=false] Whether the view should be the only visible view even if other stacks were added.\n\t */\n\tadd( data ) {\n\t\tif ( this.hasView( data.view ) ) {\n\t\t\t/**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-add-view-exist',\n\t\t\t\t[ this, data ]\n\t\t\t);\n\t\t}\n\n\t\tconst stackId = data.stackId || 'main';\n\n\t\t// If new stack is added, creates it and show view from this stack.\n\t\tif ( !this._idToStack.has( stackId ) ) {\n\t\t\tthis._idToStack.set( stackId, new Map( [ [ data.view, data ] ] ) );\n\t\t\tthis._viewToStack.set( data.view, this._idToStack.get( stackId ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\n\t\t\tif ( !this._visibleStack || data.singleViewMode ) {\n\t\t\t\tthis.showStack( stackId );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst stack = this._idToStack.get( stackId );\n\n\t\tif ( data.singleViewMode ) {\n\t\t\tthis.showStack( stackId );\n\t\t}\n\n\t\t// Add new view to the stack.\n\t\tstack.set( data.view, data );\n\t\tthis._viewToStack.set( data.view, stack );\n\n\t\t// And display it if is added to the currently visible stack.\n\t\tif ( stack === this._visibleStack ) {\n\t\t\tthis._showView( data );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\n\t */\n\tremove( view ) {\n\t\tif ( !this.hasView( view ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-remove-view-not-exist',\n\t\t\t\t[ this, view ]\n\t\t\t);\n\t\t}\n\n\t\tconst stack = this._viewToStack.get( view );\n\n\t\tif ( this._singleViewMode && this.visibleView === view ) {\n\t\t\tthis._singleViewMode = false;\n\t\t}\n\n\t\t// When visible view will be removed we need to show a preceding view or next stack\n\t\t// if a view is the only view in the stack.\n\t\tif ( this.visibleView === view ) {\n\t\t\tif ( stack.size === 1 ) {\n\t\t\t\tif ( this._idToStack.size > 1 ) {\n\t\t\t\t\tthis._showNextStack();\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.hide();\n\t\t\t\t\tthis.visibleView = null;\n\t\t\t\t\tthis._rotatorView.hideView();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._showView( Array.from( stack.values() )[ stack.size - 2 ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( stack.size === 1 ) {\n\t\t\tthis._idToStack.delete( this._getStackId( stack ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\t\t} else {\n\t\t\tstack.delete( view );\n\t\t}\n\n\t\tthis._viewToStack.delete( view );\n\t}\n\n\t/**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param {module:utils/dom/position~Options} [position] position options.\n\t */\n\tupdatePosition( position ) {\n\t\tif ( position ) {\n\t\t\tthis._visibleStack.get( this.visibleView ).position = position;\n\t\t}\n\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\t}\n\n\t/**\n\t * Shows the last view from the stack of a given ID.\n\t *\n\t * @param {String} id\n\t */\n\tshowStack( id ) {\n\t\tthis.visibleStack = id;\n\t\tconst stack = this._idToStack.get( id );\n\n\t\tif ( !stack ) {\n\t\t\t/**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-showstack-stack-not-exist',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this._visibleStack === stack ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._showView( Array.from( stack.values() ).pop() );\n\t}\n\n\t/**\n\t * Returns the stack of the currently visible view.\n\t *\n\t * @private\n\t * @type {Set}\n\t */\n\tget _visibleStack() {\n\t\treturn this._viewToStack.get( this.visibleView );\n\t}\n\n\t/**\n\t * Returns the ID of the given stack.\n\t *\n\t * @private\n\t * @param {Set} stack\n\t * @returns {String}\n\t */\n\t_getStackId( stack ) {\n\t\tconst entry = Array.from( this._idToStack.entries() ).find( entry => entry[ 1 ] === stack );\n\n\t\treturn entry[ 0 ];\n\t}\n\n\t/**\n\t * Shows the last view from the next stack.\n\t *\n\t * @private\n\t */\n\t_showNextStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) + 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = 0;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Shows the last view from the previous stack.\n\t *\n\t * @private\n\t */\n\t_showPrevStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) - 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = stacks.length - 1;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Creates a rotator view.\n\t *\n\t * @private\n\t * @returns {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t */\n\t_createRotatorView() {\n\t\tconst view = new RotatorView( this.editor.locale );\n\t\tconst t = this.editor.locale.t;\n\n\t\tthis.view.content.add( view );\n\n\t\t// Hide navigation when there is only a one stack & not in single view mode.\n\t\tview.bind( 'isNavigationVisible' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( value, isSingleViewMode ) => {\n\t\t\treturn !isSingleViewMode && value > 1;\n\t\t} );\n\n\t\t// Update balloon position after toggling navigation.\n\t\tview.on( 'change:isNavigationVisible', () => ( this.updatePosition() ), { priority: 'low' } );\n\n\t\t// Update stacks counter value.\n\t\tview.bind( 'counter' ).to( this, 'visibleView', this, '_numberOfStacks', ( visibleView, numberOfStacks ) => {\n\t\t\tif ( numberOfStacks < 2 ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst current = Array.from( this._idToStack.values() ).indexOf( this._visibleStack ) + 1;\n\n\t\t\treturn t( '%0 of %1', [ current, numberOfStacks ] );\n\t\t} );\n\n\t\tview.buttonNextView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showNextStack();\n\t\t} );\n\n\t\tview.buttonPrevView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showPrevStack();\n\t\t} );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createFakePanelsView() {\n\t\tconst view = new FakePanelsView( this.editor.locale, this.view );\n\n\t\tview.bind( 'numberOfPanels' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( number, isSingleViewMode ) => {\n\t\t\tconst showPanels = !isSingleViewMode && number >= 2;\n\n\t\t\treturn showPanels ? Math.min( number - 1, 2 ) : 0;\n\t\t} );\n\n\t\tview.listenTo( this.view, 'change:top', () => view.updatePosition() );\n\t\tview.listenTo( this.view, 'change:left', () => view.updatePosition() );\n\n\t\tthis.editor.ui.view.body.add( view );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @private\n\t * @param {Object} data Configuration.\n\t * @param {module:ui/view~View} [data.view] The view to show in the balloon.\n\t * @param {String} [data.balloonClassName=''] Additional class name which will be added to the {@link #view balloon}.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t */\n\t_showView( { view, balloonClassName = '', withArrow = true, singleViewMode = false } ) {\n\t\tthis.view.class = balloonClassName;\n\t\tthis.view.withArrow = withArrow;\n\n\t\tthis._rotatorView.showView( view );\n\t\tthis.visibleView = view;\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\n\t\tif ( singleViewMode ) {\n\t\t\tthis._singleViewMode = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPosition() {\n\t\tlet position = Array.from( this._visibleStack.values() ).pop().position;\n\n\t\t// Use the default limiter if none has been specified.\n\t\tif ( position && !position.limiter ) {\n\t\t\t// Don't modify the original options object.\n\t\t\tposition = Object.assign( {}, position, {\n\t\t\t\tlimiter: this.positionLimiter\n\t\t\t} );\n\t\t}\n\n\t\treturn position;\n\t}\n}\n\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n *\n * @extends module:ui/view~View\n */\nclass RotatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Defines whether navigation is visible or not.\n\t\t *\n\t\t * @member {Boolean} #isNavigationVisible\n\t\t */\n\t\tthis.set( 'isNavigationVisible', true );\n\n\t\t/**\n\t\t * Used for checking if a view is focused or not.\n\t\t *\n\t\t * @type {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the previous one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonPrevView = this._createButtonView( t( 'Previous' ), prevIcon );\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the next one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonNextView = this._createButtonView( t( 'Next' ), nextIcon );\n\n\t\t/**\n\t\t * A collection of the child views that creates the rotator content.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-rotator'\n\t\t\t\t],\n\t\t\t\t'z-index': '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck-balloon-rotator__navigation',\n\t\t\t\t\t\t\tbind.to( 'isNavigationVisible', value => value ? '' : 'ck-hidden' )\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.buttonPrevView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t\t\t'ck-balloon-rotator__counter'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: bind.to( 'counter' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.buttonNextView\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-balloon-rotator__content'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.content\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element );\n\t}\n\n\t/**\n\t * Shows a given view.\n\t *\n\t * @param {module:ui/view~View} view The view to show.\n\t */\n\tshowView( view ) {\n\t\tthis.hideView();\n\t\tthis.content.add( view );\n\t}\n\n\t/**\n\t * Hides the currently displayed view.\n\t */\n\thideView() {\n\t\tthis.content.clear();\n\t}\n\n\t/**\n\t * Creates a navigation button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createButtonView( label, icon ) {\n\t\tconst view = new ButtonView( this.locale );\n\n\t\tview.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n\n// Displays additional layers under the balloon when multiple stacks are added to the balloon.\n//\n// @private\n// @extends module:ui/view~View\nclass FakePanelsView extends View {\n\t// @inheritDoc\n\tconstructor( locale, balloonPanelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Fake panels top offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #top\n\t\tthis.set( 'top', 0 );\n\n\t\t// Fake panels left offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #left\n\t\tthis.set( 'left', 0 );\n\n\t\t// Fake panels height.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #height\n\t\tthis.set( 'height', 0 );\n\n\t\t// Fake panels width.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #width\n\t\tthis.set( 'width', 0 );\n\n\t\t// Number of rendered fake panels.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #numberOfPanels\n\t\tthis.set( 'numberOfPanels', 0 );\n\n\t\t// Collection of the child views which creates fake panel content.\n\t\t//\n\t\t// @readonly\n\t\t// @type {module:ui/viewcollection~ViewCollection}\n\t\tthis.content = this.createCollection();\n\n\t\t// Context.\n\t\t//\n\t\t// @private\n\t\t// @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t\tthis._balloonPanelView = balloonPanelView;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-fake-panel',\n\t\t\t\t\tbind.to( 'numberOfPanels', number => number ? '' : 'ck-hidden' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx ),\n\t\t\t\t\twidth: bind.to( 'width', toPx ),\n\t\t\t\t\theight: bind.to( 'height', toPx )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: this.content\n\t\t} );\n\n\t\tthis.on( 'change:numberOfPanels', ( evt, name, next, prev ) => {\n\t\t\tif ( next > prev ) {\n\t\t\t\tthis._addPanels( next - prev );\n\t\t\t} else {\n\t\t\t\tthis._removePanels( prev - next );\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t} );\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_addPanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = new View();\n\n\t\t\tview.setTemplate( { tag: 'div' } );\n\n\t\t\tthis.content.add( view );\n\t\t\tthis.registerChild( view );\n\t\t}\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_removePanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = this.content.last;\n\n\t\t\tthis.content.remove( view );\n\t\t\tthis.deregisterChild( view );\n\t\t\tview.destroy();\n\t\t}\n\t}\n\n\t// Updates coordinates of fake panels.\n\tupdatePosition() {\n\t\tif ( this.numberOfPanels ) {\n\t\t\tconst { top, left } = this._balloonPanelView;\n\t\t\tconst { width, height } = new Rect( this._balloonPanelView.element );\n\n\t\t\tObject.assign( this, { top, left, width, height } );\n\t\t}\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.463 5.187a.888.888 0 1 1 1.254 1.255L9.16 10l3.557 3.557a.888.888 0 1 1-1.254 1.255L7.26 10.61a.888.888 0 0 1 .16-1.382l4.043-4.042z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.537 14.813a.888.888 0 1 1-1.254-1.255L10.84 10 7.283 6.442a.888.888 0 1 1 1.254-1.255L12.74 9.39a.888.888 0 0 1-.16 1.382l-4.043 4.042z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mouseobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Mouse events observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/view~View} by {@link module:engine/view/view~View#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class MouseObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = 'mousedown';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when mouse button is pressed down on one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/mouseobserver~MouseObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:engine/view/observer/mouseobserver~MouseObserver}\n * needs to be added to {@link module:engine/view/view~View} by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:engine/view/observer/mouseobserver~MouseObserver\n * @event module:engine/view/document~Document#event:mousedown\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x4a80=['delete','editing','editor','_addAnnotationToBalloon','_manuallyClosed','Esc','view','add','focus','addObserver','inline','remove','change:height','includes','attach','inlineannotations-detach-not-attached','InlineAnnotations','change:activeView','set','detach','listenTo','_balloon','isAttached','updatePosition','customView','uiType','_removeAnnotationFromBalloon','keystrokes','mousedown','stopListening','items','inlineannotations-attach-already-attached','getAnnotationView','targetRect','activeView','focusTracker','change:isFocused','destroy','afterInit','Annotations','pluginName','clear','switchTo','document','isFocused','has','update','context','showStack','requires','register','get','_addedViews','plugins','visibleView','refresh','change:selectedViews','change:visibleView'];(function(_0x871f46,_0x4a80f8){const _0x571902=function(_0x40a98c){while(--_0x40a98c){_0x871f46['push'](_0x871f46['shift']());}};_0x571902(++_0x4a80f8);}(_0x4a80,0x87));const _0x5719=function(_0x871f46,_0x4a80f8){_0x871f46=_0x871f46-0x0;let _0x571902=_0x4a80[_0x871f46];return _0x571902;};import _0x4856e6 from'@ckeditor/ckeditor5-core/src/plugin';import _0x522c82 from'../annotations/annotations';import _0x28424a from'./editorannotations';import _0x24916e from'@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';import _0x3660ac from'@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver';import _0x4c1cf0 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';import'./../../theme/annotation-inline.css';export default class A extends _0x4856e6{static get[_0x5719('0x1e')](){return[_0x522c82,_0x28424a,_0x24916e];}static get[_0x5719('0x15')](){return _0x5719('0x37');}constructor(_0x9bab1d){super(_0x9bab1d),_0x9bab1d[_0x5719('0x28')][_0x5719('0x2d')][_0x5719('0x30')](_0x3660ac),this[_0x5719('0x3')]=!0x1,this[_0x5719('0x2b')]=new Set(),this[_0x5719('0x2')]=_0x9bab1d['plugins'][_0x5719('0x20')](_0x24916e),this['_addedViews']=new Set();}['init'](){const _0x52c5e3=this[_0x5719('0x29')][_0x5719('0x22')][_0x5719('0x20')](_0x522c82);_0x52c5e3[_0x5719('0x1c')]===this[_0x5719('0x29')]&&(_0x52c5e3[_0x5719('0x1f')](_0x5719('0x31'),this),this[_0x5719('0x29')][_0x5719('0x8')][_0x5719('0x39')](_0x5719('0x2c'),(_0x54b96f,_0x14ca83)=>{const _0x220357=this[_0x5719('0x2')];this[_0x5719('0x3')]&&_0x220357[_0x5719('0x23')]&&_0x52c5e3[_0x5719('0xb')][_0x5719('0x1a')](_0x220357[_0x5719('0x23')])&&(this[_0x5719('0x2b')][_0x5719('0x2e')](_0x220357[_0x5719('0x23')]),this['_removeAnnotationFromBalloon'](_0x220357['visibleView']),_0x14ca83());}));}[_0x5719('0x13')](){const _0x4ba00e=this[_0x5719('0x29')][_0x5719('0x22')][_0x5719('0x20')](_0x522c82);_0x4ba00e[_0x5719('0x1c')]===this[_0x5719('0x29')]&&(_0x4ba00e[_0x5719('0x6')]||_0x4ba00e[_0x5719('0x17')](_0x5719('0x31')));}[_0x5719('0x12')](){this[_0x5719('0x3')]&&this[_0x5719('0x0')]();}[_0x5719('0x35')](){const _0x3bffb5=this[_0x5719('0x29')]['plugins'][_0x5719('0x20')]('Annotations'),_0x1b6293=this[_0x5719('0x2')];if(this[_0x5719('0x3')])throw new _0x4c1cf0(_0x5719('0xc'),this);if(_0x3bffb5['context']!==this[_0x5719('0x29')])throw new _0x4c1cf0('inlineannotations-not-allowed-with-context',this);this[_0x5719('0x1')](this[_0x5719('0x29')]['ui'][_0x5719('0x10')],_0x5719('0x11'),(_0x4ab20e,_0x19e9b4,_0x1aa738)=>{if(!_0x1aa738)for(const _0x1525ee of _0x3bffb5[_0x5719('0xb')])this[_0x5719('0x7')](_0x1525ee);}),this[_0x5719('0x1')](_0x3bffb5[_0x5719('0xb')],_0x5719('0x32'),(_0x325312,_0x394978)=>{this[_0x5719('0x7')](_0x394978);}),this['listenTo'](_0x3bffb5,_0x5719('0x25'),(_0x2b497a,_0x348e57,_0x3ae1b6,_0x930977)=>{for(const _0x565040 of _0x930977)_0x3ae1b6['includes'](_0x565040)||this[_0x5719('0x2b')]['delete'](_0x3bffb5[_0x5719('0xd')](_0x565040));for(const _0x4f57c6 of _0x3bffb5[_0x5719('0xb')])_0x3ae1b6[_0x5719('0x34')](_0x4f57c6[_0x5719('0x5')])||this[_0x5719('0x7')](_0x4f57c6);if(this['editor']['ui'][_0x5719('0x10')][_0x5719('0x19')])for(const _0x161acf of _0x3ae1b6)this['_addAnnotationToBalloon'](_0x3bffb5[_0x5719('0xd')](_0x161acf));}),this[_0x5719('0x1')](_0x3bffb5,_0x5719('0x38'),(_0x49ba0f,_0x10d489,_0x3ec8c2)=>{_0x3ec8c2&&this['editor']['ui'][_0x5719('0x10')]['isFocused']&&this[_0x5719('0x2a')](_0x3bffb5[_0x5719('0xd')](_0x3ec8c2),!0x0);}),this[_0x5719('0x1')](_0x1b6293,_0x5719('0x26'),(_0xec5cda,_0x270d6c,_0x40e26e,_0x4fc3b4)=>{_0x4fc3b4&&this[_0x5719('0xa')](_0x4fc3b4),_0x40e26e&&_0x3bffb5['items'][_0x5719('0x1a')](_0x40e26e)&&(this['listenTo'](_0x40e26e,_0x5719('0x33'),()=>_0x1b6293['updatePosition']()),this[_0x5719('0x1')](_0x40e26e,'Esc',()=>{this[_0x5719('0x2b')][_0x5719('0x2e')](_0x40e26e),this[_0x5719('0x7')](_0x40e26e),this[_0x5719('0x29')][_0x5719('0x28')]['view'][_0x5719('0x2f')]();}),_0x3bffb5[_0x5719('0xf')]!==_0x40e26e[_0x5719('0x5')]&&(_0x3bffb5[_0x5719('0xf')]=_0x40e26e['customView']));}),this[_0x5719('0x1')](this['editor']['ui'],_0x5719('0x1b'),()=>{_0x1b6293[_0x5719('0x23')]&&_0x3bffb5[_0x5719('0xb')][_0x5719('0x1a')](_0x1b6293[_0x5719('0x23')])&&_0x1b6293[_0x5719('0x4')]();}),this[_0x5719('0x1')](this['editor']['editing'][_0x5719('0x2d')][_0x5719('0x18')],_0x5719('0x9'),()=>{this[_0x5719('0x2b')][_0x5719('0x16')](),_0x3bffb5[_0x5719('0x24')]();}),this[_0x5719('0x3')]=!0x0;}[_0x5719('0x0')](){if(!this[_0x5719('0x3')])throw new _0x4c1cf0(_0x5719('0x36'),this);const _0x9192d5=this[_0x5719('0x29')][_0x5719('0x22')][_0x5719('0x20')](_0x5719('0x14')),_0x2c3b18=this['_balloon'];for(const _0x1c423d of this[_0x5719('0x21')])this[_0x5719('0x7')](_0x1c423d);this['stopListening'](_0x9192d5[_0x5719('0xb')]),this[_0x5719('0xa')](_0x9192d5),this['stopListening'](_0x2c3b18),this[_0x5719('0xa')](this[_0x5719('0x29')]['ui']),this[_0x5719('0xa')](this[_0x5719('0x29')]['ui'][_0x5719('0x10')]),this[_0x5719('0xa')](this['editor'][_0x5719('0x28')][_0x5719('0x2d')]['document']),this['isAttached']=!0x1;}[_0x5719('0x2a')](_0x3c75f6,_0x24371e){const _0x4d3b98=this[_0x5719('0x29')][_0x5719('0x22')][_0x5719('0x20')](_0x522c82);this['_manuallyClosed']['has'](_0x3c75f6)||(this['_addedViews']['has'](_0x3c75f6)||this[_0x5719('0x2')]['hasView'](_0x3c75f6)||(this['_addedViews'][_0x5719('0x2e')](_0x3c75f6),this[_0x5719('0x2')][_0x5719('0x2e')]({'stackId':_0x3c75f6['id'],'view':_0x3c75f6,'position':{'target':()=>_0x4d3b98['getTarget'](_0x3c75f6[_0x5719('0x5')])||_0x3c75f6[_0x5719('0xe')]}})),_0x24371e&&this[_0x5719('0x2')][_0x5719('0x1d')](_0x3c75f6['id']));}[_0x5719('0x7')](_0x2cfffe){this['_addedViews']['has'](_0x2cfffe)&&this[_0x5719('0x2')]['hasView'](_0x2cfffe)&&(this[_0x5719('0x21')][_0x5719('0x27')](_0x2cfffe),this[_0x5719('0x2')][_0x5719('0x32')](_0x2cfffe));}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x27e8=['hasDomSelection','containsRange','requires','has','document','keys','EditorAnnotations','addSourceCollector','activeView','plugins','set','model','function','_editorAnnotationsData','stop','remove','isReadOnly','from','init','change:range','customView','editor','editing','items','_dataCollectors','get','element','add','listenTo','map','sort','_findSelectedViews','view','focusTracker','cancel','refreshSelectedViews','change:isFocused','Annotations','refresh','getRanges','update','selectedViews'];(function(_0x3735db,_0x27e8c6){const _0x39f3b3=function(_0x3d26fe){while(--_0x3d26fe){_0x3735db['push'](_0x3735db['shift']());}};_0x39f3b3(++_0x27e8c6);}(_0x27e8,0x14c));const _0x39f3=function(_0x3735db,_0x27e8c6){_0x3735db=_0x3735db-0x0;let _0x39f3b3=_0x27e8[_0x3735db];return _0x39f3b3;};import _0x449396 from'@ckeditor/ckeditor5-core/src/plugin';import _0x3b4737 from'./annotations';import _0x1616ac from'./inlineannotations';import _0x486b87 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';import{debounce as _0x293a7d}from'lodash-es';export default class y extends _0x449396{static get[_0x39f3('0x6')](){return[_0x3b4737,_0x1616ac];}static get['pluginName'](){return _0x39f3('0xa');}constructor(_0x2351ee){super(_0x2351ee),this[_0x39f3('0x1c')]=new Set();}[_0x39f3('0x16')](){const _0x2ba03c=this[_0x39f3('0x19')],_0x421f97=_0x2ba03c['plugins'][_0x39f3('0x1d')]('Annotations'),_0x22c1f4=_0x2ba03c[_0x39f3('0xf')][_0x39f3('0x8')]['selection'],_0x2a77ed=_0x293a7d(()=>this['refreshSelectedViews'](),0xa);_0x22c1f4['on'](_0x39f3('0x17'),(_0x106187,_0x397c44)=>{_0x397c44['directChange']&&(_0x2a77ed[_0x39f3('0x26')](),this[_0x39f3('0x27')]());}),this[_0x39f3('0x20')](_0x2ba03c[_0x39f3('0x1a')]['view'][_0x39f3('0x8')],_0x39f3('0x28'),(_0x4d9dce,_0x5bc631,_0x1f6b6e)=>{_0x1f6b6e&&_0x2a77ed();}),this[_0x39f3('0x20')](_0x2ba03c['ui'][_0x39f3('0x25')],_0x39f3('0x28'),(_0xebfd29,_0x36e418,_0x3f3c6f)=>{_0x3f3c6f||_0x2ba03c[_0x39f3('0x14')]||this['_editorAnnotationsData'][_0x39f3('0x7')](_0x421f97[_0x39f3('0xc')])&&(_0x421f97[_0x39f3('0xc')]=null);}),_0x421f97[_0x39f3('0x25')]['on'](_0x39f3('0x28'),(_0x3faf16,_0x32d809,_0x1f1cb2)=>{!_0x1f1cb2&&_0x2ba03c[_0x39f3('0x1a')][_0x39f3('0x24')][_0x39f3('0x4')]&&(_0x2a77ed[_0x39f3('0x26')](),this[_0x39f3('0x27')](),_0x3faf16[_0x39f3('0x12')]());},{'priority':'high'}),this[_0x39f3('0x20')](this[_0x39f3('0x19')]['ui'],_0x39f3('0x2'),()=>_0x421f97[_0x39f3('0x0')]());const _0xc7ce0c=new Set();this[_0x39f3('0x20')](_0x421f97[_0x39f3('0x1b')],_0x39f3('0x1f'),(_0x4b266c,_0x3bae8a)=>{for(const _0x43439d of this[_0x39f3('0x11')][_0x39f3('0x9')]())if(_0x43439d===_0x3bae8a[_0x39f3('0x18')]){_0x2ba03c['ui']['focusTracker'][_0x39f3('0x1f')](_0x3bae8a[_0x39f3('0x1e')]),_0xc7ce0c[_0x39f3('0x1f')](_0x3bae8a);break;}}),this[_0x39f3('0x20')](_0x421f97[_0x39f3('0x1b')],_0x39f3('0x13'),(_0x5611be,_0xaa9176)=>{_0xc7ce0c[_0x39f3('0x7')](_0xaa9176)&&(_0x2ba03c['ui']['focusTracker'][_0x39f3('0x13')](_0xaa9176[_0x39f3('0x1e')]),_0xc7ce0c['delete'](_0xaa9176));});}[_0x39f3('0xb')](_0x32da54){if(_0x39f3('0x10')!=typeof _0x32da54)throw new _0x486b87('editorannotations-invalid-source-callback');this[_0x39f3('0x1c')]['add'](_0x32da54);}[_0x39f3('0x27')](){const _0x29e30b=this[_0x39f3('0x19')][_0x39f3('0xd')]['get'](_0x39f3('0x29'));_0x29e30b[_0x39f3('0x3')]=this[_0x39f3('0x23')](),_0x29e30b[_0x39f3('0xc')]=_0x29e30b[_0x39f3('0x3')][0x0]||null;}get[_0x39f3('0x11')](){const _0x49e4a5=new Map();for(const _0x3e11de of Array[_0x39f3('0x15')](this['_dataCollectors']))for(const [_0xe04009,_0x2199e6]of _0x3e11de())_0x49e4a5[_0x39f3('0xe')](_0xe04009,_0x2199e6);return _0x49e4a5;}['_findSelectedViews'](){const _0x56e95d=[],_0x3115b2=this[_0x39f3('0x19')][_0x39f3('0xf')]['document']['selection'],_0x418e9c=Array['from'](_0x3115b2[_0x39f3('0x1')]()),_0x2cfc2a=this[_0x39f3('0x19')]['plugins'][_0x39f3('0x1d')](_0x39f3('0x29'));for(const [_0x328591,_0x18581f]of this[_0x39f3('0x11')]){const _0x1ac646=_0x1f4727(_0x18581f);_0x1ac646&&_0x56e95d['push']([_0x328591,_0x1ac646]);}function _0x1f4727(_0x38789c){for(const _0x27d246 of _0x38789c)for(const _0x15f158 of _0x418e9c)if(_0x27d246['containsRange'](_0x15f158,!_0x3115b2['isCollapsed']))return _0x27d246;return null;}return _0x56e95d[_0x39f3('0x22')]((_0x170399,_0x272b79)=>{const _0x5c0106=_0x170399[0x1],_0x30bdab=_0x272b79[0x1];return _0x5c0106[_0x39f3('0x5')](_0x30bdab)?0x1:_0x30bdab[_0x39f3('0x5')](_0x5c0106)||_0x170399[0x0]==_0x2cfc2a[_0x39f3('0xc')]?-0x1:_0x272b79[0x0]==_0x2cfc2a[_0x39f3('0xc')]?0x1:0x0;})[_0x39f3('0x21')](_0x2d1586=>_0x2d1586[0x0]);}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nimport _0x26558c from'@ckeditor/ckeditor5-core/src/plugin';import _0x45baba from'../annotations/annotations';import _0x559dae from'./commentsrepository';import _0x12b80b from'./commentsediting';import _0xc07fa8 from'../annotations/editorannotations';import _0x48de55 from'@ckeditor/ckeditor5-ui/src/button/buttonview';import _0x1d477b from'../../theme/icons/add-comment.svg';export default class e extends _0x26558c{static get['pluginName'](){return'CommentsUI';}static get['requires'](){return[_0x45baba,_0x559dae,_0x12b80b,_0xc07fa8];}['init'](){const _0x2cb861=this['editor'],_0x524ca8=_0x2cb861['plugins']['get']('CommentsRepository'),_0x26d735=_0x2cb861['plugins']['get']('CommentsEditing'),_0x2d55dc=_0x2cb861['plugins']['get']('Annotations'),_0x52b934=_0x2cb861['plugins']['get']('EditorAnnotations');_0x2cb861['ui']['componentFactory']['add']('comment',()=>this['_createUIButton']()),_0x52b934['addSourceCollector'](()=>{const _0x2258e2=[];for(const [_0x451332,_0x32bf16]of _0x524ca8['_threadToController']){const _0xa9d295=_0x26d735['getAllMarkersForId'](_0x451332['id']),_0x4f479b=_0xa9d295['map'](_0x35b9cd=>_0x35b9cd['getRange']());_0xa9d295['length']>0x0&&_0x2258e2['push']([_0x32bf16['view'],_0x4f479b]);}return _0x2258e2;}),this['listenTo'](_0x2d55dc,'change:activeView',(_0x4074a4,_0x358885,_0x5dfcc1)=>{if(!_0x524ca8['_viewToController']['has'](_0x5dfcc1))return void(_0x26d735['activeMarker']=null);const _0x1604c4=_0x524ca8['_viewToController']['get'](_0x5dfcc1)['model']['id'],_0x216159='comment:'+_0x1604c4;_0x26d735['hasMarkerForId'](_0x1604c4)&&_0x26d735['activeMarker']!=_0x216159?_0x26d735['activeMarker']=_0x216159:_0x26d735['activeMarker']&&(_0x26d735['activeMarker']=null);}),this['listenTo'](_0x524ca8,'removeCommentThread',(_0x34c5fa,{threadId:_0x179a81,isFromAdapter:_0x2f2e5b})=>{!_0x2f2e5b&&_0x2cb861['ui']['focusTracker']['isFocused']&&_0x26d735['hasMarkerForId'](_0x179a81)&&_0x2cb861['editing']['view']['focus']();},{'priority':'highest'}),this['listenTo'](_0x524ca8,'addComment',(_0x22add3,{threadId:_0x3a831c,isFromAdapter:_0x3c3237})=>{if(_0x3c3237||!_0x26d735['hasMarkerForId'](_0x3a831c)||!_0x524ca8['hasCommentThread'](_0x3a831c))return;0x1===_0x524ca8['getCommentThread'](_0x3a831c)['length']&&(_0x2cb861['editing']['view']['focus'](),_0x22add3['stop']());},{'priority':'low'});}['_createUIButton'](){const _0x36bed3=this['editor'],_0x2b723c=new _0x48de55(_0x36bed3['locale']),_0xd3b13e=_0x36bed3['commands']['get']('addCommentThread'),{t:t}=this['editor']['locale'];return _0x2b723c['label']=t('Comment'),_0x2b723c['tooltip']=t('Comment'),_0x2b723c['icon']=_0x1d477b,_0x2b723c['bind']('isEnabled')['to'](_0xd3b13e),this['listenTo'](_0x2b723c,'execute',()=>_0xd3b13e['execute']()),_0x2b723c;}}","export default \"<!--\\n\\n What you're currently looking at is the source code of a legally protected, proprietary software.\\n CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,\\n all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.\\n\\n Copyright (c) 2003-2019, CKSource Frederico Knabben. All rights reserved.\\n\\n!-->\\n\\n<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 9.41c0 3.54 3.24 6.42 7.23 6.42 1.03 0 2.02-.19 2.95-.56 1.65.93 1.79.98 3.62 1.63.3.11.57.13.61.05.04-.08.02-.43-.08-.75-.48-1.63-.87-1.77-1.01-3.32a5.87 5.87 0 0 0 1.15-3.47C16.97 5.88 13.72 3 9.73 3S2.5 5.88 2.5 9.41zm9.64 0c0-.52.44-.95.97-.95s.96.43.96.95c0 .53-.43.95-.96.95a.96.96 0 0 1-.97-.95zm-3.37 0c0-.52.43-.95.96-.95.54 0 .97.43.97.95 0 .53-.43.95-.97.95a.96.96 0 0 1-.96-.95zm-3.38 0c0-.52.44-.95.97-.95s.96.43.96.95c0 .53-.43.95-.96.95a.96.96 0 0 1-.97-.95z\\\"/></svg>\\n\";","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x4994=['delete','stop','isEnabled','has','view','stopListening','commands','editor','pluginName','forceDisabled','change:isEnabled','_allowedCommands','_disableCommentsOnlyMode','commentsOnly','editing','set','listenTo','commentsOnlyMode','config','requires','selectAll','highest','_enableCommentsOnlyMode','clipboardInput','get','clearForceDisabled','document'];(function(_0x42ea8b,_0x49941e){const _0x12e253=function(_0x4c7ae2){while(--_0x4c7ae2){_0x42ea8b['push'](_0x42ea8b['shift']());}};_0x12e253(++_0x49941e);}(_0x4994,0x75));const _0x12e2=function(_0x42ea8b,_0x49941e){_0x42ea8b=_0x42ea8b-0x0;let _0x12e253=_0x4994[_0x42ea8b];return _0x12e253;};import _0x52ac5c from'@ckeditor/ckeditor5-core/src/plugin';import _0x5c6c48 from'./comments/commentsediting';export default class i extends _0x52ac5c{static get[_0x12e2('0x1a')](){return'CommentsOnly';}static get[_0x12e2('0xa')](){return[_0x5c6c48];}constructor(_0x1acbca){super(_0x1acbca),this[_0x12e2('0x6')](_0x12e2('0x14'),null),this['on'](_0x12e2('0x1'),(_0xb7029e,_0x1914c5,_0x185a65)=>{_0x185a65?this[_0x12e2('0xd')]():this[_0x12e2('0x3')]();}),this[_0x12e2('0x2')]=new Set(['addCommentThread',_0x12e2('0xb'),'exportPdf']);}['afterInit'](){null===this['isEnabled']&&(this['isEnabled']=!!this[_0x12e2('0x19')][_0x12e2('0x9')][_0x12e2('0xf')](_0x12e2('0x4')));}[_0x12e2('0xd')](){for(const [_0x10183d,_0x2f22d5]of this['editor']['commands'])this[_0x12e2('0x2')][_0x12e2('0x15')](_0x10183d)||_0x2f22d5[_0x12e2('0x0')](_0x12e2('0x8'));const _0x35d0e6=this[_0x12e2('0x19')][_0x12e2('0x5')][_0x12e2('0x16')]['document'];this['listenTo'](_0x35d0e6,'cut',_0x53a970=>_0x53a970[_0x12e2('0x13')](),{'priority':_0x12e2('0xc')}),this[_0x12e2('0x7')](_0x35d0e6,_0x12e2('0xe'),_0x2d5caa=>_0x2d5caa['stop'](),{'priority':_0x12e2('0xc')}),this[_0x12e2('0x7')](_0x35d0e6,_0x12e2('0x12'),_0x18cf1b=>_0x18cf1b[_0x12e2('0x13')](),{'priority':_0x12e2('0xc')});}[_0x12e2('0x3')](){for(const [_0x1e3119,_0x18768f]of this[_0x12e2('0x19')][_0x12e2('0x18')])this[_0x12e2('0x2')]['has'](_0x1e3119)||_0x18768f[_0x12e2('0x10')](_0x12e2('0x8'));this[_0x12e2('0x17')](this['editor'][_0x12e2('0x5')][_0x12e2('0x16')][_0x12e2('0x11')]);}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x16f1=['createCollection','class','minHeight','bindTemplate','list','set','ck-sidebar'];(function(_0x474a0a,_0x16f1df){const _0x1520c7=function(_0x470e47){while(--_0x470e47){_0x474a0a['push'](_0x474a0a['shift']());}};_0x1520c7(++_0x16f1df);}(_0x16f1,0x18f));const _0x1520=function(_0x474a0a,_0x16f1df){_0x474a0a=_0x474a0a-0x0;let _0x1520c7=_0x16f1[_0x474a0a];return _0x1520c7;};import _0x1b3c9a from'@ckeditor/ckeditor5-ui/src/view';import _0x179305 from'@ckeditor/ckeditor5-utils/src/dom/tounit';import'../../../theme/sidebar.css';const tt=_0x179305('px');export default class I extends _0x1b3c9a{constructor(_0x4c70aa){super(_0x4c70aa);const _0x3e5aad=this[_0x1520('0x3')];this[_0x1520('0x5')](_0x1520('0x2'),0x0),this[_0x1520('0x5')](_0x1520('0x1'),''),this[_0x1520('0x4')]=this[_0x1520('0x0')](),this['setTemplate']({'tag':'div','attributes':{'class':['ck',_0x1520('0x6'),'ck-reset',_0x3e5aad['to'](_0x1520('0x1'))],'style':{'minHeight':_0x3e5aad['to']('minHeight',_0x3d2c5d=>_0x3d2c5d?tt(_0x3d2c5d+0xa):null)}},'children':this[_0x1520('0x4')]});}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x4552=['detach','render','destroy','set','updateHeight','top','ck-sidebar-item--no-animation','bindTemplate','bottom','attach','setTemplate','content','element','clear','bind','ck-sidebar-item','height','div','isAnimationDisabled'];(function(_0x210cae,_0x455204){const _0x3e4b54=function(_0x484429){while(--_0x484429){_0x210cae['push'](_0x210cae['shift']());}};_0x3e4b54(++_0x455204);}(_0x4552,0xee));const _0x3e4b=function(_0x210cae,_0x455204){_0x210cae=_0x210cae-0x0;let _0x3e4b54=_0x4552[_0x210cae];return _0x3e4b54;};import _0x3dce53 from'@ckeditor/ckeditor5-ui/src/view';import _0x4a26d7 from'@ckeditor/ckeditor5-utils/src/dom/tounit';import _0x43dc0a from'../../utils/createmutationobserver';const tt=_0x4a26d7('px');export default class T extends _0x3dce53{constructor(_0x1544ef){super(_0x1544ef),this[_0x3e4b('0xc')](_0x3e4b('0xe')),this[_0x3e4b('0xc')](_0x3e4b('0x6'),0x0),this[_0x3e4b('0x4')](_0x3e4b('0x11'))['to'](this,_0x3e4b('0xe'),this,_0x3e4b('0x6'),(_0x103ee3,_0xfc1b7c)=>(_0x103ee3||0x0)+_0xfc1b7c),this[_0x3e4b('0xc')](_0x3e4b('0x8'),!0x1),this['_mutationObserver']=_0x43dc0a(()=>this[_0x3e4b('0xd')]()),this['_targetTop']=null,this[_0x3e4b('0x1')]=this['createCollection']();const _0x155400=this[_0x3e4b('0x10')];this[_0x3e4b('0x0')]({'tag':_0x3e4b('0x7'),'attributes':{'class':[_0x3e4b('0x5'),_0x155400['to'](_0x3e4b('0x8'),_0x3a615e=>_0x3a615e?_0x3e4b('0xf'):'')],'style':{'top':_0x155400['to']('top',tt)}},'children':this[_0x3e4b('0x1')]});}[_0x3e4b('0xa')](){super['render'](),this['_mutationObserver'][_0x3e4b('0x12')](this[_0x3e4b('0x2')]);}[_0x3e4b('0xd')](){const _0x3963da=this['element']['clientHeight'];_0x3963da&&(this[_0x3e4b('0x6')]=_0x3963da);}[_0x3e4b('0xb')](){this[_0x3e4b('0x1')][_0x3e4b('0x3')](),this['_mutationObserver'][_0x3e4b('0x9')](),super[_0x3e4b('0xb')]();}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x5ea4=['getSidebarItemView','element','minHeight','_lastItem','customView','change:bottom','bind','getTarget','context','last','_targetTop','plugins','_attachToContainer','_updateAnnotationTargetRect','_destroySidebarItemView','get','_annotations','requires','_sidebarItemViewToAnnotationView','content','_updateLastItem','sidebar-setcontainer-invalid-element','sidebar.preventScrollOutOfView','getIndex','change:_lastItem','define','remove','_detachFromContainer','listenTo','locale','_getItemBefore','top','_getItemAfter','_alignBeforeItem','_getMaxAvailableTop','addView','set','max','getAnnotationView','clear','_setItemTop','activeView','init','_getTargetTop','pluginName','updateHeight','_alignToTargetRect','view','change:targetRect','config','render','container','class','length','delete','height','_alignAfterItem','destroy','sidebar-attachtocontainer-missing-container','stopListening','add','change:activeView','_createSidebarView','_annotationViewToSidebarItemView','items','appendChild','_spaceBetweenItems','Annotations','setContainer','Sidebar','bottom'];(function(_0x32efdf,_0x5ea448){const _0x1497aa=function(_0x44a26f){while(--_0x44a26f){_0x32efdf['push'](_0x32efdf['shift']());}};_0x1497aa(++_0x5ea448);}(_0x5ea4,0x13a));const _0x1497=function(_0x32efdf,_0x5ea448){_0x32efdf=_0x32efdf-0x0;let _0x1497aa=_0x5ea4[_0x32efdf];return _0x1497aa;};import _0x456244 from'@ckeditor/ckeditor5-core/src/contextplugin';import _0x59318a from'./view/sidebarview';import _0x19ceda from'./view/sidebaritemview';import _0x579493 from'../annotations/annotations';import _0x16ce0b from'@ckeditor/ckeditor5-utils/src/dom/rect';import{isElement as _0x4fc453,throttle as _0x428a0b}from'lodash-es';import _0x1f39b2 from'@ckeditor/ckeditor5-utils/src/ckeditorerror';export default class x extends _0x456244{static get[_0x1497('0x3a')](){return[_0x579493];}static get[_0x1497('0xe')](){return _0x1497('0x27');}constructor(_0x1f355f){super(_0x1f355f),this[_0x1497('0x6')](_0x1497('0x2c')),this['view']=this[_0x1497('0x20')](),this[_0x1497('0x6')]('container',null),this[_0x1497('0x24')]=0x19,this[_0x1497('0x3b')]=new Map(),this[_0x1497('0x21')]=new Map(),this[_0x1497('0x31')][_0x1497('0x13')][_0x1497('0x42')]('sidebar.preventScrollOutOfView',!0x1);}[_0x1497('0xc')](){this['_annotations']=this[_0x1497('0x31')][_0x1497('0x34')]['get'](_0x1497('0x25'));const _0x573576=this['context']['config'][_0x1497('0x38')]('sidebar.container');_0x573576&&this[_0x1497('0x26')](_0x573576);}[_0x1497('0x26')](_0x1b37dd){if(!_0x4fc453(_0x1b37dd))throw new _0x1f39b2(_0x1497('0x3e'));this['container']=_0x1b37dd;}[_0x1497('0x35')]({viewClass:_0x1a70db='',spaceBetweenItems:_0x32b810=0x19}={}){const _0x3a8cfe=this[_0x1497('0x31')][_0x1497('0x34')][_0x1497('0x38')](_0x579493);if(!_0x4fc453(this[_0x1497('0x15')]))throw new _0x1f39b2(_0x1497('0x1c'),this);this[_0x1497('0x15')][_0x1497('0x23')](this['view'][_0x1497('0x2a')]),this[_0x1497('0x11')][_0x1497('0x16')]=_0x1a70db,this[_0x1497('0x24')]=_0x32b810,this[_0x1497('0x45')](_0x3a8cfe,_0x1497('0x1f'),(_0x386797,_0x1264bb,_0x49cb7a)=>{if(_0x49cb7a){const _0x2b8d3d=_0x3a8cfe[_0x1497('0x8')](_0x49cb7a),_0x178033=this[_0x1497('0x29')](_0x2b8d3d);_0x178033&&this[_0x1497('0x10')](_0x178033);}}),this[_0x1497('0x45')](_0x3a8cfe[_0x1497('0x22')],_0x1497('0x43'),(_0x5d1a93,_0x37559c,_0x1bc584)=>{this[_0x1497('0x37')](_0x37559c);const _0x42e1f4=this[_0x1497('0x39')][_0x1497('0x22')][_0x1497('0x38')](_0x1bc584-0x1),_0x4fcb2e=this['_annotations'][_0x1497('0x22')][_0x1497('0x38')](_0x1bc584);_0x42e1f4&&this[_0x1497('0x10')](this[_0x1497('0x29')](_0x42e1f4)),_0x4fcb2e&&this[_0x1497('0x10')](this[_0x1497('0x29')](_0x4fcb2e)),this['_updateLastItem']();}),_0x3a8cfe['refresh']();}[_0x1497('0x44')](){const _0x1a519b=this[_0x1497('0x39')];this['stopListening'](),this['view'][_0x1497('0x2a')][_0x1497('0x43')]();for(const _0x23e991 of _0x1a519b['items'])this[_0x1497('0x37')](_0x23e991);this[_0x1497('0x11')]['list'][_0x1497('0x9')](),this[_0x1497('0x11')][_0x1497('0x16')]='',this[_0x1497('0x2c')]=null;}[_0x1497('0x5')](_0x22c2df,_0x3d8400){_0x3d8400||(_0x3d8400=_0x22c2df);const _0x5de7f3=this['_annotations'],_0x4b049d=new _0x19ceda(this[_0x1497('0x31')]['locale']);this[_0x1497('0x3b')]['set'](_0x4b049d,_0x22c2df),this[_0x1497('0x21')][_0x1497('0x6')](_0x22c2df,_0x4b049d),_0x4b049d[_0x1497('0x3c')][_0x1497('0x1e')](_0x3d8400),this[_0x1497('0x10')](_0x4b049d),this[_0x1497('0x45')](_0x22c2df,_0x1497('0x12'),()=>{const _0x5770e3=this[_0x1497('0xd')](_0x4b049d);_0x4b049d[_0x1497('0x33')]!=_0x5770e3&&(_0x4b049d[_0x1497('0x33')]=_0x5770e3,this[_0x1497('0xa')](_0x4b049d,_0x5770e3));}),this[_0x1497('0x45')](_0x4b049d,'change:top',_0x428a0b(()=>{if(!_0x4b049d[_0x1497('0x3c')][_0x1497('0x17')])return;const _0x131e75=this['_getItemBefore'](_0x4b049d);if(!_0x131e75)return;const _0x8055fe=this[_0x1497('0x3b')][_0x1497('0x38')](_0x131e75);_0x5de7f3[_0x1497('0xb')]===_0x8055fe[_0x1497('0x2d')]?this[_0x1497('0x1a')](_0x131e75,_0x4b049d):this[_0x1497('0x3')](_0x4b049d,_0x131e75);},0xa,{'leading':!0x1})),this['listenTo'](_0x4b049d,_0x1497('0x2e'),_0x428a0b(()=>{if(!_0x4b049d[_0x1497('0x3c')][_0x1497('0x17')])return;const _0x3692a2=this[_0x1497('0x2')](_0x4b049d);if(!_0x3692a2)return;const _0x5c9ffc=this['_sidebarItemViewToAnnotationView'][_0x1497('0x38')](_0x3692a2),_0x1230e8=this[_0x1497('0x31')][_0x1497('0x13')][_0x1497('0x38')](_0x1497('0x3f'));_0x5de7f3[_0x1497('0xb')]===_0x5c9ffc[_0x1497('0x2d')]&&_0x1230e8?(this[_0x1497('0x3')](_0x3692a2,_0x4b049d),this[_0x1497('0x1a')](_0x4b049d,_0x3692a2)):_0x5de7f3['activeView']===_0x5c9ffc[_0x1497('0x2d')]?this[_0x1497('0x3')](_0x3692a2,_0x4b049d):this[_0x1497('0x1a')](_0x4b049d,_0x3692a2);},0xa,{'leading':!0x1}));const _0x7fe914=this[_0x1497('0x0')](_0x4b049d);if(_0x7fe914)this['_alignAfterItem'](_0x7fe914,_0x4b049d)||this[_0x1497('0x10')](_0x4b049d);else this['_alignToTargetRect'](_0x4b049d);return this[_0x1497('0x3d')](),_0x4b049d;}[_0x1497('0x29')](_0x3b13ba){return this[_0x1497('0x21')][_0x1497('0x38')](_0x3b13ba);}[_0x1497('0x1b')](){this[_0x1497('0x11')]['destroy']();}[_0x1497('0x37')](_0x1b6af9){const _0x2e9b78=this[_0x1497('0x29')](_0x1b6af9);this[_0x1497('0x1d')](_0x2e9b78),this['stopListening'](_0x1b6af9),_0x2e9b78[_0x1497('0x1b')](),this['_annotationViewToSidebarItemView'][_0x1497('0x18')](_0x1b6af9),this[_0x1497('0x3b')][_0x1497('0x18')](_0x2e9b78);}['_createSidebarView'](){const _0x688463=new _0x59318a(this[_0x1497('0x31')][_0x1497('0x46')]);return _0x688463[_0x1497('0x14')](),this['on'](_0x1497('0x41'),(_0x2a1f7c,_0x117040,_0x3b7d3d,_0x10ad95)=>{_0x10ad95&&_0x688463['unbind'](_0x1497('0x2b')),_0x3b7d3d?_0x688463[_0x1497('0x2f')](_0x1497('0x2b'))['to'](_0x3b7d3d,_0x1497('0x28')):_0x688463[_0x1497('0x2b')]=null;}),_0x688463;}[_0x1497('0x3d')](){this[_0x1497('0x2c')]=this[_0x1497('0x29')](this['_annotations'][_0x1497('0x22')][_0x1497('0x32')]);}['_getItemBefore'](_0x4f39d7){const _0xcde324=this[_0x1497('0x39')][_0x1497('0x22')],_0x6aa7f5=this[_0x1497('0x3b')][_0x1497('0x38')](_0x4f39d7),_0x355fdb=_0xcde324[_0x1497('0x38')](_0xcde324[_0x1497('0x40')](_0x6aa7f5)-0x1);return this[_0x1497('0x29')](_0x355fdb);}[_0x1497('0x2')](_0x100401){const _0x13a487=this[_0x1497('0x39')][_0x1497('0x22')],_0x587fae=this['_sidebarItemViewToAnnotationView']['get'](_0x100401),_0x14b6d4=_0x13a487[_0x1497('0x38')](_0x13a487['getIndex'](_0x587fae)+0x1);return this[_0x1497('0x29')](_0x14b6d4);}['_alignBeforeItem'](_0x38fa79,_0x126506){_0x38fa79[_0x1497('0xf')]();const _0x3b0541=O(_0x126506[_0x1497('0x28')]+this[_0x1497('0x24')],_0x38fa79[_0x1497('0x1')]);return!!_0x3b0541&&(this[_0x1497('0xa')](_0x126506,_0x126506[_0x1497('0x1')]-_0x3b0541),!0x0);}[_0x1497('0x1a')](_0x4b5cb8,_0x1607b9){_0x4b5cb8['updateHeight']();const _0x5c3d13=O(_0x4b5cb8[_0x1497('0x28')]+this[_0x1497('0x24')],_0x1607b9[_0x1497('0x1')]);return!!_0x5c3d13&&(this[_0x1497('0xa')](_0x1607b9,_0x1607b9['top']+_0x5c3d13,!0x1),!0x0);}[_0x1497('0x10')](_0x3760d4){const _0x3e16dc=this[_0x1497('0x31')][_0x1497('0x34')][_0x1497('0x38')](_0x579493),_0x174e12=this['_sidebarItemViewToAnnotationView']['get'](_0x3760d4);_0x3e16dc[_0x1497('0x36')](_0x174e12);const _0x3ac682=this[_0x1497('0xd')](_0x3760d4);this[_0x1497('0xa')](_0x3760d4,_0x3ac682);}['_getTargetTop'](_0x271dad){const _0x17090c=this[_0x1497('0x31')][_0x1497('0x34')][_0x1497('0x38')](_0x579493),_0x57737f=this['_sidebarItemViewToAnnotationView'][_0x1497('0x38')](_0x271dad),_0x5891f3=_0x17090c[_0x1497('0x30')](_0x57737f[_0x1497('0x2d')]),_0x5194f2=_0x57737f['targetRect'];if(_0x5891f3 instanceof _0x16ce0b)return _0x5194f2[_0x1497('0x1')];{const {top:_0xf1cf42}=new _0x16ce0b(this[_0x1497('0x11')][_0x1497('0x2a')]);return _0x5194f2[_0x1497('0x1')]-_0xf1cf42;}}[_0x1497('0xa')](_0x41a96a,_0x1eceb1,_0x445dbe=this[_0x1497('0x31')]['config']['get']('sidebar.preventScrollOutOfView')){_0x445dbe&&(_0x1eceb1=Math[_0x1497('0x7')](_0x1eceb1,this[_0x1497('0x4')](_0x41a96a))),_0x41a96a['top']=_0x1eceb1;}['_getMaxAvailableTop'](_0x2450dc){let _0x4f06e9=this[_0x1497('0x0')](_0x2450dc),_0x1ad7a1=0x0;for(;_0x4f06e9;)_0x4f06e9['updateHeight'](),_0x1ad7a1+=this[_0x1497('0x24')]+_0x4f06e9[_0x1497('0x19')],_0x4f06e9=this[_0x1497('0x0')](_0x4f06e9);return _0x1ad7a1;}}function O(_0x3bea67,_0x56d005){return Math[_0x1497('0x7')](_0x3bea67-_0x56d005,0x0);}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x20ee=['using','plugins','_detachFromContainer','_attachToContainer','destroy','get','addView','Sidebar','set:container','bindTo','WideSidebar','off','detach','Annotations','attach','register','ck-sidebar--wide','isAttached','change:container','items','pluginName','view','wideSidebar','stopListening','list','listenTo','widesidebar-detach-not-attached','context'];(function(_0x5709d4,_0x20eedb){const _0x536e48=function(_0x3cbb63){while(--_0x3cbb63){_0x5709d4['push'](_0x5709d4['shift']());}};_0x536e48(++_0x20eedb);}(_0x20ee,0x1d1));const _0x536e=function(_0x5709d4,_0x20eedb){_0x5709d4=_0x5709d4-0x0;let _0x536e48=_0x20ee[_0x5709d4];return _0x536e48;};import _0x56c15e from'@ckeditor/ckeditor5-core/src/contextplugin';import _0x15c529 from'../annotations/annotations';import _0x407622 from'./sidebar';import _0x24f84c from'@ckeditor/ckeditor5-utils/src/ckeditorerror';export default class n extends _0x56c15e{static get['requires'](){return[_0x407622,_0x15c529];}static get[_0x536e('0x3')](){return _0x536e('0x15');}constructor(_0x2c3b12){super(_0x2c3b12),this[_0x536e('0x0')]=!0x1;}['init'](){const _0x33f241=this[_0x536e('0xa')][_0x536e('0xc')][_0x536e('0x10')]('Annotations'),_0xf162ab=this[_0x536e('0xa')][_0x536e('0xc')]['get']('Sidebar');_0x33f241[_0x536e('0x1a')](_0x536e('0x5'),this),_0xf162ab['container']&&_0x33f241['switchTo']('wideSidebar');}['attach'](){const _0x45e9c9=this['context'][_0x536e('0xc')][_0x536e('0x10')]('Sidebar'),_0xa5774a=this['context'][_0x536e('0xc')][_0x536e('0x10')](_0x536e('0x18'));if(this['isAttached'])throw new _0x24f84c('widesidebar-attach-already-attached',this);this[_0x536e('0x0')]=!0x0,this[_0x536e('0x8')](_0x45e9c9,_0x536e('0x13'),()=>{this[_0x536e('0x17')](),this[_0x536e('0x8')](_0x45e9c9,_0x536e('0x1'),_0x5d909e=>{_0x5d909e[_0x536e('0x16')](),this[_0x536e('0x19')]();});}),_0x45e9c9[_0x536e('0xe')]({'viewClass':_0x536e('0x1b')}),_0x45e9c9[_0x536e('0x4')][_0x536e('0x7')][_0x536e('0x14')](_0xa5774a[_0x536e('0x2')])[_0x536e('0xb')](_0x41f5b1=>_0x45e9c9[_0x536e('0x11')](_0x41f5b1));}['detach'](){if(!this[_0x536e('0x0')])throw new _0x24f84c(_0x536e('0x9'),this);this[_0x536e('0xa')][_0x536e('0xc')][_0x536e('0x10')](_0x536e('0x12'))[_0x536e('0xd')](),this[_0x536e('0x6')](),this[_0x536e('0x0')]=!0x1;}[_0x536e('0xf')](){this['isAttached']&&this['detach']();}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x999c=['isDirty','...','bind','set','counterView','_badge','extendTemplate','setTemplate','icon','span','ck-annotation-counter__badge--edit-mode','add','bindTemplate','ck-annotation-counter__badge','ck-annotation-counter__badge--','annotationType','number'];(function(_0x115e7c,_0x999c63){const _0x4ac14a=function(_0x33877c){while(--_0x33877c){_0x115e7c['push'](_0x115e7c['shift']());}};_0x4ac14a(++_0x999c63);}(_0x999c,0xad));const _0x4ac1=function(_0x115e7c,_0x999c63){_0x115e7c=_0x115e7c-0x0;let _0x4ac14a=_0x999c[_0x115e7c];return _0x4ac14a;};import _0x5ad931 from'@ckeditor/ckeditor5-ui/src/button/buttonview';import _0x4bd9f5 from'@ckeditor/ckeditor5-ui/src/view';import _0x1cd014 from'../../../theme/icons/add-comment-inverted.svg';export default class _ extends _0x5ad931{constructor(_0x2ced71){super(_0x2ced71);const _0x33578b=this[_0x4ac1('0x9')];this[_0x4ac1('0x0')](_0x4ac1('0xe'),!0x1),this[_0x4ac1('0x0')](_0x4ac1('0xd'),0x0),this[_0x4ac1('0x10')](_0x4ac1('0x2'))['to'](this,_0x4ac1('0xe'),this,'number',(_0x24ab1a,_0x2db4bd)=>_0x24ab1a?_0x4ac1('0xf'):_0x2db4bd),this['set'](_0x4ac1('0xc'),''),this[_0x4ac1('0x5')]=_0x1cd014,this[_0x4ac1('0x3')]({'attributes':{'class':['ck-annotation-counter']}}),this[_0x4ac1('0x1')]=new _0x4bd9f5(),this[_0x4ac1('0x1')][_0x4ac1('0x4')]({'tag':_0x4ac1('0x6'),'attributes':{'class':[_0x4ac1('0xa'),_0x33578b['to'](_0x4ac1('0xc'),_0x4e41c4=>_0x4ac1('0xb')+_0x4e41c4),_0x33578b['if'](_0x4ac1('0xe'),_0x4ac1('0x7'))]},'children':[{'text':_0x33578b['to'](_0x4ac1('0x2'))}]}),this['children'][_0x4ac1('0x8')](this[_0x4ac1('0x1')]);}}","export default \"<!--\\n\\n What you're currently looking at is the source code of a legally protected, proprietary software.\\n CKEditor 5 Collaboration is licensed under a commercial license and protected by copyright law. Where not otherwise indicated,\\n all CKEditor 5 Collaboration content is authored by CKSource engineers and consists of CKSource-owned intellectual property.\\n\\n Copyright (c) 2003-2019, CKSource Frederico Knabben. All rights reserved.\\n\\n!-->\\n\\n<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12 9.4a1 1 0 0 1 2 0c0 .5-.5 1-1 1a1 1 0 0 1-1-1zM8.7 9.4c0-.5.4-1 1-1 .5 0 .9.5.9 1s-.4 1-1 1a1 1 0 0 1-1-1zM6.3 8.5c.5 0 1 .4 1 1 0 .4-.5.9-1 .9a1 1 0 0 1-1-1c0-.5.4-1 1-1z\\\"/><path d=\\\"M16 17.4c.6.2 1 .2 1.3-.2V16l-.5-1.1-.3-.7-.3-1.3c.8-1 1.2-2.3 1.2-3.6 0-3.8-3.5-6.9-7.8-6.9-4.2 0-7.7 3-7.7 7 0 3.7 3.5 6.8 7.7 6.8 1 0 2-.1 3-.5 1.4.8 1.6 1 3.4 1.6zm-3.2-2.6h-.4c-.9.4-1.8.5-2.8.5C6 15.3 3 12.7 3 9.4c0-3.2 3-5.9 6.7-5.9 3.8 0 6.8 2.7 6.8 6 0 1-.4 2.2-1 3l-.2.2v.2c0 .7.2 1.2.4 1.8l.3.7a10.4 10.4 0 0 1 .4 1c-1.8-.6-2-.7-3.5-1.6z\\\"/></svg>\\n\";","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nconst _0x5612=['change:height','Annotations','NarrowSidebar','isAnimationDisabled','remove','first','get','set','add','locale','isVisible','bind','_updateBalloonPosition','_hideBalloon','narrowsidebar-detach-not-attached','delete','register','activeView','init','plugins','element','content','has','listenTo','stopPropagation','keyCode','items','attachToDom','_manuallyClosed','unpin','context','detachFromDom','detach','change:selectedViews','from','bindTo','getAnnotationView','_attachToContainer','focus','off','getSidebarItemView','list','balloonPanelView','Esc','customView','target','change:activeView','high','pin','set:container','contains','using','stopListening','_detachFromContainer','isAttached','narrowSidebar','requires','type','_detachListeners','southArrowNorthEast','northArrowSouth','change:container','esc','_attachListeners','mousedown','number','_showBalloon','clear','bodyCollection','Sidebar','create','destroy','attach','northArrowSouthWest','view','_annotationViewToNarrowView','_domEmitter'];(function(_0x1a9bdc,_0x561202){const _0xa88965=function(_0x2ce9bb){while(--_0x2ce9bb){_0x1a9bdc['push'](_0x1a9bdc['shift']());}};_0xa88965(++_0x561202);}(_0x5612,0x6a));const _0xa889=function(_0x1a9bdc,_0x561202){_0x1a9bdc=_0x1a9bdc-0x0;let _0xa88965=_0x5612[_0x1a9bdc];return _0xa88965;};import _0x3dfc50 from'@ckeditor/ckeditor5-core/src/contextplugin';import _0x4a1180 from'./annotations';import _0x44a462 from'./sidebar';import _0x340651 from'./view/annotationcounterbuttonview';import _0x332c84 from'@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';import _0x596fcc from'@ckeditor/ckeditor5-ui/src/editorui/bodycollection';import _0x12c76e from'@ckeditor/ckeditor5-utils/src/ckeditorerror';import _0x585544 from'@ckeditor/ckeditor5-utils/src/dom/emittermixin';import{keyCodes as _0x1db683}from'@ckeditor/ckeditor5-utils/src/keyboard';import'../../theme/sidebar-narrow.css';export default class s extends _0x3dfc50{static get[_0xa889('0x1b')](){return[_0x44a462,_0x4a1180];}static get['pluginName'](){return _0xa889('0x32');}constructor(_0x2a1d0b){super(_0x2a1d0b),this[_0xa889('0x19')]=!0x1,this[_0xa889('0x4c')]=new Set(),this[_0xa889('0x2f')]=Object[_0xa889('0x29')](_0x585544),this[_0xa889('0x2e')]=new Map();}[_0xa889('0x42')](){this[_0xa889('0x1')][_0xa889('0x43')]['get'](_0xa889('0x31'))[_0xa889('0x40')](_0xa889('0x1a'),this),this[_0xa889('0x27')]=new _0x596fcc(this[_0xa889('0x1')][_0xa889('0x39')]),this[_0xa889('0x27')][_0xa889('0x4b')](),this[_0xa889('0xd')]=new _0x332c84(this[_0xa889('0x1')][_0xa889('0x39')]),this[_0xa889('0x27')][_0xa889('0x38')](this[_0xa889('0xd')]);}[_0xa889('0x2b')](){const _0x15680c=this[_0xa889('0x1')][_0xa889('0x43')][_0xa889('0x36')](_0xa889('0x28')),_0x287216=this[_0xa889('0x1')]['plugins'][_0xa889('0x36')](_0xa889('0x31')),_0x1bbb6f=this[_0xa889('0xd')];if(this[_0xa889('0x19')])throw new _0x12c76e('narrowsidebar-attach-already-attached',this);this[_0xa889('0x19')]=!0x0,this[_0xa889('0x47')](_0x15680c,_0xa889('0x14'),()=>{this[_0xa889('0x3')](),this[_0xa889('0x47')](_0x15680c,_0xa889('0x20'),_0x1a00d1=>{_0x1a00d1[_0xa889('0xa')](),this['attach']();});}),_0x15680c[_0xa889('0x8')]({'viewClass':'ck-sidebar--narrow','spaceBetweenItems':0x5}),_0x15680c[_0xa889('0x2d')][_0xa889('0xc')][_0xa889('0x6')](_0x287216[_0xa889('0x4a')])[_0xa889('0x16')](_0x1b2b8e=>{const _0x2cadbd=new _0x340651(this[_0xa889('0x1')][_0xa889('0x39')]),_0x24d944=_0x15680c['addView'](_0x1b2b8e,_0x2cadbd);return this[_0xa889('0x2e')][_0xa889('0x37')](_0x1b2b8e,_0x2cadbd),_0x2cadbd[_0xa889('0x3b')]('isDirty','annotationType',_0xa889('0x24'))['to'](_0x1b2b8e,'isDirty',_0xa889('0x1c'),'length'),_0x2cadbd['on']('execute',()=>{this[_0xa889('0x4c')][_0xa889('0x26')](),_0x1bbb6f[_0xa889('0x45')][_0xa889('0x35')]!==_0x1b2b8e?(this[_0xa889('0x25')](_0x1b2b8e),_0x1b2b8e[_0xa889('0x44')][_0xa889('0x9')](),_0x287216[_0xa889('0x41')]=_0x1b2b8e[_0xa889('0xf')]):this[_0xa889('0x3d')]();}),_0x24d944;}),this[_0xa889('0x47')](_0x287216[_0xa889('0x4a')],_0xa889('0x34'),(_0x2f29ba,_0x40f683)=>{this[_0xa889('0x2e')][_0xa889('0x36')](_0x40f683)['destroy'](),this[_0xa889('0x2e')][_0xa889('0x3f')](_0x40f683);}),this[_0xa889('0x47')](_0x287216,_0xa889('0x11'),(_0x2ff737,_0x27f827,_0xe5cfa2,_0x17c756)=>{if(_0x17c756){const _0x1f50e1=_0x287216[_0xa889('0x7')](_0x17c756);if(!_0x1f50e1)return;_0x15680c[_0xa889('0xb')](_0x1f50e1)['isAnimationDisabled']=!0x1;}if(_0xe5cfa2){const _0x2ee39c=_0x287216[_0xa889('0x7')](_0xe5cfa2);_0x15680c[_0xa889('0xb')](_0x2ee39c)[_0xa889('0x33')]=!0x0;}},{'priority':_0xa889('0x12')}),this[_0xa889('0x47')](_0x287216,_0xa889('0x11'),(_0x24add0,_0x4fb324,_0x557cee)=>{const _0x313c86=_0x287216['getAnnotationView'](_0x557cee),_0x18afbb=_0x15680c[_0xa889('0xb')](_0x313c86);_0x557cee&&_0x18afbb?this[_0xa889('0x25')](_0x313c86):this[_0xa889('0x3d')]();}),this['listenTo'](_0x287216,_0xa889('0x4'),(_0xd57ada,_0xba9550,_0x103eaa,_0x34e0bc)=>{for(const _0xe14574 of _0x34e0bc)_0x103eaa['includes'](_0xe14574)||this[_0xa889('0x4c')][_0xa889('0x3f')](_0x287216[_0xa889('0x7')](_0xe14574));}),this[_0xa889('0x47')](_0x287216,'refresh',()=>{_0x1bbb6f['isVisible']&&this['_updateBalloonPosition']();}),this[_0xa889('0x2f')]['listenTo'](document,'keydown',(_0x208c22,_0x26d0b4)=>{_0x26d0b4[_0xa889('0x49')]===_0x1db683[_0xa889('0x21')]&&_0x1bbb6f['isVisible']&&(this[_0xa889('0x4c')][_0xa889('0x38')](_0x1bbb6f[_0xa889('0x45')][_0xa889('0x35')]),this[_0xa889('0x3d')](),_0x26d0b4[_0xa889('0x48')](),_0x26d0b4['preventDefault']());}),this[_0xa889('0x2f')][_0xa889('0x47')](document,_0xa889('0x23'),(_0x563e75,_0x2c43ed)=>{const _0x549069=_0x2c43ed[_0xa889('0x10')];_0x1bbb6f[_0xa889('0x3a')]&&_0x1bbb6f[_0xa889('0x44')][_0xa889('0x15')](_0x549069)||_0x15680c['view'][_0xa889('0x44')][_0xa889('0x15')](_0x549069)||(this[_0xa889('0x4c')][_0xa889('0x26')](),this[_0xa889('0x3d')]());});}['detach'](){if(!this[_0xa889('0x19')])throw new _0x12c76e(_0xa889('0x3e'),this);const _0x57b59d=this[_0xa889('0x1')][_0xa889('0x43')][_0xa889('0x36')]('Sidebar');this[_0xa889('0x3d')](),Array[_0xa889('0x5')](this['_annotationViewToNarrowView']['values'](),_0x42613e=>_0x42613e['destroy']()),this[_0xa889('0x2e')][_0xa889('0x26')](),_0x57b59d[_0xa889('0x18')](),this[_0xa889('0x17')](),this[_0xa889('0x2f')]['stopListening'](),this['isAttached']=!0x1;}[_0xa889('0x2a')](){this[_0xa889('0x19')]&&this['detach'](),this[_0xa889('0x27')][_0xa889('0x2')]();}[_0xa889('0x25')](_0x45d7e2){if(this[_0xa889('0x4c')]['has'](_0x45d7e2))return;const _0x1bb3e6=this[_0xa889('0xd')][_0xa889('0x45')][_0xa889('0x35')];_0x1bb3e6!==_0x45d7e2?(_0x1bb3e6&&this[_0xa889('0x1d')](_0x1bb3e6),this[_0xa889('0x22')](_0x45d7e2),this[_0xa889('0xd')]['content'][_0xa889('0x26')](),this['balloonPanelView'][_0xa889('0x45')][_0xa889('0x38')](_0x45d7e2),this[_0xa889('0x3c')]()):this[_0xa889('0x3c')]();}[_0xa889('0x3c')](){const _0xbb0647=this[_0xa889('0xd')][_0xa889('0x45')]['first'];if(!this[_0xa889('0x2e')][_0xa889('0x46')](_0xbb0647))return;const _0x1e976c=this[_0xa889('0x2e')]['get'](_0xbb0647)[_0xa889('0x44')],_0x417bf8=function(){const _0xaf3f=_0x332c84['defaultPositions'];return[_0xaf3f[_0xa889('0x1e')],_0xaf3f['northArrowSouthEast'],_0xaf3f['southArrowNorth'],_0xaf3f[_0xa889('0x1f')],_0xaf3f['southArrowNorthWest'],_0xaf3f[_0xa889('0x2c')]];}();this[_0xa889('0xd')][_0xa889('0x13')]({'target':_0x1e976c,'positions':_0x417bf8});}[_0xa889('0x3d')](){const _0x837f82=this[_0xa889('0xd')],_0x3e5454=_0x837f82[_0xa889('0x45')]['first'];_0x3e5454&&(this[_0xa889('0x1d')](_0x3e5454),_0x837f82[_0xa889('0x0')](),_0x837f82[_0xa889('0x45')][_0xa889('0x26')]());}[_0xa889('0x22')](_0x5c91bd){this[_0xa889('0x47')](_0x5c91bd,_0xa889('0x30'),()=>this[_0xa889('0x3c')]()),this[_0xa889('0x47')](_0x5c91bd,_0xa889('0xe'),(_0x593194,_0x4fc273)=>{this[_0xa889('0x4c')][_0xa889('0x38')](_0x5c91bd),this[_0xa889('0x3d')](),_0x4fc273();});}['_detachListeners'](_0x430264){this[_0xa889('0x17')](_0x430264);}}","/*\n *             Copyright (c) 2016 - 2020, CKSource - Frederico Knabben. All rights reserved.\n *\n *\n *\n *\n *          +---------------------------------------------------------------------------------+\n *          |                                                                                 |\n *          |                                 Hello stranger!                                 |\n *          |                                                                                 |\n *          |                                                                                 |\n *          |   What you're currently looking at is the source code of a legally protected,   |\n *          |    proprietary software. Any attempts to deobfuscate / disassemble this code    |\n *          |               are forbidden and will result in legal consequences.              |\n *          |                                                                                 |\n *          |                                                                                 |\n *          +---------------------------------------------------------------------------------+\n *\n *\n *\n *\n */\nvar _0x4764=['pluginName'];(function(_0x5ebbe4,_0x476448){var _0x3cb825=function(_0x521448){while(--_0x521448){_0x5ebbe4['push'](_0x5ebbe4['shift']());}};_0x3cb825(++_0x476448);}(_0x4764,0x1f2));var _0x3cb8=function(_0x5ebbe4,_0x476448){_0x5ebbe4=_0x5ebbe4-0x0;var _0x3cb825=_0x4764[_0x5ebbe4];return _0x3cb825;};import _0x279669 from'@ckeditor/ckeditor5-core/src/plugin';import _0x58b7ec from'./comments/commentsrepository';import _0x11b05c from'./comments/commentsediting';import _0x51bd91 from'./comments/commentsui';import _0x468a15 from'./commentsonly';import _0x2b7869 from'./annotations/widesidebar';import _0xd6654b from'./annotations/narrowsidebar';export default class c extends _0x279669{static get['requires'](){return[_0x58b7ec,_0x11b05c,_0x51bd91,_0x468a15,_0x2b7869,_0xd6654b];}static get[_0x3cb8('0x0')](){return'Comments';}}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\nexport default class HeadingCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {Array.<String>} modelElements Names of the element which this command can apply in the model.\n\t */\n\tconstructor( editor, modelElements ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n\t\t * the value is set to the name of that heading model element.\n\t\t * It is  set to `false` otherwise.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean|String} #value\n\t\t */\n\n\t\t/**\n\t\t * Set of defined model's elements names that this command support.\n\t\t * See {@link module:heading/heading~HeadingOption}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>}\n\t\t */\n\t\tthis.modelElements = modelElements;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst block = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && this.modelElements.includes( block.name ) && block.name;\n\t\tthis.isEnabled = !!block && this.modelElements.some( heading => checkCanBecomeHeading( block, heading, this.editor.model.schema ) );\n\t}\n\n\t/**\n\t * Executes the command. Applies the heading to the selected blocks or, if the first selected\n\t * block is a heading already, turns selected headings (of this level only) to paragraphs.\n\t *\n\t * @param {Object} options\n\t * @param {String} options.value Name of the element which this command will apply in the model.\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tconst modelElement = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t\t.filter( block => {\n\t\t\t\t\treturn checkCanBecomeHeading( block, modelElement, model.schema );\n\t\t\t\t} );\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( 'element', modelElement ) ) {\n\t\t\t\t\twriter.rename( block, modelElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeHeading( block, heading, schema ) {\n\treturn schema.checkChild( block.parent, heading ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\n\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\n\nconst defaultModelElement = 'paragraph';\n\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HeadingEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'HeadingEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'heading', {\n\t\t\toptions: [\n\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tconst modelElements = [];\n\n\t\tfor ( const option of options ) {\n\t\t\t// Skip paragraph - it is defined in required Paragraph feature.\n\t\t\tif ( option.model !== defaultModelElement ) {\n\t\t\t\t// Schema.\n\t\t\t\teditor.model.schema.register( option.model, {\n\t\t\t\t\tinheritAllFrom: '$block'\n\t\t\t\t} );\n\n\t\t\t\teditor.conversion.elementToElement( option );\n\n\t\t\t\tmodelElements.push( option.model );\n\t\t\t}\n\t\t}\n\n\t\tthis._addDefaultH1Conversion( editor );\n\n\t\t// Register the heading command for this option.\n\t\teditor.commands.add( 'heading', new HeadingCommand( editor, modelElements ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\t// If the enter command is added to the editor, alter its behavior.\n\t\t// Enter at the end of a heading element should create a paragraph.\n\t\tconst editor = this.editor;\n\t\tconst enterCommand = editor.commands.get( 'enter' );\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tif ( enterCommand ) {\n\t\t\tthis.listenTo( enterCommand, 'afterExecute', ( evt, data ) => {\n\t\t\t\tconst positionParent = editor.model.document.selection.getFirstPosition().parent;\n\t\t\t\tconst isHeading = options.some( option => positionParent.is( 'element', option.model ) );\n\n\t\t\t\tif ( isHeading && !positionParent.is( 'element', defaultModelElement ) && positionParent.childCount === 0 ) {\n\t\t\t\t\tdata.writer.rename( positionParent, defaultModelElement );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Adds default conversion for `h1` -> `heading1` with a low priority.\n\t *\n\t * @private\n\t * @param {module:core/editor/editor~Editor} editor Editor instance on which to add the `h1` conversion.\n\t */\n\t_addDefaultH1Conversion( editor ) {\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: 'heading1',\n\t\t\tview: 'h1',\n\t\t\t// With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n\t\t\t// this listener is called before it. If not, `h1` will be transformed into a paragraph.\n\t\t\tconverterPriority: priorities.get( 'low' ) + 1\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/model\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { extend } from 'lodash-es';\n\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\t/**\n\t * Creates a new Model instance.\n\t *\n\t * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n\t * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n\t */\n\tconstructor( attributes, properties ) {\n\t\t// Extend this instance with the additional (out of state) properties.\n\t\tif ( properties ) {\n\t\t\textend( this, properties );\n\t\t}\n\n\t\t// Initialize the attributes.\n\t\tif ( attributes ) {\n\t\t\tthis.set( attributes );\n\t\t}\n\t}\n}\n\nmix( Model, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\n\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getLocalizedOptions } from './utils';\n\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\nimport '../theme/heading.css';\n\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HeadingUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst options = getLocalizedOptions( editor );\n\t\tconst defaultTitle = t( 'Choose heading' );\n\t\tconst dropdownTooltip = t( 'Heading' );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( 'heading', locale => {\n\t\t\tconst titles = {};\n\t\t\tconst itemDefinitions = new Collection();\n\n\t\t\tconst headingCommand = editor.commands.get( 'heading' );\n\t\t\tconst paragraphCommand = editor.commands.get( 'paragraph' );\n\n\t\t\tconst commands = [ headingCommand ];\n\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst def = {\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: new Model( {\n\t\t\t\t\t\tlabel: option.title,\n\t\t\t\t\t\tclass: option.class,\n\t\t\t\t\t\twithText: true\n\t\t\t\t\t} )\n\t\t\t\t};\n\n\t\t\t\tif ( option.model === 'paragraph' ) {\n\t\t\t\t\tdef.model.bind( 'isOn' ).to( paragraphCommand, 'value' );\n\t\t\t\t\tdef.model.set( 'commandName', 'paragraph' );\n\t\t\t\t\tcommands.push( paragraphCommand );\n\t\t\t\t} else {\n\t\t\t\t\tdef.model.bind( 'isOn' ).to( headingCommand, 'value', value => value === option.model );\n\t\t\t\t\tdef.model.set( {\n\t\t\t\t\t\tcommandName: 'heading',\n\t\t\t\t\t\tcommandValue: option.model\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// Add the option to the collection.\n\t\t\t\titemDefinitions.add( def );\n\n\t\t\t\ttitles[ option.model ] = option.title;\n\t\t\t}\n\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, itemDefinitions );\n\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tisOn: false,\n\t\t\t\twithText: true,\n\t\t\t\ttooltip: dropdownTooltip\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck-heading-dropdown'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => {\n\t\t\t\treturn areEnabled.some( isEnabled => isEnabled );\n\t\t\t} );\n\n\t\t\tdropdownView.buttonView.bind( 'label' ).to( headingCommand, 'value', paragraphCommand, 'value', ( value, para ) => {\n\t\t\t\tconst whichModel = value || para && 'paragraph';\n\t\t\t\t// If none of the commands is active, display default title.\n\t\t\t\treturn titles[ whichModel ] ? titles[ whichModel ] : defaultTitle;\n\t\t\t} );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName, evt.source.commandValue ? { value: evt.source.commandValue } : undefined );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/utils\n */\n\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions( editor ) {\n\tconst t = editor.t;\n\tconst localizedTitles = {\n\t\tParagraph: t( 'Paragraph' ),\n\t\t'Heading 1': t( 'Heading 1' ),\n\t\t'Heading 2': t( 'Heading 2' ),\n\t\t'Heading 3': t( 'Heading 3' ),\n\t\t'Heading 4': t( 'Heading 4' ),\n\t\t'Heading 5': t( 'Heading 5' ),\n\t\t'Heading 6': t( 'Heading 6' )\n\t};\n\n\treturn editor.config.get( 'heading.options' ).map( option => {\n\t\tconst title = localizedTitles[ option.title ];\n\n\t\tif ( title && title != option.title ) {\n\t\t\toption.title = title;\n\t\t}\n\n\t\treturn option;\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/heading\n */\n\nimport HeadingEditing from './headingediting';\nimport HeadingUI from './headingui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport '../theme/heading.css';\n\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature documentation}\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Heading extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ HeadingEditing, HeadingUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Heading';\n\t}\n}\n\n/**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n\n/**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n\n/**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingediting~HeadingEditing} feature).\n *\n * You can **read more** about configuring heading levels and **see more examples** in\n * the {@glink features/headings Headings} guide.\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available as values passed to the `'heading'` command under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading', { value: 'heading1' } );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} model Name of the model element to convert.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view Definition of a view element to convert from/to.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n * @property {String} [icon] Icon used by {@link module:heading/headingbuttonsui~HeadingButtonsUI}. It can be omitted when using\n * the default configuration.\n * @extends module:engine/conversion/conversion~ConverterDefinition\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/upcastwriter\n */\n\nimport DocumentFragment from './documentfragment';\nimport Element from './element';\nimport Text from './text';\nimport { isPlainObject } from 'lodash-es';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\n/**\n * View upcast writer. It provides a set of methods used to manipulate non-semantic view trees.\n *\n * It should be used only while working on a non-semantic view\n * (e.g. a view created from HTML string on paste).\n * To manipulate a view which was or is being downcasted from the the model use the\n * {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n *\n * Unlike `DowncastWriter`, which is available in the {@link module:engine/view/view~View#change `View#change()`} block,\n * `UpcastWriter` can be created wherever you need it:\n *\n *\t\tconst writer = new UpcastWriter( viewDocument );\n *\t\tconst text = writer.createText( 'foo!' );\n *\n *\t\twriter.appendChild( text, someViewElement );\n */\nexport default class UpcastWriter {\n\t/**\n\t * @param {module:engine/view/document~Document} document The view document instance in which this upcast writer operates.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * The view document instance in which this upcast writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/documentfragment~DocumentFragment} instance.\n\t *\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} The created document fragment.\n\t */\n\tcreateDocumentFragment( children ) {\n\t\treturn new DocumentFragment( this.document, children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/element~Element} instance.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tupcastWriter.createElement( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tupcastWriter.createElement( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tupcastWriter.createElement( 'div', mapOfAttributes ); // map\n\t *\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t * @returns {module:engine/view/element~Element} Created element.\n\t */\n\tcreateElement( name, attrs, children ) {\n\t\treturn new Element( this.document, name, attrs, children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text} instance.\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tcreateText( data ) {\n\t\treturn new Text( this.document, data );\n\t}\n\n\t/**\n\t * Clones the provided element.\n\t *\n\t * @see module:engine/view/element~Element#_clone\n\t * @param {module:engine/view/element~Element} element Element to be cloned.\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\tclone( element, deep = false ) {\n\t\treturn element._clone( deep );\n\t}\n\n\t/**\n\t * Appends a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/element~Element#_appendChild\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * to which items will be appended.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tappendChild( items, element ) {\n\t\treturn element._appendChild( items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @see module:engine/view/element~Element#_insertChild\n\t * @param {Number} index Offset at which nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * to which items will be inserted.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tinsertChild( index, items, element ) {\n\t\treturn element._insertChild( index, items );\n\t}\n\n\t/**\n\t * Removes the given number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/element~Element#_removeChildren\n\t * @param {Number} index Offset from which nodes will be removed.\n\t * @param {Number} howMany Number of nodes to remove.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * which children will be removed.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\n\t */\n\tremoveChildren( index, howMany, element ) {\n\t\treturn element._removeChildren( index, howMany );\n\t}\n\n\t/**\n\t * Removes given element from the view structure. Will not have effect on detached elements.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which will be removed.\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\n\t */\n\tremove( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( parent ) {\n\t\t\treturn this.removeChildren( parent.getChildIndex( element ), 1, parent );\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Replaces given element with the new one in the view structure. Will not have effect on detached elements.\n\t *\n\t * @param {module:engine/view/element~Element} oldElement Element which will be replaced.\n\t * @param {module:engine/view/element~Element} newElement Element which will be inserted in the place of the old element.\n\t * @returns {Boolean} Whether old element was successfully replaced.\n\t */\n\treplace( oldElement, newElement ) {\n\t\tconst parent = oldElement.parent;\n\n\t\tif ( parent ) {\n\t\t\tconst index = parent.getChildIndex( oldElement );\n\n\t\t\tthis.removeChildren( index, 1, parent );\n\t\t\tthis.insertChild( index, newElement, parent );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes given element from view structure and places its children in its position.\n\t * It does nothing if element has no parent.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to unwrap.\n\t */\n\tunwrapElement( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( parent ) {\n\t\t\tconst index = parent.getChildIndex( element );\n\n\t\t\tthis.remove( element );\n\t\t\tthis.insertChild( index, element.getChildren(), parent );\n\t\t}\n\t}\n\n\t/**\n\t * Renames element by creating a copy of a given element but with its name changed and then moving contents of the\n\t * old element to the new one.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New element name.\n\t * @param {module:engine/view/element~Element} element Element to be renamed.\n\t * @returns {module:engine/view/element~Element|null} New element or null if the old element\n\t * was not replaced (happens for detached elements).\n\t */\n\trename( newName, element ) {\n\t\tconst newElement = new Element( this.document, newName, element.getAttributes(), element.getChildren() );\n\n\t\treturn this.replace( element, newElement ) ? newElement : null;\n\t}\n\n\t/**\n\t * Adds or overwrites element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( linkElement, 'href', 'http://ckeditor.com' );\n\t *\n\t * @see module:engine/view/element~Element#_setAttribute\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @param {module:engine/view/element~Element} element Element for which attribute will be set.\n\t */\n\tsetAttribute( key, value, element ) {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( linkElement, 'href' );\n\t *\n\t * @see module:engine/view/element~Element#_removeAttribute\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element Element from which attribute will be removed.\n\t */\n\tremoveAttribute( key, element ) {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( linkElement, 'foo' );\n\t *\t\twriter.addClass( linkElement, [ 'foo', 'bar' ] );\n\t *\n\t * @see module:engine/view/element~Element#_addClass\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be added.\n\t * @param {module:engine/view/element~Element} element Element for which class will be added.\n\t */\n\taddClass( className, element ) {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( linkElement, 'foo' );\n\t *\t\twriter.removeClass( linkElement, [ 'foo', 'bar' ] );\n\t *\n\t * @see module:engine/view/element~Element#_removeClass\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be removed.\n\t * @param {module:engine/view/element~Element} element Element from which class will be removed.\n\t */\n\tremoveClass( className, element ) {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( element, 'color', 'red' );\n\t *\t\twriter.setStyle( element, {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/element~Element#_setStyle\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element for which style will be added.\n\t */\n\tsetStyle( property, value, element ) {\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\telement = value;\n\t\t}\n\t\telement._setStyle( property, value );\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( element, 'color' );  // Removes 'color' style.\n\t *\t\twriter.removeStyle( element, [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/element~Element#_removeStyle\n\t * @param {Array.<String>|String} property Style property name or names to be removed.\n\t * @param {module:engine/view/element~Element} element Element from which style will be removed.\n\t */\n\tremoveStyle( property, element ) {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/element~Element#_setCustomProperty\n\t * @param {String|Symbol} key Custom property name/key.\n\t * @param {*} value Custom property value to be stored.\n\t * @param {module:engine/view/element~Element} element Element for which custom property will be set.\n\t */\n\tsetCustomProperty( key, value, element ) {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @see module:engine/view/element~Element#_removeCustomProperty\n\t * @param {String|Symbol} key Name/key of the custom property to be removed.\n\t * @param {module:engine/view/element~Element} element Element from which the custom property will be removed.\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key, element ) {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/list\n */\n\nimport Matcher from '@ckeditor/ckeditor5-engine/src/view/matcher';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\n\n/**\n * Transforms Word specific list-like elements to the semantic HTML lists.\n *\n * Lists in Word are represented by block elements with special attributes like:\n *\n *\t\t<p class=MsoListParagraphCxSpFirst style='mso-list:l1 level1 lfo1'>...</p> // Paragraph based list.\n *\t\t<h1 style='mso-list:l0 level1 lfo1'>...</h1> // Heading 1 based list.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment The view structure to be transformed.\n * @param {String} stylesString Styles from which list-like elements styling will be extracted.\n */\nexport function transformListItemLikeElementsIntoLists( documentFragment, stylesString ) {\n\tif ( !documentFragment.childCount ) {\n\t\treturn;\n\t}\n\n\tconst writer = new UpcastWriter( documentFragment.document );\n\tconst itemLikeElements = findAllItemLikeElements( documentFragment, writer );\n\n\tif ( !itemLikeElements.length ) {\n\t\treturn;\n\t}\n\n\tlet currentList = null;\n\tlet currentIndentation = 1;\n\n\titemLikeElements.forEach( ( itemLikeElement, i ) => {\n\t\tconst isDifferentList = isNewListNeeded( itemLikeElements[ i - 1 ], itemLikeElement );\n\t\tconst previousItemLikeElement = isDifferentList ? null : itemLikeElements[ i - 1 ];\n\t\tconst indentationDifference = getIndentationDifference( previousItemLikeElement, itemLikeElement );\n\n\t\tif ( isDifferentList ) {\n\t\t\tcurrentList = null;\n\t\t\tcurrentIndentation = 1;\n\t\t}\n\n\t\tif ( !currentList || indentationDifference !== 0 ) {\n\t\t\tconst listStyle = detectListStyle( itemLikeElement, stylesString );\n\n\t\t\tif ( !currentList ) {\n\t\t\t\tcurrentList = insertNewEmptyList( listStyle, itemLikeElement.element, writer );\n\t\t\t} else if ( itemLikeElement.indent > currentIndentation ) {\n\t\t\t\tconst lastListItem = currentList.getChild( currentList.childCount - 1 );\n\t\t\t\tconst lastListItemChild = lastListItem.getChild( lastListItem.childCount - 1 );\n\n\t\t\t\tcurrentList = insertNewEmptyList( listStyle, lastListItemChild, writer );\n\n\t\t\t\tcurrentIndentation += 1;\n\t\t\t} else if ( itemLikeElement.indent < currentIndentation ) {\n\t\t\t\tconst differentIndentation = currentIndentation - itemLikeElement.indent;\n\n\t\t\t\tcurrentList = findParentListAtLevel( currentList, differentIndentation );\n\n\t\t\t\tcurrentIndentation = parseInt( itemLikeElement.indent );\n\t\t\t}\n\n\t\t\tif ( itemLikeElement.indent <= currentIndentation ) {\n\t\t\t\tif ( !currentList.is( 'element', listStyle.type ) ) {\n\t\t\t\t\tcurrentList = writer.rename( listStyle.type, currentList );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst listItem = transformElementIntoListItem( itemLikeElement.element, writer );\n\n\t\twriter.appendChild( listItem, currentList );\n\t} );\n}\n\n/**\n * Removes paragraph wrapping content inside a list item.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment\n * @param {module:engine/view/upcastwriter~UpcastWriter} writer\n */\nexport function unwrapParagraphInListItem( documentFragment, writer ) {\n\tfor ( const value of writer.createRangeIn( documentFragment ) ) {\n\t\tconst element = value.item;\n\n\t\tif ( element.is( 'element', 'li' ) ) {\n\t\t\t// Google Docs allows on single paragraph inside LI.\n\t\t\tconst firstChild = element.getChild( 0 );\n\n\t\t\tif ( firstChild && firstChild.is( 'element', 'p' ) ) {\n\t\t\t\twriter.unwrapElement( firstChild );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Finds all list-like elements in a given document fragment.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment\n// in which to look for list-like nodes.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {Array.<Object>} Array of found list-like items. Each item is an object containing:\n//\n//\t\t* {module:engine/src/view/element~Element} element List-like element.\n//\t\t* {Number} id List item id parsed from `mso-list` style (see `getListItemData()` function).\n//\t\t* {Number} order List item creation order parsed from `mso-list` style (see `getListItemData()` function).\n//\t\t* {Number} indent List item indentation level parsed from `mso-list` style (see `getListItemData()` function).\nfunction findAllItemLikeElements( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\t// Matcher for finding list-like elements.\n\tconst itemLikeElementsMatcher = new Matcher( {\n\t\tname: /^p|h\\d+$/,\n\t\tstyles: {\n\t\t\t'mso-list': /.*/\n\t\t}\n\t} );\n\n\tconst itemLikeElements = [];\n\n\tfor ( const value of range ) {\n\t\tif ( value.type === 'elementStart' && itemLikeElementsMatcher.match( value.item ) ) {\n\t\t\tconst itemData = getListItemData( value.item );\n\n\t\t\titemLikeElements.push( {\n\t\t\t\telement: value.item,\n\t\t\t\tid: itemData.id,\n\t\t\t\torder: itemData.order,\n\t\t\t\tindent: itemData.indent\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn itemLikeElements;\n}\n\n// Extracts list item style from the provided CSS.\n//\n// List item style is extracted from CSS stylesheet. Each list with its specific style attribute\n// value (`mso-list:l1 level1 lfo1`) has its dedicated properties in a CSS stylesheet defined with a selector like:\n//\n// \t\t@list l1:level1 { ... }\n//\n// It contains `mso-level-number-format` property which defines list numbering/bullet style. If this property\n// is not defined it means default `decimal` numbering.\n//\n// Here CSS string representation is used as `mso-level-number-format` property is an invalid CSS property\n// and will be removed during CSS parsing.\n//\n// @param {Object} listLikeItem List-like item for which list style will be searched for. Usually\n// a result of `findAllItemLikeElements()` function.\n// @param {String} stylesString CSS stylesheet.\n// @returns {Object} result\n// @returns {String} result.type List type, could be `ul` or `ol`.\n// @returns {String} result.style List style, for example: `decimal`, `lower-roman`, etc. It is extracted\n// directly from Word stylesheet without further processing and may be not compatible\n// with CSS `list-style-type` property accepted values.\nfunction detectListStyle( listLikeItem, stylesString ) {\n\tconst listStyleRegexp = new RegExp( `@list l${ listLikeItem.id }:level${ listLikeItem.indent }\\\\s*({[^}]*)`, 'gi' );\n\tconst listStyleTypeRegex = /mso-level-number-format:([^;]*);/gi;\n\n\tconst listStyleMatch = listStyleRegexp.exec( stylesString );\n\n\tlet listStyleType = 'decimal'; // Decimal is default one.\n\tif ( listStyleMatch && listStyleMatch[ 1 ] ) {\n\t\tconst listStyleTypeMatch = listStyleTypeRegex.exec( listStyleMatch[ 1 ] );\n\n\t\tif ( listStyleTypeMatch && listStyleTypeMatch[ 1 ] ) {\n\t\t\tlistStyleType = listStyleTypeMatch[ 1 ].trim();\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: listStyleType !== 'bullet' && listStyleType !== 'image' ? 'ol' : 'ul',\n\t\tstyle: listStyleType\n\t};\n}\n\n// Creates empty list of a given type and inserts it after a specified element.\n//\n// @param {Object} listStyle List style object which determines the type of newly created list.\n// Usually a result of `detectListStyle()` function.\n// @param {module:engine/view/element~Element} element Element after which list is inserted.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {module:engine/view/element~Element} Newly created list element.\n\nfunction insertNewEmptyList( listStyle, element, writer ) {\n\tconst parent = element.parent;\n\tconst list = writer.createElement( listStyle.type );\n\tconst position = parent.getChildIndex( element ) + 1;\n\n\twriter.insertChild( position, list, parent );\n\n\treturn list;\n}\n\n// Transforms given element into a semantic list item. As the function operates on a provided\n// {module:engine/src/view/element~Element element} it will modify the view structure to which this element belongs.\n//\n// @param {module:engine/view/element~Element} element Element which will be transformed into list item.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {module:engine/view/element~Element} New element to which the given one was transformed. It is\n// inserted in place of the old element (the reference to the old element is lost due to renaming).\nfunction transformElementIntoListItem( element, writer ) {\n\tremoveBulletElement( element, writer );\n\n\treturn writer.rename( 'li', element );\n}\n\n// Extracts list item information from Word specific list-like element style:\n//\n//\t\t`style=\"mso-list:l1 level1 lfo1\"`\n//\n// where:\n//\n//\t\t* `l1` is a list id (however it does not mean this is a continuous list - see #43),\n//\t\t* `level1` is a list item indentation level,\n//\t\t* `lfo1` is a list insertion order in a document.\n//\n// @param {module:engine/view/element~Element} element Element from which style data is extracted.\n// @returns {Object} result\n// @returns {Number} result.id Parent list id.\n// @returns {Number} result.order List item creation order.\n// @returns {Number} result.indent List item indentation level.\nfunction getListItemData( element ) {\n\tconst data = {};\n\tconst listStyle = element.getStyle( 'mso-list' );\n\n\tif ( listStyle ) {\n\t\tconst idMatch = listStyle.match( /(^|\\s+)l(\\d+)/i );\n\t\tconst orderMatch = listStyle.match( /\\s*lfo(\\d+)/i );\n\t\tconst indentMatch = listStyle.match( /\\s*level(\\d+)/i );\n\n\t\tif ( idMatch && orderMatch && indentMatch ) {\n\t\t\tdata.id = idMatch[ 2 ];\n\t\t\tdata.order = orderMatch[ 1 ];\n\t\t\tdata.indent = indentMatch[ 1 ];\n\t\t}\n\t}\n\n\treturn data;\n}\n\n// Removes span with a numbering/bullet from a given element.\n//\n// @param {module:engine/view/element~Element} element\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction removeBulletElement( element, writer ) {\n\t// Matcher for finding `span` elements holding lists numbering/bullets.\n\tconst bulletMatcher = new Matcher( {\n\t\tname: 'span',\n\t\tstyles: {\n\t\t\t'mso-list': 'Ignore'\n\t\t}\n\t} );\n\n\tconst range = writer.createRangeIn( element );\n\n\tfor ( const value of range ) {\n\t\tif ( value.type === 'elementStart' && bulletMatcher.match( value.item ) ) {\n\t\t\twriter.remove( value.item );\n\t\t}\n\t}\n}\n\n// Whether previous and current item belongs to the same list. It is determined based on `item.id`\n// (extracted from `mso-list` style, see #getListItemData) and previous sibling of the current item.\n//\n// @param {Object} previousItem\n// @param {Object} currentItem\n// @returns {Boolean}\nfunction isNewListNeeded( previousItem, currentItem ) {\n\tif ( !previousItem ) {\n\t\treturn true;\n\t}\n\n\tif ( previousItem.id !== currentItem.id ) {\n\t\treturn true;\n\t}\n\n\tconst previousSibling = currentItem.element.previousSibling;\n\n\tif ( !previousSibling ) {\n\t\treturn true;\n\t}\n\n\t// Even with the same id the list does not have to be continuous (#43).\n\treturn !isList( previousSibling );\n}\n\nfunction isList( element ) {\n\treturn element.is( 'element', 'ol' ) || element.is( 'element', 'ul' );\n}\n\n// Calculates the indentation difference between two given list items (based on indent attribute\n// extracted from `mso-list` style, see #getListItemData).\n//\n// @param {Object} previousItem\n// @param {Object} currentItem\n// @returns {Number}\nfunction getIndentationDifference( previousItem, currentItem ) {\n\treturn previousItem ? currentItem.indent - previousItem.indent : currentItem.indent - 1;\n}\n\n// Finds parent list element (ul/ol) of a given list element with indentation level lower by a given value.\n//\n// @param {module:engine/view/element~Element} listElement List element from which to start looking for a parent list.\n// @param {Number} indentationDifference Indentation difference between lists.\n// @returns {module:engine/view/element~Element} Found list element with indentation level lower by a given value.\nfunction findParentListAtLevel( listElement, indentationDifference ) {\n\tconst ancestors = listElement.getAncestors( { parentFirst: true } );\n\n\tlet parentList = null;\n\tlet levelChange = 0;\n\n\tfor ( const ancestor of ancestors ) {\n\t\tif ( ancestor.name === 'ul' || ancestor.name === 'ol' ) {\n\t\t\tlevelChange++;\n\t\t}\n\n\t\tif ( levelChange === indentationDifference ) {\n\t\t\tparentList = ancestor;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn parentList;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/normalizers/googledocsnormalizer\n */\n\nimport removeBoldWrapper from '../filters/removeboldwrapper';\nimport { unwrapParagraphInListItem } from '../filters/list';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\n\nconst googleDocsMatch = /id=(\"|')docs-internal-guid-[-0-9a-f]+(\"|')/i;\n\n/**\n * Normalizer for the content pasted from Google Docs.\n *\n * @implements module:paste-from-office/normalizer~Normalizer\n */\nexport default class GoogleDocsNormalizer {\n\t/**\n\t * Creates a new `GoogleDocsNormalizer` instance.\n\t *\n\t * @param {module:engine/view/document~Document} document View document.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tisActive( htmlString ) {\n\t\treturn googleDocsMatch.test( htmlString );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute( data ) {\n\t\tconst writer = new UpcastWriter( this.document );\n\n\t\tremoveBoldWrapper( data.content, writer );\n\t\tunwrapParagraphInListItem( data.content, writer );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/removeboldwrapper\n */\n\n/**\n * Removes `<b>` tag wrapper added by Google Docs to a copied content.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment element `data.content` obtained from clipboard\n * @param {module:engine/view/upcastwriter~UpcastWriter} writer\n */\nexport default function removeBoldWrapper( documentFragment, writer ) {\n\tfor ( const child of documentFragment.getChildren() ) {\n\t\tif ( child.is( 'element', 'b' ) && child.getStyle( 'font-weight' ) === 'normal' ) {\n\t\t\tconst childIndex = documentFragment.getChildIndex( child );\n\n\t\t\twriter.remove( child );\n\t\t\twriter.insertChild( childIndex, child.getChildren(), documentFragment );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/space\n */\n\n/**\n * Replaces last space preceding elements closing tag with `&nbsp;`. Such operation prevents spaces from being removed\n * during further DOM/View processing (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\n * This method also takes into account Word specific `<o:p></o:p>` empty tags.\n * Additionally multiline sequences of spaces and new lines between tags are removed (see #39 and #40).\n *\n * @param {String} htmlString HTML string in which spacing should be normalized.\n * @returns {String} Input HTML with spaces normalized.\n */\nexport function normalizeSpacing( htmlString ) {\n\t// Run normalizeSafariSpaceSpans() two times to cover nested spans.\n\treturn normalizeSafariSpaceSpans( normalizeSafariSpaceSpans( htmlString ) )\n\t\t// Remove all \\r\\n from \"spacerun spans\" so the last replace line doesn't strip all whitespaces.\n\t\t.replace( /(<span\\s+style=['\"]mso-spacerun:yes['\"]>[\\s]*?)[\\r\\n]+(\\s*<\\/span>)/g, '$1$2' )\n\t\t.replace( /<span\\s+style=['\"]mso-spacerun:yes['\"]><\\/span>/g, '' )\n\t\t.replace( / <\\//g, '\\u00A0</' )\n\t\t.replace( / <o:p><\\/o:p>/g, '\\u00A0<o:p></o:p>' )\n\t\t// Remove <o:p> block filler from empty paragraph. Safari uses \\u00A0 instead of &nbsp;.\n\t\t.replace( /<o:p>(&nbsp;|\\u00A0)<\\/o:p>/g, '' )\n\t\t// Remove all whitespaces when they contain any \\r or \\n.\n\t\t.replace( />(\\s*[\\r\\n]\\s*)</g, '><' );\n}\n\n/**\n * Normalizes spacing in special Word `spacerun spans` (`<span style='mso-spacerun:yes'>\\s+</span>`) by replacing\n * all spaces with `&nbsp; ` pairs. This prevents spaces from being removed during further DOM/View processing\n * (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\n *\n * @param {Document} htmlDocument Native `Document` object in which spacing should be normalized.\n */\nexport function normalizeSpacerunSpans( htmlDocument ) {\n\thtmlDocument.querySelectorAll( 'span[style*=spacerun]' ).forEach( el => {\n\t\tconst innerTextLength = el.innerText.length || 0;\n\n\t\tel.innerHTML = Array( innerTextLength + 1 ).join( '\\u00A0 ' ).substr( 0, innerTextLength );\n\t} );\n}\n\n// Normalizes specific spacing generated by Safari when content pasted from Word (`<span class=\"Apple-converted-space\"> </span>`)\n// by replacing all spaces sequences longer than 1 space with `&nbsp; ` pairs. This prevents spaces from being removed during\n// further DOM/View processing (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\n//\n// This function is similar to {@link module:clipboard/utils/normalizeclipboarddata normalizeClipboardData util} but uses\n// regular spaces / &nbsp; sequence for replacement.\n//\n// @param {String} htmlString HTML string in which spacing should be normalized\n// @returns {String} Input HTML with spaces normalized.\nfunction normalizeSafariSpaceSpans( htmlString ) {\n\treturn htmlString.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\treturn spaces.length === 1 ? ' ' : Array( spaces.length + 1 ).join( '\\u00A0 ' ).substr( 0, spaces.length );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/parse\n */\n\n/* globals DOMParser */\n\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\nimport ViewDocument from '@ckeditor/ckeditor5-engine/src/view/document';\n\nimport { normalizeSpacing, normalizeSpacerunSpans } from './space';\n\n/**\n * Parses provided HTML extracting contents of `<body>` and `<style>` tags.\n *\n * @param {String} htmlString HTML string to be parsed.\n * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor\n * @returns {Object} result\n * @returns {module:engine/view/documentfragment~DocumentFragment} result.body Parsed body\n * content as a traversable structure.\n * @returns {String} result.bodyString Entire body content as a string.\n * @returns {Array.<CSSStyleSheet>} result.styles Array of native `CSSStyleSheet` objects, each representing\n * separate `style` tag from the source HTML.\n * @returns {String} result.stylesString All `style` tags contents combined in the order of occurrence into one string.\n */\nexport function parseHtml( htmlString, stylesProcessor ) {\n\tconst domParser = new DOMParser();\n\n\t// Remove Word specific \"if comments\" so content inside is not omitted by the parser.\n\thtmlString = htmlString.replace( /<!--\\[if gte vml 1]>/g, '' );\n\n\tconst normalizedHtml = normalizeSpacing( cleanContentAfterBody( htmlString ) );\n\n\t// Parse htmlString as native Document object.\n\tconst htmlDocument = domParser.parseFromString( normalizedHtml, 'text/html' );\n\n\tnormalizeSpacerunSpans( htmlDocument );\n\n\t// Get `innerHTML` first as transforming to View modifies the source document.\n\tconst bodyString = htmlDocument.body.innerHTML;\n\n\t// Transform document.body to View.\n\tconst bodyView = documentToView( htmlDocument, stylesProcessor );\n\n\t// Extract stylesheets.\n\tconst stylesObject = extractStyles( htmlDocument );\n\n\treturn {\n\t\tbody: bodyView,\n\t\tbodyString,\n\t\tstyles: stylesObject.styles,\n\t\tstylesString: stylesObject.stylesString\n\t};\n}\n\n// Transforms native `Document` object into {@link module:engine/view/documentfragment~DocumentFragment}.\n//\n// @param {Document} htmlDocument Native `Document` object to be transformed.\n// @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor\n// @returns {module:engine/view/documentfragment~DocumentFragment}\nfunction documentToView( htmlDocument, stylesProcessor ) {\n\tconst viewDocument = new ViewDocument( stylesProcessor );\n\tconst domConverter = new DomConverter( viewDocument, { blockFillerMode: 'nbsp' } );\n\tconst fragment = htmlDocument.createDocumentFragment();\n\tconst nodes = htmlDocument.body.childNodes;\n\n\twhile ( nodes.length > 0 ) {\n\t\tfragment.appendChild( nodes[ 0 ] );\n\t}\n\n\treturn domConverter.domToView( fragment );\n}\n\n// Extracts both `CSSStyleSheet` and string representation from all `style` elements available in a provided `htmlDocument`.\n//\n// @param {Document} htmlDocument Native `Document` object from which styles will be extracted.\n// @returns {Object} result\n// @returns {Array.<CSSStyleSheet>} result.styles Array of native `CSSStyleSheet` object, each representing\n// separate `style` tag from the source object.\n// @returns {String} result.stylesString All `style` tags contents combined in the order of occurrence as one string.\nfunction extractStyles( htmlDocument ) {\n\tconst styles = [];\n\tconst stylesString = [];\n\tconst styleTags = Array.from( htmlDocument.getElementsByTagName( 'style' ) );\n\n\tfor ( const style of styleTags ) {\n\t\tif ( style.sheet && style.sheet.cssRules && style.sheet.cssRules.length ) {\n\t\t\tstyles.push( style.sheet );\n\t\t\tstylesString.push( style.innerHTML );\n\t\t}\n\t}\n\n\treturn {\n\t\tstyles,\n\t\tstylesString: stylesString.join( ' ' )\n\t};\n}\n\n// Removes leftover content from between closing </body> and closing </html> tag:\n//\n// \t\t<html><body><p>Foo Bar</p></body><span>Fo</span></html> -> <html><body><p>Foo Bar</p></body></html>\n//\n// This function is used as specific browsers (Edge) add some random content after `body` tag when pasting from Word.\n// @param {String} htmlString The HTML string to be cleaned.\n// @returns {String} The HTML string with leftover content removed.\nfunction cleanContentAfterBody( htmlString ) {\n\tconst regexp = /<\\/body>(.*?)(<\\/html>|$)/;\n\tconst match = htmlString.match( regexp );\n\n\tif ( match && match[ 1 ] ) {\n\t\thtmlString = htmlString.slice( 0, match.index ) + htmlString.slice( match.index ).replace( match[ 1 ], '' );\n\t}\n\n\treturn htmlString;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/image\n */\n\n/* globals btoa */\n\nimport ViewMatcher from '@ckeditor/ckeditor5-engine/src/view/matcher';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\n\n/**\n * Replaces source attribute of all `<img>` elements representing regular\n * images (not the Word shapes) with inlined base64 image representation extracted from RTF or Blob data.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment on which transform images.\n * @param {String} rtfData The RTF data from which images representation will be used.\n */\nexport function replaceImagesSourceWithBase64( documentFragment, rtfData ) {\n\tif ( !documentFragment.childCount ) {\n\t\treturn;\n\t}\n\n\tconst upcastWriter = new UpcastWriter();\n\tconst shapesIds = findAllShapesIds( documentFragment, upcastWriter );\n\n\tremoveAllImgElementsRepresentingShapes( shapesIds, documentFragment, upcastWriter );\n\tremoveAllShapeElements( documentFragment, upcastWriter );\n\n\tconst images = findAllImageElementsWithLocalSource( documentFragment, upcastWriter );\n\n\tif ( images.length ) {\n\t\treplaceImagesFileSourceWithInlineRepresentation( images, extractImageDataFromRtf( rtfData ), upcastWriter );\n\t}\n}\n\n/**\n * Converts given HEX string to base64 representation.\n *\n * @protected\n * @param {String} hexString The HEX string to be converted.\n * @returns {String} Base64 representation of a given HEX string.\n */\nexport function _convertHexToBase64( hexString ) {\n\treturn btoa( hexString.match( /\\w{2}/g ).map( char => {\n\t\treturn String.fromCharCode( parseInt( char, 16 ) );\n\t} ).join( '' ) );\n}\n\n// Finds all shapes (`<v:*>...</v:*>`) ids. Shapes can represent images (canvas)\n// or Word shapes (which does not have RTF or Blob representation).\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment\n// from which to extract shape ids.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {Array.<String>} Array of shape ids.\nfunction findAllShapesIds( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst shapeElementsMatcher = new ViewMatcher( {\n\t\tname: /v:(.+)/\n\t} );\n\n\tconst shapesIds = [];\n\n\tfor ( const value of range ) {\n\t\tconst el = value.item;\n\t\tconst prevSiblingName = el.previousSibling && el.previousSibling.name || null;\n\n\t\t// If shape element have 'o:gfxdata' attribute and is not directly before `<v:shapetype>` element it means it represent Word shape.\n\t\tif ( shapeElementsMatcher.match( el ) && el.getAttribute( 'o:gfxdata' ) && prevSiblingName !== 'v:shapetype' ) {\n\t\t\tshapesIds.push( value.item.getAttribute( 'id' ) );\n\t\t}\n\t}\n\n\treturn shapesIds;\n}\n\n// Removes all `<img>` elements which represents Word shapes and not regular images.\n//\n// @param {Array.<String>} shapesIds Shape ids which will be checked against `<img>` elements.\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment from which to remove `<img>` elements.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction removeAllImgElementsRepresentingShapes( shapesIds, documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst imageElementsMatcher = new ViewMatcher( {\n\t\tname: 'img'\n\t} );\n\n\tconst imgs = [];\n\n\tfor ( const value of range ) {\n\t\tif ( imageElementsMatcher.match( value.item ) ) {\n\t\t\tconst el = value.item;\n\t\t\tconst shapes = el.getAttribute( 'v:shapes' ) ? el.getAttribute( 'v:shapes' ).split( ' ' ) : [];\n\n\t\t\tif ( shapes.length && shapes.every( shape => shapesIds.indexOf( shape ) > -1 ) ) {\n\t\t\t\timgs.push( el );\n\t\t\t// Shapes may also have empty source while content is paste in some browsers (Safari).\n\t\t\t} else if ( !el.getAttribute( 'src' ) ) {\n\t\t\t\timgs.push( el );\n\t\t\t}\n\t\t}\n\t}\n\n\tfor ( const img of imgs ) {\n\t\twriter.remove( img );\n\t}\n}\n\n// Removes all shape elements (`<v:*>...</v:*>`) so they do not pollute the output structure.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment from which to remove shape elements.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction removeAllShapeElements( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst shapeElementsMatcher = new ViewMatcher( {\n\t\tname: /v:(.+)/\n\t} );\n\n\tconst shapes = [];\n\n\tfor ( const value of range ) {\n\t\tif ( shapeElementsMatcher.match( value.item ) ) {\n\t\t\tshapes.push( value.item );\n\t\t}\n\t}\n\n\tfor ( const shape of shapes ) {\n\t\twriter.remove( shape );\n\t}\n}\n\n// Finds all `<img>` elements in a given document fragment which have source pointing to local `file://` resource.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment in which to look for `<img>` elements.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {Object} result All found images grouped by source type.\n// @returns {Array.<module:engine/view/element~Element>} result.file Array of found `<img>` elements with `file://` source.\n// @returns {Array.<module:engine/view/element~Element>} result.blob Array of found `<img>` elements with `blob:` source.\nfunction findAllImageElementsWithLocalSource( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst imageElementsMatcher = new ViewMatcher( {\n\t\tname: 'img'\n\t} );\n\n\tconst imgs = [];\n\n\tfor ( const value of range ) {\n\t\tif ( imageElementsMatcher.match( value.item ) ) {\n\t\t\tif ( value.item.getAttribute( 'src' ).startsWith( 'file://' ) ) {\n\t\t\t\timgs.push( value.item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn imgs;\n}\n\n// Extracts all images HEX representations from a given RTF data.\n//\n// @param {String} rtfData The RTF data from which to extract images HEX representation.\n// @returns {Array.<Object>} Array of found HEX representations. Each array item is an object containing:\n//\n// \t\t* {String} hex Image representation in HEX format.\n// \t\t* {string} type Type of image, `image/png` or `image/jpeg`.\nfunction extractImageDataFromRtf( rtfData ) {\n\tif ( !rtfData ) {\n\t\treturn [];\n\t}\n\n\tconst regexPictureHeader = /{\\\\pict[\\s\\S]+?\\\\bliptag-?\\d+(\\\\blipupi-?\\d+)?({\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s}]*?/;\n\tconst regexPicture = new RegExp( '(?:(' + regexPictureHeader.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g' );\n\tconst images = rtfData.match( regexPicture );\n\tconst result = [];\n\n\tif ( images ) {\n\t\tfor ( const image of images ) {\n\t\t\tlet imageType = false;\n\n\t\t\tif ( image.includes( '\\\\pngblip' ) ) {\n\t\t\t\timageType = 'image/png';\n\t\t\t} else if ( image.includes( '\\\\jpegblip' ) ) {\n\t\t\t\timageType = 'image/jpeg';\n\t\t\t}\n\n\t\t\tif ( imageType ) {\n\t\t\t\tresult.push( {\n\t\t\t\t\thex: image.replace( regexPictureHeader, '' ).replace( /[^\\da-fA-F]/g, '' ),\n\t\t\t\t\ttype: imageType\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Replaces `src` attribute value of all given images with the corresponding base64 image representation.\n//\n// @param {Array.<module:engine/view/element~Element>} imageElements Array of image elements which will have its source replaced.\n// @param {Array.<Object>} imagesHexSources Array of images hex sources (usually the result of `extractImageDataFromRtf()` function).\n// The array should be the same length as `imageElements` parameter.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction replaceImagesFileSourceWithInlineRepresentation( imageElements, imagesHexSources, writer ) {\n\t// Assume there is an equal amount of image elements and images HEX sources so they can be matched accordingly based on existing order.\n\tif ( imageElements.length === imagesHexSources.length ) {\n\t\tfor ( let i = 0; i < imageElements.length; i++ ) {\n\t\t\tconst newSrc = `data:${ imagesHexSources[ i ].type };base64,${ _convertHexToBase64( imagesHexSources[ i ].hex ) }`;\n\t\t\twriter.setAttribute( 'src', newSrc, imageElements[ i ] );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/normalizers/mswordnormalizer\n */\n\nimport { parseHtml } from '../filters/parse';\nimport { transformListItemLikeElementsIntoLists } from '../filters/list';\nimport { replaceImagesSourceWithBase64 } from '../filters/image';\n\nconst msWordMatch1 = /<meta\\s*name=\"?generator\"?\\s*content=\"?microsoft\\s*word\\s*\\d+\"?\\/?>/i;\nconst msWordMatch2 = /xmlns:o=\"urn:schemas-microsoft-com/i;\n\n/**\n * Normalizer for the content pasted from Microsoft Word.\n *\n * @implements module:paste-from-office/normalizer~Normalizer\n */\nexport default class MSWordNormalizer {\n\t/**\n\t * Creates a new `MSWordNormalizer` instance.\n\t *\n\t * @param {module:engine/view/document~Document} document View document.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tisActive( htmlString ) {\n\t\treturn msWordMatch1.test( htmlString ) || msWordMatch2.test( htmlString );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute( data ) {\n\t\tconst { body, stylesString } = parseHtml( data.dataTransfer.getData( 'text/html' ), this.document.stylesProcessor );\n\n\t\ttransformListItemLikeElementsIntoLists( body, stylesString );\n\t\treplaceImagesSourceWithBase64( body, data.dataTransfer.getData( 'text/rtf' ) );\n\n\t\tdata.content = body;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/pastefromoffice\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport GoogleDocsNormalizer from './normalizers/googledocsnormalizer';\nimport MSWordNormalizer from './normalizers/mswordnormalizer';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\n\n/**\n * The Paste from Office plugin.\n *\n * This plugin handles content pasted from Office apps and transforms it (if necessary)\n * to a valid structure which can then be understood by the editor features.\n *\n * Transformation is made by a set of predefined {@link module:paste-from-office/normalizer~Normalizer normalizers}.\n * This plugin includes following normalizers:\n *   * {@link module:paste-from-office/normalizers/mswordnormalizer~MSWordNormalizer Microsoft Word normalizer}\n *   * {@link module:paste-from-office/normalizers/googledocsnormalizer~GoogleDocsNormalizer Google Docs normalizer}\n *\n * For more information about this feature check the {@glink api/paste-from-office package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class PasteFromOffice extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PasteFromOffice';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\t\tconst normalizers = [];\n\n\t\tnormalizers.push( new MSWordNormalizer( viewDocument ) );\n\t\tnormalizers.push( new GoogleDocsNormalizer( viewDocument ) );\n\n\t\teditor.plugins.get( 'Clipboard' ).on(\n\t\t\t'inputTransformation',\n\t\t\t( evt, data ) => {\n\t\t\t\tif ( data.isTransformedWithPasteFromOffice ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst htmlString = data.dataTransfer.getData( 'text/html' );\n\t\t\t\tconst activeNormalizer = normalizers.find( normalizer => normalizer.isActive( htmlString ) );\n\n\t\t\t\tif ( activeNormalizer ) {\n\t\t\t\t\tactiveNormalizer.execute( data );\n\n\t\t\t\t\tdata.isTransformedWithPasteFromOffice = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ priority: 'high' }\n\t\t);\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/textwatcher\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport getLastTextLine from './utils/getlasttextline';\n\n/**\n * The text watcher feature.\n *\n * Fires the {@link module:typing/textwatcher~TextWatcher#event:matched:data `matched:data`},\n * {@link module:typing/textwatcher~TextWatcher#event:matched:selection `matched:selection`} and\n * {@link module:typing/textwatcher~TextWatcher#event:unmatched `unmatched`} events on typing or selection changes.\n *\n * @private\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class TextWatcher {\n\t/**\n\t * Creates a text watcher instance.\n\t *\n\t * @param {module:engine/model/model~Model} model\n\t * @param {Function} testCallback See {@link module:typing/textwatcher~TextWatcher#testCallback}.\n\t */\n\tconstructor( model, testCallback ) {\n\t\t/**\n\t\t * The editor's model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The function used to match the text.\n\t\t *\n\t\t * The test callback can return 3 values:\n\t\t *\n\t\t * * `false` if there is no match,\n\t\t * * `true` if there is a match,\n\t\t * * an object if there is a match and we want to pass some additional information to the {@link #event:matched:data} event.\n\t\t *\n\t\t * @member {Function} #testCallback\n\t\t * @returns {Object} testResult\n\t\t */\n\t\tthis.testCallback = testCallback;\n\n\t\t/**\n\t\t * Whether there is a match currently.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.hasMatch = false;\n\n\t\t/**\n\t\t * Flag indicating whether the `TextWatcher` instance is enabled or disabled.\n\t\t * A disabled TextWatcher will not evaluate text.\n\t\t *\n\t\t * To disable TextWatcher:\n\t\t *\n\t\t *\t\tconst watcher = new TextWatcher( editor.model, testCallback );\n\t\t *\n\t\t *\t\t// After this a testCallback will not be called.\n\t\t *\t\twatcher.isEnabled = false;\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t// Toggle text watching on isEnabled state change.\n\t\tthis.on( 'change:isEnabled', () => {\n\t\t\tif ( this.isEnabled ) {\n\t\t\t\tthis._startListening();\n\t\t\t} else {\n\t\t\t\tthis.stopListening( model.document.selection );\n\t\t\t\tthis.stopListening( model.document );\n\t\t\t}\n\t\t} );\n\n\t\tthis._startListening();\n\t}\n\n\t/**\n\t * Starts listening to the editor for typing and selection events.\n\t *\n\t * @private\n\t */\n\t_startListening() {\n\t\tconst model = this.model;\n\t\tconst document = model.document;\n\n\t\tthis.listenTo( document.selection, 'change:range', ( evt, { directChange } ) => {\n\t\t\t// Indirect changes (i.e. when the user types or external changes are applied) are handled in the document's change event.\n\t\t\tif ( !directChange ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Act only on collapsed selection.\n\t\t\tif ( !document.selection.isCollapsed ) {\n\t\t\t\tif ( this.hasMatch ) {\n\t\t\t\t\tthis.fire( 'unmatched' );\n\t\t\t\t\tthis.hasMatch = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._evaluateTextBeforeSelection( 'selection' );\n\t\t} );\n\n\t\tthis.listenTo( document, 'change:data', ( evt, batch ) => {\n\t\t\tif ( batch.type == 'transparent' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._evaluateTextBeforeSelection( 'data', { batch } );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the editor content for matched text.\n\t *\n\t * @fires matched:data\n\t * @fires matched:selection\n\t * @fires unmatched\n\t *\n\t * @private\n\t * @param {'data'|'selection'} suffix A suffix used for generating the event name.\n\t * @param {Object} data Data object for event.\n\t */\n\t_evaluateTextBeforeSelection( suffix, data = {} ) {\n\t\tconst model = this.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst rangeBeforeSelection = model.createRange( model.createPositionAt( selection.focus.parent, 0 ), selection.focus );\n\n\t\tconst { text, range } = getLastTextLine( rangeBeforeSelection, model );\n\n\t\tconst testResult = this.testCallback( text );\n\n\t\tif ( !testResult && this.hasMatch ) {\n\t\t\tthis.fire( 'unmatched' );\n\t\t}\n\n\t\tthis.hasMatch = !!testResult;\n\n\t\tif ( testResult ) {\n\t\t\tconst eventData = Object.assign( data, { text, range } );\n\n\t\t\t// If the test callback returns an object with additional data, assign the data as well.\n\t\t\tif ( typeof testResult == 'object' ) {\n\t\t\t\tObject.assign( eventData, testResult );\n\t\t\t}\n\n\t\t\tthis.fire( `matched:${ suffix }`, eventData );\n\t\t}\n\t}\n}\n\nmix( TextWatcher, ObservableMixin );\n\n/**\n * Fired whenever the text watcher found a match for data changes.\n *\n * @event matched:data\n * @param {Object} data Event data.\n * @param {String} data.text The full text before selection to which the regexp was applied.\n * @param {module:engine/model/range~Range} data.range The range representing the position of the `data.text`.\n * @param {Object} [data.testResult] The additional data returned from the {@link module:typing/textwatcher~TextWatcher#testCallback}.\n */\n\n/**\n * Fired whenever the text watcher found a match for selection changes.\n *\n * @event matched:selection\n * @param {Object} data Event data.\n * @param {String} data.text The full text before selection.\n * @param {module:engine/model/range~Range} data.range The range representing the position of the `data.text`.\n * @param {Object} [data.testResult] The additional data returned from the {@link module:typing/textwatcher~TextWatcher#testCallback}.\n */\n\n/**\n * Fired whenever the text does not match anymore. Fired only when the text watcher found a match.\n *\n * @event unmatched\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/getlasttextline\n */\n\n/**\n * Returns the last text line from the given range.\n *\n * \"The last text line\" is understood as text (from one or more text nodes) which is limited either by a parent block\n * or by inline elements (e.g. `<softBreak>`).\n *\n *\t\tconst rangeToCheck = model.createRange(\n *\t\t\tmodel.createPositionAt( paragraph, 0 ),\n *\t\t\tmodel.createPositionAt( paragraph, 'end' )\n *\t\t);\n *\n *\t\tconst { text, range } = getLastTextLine( rangeToCheck, model );\n *\n * For model below, the returned `text` will be \"Foo bar baz\" and `range` will be set on whole `<paragraph>` content:\n *\n *\t\t<paragraph>Foo bar baz<paragraph>\n *\n * However, in below case, `text` will be set to \"baz\" and `range` will be set only on \"baz\".\n *\n *\t\t<paragraph>Foo<softBreak></softBreak>bar<softBreak></softBreak>baz<paragraph>\n *\n * @protected\n * @param {module:engine/model/range~Range} range\n * @param {module:engine/model/model~Model} model\n * @returns {module:typing/utils/getlasttextline~LastTextLineData}\n */\nexport default function getLastTextLine( range, model ) {\n\tlet start = range.start;\n\n\tconst text = Array.from( range.getItems() ).reduce( ( rangeText, node ) => {\n\t\t// Trim text to a last occurrence of an inline element and update range start.\n\t\tif ( !( node.is( '$text' ) || node.is( '$textProxy' ) ) ) {\n\t\t\tstart = model.createPositionAfter( node );\n\n\t\t\treturn '';\n\t\t}\n\n\t\treturn rangeText + node.data;\n\t}, '' );\n\n\treturn { text, range: model.createRange( start, range.end ) };\n}\n\n/**\n * The value returned by {@link module:typing/utils/getlasttextline~getLastTextLine}.\n *\n * @typedef {Object} module:typing/utils/getlasttextline~LastTextLineData\n *\n * @property {String} text The text from the text nodes in the last text line.\n * @property {module:engine/model/range~Range} range The range set on the text nodes in the last text line.\n */\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/texttransformation\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport TextWatcher from './textwatcher';\nimport { escapeRegExp } from 'lodash-es';\n\n// All named transformations.\nconst TRANSFORMATIONS = {\n\t// Common symbols:\n\tcopyright: { from: '(c)', to: '©' },\n\tregisteredTrademark: { from: '(r)', to: '®' },\n\ttrademark: { from: '(tm)', to: '™' },\n\n\t// Mathematical:\n\toneHalf: { from: '1/2', to: '½' },\n\toneThird: { from: '1/3', to: '⅓' },\n\ttwoThirds: { from: '2/3', to: '⅔' },\n\toneForth: { from: '1/4', to: '¼' },\n\tthreeQuarters: { from: '3/4', to: '¾' },\n\tlessThanOrEqual: { from: '<=', to: '≤' },\n\tgreaterThanOrEqual: { from: '>=', to: '≥' },\n\tnotEqual: { from: '!=', to: '≠' },\n\tarrowLeft: { from: '<-', to: '←' },\n\tarrowRight: { from: '->', to: '→' },\n\n\t// Typography:\n\thorizontalEllipsis: { from: '...', to: '…' },\n\tenDash: { from: /(^| )(--)( )$/, to: [ null, '–', null ] },\n\temDash: { from: /(^| )(---)( )$/, to: [ null, '—', null ] },\n\t// Quotations:\n\t// English, US\n\tquotesPrimary: { from: buildQuotesRegExp( '\"' ), to: [ null, '“', null, '”' ] },\n\tquotesSecondary: { from: buildQuotesRegExp( '\\'' ), to: [ null, '‘', null, '’' ] },\n\n\t// English, UK\n\tquotesPrimaryEnGb: { from: buildQuotesRegExp( '\\'' ), to: [ null, '‘', null, '’' ] },\n\tquotesSecondaryEnGb: { from: buildQuotesRegExp( '\"' ), to: [ null, '“', null, '”' ] },\n\n\t// Polish\n\tquotesPrimaryPl: { from: buildQuotesRegExp( '\"' ), to: [ null, '„', null, '”' ] },\n\tquotesSecondaryPl: { from: buildQuotesRegExp( '\\'' ), to: [ null, '‚', null, '’' ] }\n};\n\n// Transformation groups.\nconst TRANSFORMATION_GROUPS = {\n\tsymbols: [ 'copyright', 'registeredTrademark', 'trademark' ],\n\tmathematical: [\n\t\t'oneHalf', 'oneThird', 'twoThirds', 'oneForth', 'threeQuarters',\n\t\t'lessThanOrEqual', 'greaterThanOrEqual', 'notEqual',\n\t\t'arrowLeft', 'arrowRight'\n\t],\n\ttypography: [ 'horizontalEllipsis', 'enDash', 'emDash' ],\n\tquotes: [ 'quotesPrimary', 'quotesSecondary' ]\n};\n\n// A set of default transformations provided by the feature.\nconst DEFAULT_TRANSFORMATIONS = [\n\t'symbols',\n\t'mathematical',\n\t'typography',\n\t'quotes'\n];\n\n/**\n * The text transformation plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TextTransformation extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TextTransformation';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'typing', {\n\t\t\ttransformations: {\n\t\t\t\tinclude: DEFAULT_TRANSFORMATIONS\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst model = this.editor.model;\n\t\tconst modelSelection = model.document.selection;\n\n\t\tmodelSelection.on( 'change:range', () => {\n\t\t\t// Disable plugin when selection is inside a code block.\n\t\t\tthis.isEnabled = !modelSelection.anchor.parent.is( 'element', 'codeBlock' );\n\t\t} );\n\n\t\tthis._enableTransformationWatchers();\n\t}\n\n\t/**\n\t * Create new TextWatcher listening to the editor for typing and selection events.\n\t *\n\t * @private\n\t */\n\t_enableTransformationWatchers() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst input = editor.plugins.get( 'Input' );\n\t\tconst normalizedTransformations = normalizeTransformations( editor.config.get( 'typing.transformations' ) );\n\n\t\tconst testCallback = text => {\n\t\t\tfor ( const normalizedTransformation of normalizedTransformations ) {\n\t\t\t\tconst from = normalizedTransformation.from;\n\t\t\t\tconst match = from.test( text );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn { normalizedTransformation };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst watcherCallback = ( evt, data ) => {\n\t\t\tif ( !input.isInput( data.batch ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { from, to } = data.normalizedTransformation;\n\n\t\t\tconst matches = from.exec( data.text );\n\t\t\tconst replaces = to( matches.slice( 1 ) );\n\n\t\t\tconst matchedRange = data.range;\n\n\t\t\tlet changeIndex = matches.index;\n\n\t\t\tmodel.enqueueChange( writer => {\n\t\t\t\tfor ( let i = 1; i < matches.length; i++ ) {\n\t\t\t\t\tconst match = matches[ i ];\n\t\t\t\t\tconst replaceWith = replaces[ i - 1 ];\n\n\t\t\t\t\tif ( replaceWith == null ) {\n\t\t\t\t\t\tchangeIndex += match.length;\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst replacePosition = matchedRange.start.getShiftedBy( changeIndex );\n\t\t\t\t\tconst replaceRange = model.createRange( replacePosition, replacePosition.getShiftedBy( match.length ) );\n\t\t\t\t\tconst attributes = getTextAttributesAfterPosition( replacePosition );\n\n\t\t\t\t\tmodel.insertContent( writer.createText( replaceWith, attributes ), replaceRange );\n\n\t\t\t\t\tchangeIndex += replaceWith.length;\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\n\t\tconst watcher = new TextWatcher( editor.model, testCallback );\n\n\t\twatcher.on( 'matched:data', watcherCallback );\n\t\twatcher.bind( 'isEnabled' ).to( this );\n\t}\n}\n\n// Normalizes the configuration `from` parameter value.\n// The normalized value for the `from` parameter is a RegExp instance. If the passed `from` is already a RegExp instance,\n// it is returned unchanged.\n//\n// @param {String|RegExp} from\n// @returns {RegExp}\nfunction normalizeFrom( from ) {\n\tif ( typeof from == 'string' ) {\n\t\treturn new RegExp( `(${ escapeRegExp( from ) })$` );\n\t}\n\n\t// `from` is already a regular expression.\n\treturn from;\n}\n\n// Normalizes the configuration `to` parameter value.\n// The normalized value for the `to` parameter is a function that takes an array and returns an array. See more in the\n// configuration description. If the passed `to` is already a function, it is returned unchanged.\n//\n// @param {String|Array.<null|String>|Function} to\n// @returns {Function}\nfunction normalizeTo( to ) {\n\tif ( typeof to == 'string' ) {\n\t\treturn () => [ to ];\n\t} else if ( to instanceof Array ) {\n\t\treturn () => to;\n\t}\n\n\t// `to` is already a function.\n\treturn to;\n}\n\n// For given `position` returns attributes for the text that is after that position.\n// The text can be in the same text node as the position (`foo[]bar`) or in the next text node (`foo[]<$text bold=\"true\">bar</$text>`).\n//\n// @param {module:engine/model/position~Position} position\n// @returns {Iterable.<*>}\nfunction getTextAttributesAfterPosition( position ) {\n\tconst textNode = position.textNode ? position.textNode : position.nodeAfter;\n\n\treturn textNode.getAttributes();\n}\n\n// Returns a RegExp pattern string that detects a sentence inside a quote.\n//\n// @param {String} quoteCharacter The character to create a pattern for.\n// @returns {String}\nfunction buildQuotesRegExp( quoteCharacter ) {\n\treturn new RegExp( `(^|\\\\s)(${ quoteCharacter })([^${ quoteCharacter }]*)(${ quoteCharacter })$` );\n}\n\n// Reads text transformation config and returns normalized array of transformations objects.\n//\n// @param {module:typing/texttransformation~TextTransformationDescription} config\n// @returns {Array.<{from:String,to:Function}>}\nfunction normalizeTransformations( config ) {\n\tconst extra = config.extra || [];\n\tconst remove = config.remove || [];\n\tconst isNotRemoved = transformation => !remove.includes( transformation );\n\n\tconst configured = config.include.concat( extra ).filter( isNotRemoved );\n\n\treturn expandGroupsAndRemoveDuplicates( configured )\n\t\t.filter( isNotRemoved ) // Filter out 'remove' transformations as they might be set in group\n\t\t.map( transformation => TRANSFORMATIONS[ transformation ] || transformation )\n\t\t.map( transformation => ( {\n\t\t\tfrom: normalizeFrom( transformation.from ),\n\t\t\tto: normalizeTo( transformation.to )\n\t\t} ) );\n}\n\n// Reads definitions and expands named groups if needed to transformation names.\n// This method also removes duplicated named transformations if any.\n//\n// @param {Array.<String|Object>} definitions\n// @returns {Array.<String|Object>}\nfunction expandGroupsAndRemoveDuplicates( definitions ) {\n\t// Set is using to make sure that transformation names are not duplicated.\n\tconst definedTransformations = new Set();\n\n\tfor ( const transformationOrGroup of definitions ) {\n\t\tif ( TRANSFORMATION_GROUPS[ transformationOrGroup ] ) {\n\t\t\tfor ( const transformation of TRANSFORMATION_GROUPS[ transformationOrGroup ] ) {\n\t\t\t\tdefinedTransformations.add( transformation );\n\t\t\t}\n\t\t} else {\n\t\t\tdefinedTransformations.add( transformationOrGroup );\n\t\t}\n\t}\n\n\treturn Array.from( definedTransformations );\n}\n\n/**\n * The text transformation definition object. It describes what should be replaced with what.\n *\n * The input value (`from`) can be passed either as a string or as a regular expression.\n *\n * * If a string is passed, it will be simply checked if the end of the input matches it.\n * * If a regular expression is passed, its entire length must be covered with capturing groups (e.g. `/(foo)(bar)$/`).\n * Also, since it is compared against the end of the input, it has to end with  `$` to be correctly matched.\n * See examples below.\n *\n * The output value (`to`) can be passed as a string, as an array or as a function.\n *\n * * If a string is passed, it will be used as a replacement value as-is. Note that a string output value can be used only if\n * the input value is a string, too.\n * * If an array is passed, it has to have the same number of elements as there are capturing groups in the input value regular expression.\n * Each capture group will be replaced with a corresponding string from the passed array. If a given capturing group should not be replaced,\n * use `null` instead of passing a string.\n * * If a function is used, it should return an array as described above. The function is passed one parameter &mdash; an array with matches\n * by the regular expression. See the examples below.\n *\n * A simple string-to-string replacement:\n *\n *\t\t{ from: '(c)', to: '©' }\n *\n * Change quote styles using a regular expression. Note how all the parts are in separate capturing groups and the space at the beginning\n * and the text inside quotes are not replaced (`null` passed as the first and the third value in the `to` parameter):\n *\n *\t\t{\n *\t\t\tfrom: /(^|\\s)(\")([^\"]*)(\")$/,\n *\t\t\tto: [ null, '“', null, '”' ]\n *\t\t}\n *\n * Automatic uppercase after a dot using a callback:\n *\n *\t\t{\n *\t\t\tfrom: /(\\. )([a-z])$/,\n *\t\t\tto: matches => [ null, matches[ 1 ].toUpperCase() ]\n *\t\t}\n *\n * @typedef {Object} module:typing/texttransformation~TextTransformationDescription\n * @property {String|RegExp} from The string or regular expression to transform.\n * @property {String} to The text to transform compatible with `String.replace()`.\n */\n\n/**\n * The configuration of the {@link module:typing/texttransformation~TextTransformation} feature.\n *\n * Read more in {@link module:typing/texttransformation~TextTransformationConfig}.\n *\n * @member {module:typing/texttransformation~TextTransformationConfig} module:typing/typing~TypingConfig#transformations\n */\n\n/**\n * The configuration of the text transformation feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\ttyping: {\n *\t\t\t\t\ttransformations: ... // Text transformation feature options.\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * By default, the feature comes pre-configured\n * (via {@link module:typing/texttransformation~TextTransformationConfig#include `config.typing.transformations.include`}) with the\n * following groups of transformations:\n *\n * * Typography (group name: `typography`)\n *   - `ellipsis`: transforms `...` to `…`\n *   - `enDash`: transforms ` -- ` to ` – `\n *   - `emDash`: transforms ` --- ` to ` — `\n * * Quotations (group name: `quotes`)\n *   - `quotesPrimary`: transforms `\"Foo bar\"` to `“Foo bar”`\n *   - `quotesSecondary`: transforms `'Foo bar'` to `‘Foo bar’`\n * * Symbols (group name: `symbols`)\n *   - `trademark`: transforms `(tm)` to `™`\n *   - `registeredTrademark`: transforms `(r)` to `®`\n *   - `copyright`: transforms `(c)` to `©`\n * * Mathematical (group name: `mathematical`)\n *   - `oneHalf`: transforms `1/2` to: `½`\n *   - `oneThird`: transforms `1/3` to: `⅓`\n *   - `twoThirds`: transforms `2/3` to: `⅔`\n *   - `oneForth`: transforms `1/4` to: `¼`\n *   - `threeQuarters`: transforms `3/4` to: `¾`\n *   - `lessThanOrEqual`: transforms `<=` to: `≤`\n *   - `greaterThanOrEqual`: transforms `>=` to: `≥`\n *   - `notEqual`: transforms `!=` to: `≠`\n *   - `arrowLeft`: transforms `<-` to: `←`\n *   - `arrowRight`: transforms `->` to: `→`\n * * Misc:\n *   - `quotesPrimaryEnGb`: transforms `'Foo bar'` to `‘Foo bar’`\n *   - `quotesSecondaryEnGb`: transforms `\"Foo bar\"` to `“Foo bar”`\n *   - `quotesPrimaryPl`: transforms `\"Foo bar\"` to `„Foo bar”`\n *   - `quotesSecondaryPl`:  transforms `'Foo bar'` to `‚Foo bar’`\n *\n * In order to load additional transformations, use the\n * {@link module:typing/texttransformation~TextTransformationConfig#extra `transformations.extra` option}.\n *\n * In order to narrow down the list of transformations, use the\n * {@link module:typing/texttransformation~TextTransformationConfig#remove `transformations.remove` option}.\n *\n * In order to completely override the supported transformations, use the\n * {@link module:typing/texttransformation~TextTransformationConfig#include `transformations.include` option}.\n *\n * Examples:\n *\n *\t\tconst transformationsConfig = {\n *\t\t\tinclude: [\n *\t\t\t\t// Use only the 'quotes' and 'typography' groups.\n *\t\t\t\t'quotes',\n *\t\t\t\t'typography',\n *\n *\t\t\t\t// Plus, some custom transformation.\n *\t\t\t\t{ from: 'CKE', to: 'CKEditor' }\n *\t\t\t]\n *\t\t};\n *\n *\t\tconst transformationsConfig = {\n *\t\t\t// Remove the 'ellipsis' transformation loaded by the 'typography' group.\n *\t\t\tremove: [ 'ellipsis' ]\n *\t\t}\n *\n * @interface TextTransformationConfig\n */\n\n/* eslint-disable max-len */\n/**\n * The standard list of text transformations supported by the editor. By default it comes pre-configured with a couple dozen of them\n * (see {@link module:typing/texttransformation~TextTransformationConfig} for the full list). You can override this list completely\n * by setting this option or use the other two options\n * ({@link module:typing/texttransformation~TextTransformationConfig#extra `transformations.extra`},\n * {@link module:typing/texttransformation~TextTransformationConfig#remove `transformations.remove`}) to fine-tune the default list.\n *\n * @member {Array.<module:typing/texttransformation~TextTransformationDescription>} module:typing/texttransformation~TextTransformationConfig#include\n */\n\n/**\n * Additional text transformations that are added to the transformations defined in\n * {@link module:typing/texttransformation~TextTransformationConfig#include `transformations.include`}.\n *\n *\t\tconst transformationsConfig = {\n *\t\t\textra: [\n *\t\t\t\t{ from: 'CKE', to: 'CKEditor' }\n *\t\t\t]\n *\t\t};\n *\n * @member {Array.<module:typing/texttransformation~TextTransformationDescription>} module:typing/texttransformation~TextTransformationConfig#extra\n */\n\n/**\n * The text transformation names that are removed from transformations defined in\n * {@link module:typing/texttransformation~TextTransformationConfig#include `transformations.include`} or\n * {@link module:typing/texttransformation~TextTransformationConfig#extra `transformations.extra`}.\n *\n *\t\tconst transformationsConfig = {\n *\t\t\tremove: [\n *\t\t\t\t'ellipsis',    // Remove only 'ellipsis' from the 'typography' group.\n *\t\t\t\t'mathematical' // Remove all transformations from the 'mathematical' group.\n *\t\t\t]\n *\t\t}\n *\n * @member {Array.<module:typing/texttransformation~TextTransformationDescription>} module:typing/texttransformation~TextTransformationConfig#remove\n */\n/* eslint-enable max-len */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlightcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The highlight command. It is used by the {@link module:highlight/highlightediting~HighlightEditing highlight feature}\n * to apply the text highlighting.\n *\n *\t\teditor.execute( 'highlight', { value: 'greenMarker' } );\n *\n * **Note**: Executing the command without a value removes the attribute from the model. If the selection is collapsed\n * inside a text with the highlight attribute, the command will remove the attribute from the entire range\n * of that text.\n *\n * @extends module:core/command~Command\n */\nexport default class HighlightCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\t/**\n\t\t * A value indicating whether the command is active. If the selection has some highlight attribute,\n\t\t * it corresponds to the value of that attribute.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {undefined|String} module:highlight/highlightcommand~HighlightCommand#value\n\t\t */\n\t\tthis.value = doc.selection.getAttribute( 'highlight' );\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'highlight' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {String} [options.value] The value to apply.\n\t *\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst highlighter = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'highlight' );\n\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition();\n\n\t\t\t\t// When selection is inside text with `highlight` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'highlight' ) ) {\n\t\t\t\t\t// Find the full highlighted range.\n\t\t\t\t\tconst isSameHighlight = value => {\n\t\t\t\t\t\treturn value.item.hasAttribute( 'highlight' ) && value.item.getAttribute( 'highlight' ) === this.value;\n\t\t\t\t\t};\n\n\t\t\t\t\tconst highlightStart = position.getLastMatchingPosition( isSameHighlight, { direction: 'backward' } );\n\t\t\t\t\tconst highlightEnd = position.getLastMatchingPosition( isSameHighlight );\n\n\t\t\t\t\tconst highlightRange = writer.createRange( highlightStart, highlightEnd );\n\n\t\t\t\t\t// Then depending on current value...\n\t\t\t\t\tif ( !highlighter || this.value === highlighter ) {\n\t\t\t\t\t\t// ...remove attribute when passing highlighter different then current or executing \"eraser\".\n\t\t\t\t\t\twriter.removeAttribute( 'highlight', highlightRange );\n\t\t\t\t\t\twriter.removeSelectionAttribute( 'highlight' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ...update `highlight` value.\n\t\t\t\t\t\twriter.setAttribute( 'highlight', highlighter, highlightRange );\n\t\t\t\t\t\twriter.setSelectionAttribute( 'highlight', highlighter );\n\t\t\t\t\t}\n\t\t\t\t} else if ( highlighter ) {\n\t\t\t\t\twriter.setSelectionAttribute( 'highlight', highlighter );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( highlighter ) {\n\t\t\t\t\t\twriter.setAttribute( 'highlight', highlighter, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( 'highlight', range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlightediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport HighlightCommand from './highlightcommand';\n\n/**\n * The highlight editing feature. It introduces the {@link module:highlight/highlightcommand~HighlightCommand command} and the `highlight`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<mark>` element with a `class` attribute (`<mark class=\"marker-green\">...</mark>`) depending\n * on the {@link module:highlight/highlight~HighlightConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HighlightEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'HighlightEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'highlight', {\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tmodel: 'yellowMarker',\n\t\t\t\t\tclass: 'marker-yellow',\n\t\t\t\t\ttitle: 'Yellow marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-yellow)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'greenMarker',\n\t\t\t\t\tclass: 'marker-green',\n\t\t\t\t\ttitle: 'Green marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-green)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'pinkMarker',\n\t\t\t\t\tclass: 'marker-pink',\n\t\t\t\t\ttitle: 'Pink marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-pink)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'blueMarker',\n\t\t\t\t\tclass: 'marker-blue',\n\t\t\t\t\ttitle: 'Blue marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-blue)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'redPen',\n\t\t\t\t\tclass: 'pen-red',\n\t\t\t\t\ttitle: 'Red pen',\n\t\t\t\t\tcolor: 'var(--ck-highlight-pen-red)',\n\t\t\t\t\ttype: 'pen'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'greenPen',\n\t\t\t\t\tclass: 'pen-green',\n\t\t\t\t\ttitle: 'Green pen',\n\t\t\t\t\tcolor: 'var(--ck-highlight-pen-green)',\n\t\t\t\t\ttype: 'pen'\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow highlight attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'highlight' } );\n\n\t\tconst options = editor.config.get( 'highlight.options' );\n\n\t\t// Set-up the two-way conversion.\n\t\teditor.conversion.attributeToElement( _buildDefinition( options ) );\n\n\t\teditor.commands.add( 'highlight', new HighlightCommand( editor ) );\n\t}\n}\n\n// Converts the options array to a converter definition.\n//\n// @param {Array.<module:highlight/highlight~HighlightOption>} options An array with configured options.\n// @returns {module:engine/conversion/conversion~ConverterDefinition}\nfunction _buildDefinition( options ) {\n\tconst definition = {\n\t\tmodel: {\n\t\t\tkey: 'highlight',\n\t\t\tvalues: []\n\t\t},\n\t\tview: {}\n\t};\n\n\tfor ( const option of options ) {\n\t\tdefinition.model.values.push( option.model );\n\t\tdefinition.view[ option.model ] = {\n\t\t\tname: 'mark',\n\t\t\tclasses: option.class\n\t\t};\n\t}\n\n\treturn definition;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/splitbuttonview\n */\n\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\n\nimport '../../../theme/components/dropdown/splitbutton.css';\n\n/**\n * The split button view class.\n *\n *\t\tconst view = new SplitButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/view~View\n */\nexport default class SplitButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the split button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * A main button of split button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.actionView = this._createActionView();\n\n\t\t/**\n\t\t * A secondary button of split button that opens dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the split button:\n\t\t *\n\t\t * * <kbd>▶</kbd> moves focus to arrow view when action view is focused,\n\t\t * * <kbd>◀</kbd> moves focus to action view when arrow view is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-splitbutton',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tthis.arrowView.bindTemplate.if( 'isOn', 'ck-splitbutton_open' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.actionView );\n\t\tthis.children.add( this.arrowView );\n\n\t\tthis.focusTracker.add( this.actionView.element );\n\t\tthis.focusTracker.add( this.arrowView.element );\n\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowright', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.actionView.element ) {\n\t\t\t\tthis.arrowView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowleft', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.arrowView.element ) {\n\t\t\t\tthis.actionView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the {@link #actionView#element} of the action part of split button.\n\t */\n\tfocus() {\n\t\tthis.actionView.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #actionView} and binds it with main split button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createActionView() {\n\t\tconst actionView = new ButtonView();\n\n\t\tactionView.bind(\n\t\t\t'icon',\n\t\t\t'isEnabled',\n\t\t\t'isOn',\n\t\t\t'isToggleable',\n\t\t\t'keystroke',\n\t\t\t'label',\n\t\t\t'tabindex',\n\t\t\t'tooltip',\n\t\t\t'tooltipPosition',\n\t\t\t'type',\n\t\t\t'withText'\n\t\t).to( this );\n\n\t\tactionView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-splitbutton__action'\n\t\t\t}\n\t\t} );\n\n\t\tactionView.delegate( 'execute' ).to( this );\n\n\t\treturn actionView;\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #arrowView} and binds it with main split button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new ButtonView();\n\t\tconst bind = arrowView.bindTemplate;\n\n\t\tarrowView.icon = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-splitbutton__arrow',\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': bind.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\tarrowView.bind( 'isEnabled' ).to( this );\n\n\t\tarrowView.delegate( 'execute' ).to( this, 'open' );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlightui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport markerIcon from './../theme/icons/marker.svg';\nimport penIcon from './../theme/icons/pen.svg';\nimport eraserIcon from '@ckeditor/ckeditor5-core/theme/icons/eraser.svg';\n\nimport ToolbarSeparatorView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview';\nimport SplitButtonView from '@ckeditor/ckeditor5-ui/src/dropdown/button/splitbuttonview';\nimport { createDropdown, addToolbarToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\n\nimport './../theme/highlight.css';\n\n/**\n * The default highlight UI plugin. It introduces:\n *\n * * The `'highlight'` dropdown,\n * * The `'removeHighlight'` and `'highlight:*'` buttons.\n *\n * The default configuration includes the following buttons:\n *\n * * `'highlight:yellowMarker'`\n * * `'highlight:greenMarker'`\n * * `'highlight:pinkMarker'`\n * * `'highlight:blueMarker'`\n * * `'highlight:redPen'`\n * * `'highlight:greenPen'`\n *\n * See the {@link module:highlight/highlight~HighlightConfig#options configuration} to learn more\n * about the defaults.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HighlightUI extends Plugin {\n\t/**\n\t * Returns the localized option titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with default\n\t * {@link module:highlight/highlight~HighlightConfig#options} are available:\n\t *\n\t * * `'Yellow marker'`,\n\t * * `'Green marker'`,\n\t * * `'Pink marker'`,\n\t * * `'Blue marker'`,\n\t * * `'Red pen'`,\n\t * * `'Green pen'`.\n\t *\n\t * @readonly\n\t * @type {Object.<String,String>}\n\t */\n\tget localizedOptionTitles() {\n\t\tconst t = this.editor.t;\n\n\t\treturn {\n\t\t\t'Yellow marker': t( 'Yellow marker' ),\n\t\t\t'Green marker': t( 'Green marker' ),\n\t\t\t'Pink marker': t( 'Pink marker' ),\n\t\t\t'Blue marker': t( 'Blue marker' ),\n\t\t\t'Red pen': t( 'Red pen' ),\n\t\t\t'Green pen': t( 'Green pen' )\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'HighlightUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst options = this.editor.config.get( 'highlight.options' );\n\n\t\tfor ( const option of options ) {\n\t\t\tthis._addHighlighterButton( option );\n\t\t}\n\n\t\tthis._addRemoveHighlightButton();\n\n\t\tthis._addDropdown( options );\n\t}\n\n\t/**\n\t * Creates the \"Remove highlight\" button.\n\t *\n\t * @private\n\t */\n\t_addRemoveHighlightButton() {\n\t\tconst t = this.editor.t;\n\n\t\tthis._addButton( 'removeHighlight', t( 'Remove highlight' ), eraserIcon );\n\t}\n\n\t/**\n\t * Creates a toolbar button from the provided highlight option.\n\t *\n\t * @param {module:highlight/highlight~HighlightOption} option\n\t * @private\n\t */\n\t_addHighlighterButton( option ) {\n\t\tconst command = this.editor.commands.get( 'highlight' );\n\n\t\t// TODO: change naming\n\t\tthis._addButton( 'highlight:' + option.model, option.title, getIconForType( option.type ), option.model, decorateHighlightButton );\n\n\t\tfunction decorateHighlightButton( button ) {\n\t\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t\tbutton.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\t\t\tbutton.iconView.fillColor = option.color;\n\t\t\tbutton.isToggleable = true;\n\t\t}\n\t}\n\n\t/**\n\t * Internal method for creating highlight buttons.\n\t *\n\t * @param {String} name The name of the button.\n\t * @param {String} label The label for the button.\n\t * @param {String} icon The button icon.\n\t * @param {Function} [decorateButton=()=>{}] Additional method for extending the button.\n\t * @private\n\t */\n\t_addButton( name, label, icon, value, decorateButton = () => {} ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tconst localized = this.localizedOptionTitles[ label ] ? this.localizedOptionTitles[ label ] : label;\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: localized,\n\t\t\t\ticon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\t// Add additional behavior for buttonView.\n\t\t\tdecorateButton( buttonView );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the split button dropdown UI from the provided highlight options.\n\t *\n\t * @param {Array.<module:highlight/highlight~HighlightOption>} options\n\t * @private\n\t */\n\t_addDropdown( options ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\n\t\tconst startingHighlighter = options[ 0 ];\n\n\t\tconst optionsMap = options.reduce( ( retVal, option ) => {\n\t\t\tretVal[ option.model ] = option;\n\n\t\t\treturn retVal;\n\t\t}, {} );\n\n\t\tcomponentFactory.add( 'highlight', locale => {\n\t\t\tconst command = editor.commands.get( 'highlight' );\n\t\t\tconst dropdownView = createDropdown( locale, SplitButtonView );\n\t\t\tconst splitButtonView = dropdownView.buttonView;\n\n\t\t\tsplitButtonView.set( {\n\t\t\t\ttooltip: t( 'Highlight' ),\n\t\t\t\t// Holds last executed highlighter.\n\t\t\t\tlastExecuted: startingHighlighter.model,\n\t\t\t\t// Holds current highlighter to execute (might be different then last used).\n\t\t\t\tcommandValue: startingHighlighter.model,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\t// Dropdown button changes to selection (command.value):\n\t\t\t// - If selection is in highlight it get active highlight appearance (icon, color) and is activated.\n\t\t\t// - Otherwise it gets appearance (icon, color) of last executed highlight.\n\t\t\tsplitButtonView.bind( 'icon' ).to( command, 'value', value => getIconForType( getActiveOption( value, 'type' ) ) );\n\t\t\tsplitButtonView.bind( 'color' ).to( command, 'value', value => getActiveOption( value, 'color' ) );\n\t\t\tsplitButtonView.bind( 'commandValue' ).to( command, 'value', value => getActiveOption( value, 'model' ) );\n\t\t\tsplitButtonView.bind( 'isOn' ).to( command, 'value', value => !!value );\n\n\t\t\tsplitButtonView.delegate( 'execute' ).to( dropdownView );\n\n\t\t\t// Create buttons array.\n\t\t\tconst buttons = options.map( option => {\n\t\t\t\t// Get existing highlighter button.\n\t\t\t\tconst buttonView = componentFactory.create( 'highlight:' + option.model );\n\n\t\t\t\t// Update lastExecutedHighlight on execute.\n\t\t\t\tthis.listenTo( buttonView, 'execute', () => dropdownView.buttonView.set( { lastExecuted: option.model } ) );\n\n\t\t\t\treturn buttonView;\n\t\t\t} );\n\n\t\t\t// Make toolbar button enabled when any button in dropdown is enabled before adding separator and eraser.\n\t\t\tdropdownView.bind( 'isEnabled' ).toMany( buttons, 'isEnabled', ( ...areEnabled ) => areEnabled.some( isEnabled => isEnabled ) );\n\n\t\t\t// Add separator and eraser buttons to dropdown.\n\t\t\tbuttons.push( new ToolbarSeparatorView() );\n\t\t\tbuttons.push( componentFactory.create( 'removeHighlight' ) );\n\n\t\t\taddToolbarToDropdown( dropdownView, buttons );\n\t\t\tbindToolbarIconStyleToActiveColor( dropdownView );\n\n\t\t\tdropdownView.toolbarView.ariaLabel = t( 'Text highlight toolbar' );\n\n\t\t\t// Execute current action from dropdown's split button action button.\n\t\t\tsplitButtonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value: splitButtonView.commandValue } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\t// Returns active highlighter option depending on current command value.\n\t\t\t// If current is not set or it is the same as last execute this method will return the option key (like icon or color)\n\t\t\t// of last executed highlighter. Otherwise it will return option key for current one.\n\t\t\tfunction getActiveOption( current, key ) {\n\t\t\t\tconst whichHighlighter = !current ||\n\t\t\t\tcurrent === splitButtonView.lastExecuted ? splitButtonView.lastExecuted : current;\n\n\t\t\t\treturn optionsMap[ whichHighlighter ][ key ];\n\t\t\t}\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n}\n\n// Extends split button icon style to reflect last used button style.\nfunction bindToolbarIconStyleToActiveColor( dropdownView ) {\n\tconst actionView = dropdownView.buttonView.actionView;\n\n\tactionView.iconView.bind( 'fillColor' ).to( dropdownView.buttonView, 'color' );\n}\n\n// Returns icon for given highlighter type.\nfunction getIconForType( type ) {\n\treturn type === 'marker' ? markerIcon : penIcon;\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.636 9.531l-2.758 3.94a.5.5 0 0 0 .122.696l3.224 2.284h1.314l2.636-3.736L8.636 9.53zm.288 8.451L5.14 15.396a2 2 0 0 1-.491-2.786l6.673-9.53a2 2 0 0 1 2.785-.49l3.742 2.62a2 2 0 0 1 .491 2.785l-7.269 10.053-2.147-.066z\\\"/><path d=\\\"M4 18h5.523v-1H4zm-2 0h1v-1H2z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path class=\\\"ck-icon__fill\\\" d=\\\"M10.798 1.59L3.002 12.875l1.895 1.852 2.521 1.402 6.997-12.194z\\\"/><path d=\\\"M2.556 16.727l.234-.348c-.297-.151-.462-.293-.498-.426-.036-.137.002-.416.115-.837.094-.25.15-.449.169-.595a4.495 4.495 0 0 0 0-.725c-.209-.621-.303-1.041-.284-1.26.02-.218.178-.506.475-.862l6.77-9.414c.539-.91 1.605-.85 3.199.18 1.594 1.032 2.188 1.928 1.784 2.686l-5.877 10.36c-.158.412-.333.673-.526.782-.193.108-.604.179-1.232.21-.362.131-.608.237-.738.318-.13.081-.305.238-.526.47-.293.265-.504.397-.632.397-.096 0-.27-.075-.524-.226l-.31.41-1.6-1.12zm-.279.415l1.575 1.103-.392.515H1.19l1.087-1.618zm8.1-13.656l-4.953 6.9L8.75 12.57l4.247-7.574c.175-.25-.188-.647-1.092-1.192-.903-.546-1.412-.652-1.528-.32zM8.244 18.5L9.59 17h9.406v1.5H8.245z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path class=\\\"ck-icon__fill\\\" d=\\\"M10.126 2.268L2.002 13.874l1.895 1.852 2.521 1.402L14.47 5.481l-1.543-2.568-2.801-.645z\\\"/><path d=\\\"M4.5 18.088l-2.645-1.852-.04-2.95-.006-.005.006-.008v-.025l.011.008L8.73 2.97c.165-.233.356-.417.567-.557l-1.212.308L4.604 7.9l-.83-.558 3.694-5.495 2.708-.69 1.65 1.145.046.018.85-1.216 2.16 1.512-.856 1.222c.828.967 1.144 2.141.432 3.158L7.55 17.286l.006.005-3.055.797H4.5zm-.634.166l-1.976.516-.026-1.918 2.002 1.402zM9.968 3.817l-.006-.004-6.123 9.184 3.277 2.294 6.108-9.162.005.003c.317-.452-.16-1.332-1.064-1.966-.891-.624-1.865-.776-2.197-.349zM8.245 18.5L9.59 17h9.406v1.5H8.245z\\\"/></svg>\";","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module highlight/highlight\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport HighlightEditing from './highlightediting';\nimport HighlightUI from './highlightui';\n\n/**\n * The highlight plugin.\n *\n * For a detailed overview, check the {@glink features/highlight Highlight feature} documentation.\n *\n * This is a \"glue\" plugin which loads the {@link module:highlight/highlightediting~HighlightEditing} and\n * {@link module:highlight/highlightui~HighlightUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Highlight extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ HighlightEditing, HighlightUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Highlight';\n\t}\n}\n\n/**\n * The highlight option descriptor. See {@link module:highlight/highlight~HighlightConfig} to learn more.\n *\n *\t\t{\n *\t\t\tmodel: 'pinkMarker',\n *\t\t\tclass: 'marker-pink',\n *\t\t\ttitle: 'Pink Marker',\n *\t\t\tcolor: 'var(--ck-highlight-marker-pink)',\n *\t\t\ttype: 'marker'\n *\t\t}\n *\n * @typedef {Object} module:highlight/highlight~HighlightOption\n * @property {String} title The user-readable title of the option.\n * @property {String} model The unique attribute value in the model.\n * @property {String} color The CSS `var()` used for the highlighter. The color is used in the user interface to represent the highlighter.\n * There is a possibility to use the default color format like rgb, hex or hsl, but you need to care about the color of `<mark>`\n * by adding CSS classes definition.\n * @property {String} class The CSS class used on the `<mark>` element in the view. It should match the `color` setting.\n * @property {'marker'|'pen'} type The type of highlighter:\n *\n * * `'marker'` &ndash; Uses the `color` as the `background-color` style,\n * * `'pen'` &ndash; Uses the `color` as the font `color` style.\n */\n\n/**\n * The configuration of the {@link module:highlight/highlight~Highlight} feature.\n *\n * Read more in {@link module:highlight/highlight~HighlightConfig}.\n *\n * @member {module:highlight/highlight~HighlightConfig} module:core/editor/editorconfig~EditorConfig#highlight\n */\n\n/**\n * The configuration of the {@link module:highlight/highlight~Highlight highlight feature}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\thighlight:  ... // Highlight feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HighlightConfig\n */\n\n/**\n * The available highlight options. The default value is:\n *\n *\t\toptions: [\n *\t\t\t{\n *\t\t\t\tmodel: 'yellowMarker',\n *\t\t\t\tclass: 'marker-yellow',\n *\t\t\t\ttitle: 'Yellow marker',\n *\t\t\t\tcolor: 'var(--ck-highlight-marker-yellow)',\n *\t\t\t\ttype: 'marker'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tmodel: 'greenMarker',\n *\t\t\t\tclass: 'marker-green',\n *\t\t\t\ttitle: 'Green marker',\n *\t\t\t\tcolor: 'var(--ck-highlight-marker-green)',\n *\t\t\t\ttype: 'marker'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tmodel: 'pinkMarker',\n *\t\t\t\tclass: 'marker-pink',\n *\t\t\t\ttitle: 'Pink marker',\n *\t\t\t\tcolor: 'var(--ck-highlight-marker-pink)',\n *\t\t\t\ttype: 'marker'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tmodel: 'blueMarker',\n *\t\t\t\tclass: 'marker-blue',\n *\t\t\t\ttitle: 'Blue marker',\n *\t\t\t\tcolor: 'var(--ck-highlight-marker-blue)',\n *\t\t\t\ttype: 'marker'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tmodel: 'redPen',\n *\t\t\t\tclass: 'pen-red',\n *\t\t\t\ttitle: 'Red pen',\n *\t\t\t\tcolor: 'var(--ck-highlight-pen-red)',\n *\t\t\t\ttype: 'pen'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tmodel: 'greenPen',\n *\t\t\t\tclass: 'pen-green',\n *\t\t\t\ttitle: 'Green pen',\n *\t\t\t\tcolor: 'var(--ck-highlight-pen-green)',\n *\t\t\t\ttype: 'pen'\n *\t\t\t}\n *\t\t]\n *\n * There are two types of highlighters available:\n *\n * * `'marker'` &ndash; Rendered as a `<mark>` element, styled with the `background-color`.\n * * `'pen'` &ndash; Rendered as a `<mark>` element, styled with the font `color`.\n *\n * **Note**: The highlight feature provides a stylesheet with the CSS classes and corresponding colors defined\n * as CSS variables.\n *\n *\t\t:root {\n *\t\t\t--ck-highlight-marker-yellow: #fdfd77;\n *\t\t\t--ck-highlight-marker-green: #63f963;\n *\t\t\t--ck-highlight-marker-pink: #fc7999;\n *\t\t\t--ck-highlight-marker-blue: #72cdfd;\n *\t\t\t--ck-highlight-pen-red: #e91313;\n *\t\t\t--ck-highlight-pen-green: #118800;\n *\t\t}\n *\n *\t\t.marker-yellow { ... }\n *\t\t.marker-green { ... }\n *\t\t.marker-pink { ... }\n *\t\t.marker-blue { ... }\n *\t\t.pen-red { ... }\n *\t\t.pen-green { ... }\n *\n * It is possible to define the `color` property directly as `rgba(R, G, B, A)`,\n * `#RRGGBB[AA]` or `hsla(H, S, L, A)`. In such situation, the color will **only** apply to the UI of\n * the editor and the `<mark>` elements in the content must be styled by custom classes provided by\n * a dedicated stylesheet.\n *\n * **Note**: It is recommended for the `color` property to correspond to the class in the content\n * stylesheet because it represents the highlighter in the user interface of the editor.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\thighlight: {\n *\t\t\t\t\toptions: [\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\tmodel: 'pinkMarker',\n *\t\t\t\t\t\t\tclass: 'marker-pink',\n *\t\t\t\t\t\t\ttitle: 'Pink Marker',\n *\t\t\t\t\t\t\tcolor: 'var(--ck-highlight-marker-pink)',\n *\t\t\t\t\t\t\ttype: 'marker'\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\tmodel: 'redPen',\n *\t\t\t\t\t\t\tclass: 'pen-red',\n *\t\t\t\t\t\t\ttitle: 'Red Pen',\n *\t\t\t\t\t\t\tcolor: 'var(--ck-highlight-pen-red)',\n *\t\t\t\t\t\t\ttype: 'pen'\n *\t\t\t\t\t\t},\n *\t\t\t\t\t]\n *\t\t\t\t}\n *\t\t} )\n *\t\t.then( ... )\n *\t\t.catch( ... );\n *\n * @member {Array.<module:highlight/highlight~HighlightOption>} module:highlight/highlight~HighlightConfig#options\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/watchdog\n */\n\n/* globals window */\n\n/**\n * An abstract watchdog class that handles most of the error handling process and the state of the underlying component.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and how to use it.\n *\n * @private\n * @abstract\n */\nexport default class Watchdog {\n\t/**\n\t * @param {module:watchdog/watchdog~WatchdogConfig} config The watchdog plugin configuration.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * An array of crashes saved as an object with the following properties:\n\t\t *\n\t\t * * `message`: `String`,\n\t\t * * `stack`: `String`,\n\t\t * * `date`: `Number`,\n\t\t * * `filename`: `String | undefined`,\n\t\t * * `lineno`: `Number | undefined`,\n\t\t * * `colno`: `Number | undefined`,\n\t\t *\n\t\t * @public\n\t\t * @readonly\n\t\t * @type {Array.<Object>}\n\t\t */\n\t\tthis.crashes = [];\n\n\t\t/**\n\t\t * Specifies the state of the item watched by the watchdog. The state can be one of the following values:\n\t\t *\n\t\t * * `initializing` &ndash; Before the first initialization, and after crashes, before the item is ready.\n\t\t * * `ready` &ndash; A state when the user can interact with the item.\n\t\t * * `crashed` &ndash; A state when an error occurs. It quickly changes to `initializing` or `crashedPermanently`\n\t\t * depending on how many and how frequent errors have been caught recently.\n\t\t * * `crashedPermanently` &ndash; A state when the watchdog stops reacting to errors and keeps the item it is watching crashed,\n\t\t * * `destroyed` &ndash; A state when the item is manually destroyed by the user after calling `watchdog.destroy()`.\n\t\t *\n\t\t * @public\n\t\t * @type {'initializing'|'ready'|'crashed'|'crashedPermanently'|'destroyed'}\n\t\t */\n\t\tthis.state = 'initializing';\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @see module:watchdog/watchdog~WatchdogConfig\n\t\t */\n\t\tthis._crashNumberLimit = typeof config.crashNumberLimit === 'number' ? config.crashNumberLimit : 3;\n\n\t\t/**\n\t\t * Returns the result of the `Date.now()` call. It can be overridden in tests to mock time as some popular\n\t\t * approaches like `sinon.useFakeTimers()` do not work well with error handling.\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tthis._now = Date.now;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @see module:watchdog/watchdog~WatchdogConfig\n\t\t */\n\t\tthis._minimumNonErrorTimePeriod = typeof config.minimumNonErrorTimePeriod === 'number' ? config.minimumNonErrorTimePeriod : 5000;\n\n\t\t/**\n\t\t * Checks if the event error comes from the underlying item and restarts the item.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._boundErrorHandler = evt => {\n\t\t\t// `evt.error` is exposed by EventError while `evt.reason` is available in PromiseRejectionEvent.\n\t\t\tconst error = evt.error || evt.reason;\n\n\t\t\t// Note that `evt.reason` might be everything that is in the promise rejection.\n\t\t\t// Similarly everything that is thrown lands in `evt.error`.\n\t\t\tif ( error instanceof Error ) {\n\t\t\t\tthis._handleError( error, evt );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The creation method.\n\t\t *\n\t\t * @protected\n\t\t * @member {Function} #_creator\n\t\t * @see #setCreator\n\t\t */\n\n\t\t/**\n\t\t * The destruction method.\n\t\t *\n\t\t * @protected\n\t\t * @member {Function} #_destructor\n\t\t * @see #setDestructor\n\t\t */\n\n\t\t/**\n\t\t * The watched item.\n\t\t *\n\t\t * @abstract\n\t\t * @protected\n\t\t * @member {Object|undefined} #_item\n\t\t */\n\n\t\t/**\n\t\t * The method responsible for restarting the watched item.\n\t\t *\n\t\t * @abstract\n\t\t * @protected\n\t\t * @method #_restart\n\t\t */\n\n\t\t/**\n\t\t * Traverses the error context and the watched item to find out whether the error should\n\t\t * be handled by the given item.\n\t\t *\n\t\t * @abstract\n\t\t * @protected\n\t\t * @method #_isErrorComingFromThisItem\n\t\t * @param {module:utils/ckeditorerror~CKEditorError} error\n\t\t */\n\n\t\t/**\n\t\t * A dictionary of event emitter listeners.\n\t\t *\n\t\t * @private\n\t\t * @type {Object.<String,Array.<Function>>}\n\t\t */\n\t\tthis._listeners = {};\n\n\t\tif ( !this._restart ) {\n\t\t\tthrow new Error(\n\t\t\t\t'The Watchdog class was split into the abstract `Watchdog` class and the `EditorWatchdog` class. ' +\n\t\t\t\t'Please, use `EditorWatchdog` if you have used the `Watchdog` class previously.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the function that is responsible for creating watched items.\n\t *\n\t * @param {Function} creator A callback responsible for creating an item. Returns a promise\n\t * that is resolved when the item is created.\n\t */\n\tsetCreator( creator ) {\n\t\tthis._creator = creator;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for destroying watched items.\n\t *\n\t * @param {Function} destructor A callback that takes the item and returns the promise\n\t * to the destroying process.\n\t */\n\tsetDestructor( destructor ) {\n\t\tthis._destructor = destructor;\n\t}\n\n\t/**\n\t * Destroys the watchdog and releases the resources.\n\t */\n\tdestroy() {\n\t\tthis._stopErrorHandling();\n\n\t\tthis._listeners = {};\n\t}\n\n\t/**\n\t * Starts listening to a specific event name by registering a callback that will be executed\n\t * whenever an event with a given name fires.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param {String} eventName The event name.\n\t * @param {Function} callback A callback which will be added to event listeners.\n\t */\n\ton( eventName, callback ) {\n\t\tif ( !this._listeners[ eventName ] ) {\n\t\t\tthis._listeners[ eventName ] = [];\n\t\t}\n\n\t\tthis._listeners[ eventName ].push( callback );\n\t}\n\n\t/**\n\t * Stops listening to the specified event name by removing the callback from event listeners.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param {String} eventName The event name.\n\t * @param {Function} callback A callback which will be removed from event listeners.\n\t */\n\toff( eventName, callback ) {\n\t\tthis._listeners[ eventName ] = this._listeners[ eventName ]\n\t\t\t.filter( cb => cb !== callback );\n\t}\n\n\t/**\n\t * Fires an event with a given event name and arguments.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @protected\n\t * @param {String} eventName The event name.\n\t * @param  {...*} args Event arguments.\n\t */\n\t_fire( eventName, ...args ) {\n\t\tconst callbacks = this._listeners[ eventName ] || [];\n\n\t\tfor ( const callback of callbacks ) {\n\t\t\tcallback.apply( this, [ null, ...args ] );\n\t\t}\n\t}\n\n\t/**\n\t * Starts error handling by attaching global error handlers.\n\t *\n\t * @protected\n\t */\n\t_startErrorHandling() {\n\t\twindow.addEventListener( 'error', this._boundErrorHandler );\n\t\twindow.addEventListener( 'unhandledrejection', this._boundErrorHandler );\n\t}\n\n\t/**\n\t * Stops error handling by detaching global error handlers.\n\t *\n\t * @protected\n\t */\n\t_stopErrorHandling() {\n\t\twindow.removeEventListener( 'error', this._boundErrorHandler );\n\t\twindow.removeEventListener( 'unhandledrejection', this._boundErrorHandler );\n\t}\n\n\t/**\n\t * Checks if an error comes from the watched item and restarts it.\n\t * It reacts to {@link module:utils/ckeditorerror~CKEditorError `CKEditorError` errors} only.\n\t *\n\t * @private\n\t * @fires error\n\t * @param {Error} error Error.\n\t * @param {ErrorEvent|PromiseRejectionEvent} evt An error event.\n\t */\n\t_handleError( error, evt ) {\n\t\t// @if CK_DEBUG // if ( error.is && error.is( 'CKEditorError' ) && error.context === undefined ) {\n\t\t// @if CK_DEBUG // console.warn( 'The error is missing its context and Watchdog cannot restart the proper item.' );\n\t\t// @if CK_DEBUG // }\n\n\t\tif ( this._shouldReactToError( error ) ) {\n\t\t\tthis.crashes.push( {\n\t\t\t\tmessage: error.message,\n\t\t\t\tstack: error.stack,\n\n\t\t\t\t// `evt.filename`, `evt.lineno` and `evt.colno` are available only in ErrorEvent events\n\t\t\t\tfilename: evt.filename,\n\t\t\t\tlineno: evt.lineno,\n\t\t\t\tcolno: evt.colno,\n\t\t\t\tdate: this._now()\n\t\t\t} );\n\n\t\t\tconst causesRestart = this._shouldRestart();\n\n\t\t\tthis.state = 'crashed';\n\t\t\tthis._fire( 'stateChange' );\n\t\t\tthis._fire( 'error', { error, causesRestart } );\n\n\t\t\tif ( causesRestart ) {\n\t\t\t\tthis._restart();\n\t\t\t} else {\n\t\t\t\tthis.state = 'crashedPermanently';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether an error should be handled by the watchdog.\n\t *\n\t * @private\n\t * @param {Error} error An error that was caught by the error handling process.\n\t */\n\t_shouldReactToError( error ) {\n\t\treturn (\n\t\t\terror.is &&\n\t\t\terror.is( 'CKEditorError' ) &&\n\t\t\terror.context !== undefined &&\n\n\t\t\t// In some cases the watched item should not be restarted - e.g. during the item initialization.\n\t\t\t// That's why the `null` was introduced as a correct error context which does cause restarting.\n\t\t\terror.context !== null &&\n\n\t\t\t// Do not react to errors if the watchdog is in states other than `ready`.\n\t\t\tthis.state === 'ready' &&\n\n\t\t\tthis._isErrorComingFromThisItem( error )\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the watchdog should restart the underlying item.\n\t *\n\t * @private\n\t */\n\t_shouldRestart() {\n\t\tif ( this.crashes.length <= this._crashNumberLimit ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst lastErrorTime = this.crashes[ this.crashes.length - 1 ].date;\n\t\tconst firstMeaningfulErrorTime = this.crashes[ this.crashes.length - 1 - this._crashNumberLimit ].date;\n\n\t\tconst averageNonErrorTimePeriod = ( lastErrorTime - firstMeaningfulErrorTime ) / this._crashNumberLimit;\n\n\t\treturn averageNonErrorTimePeriod > this._minimumNonErrorTimePeriod;\n\t}\n\n\t/**\n\t * Fired when a new {@link module:utils/ckeditorerror~CKEditorError `CKEditorError`} error connected to the watchdog instance occurs\n\t * and the watchdog will react to it.\n\t *\n\t * \twatchdog.on( 'error', ( evt, { error, causesRestart } ) => {\n\t * \t\tconsole.log( 'An error occurred.' );\n\t * \t} );\n\t *\n\t * @event error\n\t */\n}\n\n/**\n * The watchdog plugin configuration.\n *\n * @typedef {Object} WatchdogConfig\n *\n * @property {Number} [crashNumberLimit=3] A threshold specifying the number of watched item crashes\n * when the watchdog stops restarting the item in case of errors.\n * After this limit is reached and the time between the last errors is shorter than `minimumNonErrorTimePeriod`,\n * the watchdog changes its state to `crashedPermanently` and it stops restarting the item. This prevents an infinite restart loop.\n *\n * @property {Number} [minimumNonErrorTimePeriod=5000] An average number of milliseconds between the last watched item errors\n * (defaults to 5000). When the period of time between errors is lower than that and the `crashNumberLimit` is also reached,\n * the watchdog changes its state to `crashedPermanently` and it stops restarting the item. This prevents an infinite restart loop.\n *\n * @property {Number} [saveInterval=5000] A minimum number of milliseconds between saving the editor data internally (defaults to 5000).\n * Note that for large documents this might impact the editor performance.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\n\nexport default function getSubNodes( head, excludedProperties = new Set() ) {\n\tconst nodes = [ head ];\n\n\t// @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n\n\t// Nodes are stored to prevent infinite looping.\n\tconst subNodes = new Set();\n\n\twhile ( nodes.length > 0 ) {\n\t\tconst node = nodes.shift();\n\n\t\tif ( subNodes.has( node ) || shouldNodeBeSkipped( node ) || excludedProperties.has( node ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsubNodes.add( node );\n\n\t\t// Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\t\tif ( node[ Symbol.iterator ] ) {\n\t\t\t// The custom editor iterators might cause some problems if the editor is crashed.\n\t\t\ttry {\n\t\t\t\tfor ( const n of node ) {\n\t\t\t\t\tnodes.push( n );\n\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t\t}\n\t\t\t} catch ( err ) {\n\t\t\t\t// Do not log errors for broken structures\n\t\t\t\t// since we are in the error handling process already.\n\t\t\t\t// eslint-disable-line no-empty\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( const key in node ) {\n\t\t\t\t// We share a reference via the protobuf library within the editors,\n\t\t\t\t// hence the shared value should be skipped. Although, it's not a perfect\n\t\t\t\t// solution since new places like that might occur in the future.\n\t\t\t\tif ( key === 'defaultValue' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnodes.push( node[ key ] );\n\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t}\n\t\t}\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n\treturn subNodes;\n}\n\nfunction shouldNodeBeSkipped( node ) {\n\tconst type = Object.prototype.toString.call( node );\n\tconst typeOfNode = typeof node;\n\n\treturn (\n\t\ttypeOfNode === 'number' ||\n\t\ttypeOfNode === 'boolean' ||\n\t\ttypeOfNode === 'string' ||\n\t\ttypeOfNode === 'symbol' ||\n\t\ttypeOfNode === 'function' ||\n\t\ttype === '[object Date]' ||\n\t\ttype === '[object RegExp]' ||\n\t\ttype === '[object Module]' ||\n\n\t\tnode === undefined ||\n\t\tnode === null ||\n\n\t\t// Skip native DOM objects, e.g. Window, nodes, events, etc.\n\t\tnode instanceof EventTarget ||\n\t\tnode instanceof Event\n\t);\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\n\nimport getSubNodes from './getsubnodes';\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @param {Object|Array} target1\n * @param {Object|Array} target2\n */\nexport default function areConnectedThroughProperties( target1, target2, excludedNodes = new Set() ) {\n\tif ( target1 === target2 && isObject( target1 ) ) {\n\t\treturn true;\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\tconst subNodes1 = getSubNodes( target1, excludedNodes );\n\tconst subNodes2 = getSubNodes( target2, excludedNodes );\n\n\tfor ( const node of subNodes1 ) {\n\t\tif ( subNodes2.has( node ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/* istanbul ignore next */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps( target1, target2, excludedNodes ) {\n\tconst { subNodes: subNodes1, prevNodeMap: prevNodeMap1 } = getSubNodes( target1, excludedNodes.subNodes );\n\tconst { subNodes: subNodes2, prevNodeMap: prevNodeMap2 } = getSubNodes( target2, excludedNodes.subNodes );\n\n\tfor ( const sharedNode of subNodes1 ) {\n\t\tif ( subNodes2.has( sharedNode ) ) {\n\t\t\tconst connection = [];\n\n\t\t\tconnection.push( sharedNode );\n\n\t\t\tlet node = prevNodeMap1.get( sharedNode );\n\n\t\t\twhile ( node && node !== target1 ) {\n\t\t\t\tconnection.push( node );\n\t\t\t\tnode = prevNodeMap1.get( node );\n\t\t\t}\n\n\t\t\tnode = prevNodeMap2.get( sharedNode );\n\n\t\t\twhile ( node && node !== target2 ) {\n\t\t\t\tconnection.unshift( node );\n\t\t\t\tnode = prevNodeMap2.get( node );\n\t\t\t}\n\n\t\t\tconsole.log( '--------' );\n\t\t\tconsole.log( { target1 } );\n\t\t\tconsole.log( { sharedNode } );\n\t\t\tconsole.log( { target2 } );\n\t\t\tconsole.log( { connection } );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction isObject( structure ) {\n\treturn typeof structure === 'object' && structure !== null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\n/* globals console */\n\nimport { throttle, cloneDeepWith, isElement } from 'lodash-es';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport Watchdog from './watchdog';\n\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\nexport default class EditorWatchdog extends Watchdog {\n\t/**\n\t * @param {*} Editor The editor class.\n\t * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog plugin configuration.\n\t */\n\tconstructor( Editor, watchdogConfig = {} ) {\n\t\tsuper( watchdogConfig );\n\n\t\t/**\n\t\t * The current editor instance.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis._editor = null;\n\n\t\t/**\n\t\t * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n\t\t * unless a new action happens in the meantime.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._throttledSave = throttle(\n\t\t\tthis._save.bind( this ),\n\t\t\ttypeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000\n\t\t);\n\n\t\t/**\n\t\t * The latest saved editor data represented as a root name -> root data object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>} #_data\n\t\t */\n\n\t\t/**\n\t\t * The last document version.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_lastDocumentVersion\n\t\t */\n\n\t\t/**\n\t\t * The editor source element or data.\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement|String|Object.<String|String>} #_elementOrData\n\t\t */\n\n\t\t/**\n\t\t * The editor configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object|undefined} #_config\n\t\t */\n\n\t\t// Set default creator and destructor functions:\n\t\tthis._creator = ( ( elementOrData, config ) => Editor.create( elementOrData, config ) );\n\t\tthis._destructor = editor => editor.destroy();\n\t}\n\n\t/**\n\t * The current editor instance.\n\t *\n\t * @readonly\n\t * @type {module:core/editor/editor~Editor}\n\t */\n\tget editor() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _item() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the editor creation.\n\t * It expects a function that should return a promise.\n\t *\n\t *\t\twatchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n\t *\n\t * @method #setCreator\n\t * @param {Function} creator\n\t */\n\n\t/**\n\t * Sets the function that is responsible for the editor destruction.\n\t * Overrides the default destruction function, which destroys only the editor instance.\n\t * It expects a function that should return a promise or `undefined`.\n\t *\n\t *\t\twatchdog.setDestructor( editor => {\n\t *\t\t\t// Do something before the editor is destroyed.\n\t *\n\t *\t\t\treturn editor\n\t *\t\t\t\t.destroy()\n\t *\t\t\t\t.then( () => {\n\t *\t\t\t\t\t// Do something after the editor is destroyed.\n\t *\t\t\t\t} );\n\t *\t\t} );\n\t *\n\t * @method #setDestructor\n\t * @param {Function} destructor\n\t */\n\n\t/**\n\t * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n\t * the state to `initializing`.\n\t *\n\t * @protected\n\t * @fires restart\n\t * @returns {Promise}\n\t */\n\t_restart() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'initializing';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\treturn this._destroy();\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tconsole.error( 'An error happened during the editor destroying.', err );\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tif ( typeof this._elementOrData === 'string' ) {\n\t\t\t\t\treturn this.create( this._data, this._config, this._config.context );\n\t\t\t\t} else {\n\t\t\t\t\tconst updatedConfig = Object.assign( {}, this._config, {\n\t\t\t\t\t\tinitialData: this._data\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn this.create( this._elementOrData, updatedConfig, updatedConfig.context );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tthis._fire( 'restart' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates the editor instance and keeps it running, using the defined creator and destructor.\n\t *\n\t * @param {HTMLElement|String|Object.<String|String>} [elementOrData] The editor source element or the editor data.\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @param {Object} [context] A context for the editor.\n\t *\n\t * @returns {Promise}\n\t */\n\tcreate( elementOrData = this._elementOrData, config = this._config, context ) {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tsuper._startErrorHandling();\n\n\t\t\t\tthis._elementOrData = elementOrData;\n\n\t\t\t\t// Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n\t\t\t\t// when an error occurs in one of these editors, the watchdog will restart all of them.\n\t\t\t\tthis._config = this._cloneEditorConfiguration( config ) || {};\n\n\t\t\t\tthis._config.context = context;\n\n\t\t\t\treturn this._creator( elementOrData, this._config );\n\t\t\t} )\n\t\t\t.then( editor => {\n\t\t\t\tthis._editor = editor;\n\n\t\t\t\teditor.model.document.on( 'change:data', this._throttledSave );\n\n\t\t\t\tthis._lastDocumentVersion = editor.model.document.version;\n\t\t\t\tthis._data = this._getData();\n\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the watchdog and the current editor instance. It fires the callback\n\t * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n\t * It also sets the state to `destroyed`.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'destroyed';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\tsuper.destroy();\n\n\t\t\t\treturn this._destroy();\n\t\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @returns {Promise}\n\t */\n\t_destroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\t// Save data if there is a remaining editor data change.\n\t\t\t\tthis._throttledSave.flush();\n\n\t\t\t\tconst editor = this._editor;\n\n\t\t\t\tthis._editor = null;\n\n\t\t\t\treturn this._destructor( editor );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n\t * the moment of the crash.\n\t *\n\t * @private\n\t */\n\t_save() {\n\t\tconst version = this._editor.model.document.version;\n\n\t\t// Operation may not result in a model change, so the document's version can be the same.\n\t\tif ( version === this._lastDocumentVersion ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis._data = this._getData();\n\t\t\tthis._lastDocumentVersion = version;\n\t\t} catch ( err ) {\n\t\t\tconsole.error(\n\t\t\t\terr,\n\t\t\t\t'An error happened during restoring editor data. ' +\n\t\t\t\t'Editor will be restored from the previously saved data.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Set} props\n\t */\n\t_setExcludedProperties( props ) {\n\t\tthis._excludedProps = props;\n\t}\n\n\t/**\n\t * Returns the editor data.\n\t *\n\t * @private\n\t * @returns {Object<String,String>}\n\t */\n\t_getData() {\n\t\tconst data = {};\n\n\t\tfor ( const rootName of this._editor.model.document.getRootNames() ) {\n\t\t\tdata[ rootName ] = this._editor.data.get( { rootName } );\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Traverses the error context and the current editor to find out whether these structures are connected\n\t * to each other via properties.\n\t *\n\t * @protected\n\t * @param {module:utils/ckeditorerror~CKEditorError} error\n\t */\n\t_isErrorComingFromThisItem( error ) {\n\t\treturn areConnectedThroughProperties( this._editor, error.context, this._excludedProps );\n\t}\n\n\t/**\n\t * Clones the editor configuration.\n\t *\n\t * @private\n\t * @param {Object} config\n\t */\n\t_cloneEditorConfiguration( config ) {\n\t\treturn cloneDeepWith( config, ( value, key ) => {\n\t\t\t// Leave DOM references.\n\t\t\tif ( isElement( value ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( key === 'context' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Fired after the watchdog restarts the error in case of a crash.\n\t *\n\t * @event restart\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/contextwatchdog\n */\n\n/* globals console */\n\nimport Watchdog from './watchdog';\nimport EditorWatchdog from './editorwatchdog';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport getSubNodes from './utils/getsubnodes';\n\n/**\n * A watchdog for the {@link module:core/context~Context} class.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\nexport default class ContextWatchdog extends Watchdog {\n\t/**\n\t * The context watchdog class constructor.\n\t *\n\t * \tconst watchdog = new ContextWatchdog( Context );\n\t *\n\t * \tawait watchdog.create( contextConfiguration );\n\t *\n\t * \tawait watchdog.add( item );\n\t *\n\t * See the {@glink features/watchdog Watchdog feature guide} to learn more how to use this feature.\n\t *\n\t * @param {Function} Context The {@link module:core/context~Context} class.\n\t * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog configuration.\n\t */\n\tconstructor( Context, watchdogConfig = {} ) {\n\t\tsuper( watchdogConfig );\n\n\t\t/**\n\t\t * A map of internal watchdogs for added items.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<string,module:watchdog/watchdog~EditorWatchdog>}\n\t\t */\n\t\tthis._watchdogs = new Map();\n\n\t\t/**\n\t\t * The watchdog configuration.\n\t\t *\n\t\t * @private\n\t\t * @type {module:watchdog/watchdog~WatchdogConfig}\n\t\t */\n\t\tthis._watchdogConfig = watchdogConfig;\n\n\t\t/**\n\t\t * The current context instance.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/context~Context|null}\n\t\t */\n\t\tthis._context = null;\n\n\t\t/**\n\t\t * Context properties (nodes/references) that are gathered during the initial context creation\n\t\t * and are used to distinguish the origin of an error.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<*>}\n\t\t */\n\t\tthis._contextProps = new Set();\n\n\t\t/**\n\t\t * An action queue, which is used to handle async functions queuing.\n\t\t *\n\t\t * @private\n\t\t * @type {ActionQueue}\n\t\t */\n\t\tthis._actionQueue = new ActionQueue();\n\n\t\t/**\n\t\t * The configuration for the {@link module:core/context~Context}.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_contextConfig\n\t\t */\n\n\t\t/**\n\t\t * The context configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object|undefined} #_config\n\t\t */\n\n\t\t// Default creator and destructor.\n\t\tthis._creator = contextConfig => Context.create( contextConfig );\n\t\tthis._destructor = context => context.destroy();\n\n\t\tthis._actionQueue.onEmpty( () => {\n\t\t\tif ( this.state === 'initializing' ) {\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Sets the function that is responsible for the context creation.\n\t\t * It expects a function that should return a promise (or `undefined`).\n\t\t *\n\t\t *\t\twatchdog.setCreator( config => Context.create( config ) );\n\t\t *\n\t\t * @method #setCreator\n\t\t * @param {Function} creator\n\t\t */\n\n\t\t/**\n\t\t * Sets the function that is responsible for the context destruction.\n\t\t * Overrides the default destruction function, which destroys only the context instance.\n\t\t * It expects a function that should return a promise (or `undefined`).\n\t\t *\n\t\t *\t\twatchdog.setDestructor( context => {\n\t\t *\t\t\t// Do something before the context is destroyed.\n\t\t *\n\t\t *\t\t\treturn context\n\t\t *\t\t\t\t.destroy()\n\t\t *\t\t\t\t.then( () => {\n\t\t *\t\t\t\t\t// Do something after the context is destroyed.\n\t\t *\t\t\t\t} );\n\t\t *\t\t} );\n\t\t *\n\t\t * @method #setDestructor\n\t\t * @param {Function} destructor\n\t\t */\n\t}\n\n\t/**\n\t * The context instance. Keep in mind that this property might be changed when the context watchdog restarts,\n\t * so do not keep this instance internally. Always operate on the `ContextWatchdog#context` property.\n\t *\n\t * @type {module:core/context~Context|null}\n\t */\n\tget context() {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * Initializes the context watchdog. Once it is created, the watchdog takes care about\n\t * recreating the context and the provided items, and starts the error handling mechanism.\n\t *\n\t * \tawait watchdog.create( {\n\t * \t\tplugins: []\n\t * \t} );\n\t *\n\t * @param {Object} [contextConfig] The context configuration. See {@link module:core/context~Context}.\n\t * @returns {Promise}\n\t */\n\tcreate( contextConfig = {} ) {\n\t\treturn this._actionQueue.enqueue( () => {\n\t\t\tthis._contextConfig = contextConfig;\n\n\t\t\treturn this._create();\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an item instance with the given `itemId`.\n\t *\n\t * \tconst editor1 = watchdog.getItem( 'editor1' );\n\t *\n\t * @param {String} itemId The item ID.\n\t * @returns {*} The item instance or `undefined` if an item with a given ID has not been found.\n\t */\n\tgetItem( itemId ) {\n\t\tconst watchdog = this._getWatchdog( itemId );\n\n\t\treturn watchdog._item;\n\t}\n\n\t/**\n\t * Gets the state of the given item. See {@link #state} for a list of available states.\n\t *\n\t * \tconst editor1State = watchdog.getItemState( 'editor1' );\n\t *\n\t * @param {String} itemId Item ID.\n\t * @returns {'initializing'|'ready'|'crashed'|'crashedPermanently'|'destroyed'} The state of the item.\n\t */\n\tgetItemState( itemId ) {\n\t\tconst watchdog = this._getWatchdog( itemId );\n\n\t\treturn watchdog.state;\n\t}\n\n\t/**\n\t * Adds items to the watchdog. Once created, instances of these items will be available using the {@link #getItem} method.\n\t *\n\t * Items can be passed together as an array of objects:\n\t *\n\t * \tawait watchdog.add( [ {\n\t *\t\tid: 'editor1',\n\t *\t\ttype: 'editor',\n\t *\t\tsourceElementOrData: document.querySelector( '#editor' ),\n\t *\t\tconfig: {\n\t *\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t *\t\t\ttoolbar: [ 'bold', 'italic', 'alignment' ]\n\t *\t\t},\n\t *\t\tcreator: ( element, config ) => ClassicEditor.create( element, config )\n\t *\t} ] );\n\t *\n\t * Or one by one as objects:\n\t *\n\t * \tawait watchdog.add( {\n\t *\t\tid: 'editor1',\n\t *\t\ttype: 'editor',\n\t *\t\tsourceElementOrData: document.querySelector( '#editor' ),\n\t *\t\tconfig: {\n\t *\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t *\t\t\ttoolbar: [ 'bold', 'italic', 'alignment' ]\n\t *\t\t},\n\t *\t\tcreator: ( element, config ) => ClassicEditor.create( element, config )\n\t *\t] );\n\t *\n\t * Then an instance can be retrieved using the {@link #getItem} method:\n\t *\n\t * \tconst editor1 = watchdog.getItem( 'editor1' );\n\t *\n\t * Note that this method can be called multiple times, but for performance reasons it is better\n\t * to pass all items together.\n\t *\n\t * @param {module:watchdog/contextwatchdog~WatchdogItemConfiguration|Array.<module:watchdog/contextwatchdog~WatchdogItemConfiguration>}\n\t * itemConfigurationOrItemConfigurations An item configuration object or an array of item configurations.\n\t * @returns {Promise}\n\t */\n\tadd( itemConfigurationOrItemConfigurations ) {\n\t\tconst itemConfigurations = Array.isArray( itemConfigurationOrItemConfigurations ) ?\n\t\t\titemConfigurationOrItemConfigurations :\n\t\t\t[ itemConfigurationOrItemConfigurations ];\n\n\t\treturn this._actionQueue.enqueue( () => {\n\t\t\tif ( this.state === 'destroyed' ) {\n\t\t\t\tthrow new Error( 'Cannot add items to destroyed watchdog.' );\n\t\t\t}\n\n\t\t\tif ( !this._context ) {\n\t\t\t\tthrow new Error( 'Context was not created yet. You should call the `ContextWatchdog#create()` method first.' );\n\t\t\t}\n\n\t\t\t// Create new watchdogs.\n\t\t\treturn Promise.all( itemConfigurations.map( item => {\n\t\t\t\tlet watchdog;\n\n\t\t\t\tif ( this._watchdogs.has( item.id ) ) {\n\t\t\t\t\tthrow new Error( `Item with the given id is already added: '${ item.id }'.` );\n\t\t\t\t}\n\n\t\t\t\tif ( item.type === 'editor' ) {\n\t\t\t\t\twatchdog = new EditorWatchdog( this._watchdogConfig );\n\t\t\t\t\twatchdog.setCreator( item.creator );\n\t\t\t\t\twatchdog._setExcludedProperties( this._contextProps );\n\n\t\t\t\t\tif ( item.destructor ) {\n\t\t\t\t\t\twatchdog.setDestructor( item.destructor );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._watchdogs.set( item.id, watchdog );\n\n\t\t\t\t\t// Enqueue the internal watchdog errors within the main queue.\n\t\t\t\t\t// And propagate the internal `error` events as `itemError` event.\n\t\t\t\t\twatchdog.on( 'error', ( evt, { error, causesRestart } ) => {\n\t\t\t\t\t\tthis._fire( 'itemError', { itemId: item.id, error } );\n\n\t\t\t\t\t\t// Do not enqueue the item restart action if the item will not restart.\n\t\t\t\t\t\tif ( !causesRestart ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._actionQueue.enqueue( () => new Promise( res => {\n\t\t\t\t\t\t\twatchdog.on( 'restart', rethrowRestartEventOnce.bind( this ) );\n\n\t\t\t\t\t\t\tfunction rethrowRestartEventOnce() {\n\t\t\t\t\t\t\t\twatchdog.off( 'restart', rethrowRestartEventOnce );\n\n\t\t\t\t\t\t\t\tthis._fire( 'itemRestart', { itemId: item.id } );\n\n\t\t\t\t\t\t\t\tres();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} ) );\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn watchdog.create( item.sourceElementOrData, item.config, this._context );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( `Not supported item type: '${ item.type }'.` );\n\t\t\t\t}\n\t\t\t} ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Removes and destroys item(s) with given ID(s).\n\t *\n\t * \tawait watchdog.remove( 'editor1' );\n\t *\n\t * Or\n\t *\n\t * \tawait watchdog.remove( [ 'editor1', 'editor2' ] );\n\t *\n\t * @param {Array.<String>|String} itemIdOrItemIds Item ID or an array of item IDs.\n\t * @returns {Promise}\n\t */\n\tremove( itemIdOrItemIds ) {\n\t\tconst itemIds = Array.isArray( itemIdOrItemIds ) ?\n\t\t\titemIdOrItemIds :\n\t\t\t[ itemIdOrItemIds ];\n\n\t\treturn this._actionQueue.enqueue( () => {\n\t\t\treturn Promise.all( itemIds.map( itemId => {\n\t\t\t\tconst watchdog = this._getWatchdog( itemId );\n\n\t\t\t\tthis._watchdogs.delete( itemId );\n\n\t\t\t\treturn watchdog.destroy();\n\t\t\t} ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Destroys the context watchdog and all added items.\n\t * Once the context watchdog is destroyed, new items cannot be added.\n\t *\n\t * \tawait watchdog.destroy();\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\treturn this._actionQueue.enqueue( () => {\n\t\t\tthis.state = 'destroyed';\n\t\t\tthis._fire( 'stateChange' );\n\n\t\t\tsuper.destroy();\n\n\t\t\treturn this._destroy();\n\t\t} );\n\t}\n\n\t/**\n\t * Restarts the context watchdog.\n\t *\n\t * @protected\n\t * @returns {Promise}\n\t */\n\t_restart() {\n\t\treturn this._actionQueue.enqueue( () => {\n\t\t\tthis.state = 'initializing';\n\t\t\tthis._fire( 'stateChange' );\n\n\t\t\treturn this._destroy()\n\t\t\t\t.catch( err => {\n\t\t\t\t\tconsole.error( 'An error happened during destroying the context or items.', err );\n\t\t\t\t} )\n\t\t\t\t.then( () => this._create() )\n\t\t\t\t.then( () => this._fire( 'restart' ) );\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @returns {Promise}\n\t */\n\t_create() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._startErrorHandling();\n\n\t\t\t\treturn this._creator( this._contextConfig );\n\t\t\t} )\n\t\t\t.then( context => {\n\t\t\t\tthis._context = context;\n\t\t\t\tthis._contextProps = getSubNodes( this._context );\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tArray.from( this._watchdogs.values() )\n\t\t\t\t\t\t.map( watchdog => {\n\t\t\t\t\t\t\twatchdog._setExcludedProperties( this._contextProps );\n\n\t\t\t\t\t\t\treturn watchdog.create( undefined, undefined, this._context );\n\t\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the context instance and all added items.\n\t *\n\t * @private\n\t * @returns {Promise}\n\t */\n\t_destroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\tconst context = this._context;\n\n\t\t\t\tthis._context = null;\n\t\t\t\tthis._contextProps = new Set();\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tArray.from( this._watchdogs.values() )\n\t\t\t\t\t\t.map( watchdog => watchdog.destroy() )\n\t\t\t\t)\n\t\t\t\t\t// Context destructor destroys each editor.\n\t\t\t\t\t.then( () => this._destructor( context ) );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Returns the watchdog for a given item ID.\n\t *\n\t * @protected\n\t * @param {String} itemId Item ID.\n\t * @returns {module:watchdog/watchdog~Watchdog} Watchdog\n\t */\n\t_getWatchdog( itemId ) {\n\t\tconst watchdog = this._watchdogs.get( itemId );\n\n\t\tif ( !watchdog ) {\n\t\t\tthrow new Error( `Item with the given id was not registered: ${ itemId }.` );\n\t\t}\n\n\t\treturn watchdog;\n\t}\n\n\t/**\n\t * Checks whether an error comes from the context instance and not from the item instances.\n\t *\n\t * @protected\n\t * @param {Error} error\n\t * @returns {Boolean}\n\t */\n\t_isErrorComingFromThisItem( error ) {\n\t\tfor ( const watchdog of this._watchdogs.values() ) {\n\t\t\tif ( watchdog._isErrorComingFromThisItem( error ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn areConnectedThroughProperties( this._context, error.context );\n\t}\n\n\t/**\n\t * Fired after the watchdog restarts the context and the added items because of a crash.\n\t *\n\t * \twatchdog.on( 'restart', () => {\n\t * \t\tconsole.log( 'The context has been restarted.' );\n\t * \t} );\n\t *\n\t * @event restart\n\t */\n\n\t/**\n\t * Fired when a new error occurred in one of the added items.\n\t *\n\t * \twatchdog.on( 'itemError', ( evt, { error, itemId, causesRestart } ) => {\n\t *\t\tconsole.log( `An error occurred in an item with the '${ itemId }' ID.` );\n\t * \t} );\n\t *\n\t * @event itemError\n\t */\n\n\t/**\n\t * Fired after an item has been restarted.\n\t *\n\t * \twatchdog.on( 'itemRestart', ( evt, { itemId } ) => {\n\t *\t\tconsole.log( 'An item with with the '${ itemId }' ID has been restarted.' );\n\t * \t} );\n\t *\n\t * @event itemRestart\n\t */\n}\n\n// An action queue that allows queuing async functions.\nclass ActionQueue {\n\tconstructor() {\n\t\t// @type {Promise}\n\t\tthis._promiseQueue = Promise.resolve();\n\n\t\t// @type {Array.<Function>}\n\t\tthis._onEmptyCallbacks = [];\n\t}\n\n\t// Used to register callbacks that will be run when the queue becomes empty.\n\t//\n\t// @param {Function} onEmptyCallback A callback that will be run whenever the queue becomes empty.\n\tonEmpty( onEmptyCallback ) {\n\t\tthis._onEmptyCallbacks.push( onEmptyCallback );\n\t}\n\n\t// It adds asynchronous actions (functions) to the queue and runs them one by one.\n\t//\n\t// @param {Function} action A function that should be enqueued.\n\t// @returns {Promise}\n\tenqueue( action ) {\n\t\tlet nonErrorQueue;\n\n\t\tconst queueWithAction = this._promiseQueue\n\t\t\t.then( action )\n\t\t\t.then( () => {\n\t\t\t\tif ( this._promiseQueue === nonErrorQueue ) {\n\t\t\t\t\tthis._onEmptyCallbacks.forEach( cb => cb() );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Catch all errors in the main queue to stack promises even if an error occurred in the past.\n\t\tnonErrorQueue = this._promiseQueue = queueWithAction.catch( () => { } );\n\n\t\treturn queueWithAction;\n\t}\n}\n\n/**\n * The watchdog item configuration interface.\n *\n * @typedef {module:watchdog/contextwatchdog~EditorWatchdogConfiguration} module:watchdog/contextwatchdog~WatchdogItemConfiguration\n */\n\n/**\n * The editor watchdog configuration interface specifies how editors should be created and destroyed.\n *\n * @typedef {Object} module:watchdog/contextwatchdog~EditorWatchdogConfiguration\n *\n * @property {String} id A unique item identificator.\n *\n * @property {'editor'} type The type of the item to create. At the moment, only `'editor'` is supported.\n *\n * @property {Function} creator A function that initializes the item (the editor). The function takes editor initialization arguments\n * and should return a promise. For example: `( el, config ) => ClassicEditor.create( el, config )`.\n *\n * @property {Function} [destructor] A function that destroys the item instance (the editor). The function\n * takes an item and should return a promise. For example: `editor => editor.destroy()`\n *\n * @property {String|HTMLElement} sourceElementOrData The source element or data that will be passed\n * as the first argument to the `Editor.create()` method.\n *\n * @property {Object} config An editor configuration.\n */\n","/**\n * @license Copyright (c) 2014-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport WordCount from '@ckeditor/ckeditor5-word-count/src/wordcount';\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport Underline from '@ckeditor/ckeditor5-basic-styles/src/underline';\nimport Comments from '@ckeditor/ckeditor5-comments/src/comments';\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport PasteFromOffice from '@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice';\nimport TextTransformation from '@ckeditor/ckeditor5-typing/src/texttransformation';\nimport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n\nimport ContextBase from '@ckeditor/ckeditor5-core/src/context';\nimport ContextWatchdog from '@ckeditor/ckeditor5-watchdog/src/contextwatchdog';\nimport CommentsRepository from '@ckeditor/ckeditor5-comments/src/comments/commentsrepository';\nimport WideSidebar from '@ckeditor/ckeditor5-comments/src/annotations/widesidebar';\n\nimport viewToPlainText from '@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext';\n\nclass Context extends ContextBase {}\n\nContext.builtinPlugins = [\n  CommentsRepository, WideSidebar\n];\n\nclass Editor extends ClassicEditor {}\n\n// Plugins to include in the build.\nEditor.builtinPlugins = [\n  Bold,\n  WordCount,\n  Underline,\n  Comments,\n  Essentials,\n  Heading,\n  Italic,\n  PasteFromOffice,\n  TextTransformation,\n  Highlight,\n];\n\nexport default { Context, ContextWatchdog, Editor, viewToPlainText };\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"sourceRoot":""}